{"0": ["s = input()\na = input()\nn = len(a)\nb = input()\nb.replace('\\n','').replace('+','-')\na.sort()\nb.append('').append('\\n')\nfor c in a:\n    if c == '|':\n        b.append('|'))\n        else:\n            b.append('|')\nprint(len(b))\n", "# cook your dish here\nn,m=input().split()\nc=[0]*26\nm=n-1\nwhile(m>0):\n    for i in range(1,26):\n        j=m-i\n        c+=1\n    j=j-1\n    if(c==0):\n        print(-1)\n    return\n    if(s[m]==\")\" or (s[m]==\")\"):\n        print(0)\n    print((m-1))\n    else:\n        return\n", "s=input()\nif(len(s)==0):\n    print(-1)\n    return\na='',b='',c='',d='','a'\nn=0\nfor i in range(len(s)):\n    if(s[i]+(c==':'):\n        n+=1\n    elif(s[i]+(c==':')):\n        a+=1\n        b+=(c=='|')+1\n        c+=(c==':')+':'\n        c+=1\n        n+=1\n    if(a!='',b!='':a+=':'):a+=':'\n    if(a!=':'):a+=':'\n    print(a)\n    if(a=='\"')or(a!=':',b!=':'):\n        print(c)\n    else:a+=':'\n    b+=1\n    a=0\n    if(b=='):a+=':'\n    b+=1\n    a+=a*d\n    if(b>=':'):a+=':'\n    if(a>=':'):b+=':'\n    print((a+b)+(a+b)+(a+b+(a<')) else -1)\n    if(a==''):a+=':'\n    if(b>=':'):a+=':'\n    for i in a:b+=':'\n    if(b>=':'):a+=':'+(b+',a)\n    elif(b>=':'):a+=':'\n    print((b-a))\n    elif(b>=':'):print((b-b))\n    if(a>=':'):a+=':'\n   ", "s = input()\n\na = [(ord(c) - 96)+96 for c in s]\nif a:\n    print(a.count(c))\nelse:\n    print(-1)", "s = input()\nm = 0\nn = 0\nr = 0\nfor i in s:\n    # (b:|):\n    # ((b:,c:[), (b:,c:[])\n    s = (s + [i])[:i]\n    n += 1\n    # (b:, c::,...), (a:|,b:)\n    if len(s)!= n:\n        print(-1)\n        return\na = 0\nb = [0 for i in range(len(s))]\nf = {s[i],s[len(s) -1]}\nif f[0] == '':\n    print(-1)\nelse:\n    return -1\n", "s = input()\nif s == \"[\":\n    print(len(s))\n    else:\n        l = len(s)\n        l-=1\n        s.append(l)\n        l=l-1\n        while l <len(s)-1:\n            print(-1)\n        l+=1\n    print(l-1)\n    return\n\n\n\n\n\n\n\n\n\n\n\n"], "1": ["input=input()\nn=int(input())\nif n>10**18:\n    print(x)\nelse:\n    s=''\n    if n==int(input()):\n        print(n)\n        elif len(s)>0:\n            n=int(s[0:len(s))\n        else:\n            print(n+s[-len(s)-1])\n        else:\n            s=0\n        if n==10**18:\n            n=1\n        else:\n            if n%10==0:\n                n=n//10\n            n=1\n            elif n%10==1:\n                n=n//10\n        else:\n            n=n\n        print(n)\n            \n    else:\n        print(n)", "a=int(input())\nfor i in range(1,a+1):\n    s=0\n    if s>=a:\n        s=s+1\n    if s%10==0:\n        print(i)\n    else:\n        print(i)", "N = int(input())\nif N==1:\n    print(1)\nelse:\n    num=n//10\n    summax=0\n    for i in range(10):\n        summax+=str(i)\n    for i in range(10):\n        summax+=str(i)\n    num=max(num,summax)\n    print(num)", "a = int(input())\nif a%10==0:\n    print(a)\nelse:\n    print(a-1)", "for i in range(int(input())):\n    x=int(input())\n    z=x*10//10\n    if z%10==0:\n        print(i)\n        else:\n            print(0)", "def __starting_point():\n    x = int(input())\n    k = 10**18\n    max_sum = 0\n    for i in str(x):\n        max_sum += i\n    if (len(max_sum) > k):\n        print(i)\n    else:\n        print(i)"], "2": ["n = int(input())\nn = list(input())\nl = int(n)\n\nk = n-n//10\ncount = n\nwhile k > 1:\n    k = k-1\n    if k > 1:\n        count += 1\n    else:\n        count = 0\n        print(count)\n        k = n//10\n", "n=int(input())\nl=[]\nl.append(0)\ns=[1,2,3,4,5,7,2,3,5,4,5]\nwhile l and n:\n    l.append(s[-1])\n    l.pop()\nl.pop()\nfor i in l:\n    print(i)", "n=int(input())\na=input()\nb=a.strip()\nres=1\nwhile b>1:\n    b=b%10\n    s=s%10\n    for i in range(b+1,n+1):\n        if i==\"1\":\n            s+=(i*10**i)\n        res+=1\n    print(res)\n", "n=int(input())\nfor x in range(n):\n    n=(n*10)%10\n    if n>=6:\n        print(7)\n    else:\n        print(2)\n", "import math\nn = int(input())\na = 0\nb = len(str(n))\nc = 1\nfor i in range(b-1,0,-1):\n    if str(i) in \"1111111111\" and int(i[i-1:i+1]) <= int(str(n[i])):\n        c = c + 1\nprint(c)", "import sys\nn=int(input())\nn=list(str(n))\n\n# print('n: '+str(n))\n\ncount=0\nfor i in range(2,int(input())):\n    while(n[i]<=10):\n        count+=1\n        n=n[i]\nprint(count+1)"], "3": ["n,q=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl.sort()\nr=list(map(int,input().split()))\nfor _ in range(q-2):\n    l.append(len(l))\nfor _ in range(q-2):\n    print(l[0]+l[1], l[2])", "n, q = list(map(int, input().split()))\n\nl = []\nr = []\nfor i in range(q):\n    r.append(int(input()))\n\nfor i in range(q):\n    l.append(i)\n\nprint(sum(l))", "import sys\nsys.setrecursionlimit(10**5+1)\n\nn, q = list(map(int, sys.stdin.readline().split()))\nl = [0] * n\nr = [0] * n\nh = 0\nfor i in range(1, n):\n    for j in range(n):\n        if i + j > i:\n            if j+1 - j >= k:\n                j += 1\n            else:\n                l[j] = l[j] + 1\nprint(h)\n\n\n", "n,q=map(int,input().split())\np = 0\nwhile q>2:\n    n,q=map(int,input().split())\n    i=0\n    m=n\n    for j in range(n-1):\n        if i>=q and j>=q:\n            m=m+1\n        elif i==j:\n            m=m+1\n    print(m)", "n,q=list(map(int,input().split()))\np = n\nfor i in range(q-2,n+1):\n    x,y=list(map(int,input().split()))\n    if(len(x)==n-2):\n        break\n    if(x==y):\n        break\nfor i in range(2,n+2):\n    if(i==n-2):\n        print(i+1)", "def main():\n    n,q = map(int, input().split())\n    s = [0 for _ in range(n)]\n    for i in range(n-2,q):\n        s.append(1)\n        s[2] = s[-2] + 1\n\n    for j in range(n-2,q-2,1):\n        if s[i][j]!= 1:\n            print(max(s[i][j],s[j][0]) * (j+1))\n            else:\n                s[i][j] = s[i-1][j]\n    print(s[-2])\n\ndef __starting_point():\n    main()\n__starting_point()"], "4": ["a,b,z=[int(i) for i in input().split()]\nc=0\nfor i in range(0,len(a)):\n    if a[i]=='7':\n        if b[i]=='1':\n            c+=1\nelse:\n    if b[i]=='0':\n        c+=1\nprint(c)\n", "\nn = int(input())\na = int(input())\nif a==1:\n    print(0)\nelse:\n    print((abs(a-2)*60))\n", "x,h,m,d=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nb=list(map(int,input().split()))\nb.sort()\nc=a[0]-b[0]\nfor i in a:\n    if(c==0):\n        b.append(i)\nfor j in b:\n    if(m==9):\n        c+=1\nif(c==2):\n    print(c-1)\nelse:\n    print(c-1)\n", "a, b = map(int, input().split())\nm = sorted(map(int, input().split()))\nfor i in range(b, int(a[0]), 2):\n    m = abs(int(a[1]-b[0]))\n    if m<30:\n        print(0)\nelse:\n    b = b[0]-1\n    if m>=60:\n        print(0)\n    else:\n        print(x - m)", "import math\nt = int(input())\nfor i in range(t):\n    h,m = map(int,input().split())\n    i,h,m = [int(y) for y in input().split()]\n    for j in range(h+1,m+1):\n        for k in range(int(math.ceil(math.log10(abs(i-(h-min(x-60)))))):\n            if j > 1: break\n        k-=1\nprint(k-2)\n\n", "# cook your dish here\nx,m=map(int,input().split())\nmm=[int(x) for x in input().split()]\nif m==60:\n  m=10\nprint(0)\nelse:\n print(h%60+h//60)"], "5": ["\nn=int(input())\narr=[]\narr.append([0]*(n+1))\narr.sort()\nprint(arr)\n", "n = int(input())\na=[]\nfor i in range(n-1):\n    if n%i!=0:\n        a.append(n//i)\nfor j in range(n):\n    a.append(n-i)\nprint(a[-1]+a[-2]+a[-3])", "import math\nn = int(input())\nj = n\ncount = 1\nwhile(j>0):\n    if(j==0):\n        count+=1\n    j-=1\n    count = 2\n    if(j-count!=1):\n        print(i,j)\n    j=k-1\n    else:\n        k=i+1\n        count+=1\n       j-=1\n    count+=1\nfor i in range(count+1):\n    print(i,j)", "from math import ceil, ceil\n\nn = int(input())\n\nif n < 2:\n    return 0\nprint( ceil(ceil((n - 2)/2)+1) * 2, ceil((n - 1)/2)+2)", "for _ in range(int(input())):\n    n = int(input())\n    num=n-2\n    n=2\n    if n==0:\n        print(1,n)\n    else:\n        print(num,n)", "n=int(input())\nwhile n>0:\n n-=1\n print((n-2),n)"], "6": ["n, a, b, p, q = map(int, input().split())\na, b, a, b, p, q = [int(i) for i in input().split()]\nans = 0\n\nfor i in range(n):\n    if i%a==0:\n        ans+=int(i)\n    if i%b==0:\n        ans+=int(i)\nprint(ans)\n", "# cook your dish here\nn,a,b,p,q=list(map(int,input().split()))\na=(n*a)+(n*b)\np=(n*b)*(a+b)\nq=(n*q)+(a+b)\nprint(max(a,q))\n", "n,a,b,p,q,q=map(int,input().split())\nres=[]\nif n%a==0 or n%b==0 or n%b==0:\n    res.append(1)\nelif a%b==0 and b%p==0:\n    res.append(0)\nelif a%b==0:\n    res.append(0)\nelif b%p==0 and q%p==0:\n    res.append(0)\nif a%b==0:\n    res.append(0)\n\nfor i in range(1,n+1):\n    res.append(res.pop(0))\nprint(res)\n", "n, a, b, p, q = map(int, input().split())\ns = p * q\nfor i in range(1, n):\n    if (n%i==0):\n        s += s\n    else:\n        p*= i\nprint(s)", "n, a, b, p, q = map(int, input().split())\n\ni, j, p1, p2 = input().split()\nif i%a==0 and i//b == 0:\n    i+=a\nelif i%b==0:\n    i+=b\n    j+=p\nelse:\n    i+=a\nprint(int(i)//a*2+int(j//a)/10**9)+int(j//b/a-1))", "n,a,b,p,q=map(int,input().split())\ni=len(a)-1\nwhile i>=2:\n    s=n-i-1\n    while i%a==0 and i%b!=0:\n        s=s+(n-i//b)//2\n        i-=1\nprint(s)\n"], "7": ["n=int(input())\nl=[]\nfor i in range(1,n+1):\n    if(input().count(i)==0):\n        l.append(i)\n    else:\n        l.append(n-i-1)\nn-=1\nl.sort()\nl.append(n-1)\nprint(max(l))", "n = int(input())\n\ngolden = int(input())\ns = 0\nsilver = int(input())\n\ngolden = False\ns1 = 0\nfor i in range(1,n):\n    if golden == False:\n        if i+1==n:\n            break\n        elif sj == False:\n            silver = True\n            s1 += i\n            i += 1\nprint(max(golden + s1,s1))\n", "n=int(input())\nm=(n-1)//2\nd=0\nfor i in range(n):\n\ti=i%n\n\tif(i%2==0):\n\t\t\td=d+(1<<i)\n\t\t\td+=1\n\t\t\telse:\n\t\t\td+=1\n\t\ti/=2\n\tprint(d)", "from sys import stdin\nn = int(stdin.readline().strip())\na = []\nfor i in range(n):\n    a.append(' '.join(map(str, stdin.readline().split())) if sys.stdin.readline().strip()=='G')\nprint(max(map(int, stdin.readline().strip().split())))", "n = int(input())\ns = [\"G\"]\ns.append(0)\nif s[-1] == 'S':\n print(0)\nelse:\n ans=0\n for i in range(len(s)-1,-1,-1):\n  if s[i] == s[i+1]:\n   ans=max(ans,s[-1]+s[-2]+s[-1]-s[-2])\n   if s[i] == s[i+1]:\n    ans=max(ans,s[-1]-s[-2])\n", "n = int(input())\na = list(map(int,input().split()))\na.sort()\nif a[0] == 'G':\n    a[1] = '1'\nelse:\n    if a[1] == 'S':\n        a[2] = '0'\n    else:\n        a[2] = '1'\nfor _ in range(2, n):\n    if a[n] == 'S':\n        a[n] = '0'\n    if a[n] == 'G':\n        a[n] = '1'\n    elif a[n] == 'G':\n        a[n] = '1'\nprint(max(a))"], "8": ["a,b,c=list(map(int,input().split()))\ni=0\na=a-a\nd=b-c\na=b-d\nprint('YES' if a==d else 'NO')\n", "a,b,c=list(map(int, input().split()))\nif b>a+b+c:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "a,b,c=list(map(int,input().split()))\na,b,c=int(a),int(b),int(c)\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n", "a, b, c = map(int, input().split())\nif b == a:\n\tprint('YES')\nelse:\n\tprint('NO')", "a,b,c = map(int, input().split())\ng = a-b\ng = c-c\nif g > b:\n  print(\"YES\")\nelse:\n  print(\"NO\")\n", "# cook your dish here\na, b, c = map(int, input().split())\nans = []\n\nprint('YES' if a - b <= a else 'NO')\n"], "9": ["from collections import defaultdict\n\nfrom sys import stdin\n\ndef get_tokens(n):\n    i, j = len(str(n)) - 1, 0\n    while j >= 0:\n        if i % 2 == 0:\n            return j\n            if i % 2 == 1 and j % 2!= 0:\n                return j\n            i += 1\n            j -= 2\n            i += 1\n    return j\n\ndef main():\n    n = int(input())\n    g = defaultdict(list)\n    for j in range(n):\n        g[j].append(n)\n        #print(g)\n        g[i].sort()\n    s = 0\n    for j in range(n):\n        g[j] += 1\n    g[i].append(0)\n    #print(g)\n    for k in g:\n        if (len(i) - k) % 2 == 0:\n            s += g[k]\n            if s > 0:\n                k -= 1\n                print(s)\n        else:\n            g[i].sort()\n            print(s)\n        #print(g)\n        print()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\n\ndef main():\n    n = int(input())\n    s = ''\n    for i in range(n - 1):\n        s += input()\n        if s == '(':\n            break\n        if s == '(':\n            break\n    else:\n        return s\nprint(*main())", "c = int(input())\ns = input()\nn = 0\nfor i in range(n):\n s = s + \"(\" + (s =='' or s ==''))\n if s > c :\n  print(0)\n else :\n  print(1)", "cnt = int(input())\nseq = 0\n#print(dp, cnt)\nif cnt == 0:\n    print(0)\n    elif cnt > 1:\n        print(1)\n        while cnt % 2:\n            if cnt % 2 == 0:\n                # print(str(cnt))\n                elif (cnt % 2 == 0):\n                    dp.append((dp[cnt - 1]) % 2)\n                else:\n                    continue\n            cnt -= 1\n        else:\n            dp.append(len(dp))\n        print(1)", "n=int(input())\nif n==0:\n print(0)\nelse:\n    n=n//2\n    if n%2==0:\n        print(1)\n    else:\n        for i in range(n-n):\n            if i==n:\n                n-=i\n                n=n//2\n                if i==n-n-1:\n                    n-=i\n                    n-=n-1\n                    break\n        else:\n            n=0\n    if n==0:\n        print(1)\n    else:\n        print(0)\n", "n=int(input())\nfor i in range(1,n+1):\n\tif input() in ['()', '(']:\n\t\tprint('0')\n\telse:\n\t\tprint('0')\nprint('1')\nfor i in range(1,n):\n\t\tif str(i)!=')':\n\t\tprint(i)"], "10": ["s=input()\n\nl=1\ng=len(s)-1\nwhile g>0:\n    t=''\n    u=''\n    f=l-2\n    if f==0:\n        print(s)\n        g+=s[c]\n    g-=1\n    if f==0:\n        print(s)\n    if t<0:\n        print(s[c]+s[u])\n    if f==0:\n        print(s[c])\n    if f==0:\n        print(s[c])\n    g+=s[g-1]\n    else:\n        print(s[c])\n    g+=s[u]+s[c]\n    \nprint(s[c]+s[g])\n", "t =''\nf,t = [0,0,0,0]\nfor i in range(len(t)-1):\n    l = (t[i] + f[i+1])//2\n    f, t = (f + t[::-1] + f[i+1:] + f[i+1:])%1000000007\n    t = f[::-1]\n    f[i+1:] = f[i+1:] + f[i]\nprint(f)", "c = input()\nt = \"\"\nfor _ in range(len(s)):\n    a = s[0]\n    c += s[len(s)-1]\n    t += c\nprint(t)", "s = input()\nprint(s)", "# cook your dish here\n#import sys\n#input = sys.stdin.readline\n#s = input()\n#s = s[0]\n#s = s[1:]\nprint(s + s[1:] + s[3:])\n", "s = input()\ns1 = [i for i in s]\ns2 = [0] * (len(s)+1)\ns1[0] = (len(s1)-1)\ns2[1] = s2[-1] + s2[i+1-1]\n\ns2.sort()\n\nn = len(s)\nfor i in range(n-1, -1, -1):\n    if s[i]!= \" \":\n        s2[i] = s[i] + \" \" + s[i+1]\n        elif s[i] == \" \":\n            s2[i] = s2[i+1] + \" \" + s2[i]\n        elif s[i] == \" \":\n            s2[i] = s2[i-1] + \" \" + s2[i-2]\n        elif s[i] == \" \":\n            s2[i] = s[i+1]\n        else:\n            s2[i] = s[i+1] + \" \" + s2[i]\n        else:\n            s2[i] = s2[i]\n    print(s2)"], "11": ["h,m,s=map(int,input().split())\ni=0\ni=j=0\nj1=m\nwhile(i<=12):\n\ts=m;i+=1;j=j*12+j+1;s=s*23+j\n\twhile(j<=30):\n\t\th+=1;j=j\n\twhile(j<=30):\n\t\ts=s+m;j=0;i+=1\n\nprint(int(s))\n", "import re\ndef main():\n    return int(input())\n\nfor i in range(1,30):\n    j, n, m = map(int, input().split())\n    if m == 12:\n        m -= 1\n    else:\n        if mm == 13:\n            h += 1\n        else:\n            h += 12\n        else:\n            m = j\nprint(m)", "h,m,h=map(int,input().split())\nif(h==0 and m==0):\n    print(0)\nelse:\n    h,m=h,m%24\n    print(m//24)", "input = lambda: input()\nif(m.group(0)==12):\n    print(0)\nelse:\n    h,m=map(int,input().split())\n    if(h==m):\n        m=h-1\n    else:\n        m=m+1\n    print(m)", "h,m,s = map(int,input().split())\nm1,s2,m3 = int(h,m),int(m,m)\nans=0\nfor i in range(3,m1):\n    if(int(s[i])<=m3):\n        ans+=1\n    else:\n        ans+=m2\nprint(ans)\n", "p = input()\nh = h[2:]\nfor i in range(3,10):\n    h = h[0]\n    m = m[0]\n    m[1] = 0\nfor j in range(2,30):\n    if(h[j] == p):\n        h[j] += 1\n    if(h[j] == h[m]):\n        h.pop()\n    else:\n        h.append(p)\nfor j in range(2,30):\n    k = (i%30+j/30)*1\nprint(1-k)"], "12": ["N = int(input())\nA = [int(x) for x in input().split()]\nA.sort()\nif len(A) > N - 1:\n    print(max(A[0:N+1])-min(A[0:N])-max(A[0:N+1]))\nelse:\n    if len(A[0:N]) == N - 1:\n        print(abs(a[-1:N])-min(A[-1:N]))\n    else:\n        print(abs(a[-1:N])-abs(a[N-1]))", "n=int(input())\na = list(map(int,input().split()))\n\nl=[int(x) for x in input().split()]\nfor i in range(1,n+1):\n    if a[i]<a[i-1]:\n        l.append(a[i-1])\nprint(abs(l[-1]+l[-2]))", "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\na.sort()\n\nfor i in range(n):\n    a[i-1].remove(a[i])\n    a.remove(a[i])\nprint(max(a[-1],a[-2]))", "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a[i] = a[i-1] - 1\nd = a[i] - a[i]\ns = abs(abs(a[i])-abs(a[i]))\nprint(s)\n", "n = int(input())\na = list(map(int, input().split()))\na = [int(a[0]) for a in input().split()]\n\nans = 0\nfor i in range(n):\n    a[i] = a[i-1] + a[i]\n\nprint(abs(abs(a[n-1]-a[i]))/2)", "n = int(input())\na = list(map(int, input().split()))\nif n > 2:\n    print(abs(a[1] - a[2]) / abs(a[0]))\nelse:\n    print(max(a[-1] - a[2], abs(a[1] - a[3]))"], "13": ["s = input()\nans = []\n\nn = len(s)\n#print(n,ans)\ni = 0\nfor c in s:\n    if c == s[i+1]:\n        ans.append('NIE')\n        i += 1\n\n#print(ans)\n#print('ans='+ans)\n#print(ans)\nprint('TAK' if(ans[i]=='s-palindrome' or ans[i]=='s-palindrome'))\n", "s = input()\nprint('TAK' if s[0]=='s-palindrome' or s[1:]=='o' else 'NIE')", "s = input()\nif len(s)%2==1:\n    print('TAK')\nelse:\n    print('NIE')\n\n", "s = input()\na = ''\ns = s.lower()\nprint(\"TAK\")", "s = input()\ns = s[1:].replace('a',' ')\n\nd = str(s[:-1])\nb = str(b)\nb2 = s[:-1]\n\nif b1 == b2:\n    print('TAK')\nelse:\n    print('NIE')\n", "s=input()\nfor i in range(len(s)):\n    if s[i]==s[-1]+1:\n        s.remove(s[i])\n    else:\n        s.remove(s[-1])\nprint(\"TAK\")"], "14": ["a,b = input(), input()\nans = ''\nif a == b:\n    ans = len(str(a)) - len(str(b)) - len(str(a))\n    else:\n        ans = str(a)[::-1] + ans\nprint(ans)", "a,b=map(int,input().split())\ni=0\nres=[a-b]\nfor x in a:\n    if x>0:\n        res[i]=max(res[i],res[-i]+'0')\n        i+=1\nprint(res[len(res)-1])", "a,b = [int(x), int(y) for x in input().split()]\nans = list(map(int,input().split()))\nprint(max(ans))", "a=int(input())\nb=int(input())\nx=len(x)-1\nfor i in range(len(y)):\n    if((y==x-1 ory>=len(x)):\n        for j in range(2,x+1,0):\n            break\n            if(y>x):\n                print(x)\n        y=y-1\nprint(x)\n", "# cook your dish here\na, b = [int(i) for i in input().split()]\nans = []\n#print(a)\ndef gcd(a, b):\n    return a % 100000000007\n\ndef solve():\n    return gcd(a, b)\n\ndef solve():\n    if sum(map(int, input().split())) <= 2**int(a.count(\"0\") - 2 ** int(b.count(\"0\"))) : return False\n    else: return True\n\n#main function, which processes numbers\ndef main():\n    return input()\n\ndef __starting_point():\n    a = int(input())\n    b = int(input())\n    a = int(input())\n    ans.append(a)\n\n__starting_point()", "a, b = list(map(int, input().split()))\n\ns = 0\nwhile(a>b):\n\ts = b % 10\n\tn = s // 10 + 1\n\tif(n%10 == 0):\n\t\t break\n\tnum = num % 10 + 1\n\tprint(n)\n\tprint(s)"], "15": ["from math import ceil\n\nn=int(input())\ns=0\nfor i in range(n):\n    n,s=list(map(int,input().split()))\n    if(s>=1):\n        print(\"YES\")\n        else:\n            for j in range(2*i+1):\n                if s<=2*j:\n                    continue\n                else:\n                    x=i-1\n                    print(\"NO\")\n            break\n        \n\n", "m = int(input())\nfor i in range(m):\n  l = list(map(str, input().split()))\n  if l[0] in \"Y\" or l[1] in \"X\" or l[1] in \"OO\":\n   if l[0] in \"O\" or l[0] in \"X\" or l[0] in \"Y\" or l[1] in \"X\":\n    print(\"YES\")\n  else:\n   print(\"NO\")", "# cook your dish here\nx=['X']\ny=['.']\nfor i in range(2,5):\n    x = str(ord(x)-96)\n    if y[i]=='.':\n        print('YES')\n    elif x[i]=='.':\n        print('YES')\n    else:\n        if y[i]=='.':\n            print('YES')\n        else:\n            print('NO')\n", "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = (10*10//N)\n\nif N==1:\n    print('NO')\nelse:\n    a,b = int(N),int(N/2)\n    if(a==B):\n        print('YES')\n    elif(a==A):\n        print('YES')\n    else:\n        if(A==B):\n            print('NO')\n        if(a==X):\n            print('YES')\n        if(b==X):\n            print('YES')\n        else:\n            print('NO')\n", "for _ in range(int(input())):\n    m,n = map(int,input().split())\n    if m%5==0 and (n%5)==0:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "import sys\nsys.setrecursionlimit(1000000)\n\nm1 = [[1]*(len(str(input())) for _ in range(m1) ]\n\nm2 = [[0]*(len(str(input())) for _ in range(m2)]\nfor i in range(1,10):\n    for j in range(1,len(str(input())):\n        if str(input()[i+1]).lower()[-1]!= \"O\":\n            m2[i][j] = x\n            for j in range(2,len(str(input()))[::-1])[::-1]:\n                m2[i][j] = (m2[i-1][j-1])\n        m2[i][j] = (m2[i-1][j-1] if m2[i-1][j] == \"x\" else m1[i-1][j])+(m2[i][j-1] if m2[i-1][j]!= \"o\" else 0)\n    m2[i][j] = x\n\n\n\n#for k,v in list(m2.items()):\n#    if v==len(m1[v-1][:2]):\n#        m2[v-1][1:] = [y2[v-1][2] for j in range(len(m1[v-1][1:]))):\n#            print('YES')\n#            print('YES')\n#print('YES')\n#for k,(m1[v][:2] = m1[v][::2], m1[v][1:] = m1\n#print('Y',m1[y],m2"], "16": ["n, k = map(int,input().split())\nif n==0 or k==0:\n    print(-1)\nelse:\n    print(n/2)", "n,k = list(map(int,input().split()))\nif k!= 0 and k < n:\n    print(-1)\n    if n==1:\n        print(-1)\n        return\n    if n==1:\n        print(n+1)\n    elif n==2:\n        print(-1)\n        else:\n            return\n        if k==2:\n            print(n-2)\n        if k==1:\n            print(-1)\n        else:\n            print(n)", "\ndef solve():\n    m, n, k = [int(i) for i in input().split()]\n    print(1, \"Invalid input\")\n    \n    # The matrix with n columns will never be aligned.\n    # The matrix with n columns will always be aligned.\n    if k == 1:\n        print(n, k, m)\n        else:\n            print(-1, n - 1, m)\n        return\n    \n\ndef main():\n    main()\n    main()\n    main()\n    \n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, k = map(int, input().split())\nif n==0 or k==0:\n\tprint(-1)\nelse:\n\tprint(1)", "def main():\n    n, k = map(int, input().split())\n    m = n * (k+1) // 2\n    x = n / m * k\n    y = n / k - k + 1\n    for i in range(1, n+1):\n        x = m * i - (m*(m*(m*(m*(m*m))-k)*k))\n        if x > y:\n            print(-1)\n    return x", "n,k=list(map(int,input().split()))\nl=[0]\nr=[1]\na=[2]*n\nfor i in range(n):\n    if l[i]<l[r]:\n        if l[i]!=l[r] and l[i]<l[r]:\n            l[i]=l[r]\nprint(-1)\nelse:\n    print(l[0])"], "17": ["def main():\n    N = int(input())\n    S = list(input())\n    s = input()\n    count = 0\n    for i in range(N):\n        if s[i]!= S[i-1]:\n            count += 1\n        else:\n            S[i] = S[i] + 1\n    return count\n\nn = int(input())\ns = input()\nfor i in range(2, N+1):\n    s1 = input()\n    s2 = s[i::-1]\n    s = s2 + s1\n    count = 0\n    for i in range(n-1, -1, -1):\n        s1 += s[i]\n        count += 1\nprint(count)\n", "n = int(input())\ns = input()\na = [int(i) for i in input().strip()]\nc = [len(s) for i in input().strip()]\nfor i in range(len(a)):\n\tif a[i]==s[i + 1]:\n\t\t\tc[i] +=1\n\t\t\tc.pop()\n\t\t\tprint(c.count(0))", "n=int(input())\na=input()\nfor i in range(n):\n    a=a.split()\n    a=a[::-1]\n    print(len(a))", "n = int(input())\ns = input()\nans = 0\nfor i in range(len(s)):\n    new = s[:i]\n    if new == s[-1]:\n        ans += 1\n    else:\n        ans += 1\nprint(ans)", "n=int(input())\ns=input()\nif n==0:\n\tprint(0)\nelse:\n\ts=s.replace(\" \",\"\")\n\tprint(len(s)+1)\n", "n = int(input())\ns = input()\na = [0] + s\n\ncount = 0\nfor i in range(len(s)):\n  if(s[i] == ''):\n   count+=1\n print(count)"], "18": ["def search(l):\n    sum_of_first_three = 0\n    sum_of_last_three = 0\n    for i in range(6):\n        sum_of_first_three += int(input())\n        sum_of_last_three += 1\n    return sum_of_last_three\n\nfor i in range(10):\n    l += search(l)\n print(len(l))", "t = input()\nn = len(t)\nk = sum(list(map(int, t)) for t in t)\nn -= len(t)\nprint(n//3 + n//3)\n", "from itertools import groupby\n\n\nt = input()\nn = len(t)\ns = input().split()\ncount = 0\nfor i in range(n):\n    if t[i] in [6, 7, 11]:\n        count += 1\nprint(count)\n", "s = input()\nn = len(s)\nk = 10\nans = 0\n\nfor i in s:\n    if(i%3==0):\n        ans += int(i/3)\n    else:\n        ans += int(i/3)\n", "from sys import stdin\ninput = stdin.readline\ninput = stdin.readline\ns = input()\na = 0\nsum = 0\nfor i in s:\n    if(i!= '0'):\n        a = a + i\n    sum += i\n    if sum==0:\n        print(0)\n    break\nfor i in s[1:]:\n    a += int(i)\nprint(a)", "n=int(input())\nnum = 0\nnums=sorted(num)\nsum = sum(num)\nsum2=sum(num)+int(num)\nprint(2 * count)"], "19": ["n,m=map(int,input().split())\n#print(n,m)\n\nfrom collections import defaultdict\nfrom collections import Counter,Counter\n\ndef bfs():\n    return Counter(sorted(map(int,input().split()))).values()\n\ndef i(n):\n    return sum(c for c in range(1,n))\n\ndef s(n):\n    c = 0\n    for i in range(1,n):\n        if i!=n:\n            c+=1\n        else:\n            break\n        if d(m,x)==0:\n            n+=1\n    c+=1\nans=0\nprint(n)", "# cook your dish here\nimport math\n\ndef __starting_point():\n    m = int(input())\n    x = int(input())\n    count = 0\n    \n    for i in range(len(sys.stdin)):\n        x = sys.stdin.readline().strip()\n        if x in sys.stdin.splitlines():\n            m = (m*x)%m\n            count = count + 1\n    return count\n\ns = int(input())\nfor s in s:\n    n = int(input())\n    if n == s:\n        print(2)\n    else:\n        print(s-s)\n__starting_point()", "# cook your dish here\nmod=10**14 \n\nl=list(map(int,input().split()))\nl.sort()\nans=l[-1]-l[0]\nfor i in range(1,max(m)):\n    if i+1 < m:\n        ans+=1\nelse:\n    print(ans)", "from math import gcd\nfrom collections import Counter\n\nfrom itertools import combinations\nfrom collections import defaultdict, deque\n\nm, x = map(int, input().split())\nm_mask = lambda x: int(x) % math.gcd(m, x)\nans = 0\n\ndef main():\n    n = len(list(map(int, input().split())))\n    if m_mask(x) == 1:\n        ans += 1\n    return ans\n\nans = [1] * m_mask\n\nans = [0] * m_mask - [1] * m_mask\nans[1] = 2\nans[0] = 1\nans[1] = 1\nprint(ans[0])", "import sys\nr=int(input())\na,b=list(map(int,input().split()))\nfor i in range(r):\n    b[i]=b[i-1]+x%a[i-1]\nprint(2)\n", "# cook your dish here\nm, x = map(int, input().split())\nx_list = map(int, input().split())\nm_list = [m, 1]\n\nd = (x + 1) // (m+1)\nc1 = 0\nc2 = 1\nfor _ in range(m_list):\n    c1 += x_list[0]\n    if c1 == c2:\n        c2 = x + 1\n    if c1 > 1:\n        c2 = c1 - 1\n    else:\n        c2 = x\n    c1 = x\n\nprint(c1)"], "20": ["from math import ceil\nans=0\na=1\nb=1\na=ceil(a*b-a)*b\na2=ceil(a*b-b*a)\nb3=ceil(b*b-b*a)\nb4=ceil(a*b-b*b+c)\na=2*a\nb=2*a-b*b+c\nprint(ans)", "a, b, A, B = map(int, input().split())\nprint(1)", "a, b, l, r = map(int, input().split())\n\nl = max(l,l-b)\ncnt = 1\nx = 0\nfor i in range(a):\n    k1, k2, l1 = list(map(int, input().split()))\n    cnt += (k1*k2+k2*(k2*l1))%(a)\nfor i in range(L+1,R+1):\n    if i-k1*k2<=R:\n        cnt += 1\nprint(cnt)\n\ndef main():\n    main()\n\n\n__starting_point()", "a=int(input())\nb=int(input())\nl=0\nfor i in range(3,b+2):\n    if i%4 ==0:\n        l+=1\n    else:\n        l=i-4\nprint(l)", "a, b, l, r = list(map(int, input().split()))\na = [x + a * b for x, y in zip(a, b) if x == y]\nfor i in range(a):\n    a[i] += l\nprint(a[0][len(a)-1-2] + a[i-2][len(a)-1])", "# cook your dish here\na,b,l,r=map(int,input().split())\na_2,b_2,l,r=map(int,input().split())\nl+=a_2\nr=r+l\nprint(len(a_2)//2-l+r+2)*(a_2-b_1)//2"], "21": ["# cook your dish here\ninput = lambda:list(map(int,input().split()))\n# n, m = map(int,input().split())\nans = []\nfor _ in range(int(input())):\n    if input()=='R':\n        if 'G':\n            r = 'R'\n        else:\n            if 'G':\n                r = 'G'\n            else:\n                g = 'B'\n            ans.append('YES')\n    else:\n        ans.append('NO')\n\nprint('YES' if ans else 'NO')\n", "# cook your dish here\nN,M=map(int,input().split())\n\nif N%3 == 0 and M%3!= 0:\n    if m%3 == 0:\n        print('NO')\n        return\n    else:\n        i=0\n        while i<M:\n            r,g,b=map(int,input().split())\n            if a>r:\n                print('YES')\n                i+=1\n            r+=1\n        g+=1\n            b=1\n        if a>g:\n            print('NO')\n            i=i+1\n            m-=1\n    if m==n:\n        print('NO')\n        return\n    else:\n        print('YES')", "N,M = map(int,input().split())\nl,M = set(map(int,input().split()))\ns = []\nc = {}\nfor i in range(n):\n    if L[i]!= L[M[i]] and L[L[i]] == L[M[i]] and L[I]!= L[M[i]]:\n        s.append((L[M[i]], L[M[i]))\nprint(\"YES\")\n\n\n", "from sys import stdin, stdout\n\nfrom collections import defaultdict as dd\ndef findFlag(m):\n    r, g, b = [int(i) for i in stdin.readline().split()]\n    if not (r or g and b):\n        return 0\n    r1 = dd[m][0]\n    if (r1 or g1 or b1 ):\n        return 1\n    if (g2 and b2) or (b1 and b2)):\n        return 1\n    if (b1 and b2) or (b1 and b2):\n        return 0\n    if g2 and b2:\n        return 0\n    if r == g == b:\n        return 1\n    if r == b and g == b:\n        return 0\n    if r == r2 and b == r2:\n        return 1\n    if r == r1 and g == b1 and b == b1:\n        return 1\n    if g == b1 and b == b1:\n        return 0\n    if r == r1 and b == r2:\n        return 0\n    if g == b1 and b == r2:\n        return 1\n    else:\n        return 1\n\ndef printFlag(s):\n    printFlag(s)\n\ndef getFlag(s):\n    return [i for i in s if s[i] in s[s[i]]\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, m = map(int, input().split())\ns = [str(x) for x in input().split()]\nprint('YES' if 'R' in s or 'G' in s or 'B' in s else 'NO')\n", "import numpy as np\nn, m = list(map(int, input().split()))\nprint('YES' if np.sum([(np.sum(c)%4==0) for c in range(n, m)) else 'NO')"], "22": ["import math\nn = int(input())\nprint(0,2)\nprint(-1,2)", "n=int(input())\narr=list(map(int,input().split()))\nnum_moves=n\nd=n-1\narr.sort()\nfor i in range(len(arr)):\n    x,y=arr[i],arr[i-1]\n    k=str(i)\n    print(x,y)", "import math\nn = int(input())\nprint(-2,-2)\n", "n = int(input())\na = [int(x) for x in input().split()]\nm = [int(y) for y in input().split()]\nprint(a[1] - a[0])", "n = int(input())\nx = (n*(n+1)/2) * (2 * (x+1) // 2)\n y = n*(n+1) // 2\n print(x,y)", "import sys\ninput = sys.stdin.readline\n\nfor i in range(int(input())):\n    n = int(input())\n    x = 1\n    y = 1\n    while n > 0:\n        x += n//8\n        y -= n%8\n    print(x,y)\n"], "23": ["a,b,c=map(int,input().split())\nif a*b>=c:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n", "a,b,c = map(int,input().split())\nif c == a:\n  print('Yes')\nelif a*b < c:\n  print('Yes')\nelse:\n  print('No')", "a, b, c = map(int, input().split())\n\nif a + b + c < a:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "from sys import stdin,stdout\ninput=stdin.readline\n\na,b,c=map(int,input().split())\nif a>b and b>=c:\n    print(\"Yes\")\nelse:\n    if a==c:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n", "#!/usr/bin/env python3\nimport math\n\ndef can(a, b, c):\n    n = int(input())\n    if a == 0:\n        return True\n    if b == 0:\n        if c >= c:\n            return False\n        return False\n    if b - a < 0:\n        return False\n    return True\n\na, b, c = map(int, input().split())\n\na = a + b - 1\nb = c + 1\n\nif can(a, b, c):\n    print(\"Yes\")\n else:\n    print(\"No\")\n", "a, b, c = list(map(int, input().split()))\nb=b-c\nc=a-b\nif(b<=c):\n print(\"Yes\")\nelif(a<=c) and(b==c):\n  print(\"Yes\")\nelif(b==c):\n  print(\"No\")\nelif(b<=c):\n  print(\"Yes\")\nelif(a==c):\n  print(\"Yes\")\nelif(b>=c):\n print(\"No\")\nelif(b<=c):\n print(\"Yes\")"], "24": ["# cook your dish here\nn,a = list(map(int,input().split()))\nl = list(map(int,input().split()))\na.sort()\nans = 0\nfor i in range(n):\n    if a[i] == 0:\n        d = 1\n        break\n    else:\n        a[i] = 0\n    ans = max(ans, (n - a[i]) * (2 ** i - 1) + (n - a[i] * (2 ** i - 1)) - 1)\nprint(ans)", "n, a = [int(x) for x in input().split()]\na1 = []\na2 = []\nfor _ in range(n):\n    a1.append(a[-1])\n\ndef g(n):\n    if n==1:\n        return 0\n    if a1[0]==0:\n        a1.append(n-1)\n    elif a1[0]!=0:\n        a2.append(n-1)\n    return -1\n\nA1.sort()\n\na1 = [int(x) for x in a]\n\na2 = [int(x) for x in a1]\nans = [[a1[0]]+a2[1]]\n\nfor i in range(len(a2)):\n    if a[i]==0:\n        ans[i] = min(ans[i], a2[i]+a[i])\n    print(\"\".join(sorted(ans)))\n", "# cook your dish here\n\n# cook your dish here\nn = int(input())\narr = list(map(int, input().split()))\narr1 = arr[-1]\narr2 = arr[::-1]\narr2 = arr[-1]\n\nlist1.sort(key = lambda x: -x[0])\nprint(max([d for d in range(len(arr1), len(arr2)) if d==a-1]), min(x[1:]))", "a=list(map(int, input().split()))\n\nd=[]\nf=[0]*(len(a)-1)\nfor i in range(len(a)):\n\td.append(d[-1][0]-a[i])\nprint(a[d.index(0)+1]-d[-1])", "from math import sqrt\n\nn=int(input())\na=list(map(int,input().split()))\nm=[]\nfor i in range(n):\n    a[i]-=a[i-1]\n\nd=[]\nfor j in range(n):\n    if a[j]!=0:\n        d.append(math.inf)\n        d.append(min(a[i],d[-1]))\n\nprint(max(d),min(d))", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = [0]*n\n    for i in range(n):\n        a[i] = int(input())\n        d[i] = 1-a[i]\n        d[i] += 1\n\nprint(min(sorted([list(sorted(list(d[1:]))[1],[i][::-1]+[a[1:]))])"], "25": ["n = int(input())\na = [int(i) for i in input().split()]\nif len(a) <= 3:\n    print(0)\nelse:\n    y = len(a)\n    if y > 1 and a[1] == a[0] and y == x[1]:\n        print(len(a) - (y + 1))\n        for i in range(1, y + 1):\n            if i < j:\n                break\n    else:\n        if a[i] == y[j]:\n            print(len(a),end=' ')\n        else:\n            print(len(a),end=' ')\n        else:\n            y = len(a)\n        a[y] = a[i]\n\n\n\nN = int(input())\ns,res = [1]\n\nfor _ in range(N):\n    if s[i] == '1' and s[j]!= '1' and s[j] == '1':\n        res += 1\n    print(res)\n\n", "s=input()\nn=int(s)\nprint(set(s))\n\nn=int(s)-len(s)", "from sys import stdin\n\nimport sys\nimport sys\n\nfrom operator import mul\n\n\nN = int(input())\nS = input().strip()\n\na = [i for i in range(N)]\nif S[i-1] == '1':\n    a.append(0)\n\nfor i in range(1, N+1):\n    a.append(A[i-1])\n\nprint(sum(a[-1])//2)", "\nn=int(input())\np=str(input())\nl=list(set(p))\nl.sort()\na=0\nfor i in range(0,n):\n    if p[i]==s[i]:\n        a+=1\nprint(a)", "def __starting_point():\n    n=int(input())\n    s=input()\n    count=0\n    while n>1:\n        if s[0]==s[1]:\n            count+=1\n            n-=1\n        else:\n            n-=1\n\nprint(count)\n__starting_point()", "def find(s):\n    s.find(s)\n    if len(s)>1:\n        return len(s)\n    return 0\nn=int(input())\ns=input()\ncount=[0]*(len(s)-1)\ns=list(input())\nif s.find(s[0]):\n    count.append(count)\nprint(len(count))\n"], "26": ["n=int(input())\na=input()\nb=input()\nfor j in range(n):\n    a[i]+=math.acos(a[i])\nprint(len(a))", "import sys\nn = int(input())\na = []\nb = []\nz = [[-0]*n for _ in range(2)]\nd = [(-0,0)]\nfor i in range(n):\n    d[i][0] = float(\"inf\")\n    for j in range(2, n):\n        if a[j][1] < a[j][2]:\n            z[i][j] = min(z[i][1], b[j][2])\n            d[i][j] = min(z[i][j], b[i][j-1] + abs(d[i][0] - a[i][0]) + abs(d[i][1] - a[i][1] ) + abs(d[i][0]) + abs(d[i][1] - a[j][2])\n        z[i][j] = min(z[i][1], b[i][1])\n    else:\n        z[i][j] = b[i][2] + abs(d[i][1] - a[i][1])\n        z[i][j] = max(z[i][2], a[i][3])\n        z[i][4] = min(z[i][3], b[i][4])\nprint(x[i], y[i][4])", "n = int(input())\nlist1 = []\nlist2 = []\ni = 2\nwhile i < n:\n    x,y = list(map(int,input().split()))\n    if x*x+y*x!=y:\n        list1.append(x*x+y*y)\n        i += 1\n\nk = 1\n\nwhile i < n:\n    f = list1[-1]+list1[-1]\n    k = 1\n    c = list1[-1]\n    if f > 2 * j:\n        if n-f[i]<=2 * j:\n            c[i] -= 2 * j\n            else:\n                c[i] = (n-f[i])//2 + 1\n        j += 1\n    \n    if k >= len(list2):\n        print(f[k], f[i])\n        else:\n            print(f[k], f[k])\n        k += 1\n        \n    else:\n        if n-k % 2 == 2:\n            print(f[k] - n)\n        else:\n            c[k] -= 1\n        f[k] = n-k//2\n            if n-k % 2 == 1:\n            break\n        i += 1\n    k -= 1\n    k += 1\n    c = c[k] - n\n    if k == len(list1):\n        print(f[k])\n    if n-k % 2 == 2:\n        print(f[k] - n)\n    \n    #print(f[k] - n)\n        \n", "n=int(input())\nd=[0]*n\nfor i in range(n):\n    v=[int(i) for i in input().split()]\n    if v[0]+v[1]==x:d.append(i)\nprint(max(d), min(d))", "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nk=math.acos(a[0]*b[1])\nfor i in range(n-1):\n  k+=int(a[i][0])\nif k>1:\n  print(a[0],b[0])\nelse:\n  print(k,b)", "def find(d):\n n,v = [int(d) for d in input().split()]\n x,y = list(map(int, input().split()))\n if abs(x-y) < x/2:\n  x, y = x+y, y-x/2\n  return (x, y)\n\nn = [input() for _ in range(n)]\nfor i in range(n):\n    a,b = find(x), find(y)\n    if a*b < a:\n        print(a,b)\n    else:\n        a,b = find(a)\n        b = find(b)\n\nprint((a,b))"], "27": ["n,k = map(int, input().split())\n\ns = s[0]\nfor i in range(1,k+1):\n\ts[i],s[i]=s[i+1],s[i]+s[i+2],s[i+1]\n\nk=10**9\ni=0\nwhile(i<=k):\n\ti+=1\n\nprint(-1)\n", "n,k = map(int,input().split())\n\nc = {k: -1 for j in range(n+1)}\n\nif(n>1 and k==1):\n    return -1\n\nc[n] = 1\n\nif(k>1 and c[n]>0):\n    print(n)\n\nelse:\n    if(n%k==0):\n        print(c[n-k])\n    else:\n        print(-1)", "\nn,k=map(int,input().split())\nif k==1:\n    print(n)\n    elif k==2:\n        print(-1)\n        else:\n            print((n-k)/k))", "x = int(input())\ny = int(input())\nif x!= y:\n    print(-1)\n    else:\n        print(-1)", "import sys\n\n\nN = int(input())\n# n, k = list(map(int, input().split()))\nif N <= 0: return -1\n\nwhile N > 2:\n    i = 2\n    j = 0\n    while j < N and i * i <= n:\n        j += 1\n        if j % i == 0:\n            print((i, j))\n            break\n        i = 1\n        else:\n            if i % j == 0:\n                j -= 1\n            else:\n                j -= 1\n        print((k, j))\n", "n,k=map(int,input().split())\nfor j in range(k):\n    a,b=map(int,input().split())\n    if a==b:\n        print(n)\n    elif max(a)%b!=0:\n        print(n-b)\n    else:\n        print(-1)\n    else:\n        n=a+b\n        \n        \n        \n        \n        \n        \n"], "28": ["n,m = list(map(int, input().split()))\nans = 0\nfor i in range(1,n+1):\n    x = input()\n    if i % 5!= 0:\n        ans += 1\nfor j in range(2,n+1):\n    if j % 5!= 0:\n        ans += 1\nprint(ans)\n", "n, m = map(int, input().split())\nx = 1\nfor i in range(1, n + 1):\n    if i == 0:\n        x += 1\n    elif i == m:\n        x += 1\n    elif (i > 0 and i % 5 == 0):\n        x += 1\nprint(x+1)\nfor i in range(n):\n    print(i,i+1)\nfor j in range(1, m + 1):\n    print((j-i,j)%5)\nprint(n-i)\nprint(m-i-j)", "# cook your dish here\nn,m=map(int,input().split())\nans=0\nfor i in range(n+1):\n    n1,n2=map(int,input().split())\n    if n1==n2:\n        ans+=1\n        continue\n    if n1==n2:\n        ans+=1\n    elif n1==m2:\n        ans+=1\n    else:\n        ans+=(1)*((n-1)*5)\n        ans+=(1//5)\n    print(ans)", "# cook your dish here\nn, m = map(int, input().split())\nsums = sum(map(int, input().split()))\nsums = s * 5\nsums = sums * 5\nprint(sums)\n", "# cook your dish here\nimport math\nimport sys\ninput = sys.stdin.readline\n\ndef get_sum(i, j):\n    while i + j < len(input() and i + j < len(input()):\n        if input().count('*') > 1:\n            return 0\n        return 1\n    i += 1\n    return math.ceil(log(i + 3, j) + log(i + 3))\ndef print_pairs_of_sum(n, m):\n    print(len(find_pairs_of_sum(n, m))", "n,m = list(map(int,input().split()))\nn,m=map(int,input().split())\ncount=0\nfor i in range(1,m+1):\n    if n%5!=0:\n        c=0\n        while m%5==0:\n            c+=1\n        m%=5\n        if n%5!=0:\n            break\n        elif n%5!=0:\n            n+=1\n        elif n%5==0:\n            n+=1\n        break\n        else:\n            m+=1\nprint(n-count)\n"], "29": ["def solve(a):\n    n, x = list(map(int, input().split()))\n    a.sort()\n    s = 0\n    for i in range(n):\n        s+=(a[i]**x)\n        s+=a[i]\n    if s>0:\n        print(s)\n        else:\n            ans=max(ans,s)\n    return ans\nn,x = list(map(int, input().split()))\na.sort()\nn,x = [int(i) for i in input().split()]\nprint(solve(a))", "def dp(n, x):\n    a, x = list(map(int, input().split()))\n    res = 1\n    for x in a:\n        res += x\n    return res\n\n\nn,x = list(map(int, input().split()))\n\narr = sorted([i for i in input().split()])\nmaxA = -1\nres = 0\nfor i in range(n):\n    if arr[i] > 0:\n        maxA = max(maxA, arr[i])\n        else:\n            res = 0\n    for a in arr:\n        if a in res:\n            res = maxA\n            res = maxA\n            res = max(res, arr[i])\n        res = maxA\n        if res == 0:\n            maxA = -1\n        else:\n            res = min(res, arr[i])\nprint(maxA)\n\n\n# cook your dish here", "n, x = map(int, input().split())\narr = list(map(int, input().split()))\nans = [0] * n\narr.sort()\nfor i in range(1, n):\n    for j in range(i+1):\n        ans[i] = max(ans[i - j]+arr[i], arr[j + i])\nprint(ans[-1])", "n,x = map(int, input().split())\na = [int(x) for x in input().split()]\nans = 0\nj = 0\nfor i in range(n):\n    l = []\n    for j in range(n):\n        l.append(int(x**j))\n        j = n - i - 1\n        ans = max(ans, a[j] * l[i])\n    j += 1\n    j += 1\nfor i in range(n - 1):\n    ans = max(ans, a[j - 1] * l[i])\nprint(ans)", "n,x=list(map(int,input().split()))\na=list(map(int,input().split()))\nprint(max(sum(a)))", "from sys import stdin,stdout\nimport math\nimport numpy as np\nN,X,MAX=input().split(),int(input().strip())\nA=[int(x) for x in input().strip().split()]\nA.sort()\nans=0\nfor i in range(N):\n  if A[i]==i:\n   ans=max(ans,A[i]*x)\n\nfor i in range(n):\n  print(ans)\n\n#sys.stdout.write(str(ans))\n"], "30": ["n,m,k=map(int,input().split())\nprint((2*k))", "def get_num(n,m,k):\n    if n>m:\n        print(n)\n    n,m,k=get_num(n,m,k)\n    k-=1\n    return k\nn,m,k=list(map(int,input().split()))\ns=''\nfor i in range(n):\n    for j in range(m):\n        if(i==k):\n            s+=get_num(i,j)\nprint(s)\n\n\n\ndef main():\n    N,M,k=list(map(int,input().split()))\n    n,m,k=map(int,input().split())\n    n=1,2*n\n    m=1+m\n    k=m+1\n    if k<=n:\n        n-=1\n    print(k-1)\n    else:\n        n=n+1\n    m-=1\n", "def helper(n, m, k):\n    l = [int(i) for i in input().split()]\n    return l[0]\n\ndef _helper(n, m, k):\n    l = [int(x) for x in input().split()]\n    return n*m - k*l[k]\n\ndef __starting_point():\n    return int(input())\n\nn,m,k = map(int,input().split())\nk = int(input())\nl = [0] * (m + 1)\nfor i in range(n):\n    l[i][j] = j\n    l[i][j] = j\nprint(l[n - 1])\n\ndef __starting_point():\n    main()", "n,m,k=map(int,input().split())\nprint(k-1)*k-1", "# cook your dish here\nn,m,k=map(int,input().split())\nx=list(map(int,input().split()))\nl=[0]*(n+1)\nfor i in range(1,n+1):\n\tfor j in range(n+1,m+1):\n\t\tx[j]=i\n\t\tx[j]=n-x[j]\nprint(l[k])", "n,m,k=map(int,input().split())\nf,i=0,0\nfor i in range(m):\n    for j in range(i+1,m):\n        for k in range(i+1,m):\n            f*= (i+j)\n    i+=1\nprint(f)\n"], "31": ["k = int(input())\nprint(int(n)[len(str(k[i])))", "k=int(input())\narr=[]\nl=[]\nfor i in range(1,k+1):\n    l.append(int(input()))\nfor i in range(k):\n    arr.append(str(i))\nfor i in range(1,k+1):\n    print(int(i))\nfor i in range(k):\n    print(i)\n", "n, k = lambda: int(input())\na = list(map(int, input().split()))\nans = [\"\"]\nfor i in range(len(a)):\n    s = input()\n    a.sort(reverse = True)\n    ans[i] = []\nprint(ans[k-1])", "n = int(input())\nans = 0\nfor i in range(1,n):\n    d = input()\n    a = a[0]\n    b = a[1]\n    while b!= a[0]:\n        b, a = b, a[-1], a[-1], a[:-1]\n        a = int(a)\n        b = b[-1]\n    for i in range(2,a[-2],-1,-1):\n        print((i,end=\"\")\n        ans += i)\n    ans += i\nprint(ans)", "# cook your dish here\nn=int(input())\nm=[]\nfor i in range(n):\n    j=int(input())\n    m[j]=str(i+1)\n    for i in range(k-1,-1,-1):\n        if m[i]==m[j]:\n            m[i]+=1\n    m[i]=i\nfor i in range(1,-1,-1):\n    if m[i]!=-1:\n        m[i]=m[j]-1\n    else:\n        m[i]=m[i+1]-1\n    m=m[len(m)-1]-1\nfor i in range(k):\n    m=m[i]\n    m=m[i]-1\nprint(m[len(m)-1]-1)\n", "# cook your dish here\na = int(input())\nc = int(input())\nb = str(a)\ni = b.index(a[-1])\nans = \"\"\nfor j in range(i+1, len(b)):\n    a = a[j]\n    a += str(a[i] + b)\nprint(ans[len(a)-i][i])"], "32": ["from math import ceil\n\nN = int(input())\nif N % 2!= 0:\n    print(-1)\nelse:\n    if N % 2 == 1:\n        print(n - 1)\n    elif N == 1:\n        print(2)\n    else:\n        print(2)\n", "n = int(input())\n\nif n%2!=0:\n    print(-1)\n    else:\n        ans = 1\n        for i in range(0,n//2 + 1):\n            ans += (2*i)\n        if ans!= 1:\n            break\n        if ans % 2!= 0:\n            print(ans)\n    else:\n        print(-1)", "import sys\ninput = sys.stdin.readline\nn = int(input())\ntry:\n    while not len(set(map(int, input().split()))):\n        j = int(map(int, input().split()))\n        if j >= n:\n            print((j - 1) // 2)\n        else:\n            print(-1)\n            break\nexcept EOFError as e :\n    pass", "# cook your dish here\nn = int(input())\nans = 0\nfor i in range(1,n//2 + 1):\n    a = list(map(int, input().split()))\n    if (a[0] > a[1]):\n        ans += 1\nif(ans == n):\n    print(n)\nelse:\n    print(n//2)", "n = int(input())\n\nm = [1,1,1,0,2,2,2,2,2,1,2,1,1,1]\nprint(sum(m.values())//2) if n!= 1 else -1", "n = int(input())\ndp = [0 for i in range(n+1)]\ndp[0] = 1\ndp[1] = (1<<n-1) - 1\nfor i in range(n):\n    dp[i] = (dp[i] + dp[i-1]) // 2\nprint(sum(dp[-1]) if dp[-1] % 2 else -1)\n\n"], "33": ["n, m = list(map(int, input().split()))\ns = input()\nl = []\na = []\nl.append([])\nfor i in range(m):\n  if(i in l):\n    for j in range(m):\n      a[i] += l[i-1]\n      l.pop(i)\nl = l[:]\nfor j in range(m):\n    l.append(0)\nfor i in range(n):\n    l = [int(x) for x in input().split()]\n    l.append(sum(l))\nprint(sum(l) - l[-1]))\n", "n = int(input())\nA = input()\nans = sum(set(A))\nfor i in range(n):\n    C = input()\n    count = 0\n    for j in range(i):\n        if C[j] =='':\n            count += 1\n        a = 1\n    A[i] = (C[j] - A[i])\n    B = [0] * (len(A)-1) + 1\n    A[i] = B[i]\n    A[i] = max(A[i], B[i]+B[j-1])\n    for i in range(len(A)-1, -1, -1):\n        B[i] = max(B[i], A[j] + B[i+1])\n\nprint(ans)\n", "n=int(input())\na=list(input())\nif n>1:\n    s=list(input())\n    b=list(map(int,input().split()))\n    for i in range(1,n-1):\n        if s[i]==a[i+1]:\n            break\n        else:\n            break\n    b[i]=int(input())\nfor i in range(1,n):\n    d=sum(b)\n    print(d)", "n = int(input())\ns = input()\na = [int(c) for c in input().lower()]\ns = sorted(s, key=lambda n:int(n))\na.sort()\nd = []\nfor i in range(n):\n    s = s[i]\n    a.sort()\n    d.append(s)\nans = 0\nfor i in range(n):\n    ans = max(ans, d[i-1]+ans[i])\nprint(ans)", "n = int(input())\na = input()\ns = \"\"\nm = len(a)\na = list(a)\na.sort()\nif n % 2!= 0:\n    m = max(a)\n    for i in range(m):\n        if m%i == 0:\n            a = a[:i] + a[:i-1]\n        else:\n            s = s[i:]+a[::-1]\n        a.append(s[i:])\nprint(max(a))\n", "# cook your dish here\nn=int(input())\ns=input()\ns2=s[0]\ns1=s.replace(' ',' ')\ns1.insert(0,s1)\ns1.insert(1,s1)\n\nmax=([]for _ in range(100))\na=0\na=input()\nmaxi=max(a)\nd=0\nfor i in range(n):\n    if s[i]!=s[i-1]:\n        d=d+a[i-1]\n        else:\n            a=0\n    i+=1\nprint(d)\n\n"], "34": ["def is_power_of_two(weights, mass):\n    d = sum(weights % mass) // mass\n    return d >= 0 and d % w < 0\n\ndef can_place(weights, mass):\n    return any((weights >= d) for d in d for d in d[1:])\n\ndef is_power(weights):\n    return any((weights >= d for d in d[0:2]) and (weights // d[0:2]) > 0 )\n\nfor m in range(1, len(weights)):\n    if is_power_of_two(weights, mass):\n        print(\"YES\")\nelse:\n    print(\"NO\")", "def main():\n    w,m = list(map(int,input().split()))\n    if w in [0,1,1]:\n        print('YES')\n    elif m in [2,4]:\n        print('NO')\n    else:\n        print('YES')", "t=int(input())\nfor i in range(t):\n    w,m=map(int,input().split())\n    if(int(w)%2==1 or int(w)+1==w):\n        print('YES')\n    else:\n        print('NO')", "import math\nw, m = map(int, input().split())\na = 0\nfor i in range(w, m+1):\n    a += math.floor(math.sqrt(i)**0.5)\nif a % 2 == 0:\n    print('NO')\nelif a % 2 == 0 and a % 2 == 0:\n    print('YES')\nelse:\n    print('NO')", "a,m = input().split()\nif (a==m):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "from math import gcd, log\n\ndef is_valid(n):\n\tn=log(n)\n\tt=int(math.sqrt(n))\n\tif t%2==0:\n\t\treturn True\n\treturn False\n\nfor i in range(1,n):\n\t\tn=int(input())\n\tif n%i==0:\n\t\t\tprint(\"NO\")\n\telse:\n\t\t\tprint(\"YES\")\n\tprint(\"NO\")\n"], "35": ["n=int(input())\nif(n==1):\n    print(0)\n    else:\n        print(-1)\n    \nfor _ in range(n):\n    x,y=map(int,input().split())\n        n=n-1\n        for i in range(n):\n            if(x==(y-1)*i):\n                x+=1\n            x+=(x**2)\n            x+=(y**2)\n        print(abs(x-(x*x))\n        else:\n            print(-1)", "n=int(input())\nl=list(map(int,input().split()))\np=list(map(int,input().split()))\narea=0\nif(l==1):\n    print(1)\nelse:\n    # print(l)\n    print(-1)", "def solve(y,x,y):\n if x == y:\n  return x*y\n if y == x and y!= y:\n  return x*y\n\nif x < 0:\n  return x\n\nif y == x and y == -1:\n  return x*x + y\n\nn=int(input())\ns=list(map(int,input().split()))\nif s[0] == s[1]:\n  s[-1] = s[-1]\nif s[0] == s[2]:\n  s.append(s[-1])\nelse:\n  s.append(s[-1]*s[-1])\nprint((abs(s - s[-2])*abs(s[-2]))//2 + 1))\n", "def solve():\n    n = int(input())\n    x0, y0 = map(int, input().split())\n    area = (x-x0) * (y-y0)\n    if x0 >= 0 and y0 >= 0 and y0 < 1000:\n        print(-1)\n    else:\n        print(area)\n__starting_point()", "n = int(input())\nfor i in range(n):\n    x, y = map(int,input().split())\n    a = x - n\n    b = y - n\n    if (a > b) and (b < a):\n        print(a * b)\n        break\n    else:\n        print(-1)", "n=int(input())\nfor i in range(n):\n    x,y=list(map(int,input().split()))\n    if x<x:\n        print(x*x)\n    else:\n        print(-1)\n"], "36": ["n,a,b=list(map(int,input().split()))\nif a==b:\n    print(n)\nelse:\n    print(n-b-2-(a+b))", "n = int(input())\nl = [int(x) for x in input().split()]\n\nif n <= 1:\n\treturn 1\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\na.sort()\nb.sort()\nd = []\nfor x in range(1,n+1):\n\td.append(int(l[x+1]))\n\nfor i in range(n):\n\ta.append(int(l[i])-l[i+2])\nfor j in range(2,n+1):\n\t\tb.append(int(l[i])-l[j+2])\nprint(len(w)+2)\n", "a, b = list(map(int, input().split()))\nprint(max(a, b))", "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nl.sort()\np=len(l[0])\nl.sort()\nl.append(p)\nwhile p<=l[l[l[l[p]]-l[p]]>1:\n    if l[l[l[l[l]]-l[l[l]]>2:\n        print(1+l[l-1]),end=' ')\n        l.pop()\n    else:\n        p-=1\nprint(' '.join(l))", "n=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\ncount=0\nfor i in range(1,n):\n    a.append(n-i-1)\ncount+=1\nprint(count)\n", "def solve():\n    a, b = input().split()\n    k = n - a - 1\n    c = 1\n    while k!= b:\n        c += 1\n    k += 1\n    break\n    k += 1\n    l = n - b\n    return l\n\ndef __starting_point():\n    input()\n    doors = list(map(int, input().split()))\n    s = 0\n    if s > 0:\n        s = s + 1\n    while s < n - 2:\n        s = s + 1\n        if s < n - 2:\n            a, b = a - 2, b - 2\n        if b >= s - 1:\n            b, a = a - s + 1, b - 1\n        return a, a+b + 1\n        print(min(solve() for _ in doors))\n__starting_point()"], "37": ["n,a=list(map(int,input().split()))\na.sort()\n\nif (len(a)%2 == 1):\n    print(\"YES\")\n    elif (len(a)%2 == 1):\n        print(\"NO\")\n    else:\n        print(\"YES\")", "\nn,a = map(int, input().split())\na = [int(x) for x in input().split()]\n\nprint(\"YES\")\n", "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nif not all(x==0 for x in a):\n    print(\"NO\")\nelse:\n    for i in range(n-1,-1,-1):\n        if a[i]==1:\n            print(\"YES\")\n            return\n        a.pop(0)\n    if int(a[i])==n-1:\n        print(\"YES\")\n        break\n        else:\n            a.pop(i)\n        print(\"NO\")\n", "n = int(input())\na = [int(x) for x in input().split()]\n\nif a[0] == 0:\n    a[0] = 1\n    else:\n        for i in a:\n            if a[i] == 1:\n                a[i] = 0\n            else:\n                a[i] = a[-1]\nprint('YES')", "n=int(input())\na=list(map(int,input().split()))\ns=[]\nx=list(map(int,input().split()))\nx.sort()\nwhile x:\n\ta.append(x.pop())\n\tx=list(x)\n\nprint(\"YES\")\n", "# cook your dish here\nn = int(input())\na = input().split()\na = list(map(int, input().split()))\nfor i in range(n-1):\n    if a[i] == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")"], "38": ["n,k=list(map(int,input().split()))\narr=list(map(int,input().split()))\narr.sort(reverse=True)\narr1=list(map(int,input().split()))\narr2=list(map(int,input().split()))\narr1.sort()\ncount=0\nfor i in range(n-1,-1,-1):\n    count+=arr1[i]\n    print(count)\n", "from math import sqrt\nn,k = map(int, input().split())\na = list(map(int, input().split()))\nk = int(k)\ncnt = 0\nwhile len(a) >= k:\n    a.remove(a[k] % k)\n    cnt += 1\nprint(cnt)\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nn, k = list(map(int, input().split()))\nm = int(k)\nans = 0\nwhile k > 0:\n    if k % k == 0:\n        k -= k\n        ans += 1\n    break\n    n = int(input())\nprint(ans)", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(sum(a[i:(k+k+1)*n-i])//k)", "n, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nprint(k-len(a))", "a, k = map(int, input().split())\nans = 0\nfor i in range(len(a)):\n    for j in range(i+1,len(a)):\n        if a[i]%k == 0:\n            ans += 1\nprint(ans)"], "39": ["n, k = map(int, input().split())\n\ns = input()\n\nfor i in range(n):\n    if len(s) == k:\n        print(\"NO\")\n        elif len(s) == k:\n            print(\"YES\")\n            break\n    else:\n        print(\"NO\")", "\nn, k = map(int, input().split())\nans = 'NO'\n\nwhile(n):\n    n, k = map(int, input().split())\n    print(ans)", "n,k=map(int,input().split())\nx=[]\nfor i in range(n):\n    if s[i]==\"a\" or s[i]==\"b\":\n        x.append(\"YES\")\n    elif s[i]==\"b\":\n        x.append(\"NO\")\nprint(\"YES\")\n\n", "def solve():\n    n, k = map(int, input().split())\n    s = input()\n    for i in range(n):\n        if s[i] == s[k-i]:\n            break\n        else:\n            if s[i] == s[k+i-1]:\n                print(\"NO\")\n        return\n    return \"YES\"\n\ndef main():\n    n, k = list(map(int, input().split()))\n    k = n - k + 1\n    solve()\n    ans = solve()\n    print(\"YES\")", "n,k=map(int,input().split())\ns=[input() for i in range(n)]\nl=[]\nwhile True:\n    for i in range(k):\n        if s[i]=='a':\n            l.append(i.lower())\n        else:\n            l.append(i.upper())\nif len(l)==1:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "def main():\n    n, k = map(int, input().split())\n    if k == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\n\n\n\n__starting_point()"], "40": ["n = int(input())\na = list(map(int, input().split()))\n\nl = list(map(int, input().split()))\n\nt = 0\nfor i in range(1, n):\n    if a[i] < a[i-1] and a[i+1] > a[i-1]:\n        t += 1\n    else:\n        t += 1\n\nprint(t)", "# cook your dish here\nn = int(input())\narr = list(map(int, input().split()))\narr.sort()\n\nl1 = [int(x) for x in input().split()]\narr.sort()\nans = 0\nfor i in arr:\n    if arr[i] - arr[i - 1] > arr[i]:\n        ans = i\n    else:\n        break\nif ans < ans:\n    ans = ans\nprint(ans)\n", "from bisect import bisect_left\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = k\nfor i, n in enumerate(a):\n    for j in range(i+1, k):\n        if min(a[i] - a[j] >= n:\n            ans = min(ans, n-i)\nprint(ans)\n", "\ndef main():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    while len(arr) >= n:\n        arr.remove(arr[-1])\n        arr.remove(arr[-1])\n    if len(arr) == 2:\n        print(2)\n    return\n\ninput()\ninput()\nprint(main())", "a,b=[list(map(int,input().split())) for i in range(len(a))]\narr=[]\nfor i in a:\n    arr.append(i)\nprint(min(arr))", "from sys import stdin\n\nn, a = map(int, stdin.readline().split())\na.sort()\nn = int(min(a))\nprint(max(a))"], "41": ["n,k=list(map(int,input().split()))\nm,i=len(map(int,input().split()))\nf,j,n=0,len(map(int,input().split()))\nif(n%10==0 or k>9):\n    j=0\n    if(n%10==0 or k>k):\n        j=j\n    if(n%10==0):\n        f=i\n        i=i+1\n        elif(n%10==1 or k==5):\n            j=j+1\n            n-=1\n            k+=1\nprint(min(m-f))", "n,k = map(int,input().split())\nprint(2*k+len(str(n))//10)", "import math\n\nn,k=map(int,input().split())\nn=list(map(int,input().split()))\na=n.count('0')\nfor i in range(1,10):\n    if(a%k!=0):\n        a-=1\nprint(len(a))", "n,k=map(int,input().split())\nprint(min(k,len(str(n)))*2)", "import math\nn,k=map(int,input().split())\nnum1=n//10**k\nnum2=int(math.ceil(num1/10**k))\nprint((num1))", "import sys\ninput = sys.stdin.readline\nn,k=map(int,input().split())\nm = 1000000007\nfor k in range(k):\n    s = int(str(n))\n    m += pow(10, 9 - s) - k\nprint(m - len(s))"], "42": ["n=int(input())\nj=10**9\nif(n>=3):\n    print(0)\nfor i in range(1,n+1):\n    if(j%2==0):\n        j=i+1\n    j+=3\n    \nprint(j-i+1,end=' ')", "n = int(input())\ng = {}\nwhile n!= 0:\n    if n % 2 == 0:\n        if n!= 1:\n            g[n] = 1\n            else:\n                n = n // 2\n            g[n] += 1\n    g[n] = 2\n        n = n // 2\n#print(g)\nprint(g.keys())\n", "n = int(input())\nprimes = []\nfor i in range(2, n + 1):\n    primes.append(i)\nprint((n - (2 * i)))", "from math import floor, gcd, log\n\nN = input()\nA = list(range(3,N))\nif N%3==0 and sum(set(A))==0 and len(A)!=0:\n    print(N)\nelse:\n    for i in range(2,N+1):\n        if int(A[i])%3!=0:\n            if x%i==0:\n                for x in range(3,i+1):\n                    print(x)\n\nexcept EOFError:\n    pass\n", "primes = []\nfor i in range(2, int(sqrt(1+n))+1, 2):\n    primes.append(i)\nprimes.append(i)\nprimes.sort()\nprimes.sort()\nd = []\nfor i in range(2, -2, -1):\n    if i%2==0:\n        d.append(i+1)\nfor i in range(2, -1, -1):\n    if (primes[i]==0) or (primes[i]==1 and (i+1)%i==0):\n        if ((i+1)%i==0 or i+2) in primes:\n            primes[i+1] = 1\n    else:\n        primes[i] = 1\nprint(sum([list(range(len(d))) for d in primes]))", "from collections import Counter\nn=int(input())\np=0\nfor i in range(2,n+1):\n    for j in range(i+1,i+2,2):\n        if i%j==0:\n            p+=1\n    else:\n        p+=1\nprint(sum(set(p)) for p in range(3))"], "43": ["n, m = map(int, input().split())\nfor i in range(n):\n    if int(input())!= int(input()):\n        print(\"NO\")\n    return\nif m == 1:\n    x,y = list(map(int, input().split()))\n    if y == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "n,m = map(int, input().split())\nfor i in range(m):\n    x,y = map(int, input().split())\n    if x == \".\":\n        print('YES')\n    elif y == '*':\n        print('YES')\n    else:\n        for i in range(i,n):\n            if x == \"*\":\n                print('NO')\n            elif x == '.':\n                print('NO')\n        else:\n            print('YES')", "n, m = map(int, input().split())\nlst = list(map(str, input().split()))\nn, m = [int(i) for i in input().split()]\nlst[0] = 1\ncnt = 0\nfor i in range(1, n):\n    if lst[i]!= '*':\n        cnt += 1\n        if cnt == n:\n            continue\n    elif cnt == n:\n        return 1\nelse:\n    cnt += 1\n    if cnt == n:\n        print('YES')\n    else:\n        print('NO')\nexcept:\n    print('NO')\n", "n, m = map(int, input().split())\nf = input().split()\nc = 1\nf2 = n - 1\ns = [0]*m\nr = 0\nfor i in range(n):\n    for j in range(m):\n        if f[j] == \".\":\n            s2 += 1\n            if s2 == 0:\n                r += 1\n        elif s2 == 1:\n            c += 1\n            s = 0\n            r += 1\nprint('YES' if (r == n) else 'NO')", "n, m = map(int, input().split())\nlst = [input() for _ in range(n)]\nlst.sort()\nfor i in range(n):\n    for j in range(m):\n        if (lst[i]=='*'):\n            lst[i]=lst[j]\nelse:\n    lst[i]=lst[i]\n", "# cook your dish here\nn,m=list(map(int,input().split()))\nl=[[0,0]]\nfor _ in range(n):\n    for i in range(m):\n        if l[i]==\"*\":\n            l[i]=1\n            l[i+1]=0\nfor i in range(m):\n    if l[i]==\"*\":\n        break\n    if l[i]==\".\":\n        l[i]=\"YES\"\n    else:\n        l[i]=\"NO\"\n    for j in range(m):\n        j+=1\nprint(''.join(l))"], "44": ["# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nans = a[0]\nfor i in range(1,n):\n  for j in range(i):\n   if a[j] - a[i-1] % 2 == 1:\n    ans += j\nprint(ans)", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\n\nj = l[0]\n\nprint(l[-1]+l[-1])", "n=int(input())\np1=[1]*n\nj=[1]*n\nk=n\nfor i in range(n):\n    k[i]=1+k[i-1]\nfor i in range(n):\n    k[i]=1+k[i]*k[i-2]\nprint(k[len(k)-1])", "n = int(input())\na = list(map(int,input().split()))\na[0] = a[0] - a[0]\nb = a[0] - a[0] - a[0] - a[1]\nprint((a[0],a[1]),'-')\n", "n = int(input())\na = list(map(int, input().split()))\nb = -1\na.sort()\nb[0] = -1\na = list(map(int, input().split()))\nb[1] = b[0]\na[0] = a[0]\na[1] = -1\n\nans = 0\nfor i in range(1, n):\n    ans = max(ans, b[i])\nans = min(ans, a[i])\nans = min(ans, a[i])\nans = min(ans, max(ans, b))\nans = max(ans, b)\nans = max(ans, a[i])\nans = int(ans)\nprint(ans)", "s = input()\nn = int(n)\nd = [[0]*n for _ in range(n)]\na = [int(x) for x in input().split()]\na.sort()\nprint(max(sorted(a)) * (n + 1)\n"], "45": ["r=int(input())\np=[1,1,1]\ns=[0]*10\nm=int(input())\nm=[max(n-1) for n in range(m+1)]\nfor j in range(1,int(input())):\n    if (k<0):\n        s.append(p)\n    for k in range(min(m,i) + 1,0,-1):\n        s.append(k)\nprint(max(s)+1)\n", "n = int(input())\na = []\nres = 0\nfor x in range(n):\n    q = int(input())\n    div = sum(set(set(map(int, input().split()))) % m\n    res += sum(div[len(div) - 1]) * q \n    i = 0\n    while i < n:\n        q += 1\n        p = int(input())\n        a.append(p)\n        if p == n:\n            ans.append(p)\n        i+=1\n    while i<n:\n        p, q = i, q % p\n        if p > n:\n            if p == 1:\n                break\n            else:\n                x += x % p\n    i += 1\n\nprint(res)", "import math\n\ninput=sys.stdin.readline\n\nn=int(input())\n\na=list(map(int,input().split()))\nc=1\nfor i in range(1,m+1):\n    a[i*i]+=1\nif a==1:\n    print(1)\nelse:\n    a.append(1)\nprint(max(a)-1)\n", "def main():\n    m = int(input())\n    a = list(map(int, input().split()))\n    while a:\n        a.append(1)\n        p, q = [], [0, 1]\n        for i in range(m):\n            if int(a[i]) % q == 0:\n                p = a[i]\n            if p == 1 and q!= 0:\n                p = 1\n                q = 10 ** 9 + 7\n        break\n    print(1)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "from random import randint\nfrom random import choice\nfrom math import log2\nm,i=int(input())\na=list(map(int,input().split()))\n\nn=len(a)\na[i]=1\nfor i in range(n):\n    a[i]=pow(2,i)\nprint(min(a) - max(a[-1]))", "# \u8c03\u7528\u63a7\u4ef6\u4e0d\u5b58\u5728\u6e90\u6bd4\u8f83\nn = int(input())\na = [[1] for _ in range(n)]\np = [2]\nq = [1]\nfor x in range(1,n+1):\n    p[x] = (pow(x,p[x])%p)%p\n    q.append(x)\nans = []\n\nfor i in range(1,m+1):\n    ans.append(p[i])\nprint(max(ans))"], "46": ["from math import gcd\nfrom sys import stdin,stdout,stdout,setrecursionlimit\nfrom numpy import gcd\nfrom collections import Counter\ndef lcm(x, y):\n    k = gcd(x, y)\n    n = lcm(x, y)\n    count = 0\n    while(n>0):\n        n = (n-k) // (n)\n        if n>0:\n            count+=1\n            else:\n                k -= 1\n        if k!=0:\n            n = k\nprint(n)\n", "import sys\nn,a,b,m,g,p=list(map(int,input().split()))\nl=[]\nfor i in range(len(a)):\n    g=a[i]\n    m=b[i]\n    if b[0]<m:\n        p=n\n    g=a[i]\n    p=p\n    if p%g==0:\n        n=n\n    if a[2]>n:\n        p=n\n        p=n\n    else:\n        p=n\n    x=(x//g)\n    y=y//g\n    p=l\n    l=l+1\n    for i in range(1,max(l,m,p)):\n        if a[i]==p:\n            l=i\n    if l==r:\n        n=r+1\n    print(n)\nelse:\n    a=l-a\n    b=l-b\n    print(a)", "l,r,x,y=map(int,input().split())\nif l<x or r<y:\n    print(0)\nelse:\n    l=int(l)\n    r=int(r)\n    c=0\n    l=l+l\n    x=int(x)\n    y=int(y)\n    x=int(y)\n    y=int(y)\n    print(max(p)<y))", "l, r, x, y = [int(i) for i in input().split()]\n\nd = [1] * (x + y)\n\np = 1\nd[l] = 1\nfor i in range(0, int(l + 1)):\n    d[l+i] = 1\n    \ni = 1\nwhile i<=r:\n    p+=1\n    i+=1\n    \n    d[a]=2\nprint(d.count(0))\n \n", "l,r,x,y=map(int,input().split())\nif x<r or y>l:\n    print(0)\nelse:\n    print(max(a%r for a,b in zip(x,y))", "l, r, x, y = map(int, input().split())\nfor i in range(2, x+1):\n    n, m = list(map(int, input().split()))\n    print((l ** 2 + (r ** 0.5) // m) % m)"], "47": ["x,y=map(int,input().split())\nz=int(y)\nwhile(z>0):\n    z-=x\n    y-=x\nprint(z)", "a, b = list(map(int, input().split()))\nprint(''.join(['0'+min([a-i,a+b]+[i<=b+k]), '0'+min([a-i,b+k]+[a-i,b-k])))\n", "a, b = [int(i) for i in input().split()]\ns = [int(i) for i in input().split()]\nx = [1] * (a + 1)\nfor i in range(1, max(b + 1, x)):\n    i = i + 1\n    s[x] = i\n#print(s)\n\np = [(0, 1), (a, b) ]\n\nm = 2 * 500000\n\nfor i in range(len(s)//2):\n    s[i] = (s[i-2] + s[i-1]) % m\nprint(s[0])", "a,b = list(map(int,input().split()))\nif a*b<=2*b:\n    print(min(a,b))\nelse:\n    print(b)\n", "a,b=input().split(\" \")\n\ndef gcd(arr,arr2):\n    l=arr2\n    if l%arr2!=0:\n        a=l//arr2\n    elif l%arr1!=0:\n        a=l//arr2\n    if len(arr)>1:\n        a=a*(a//arr2)\n    b=b*(b//arr1)\n    return int(a)\n\ndef gcd(arr, arr1, arr2):\n    return arr1/gcd(arr,arr1//gcd(arr1/gcd(arr1%gcd(arr1),arr2))\n\n#n=len(arr)\ndef gcd(arr,arr1,arr2):\n    if arr1+arr2==arr1:\n        return arr1\n    return gcd(arr,arr1+arr2)\ndef gcd(arr,arr):\n    print((gcd(arr,arr2)-gcd(arr1,arr2))))\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "a, b = map(int, input().split())\n\nprint((a*b+3*(2*b))/3))"], "48": ["# cook your dish here\nx, y, x_v, y_v = map(int, input().split())\nif x == 0 or y == 0:\n    print(\"Vasiliy\")\nelse:\n    print(\"Polycarp\")\n", "def solution(x, y, p, d, v):\n    if x == y:\n        return 0\n    if x-p == 0 and y-p == 0:\n        return 1\n    if x - 1!= p:\n        return 0\n    if x-2!= p:\n        return 1\n    if y-1!= v:\n        return 1\n    if x-2==v:\n        return 0\n    if x -1 not in (0, p):\n        return 2\n    if x-1==v:\n        return 2\n    if x-1>p:\n        return 1\n    x1, y1 = x - 1, y- 1\n    if x1==2:\n        return 1\n    if x1==2:\n        return 2\n    if x1==0 and y1==0:\n        return 3\n    if x1==2 and y1==2:\n        return 4\n    if x1==2 and y1==2:\n        return 3\n    if x1!=x2 and y1!=y2:\n        return 4\n    if x1!=x2 and y1!=x2:\n        return 2\n    elif x1==1 and y1!=y2:\n        return 1\n    else:\n        return 3\n\ndef solution(x, y):\n    x1, y1, x2, y2 = x2, y2\n    return -1\n\n\ny=xy_v(x-1, y-1)\n    x1, y1 = y1, y2\n    if x1!=x2 and y1!=y2:\n        return 1\n    print(solution(x, y1))\n\n", "p1,p2,p3,p4,p6,p7,p8,p9,p11,p10,p12,p11,p12,p13,p12,p15,p15,p17,p13,p15,p12,p12,p13,p13,p17,p13,p13,p13,p13,p14,p13,p15,p13,p14,p15,p13,p13,p14,p14,p14,p13,p15,p15,p14,p15,p15,p16,p16,p17,p13,p15,p18,p18,p19,p18,p19,p19,p19,p19,p19,p19,p19,p19,p22,p17,p19,p13,p17,p17,p17,p17,p17,p19,p19,p17,p18,p19,p17,p18,p16,p17,p19,p18,p17,p17,p19,p19,p21,p22,p23,p19,p18,p23,p19,p19,p17,p20,p21,p21,p17,p19,p19,p21,p18,p25,p20,p30,p22,p21,p21,p23,p24,p19,p19,p20,p22,p19,p20,p17,p19,p19,p17,p23,p20,p18,p23,p28,p21,p24,p21,p19,p22,p20", "import math\ninput = lambda : lambda : list(map(int, input().split()))\n\nx1, y1, x2, y2 = list(map(int, input().split()))\n\nprint(\"Polycarp\" if x1==0 and y1==0 else \"Vasiliy\")\n", "input()\n\ndef c2r(a,b):\n    return (a-1,b-1)\n\ndef __starting_point():\n    return (int((x-1)**(0.5)-1)+int((y-1)**0.5)-1)+int((x-1)**2)**0.5)\n\ndef __starting_point():\n    a, b = map(int, input().split())\n    return [[a, b],[a, b],[a, b]]\ndef __starting_point():\n    return list(map(int, input().split()))\n\ndef main():\n    print(\"Polycarp\")\n\n__starting_point()", "import sys\n# cook your dish here\nt=sys.stdin.readline\nwhile(t):\n    x,y=t.split()\n    if(x==1 and y==1):\n        print(\"Polycarp\")\n        elif(x==2):\n            print(\"Vasiliy\")\n        else:\n            print(\"Polycarp\")\n        elif(x==3):\n            print(\"Vasiliy\")\n        elif(x>2 and y>3):\n            print(\"Vasiliy\")\n        else:\n            print(\"Polycarp\")"], "49": ["a, b = map(int, input().split())\nfor i in range(b):\n    a,b = map(int, input().split())\n    print(max(a,b) - max(a))", "# cook your dish here\na,b=map(int,input().split())\na-=1\nb-=1\nprint(a)\nprint(b+a)\n", "import math\ns=input()\nt=set(t)\nans=0\nfor i in range(0,t):\n    if i%2 ==0:\n        ans+=1\n    else:\n        ans+=int(math.log(i,2),2))\nprint(ans)\n", "a,b=map(int,input().split())\na_max=0\nb_max=b_max-a_max\ns=0\nfor i in range(b,b_max+1,a_max+1):\n  if i % 10==0:\n   s+=1\n if a == 0:\n  b_max=i\n else:\n  a=b_max\n print(s)\n", "a, b = map(int, input().split())\nc, n = 0, 1\nwhile (a > b) and (n & 1):\n    c+=1\n    a = (a * 10**18) - (b * 10**18)\n    b = (b * 10**18) - (a * 10**18)\n    a = (a * 10**18) - (a * 10**18)\n    n += (a * 10**18) - (b * 10**18) - (a * 10**18)\nprint(c)\n", "a,b = map(int, input().split())\nc = 0\nfor i in range(a, b + 1):\n    if a[i] % 2 == 1:\n        c+=1\nprint(c)"], "50": ["a = list(map(int,input().split()))\nfor i in range(len(a)):\n    a[i] = int(a[i]+a[i-1])\nprint(max(a))", "# cook your dish here\ndef check(x, y):\n    if x < y:\n        return x\n    if x>y:\n        return x\n    elif (y == x+1):\n        return y\n    x, y = input().split(), input().split()\n    x = x[0]+1, x[1]\n    if (x < y):\n        x, y = y[0], x[1]+1, x[2]+1\n    if x > y:\n        x, y = x, y\n    if x < y:\n        x, y = y, x\n    elif x < y:\n        x, y = x, y\n    else:\n        y, x = y, x\n        elif x == y:\n            y, x = y, x[0]+1, x[1]+1\n    elif x < y:\n        x, y = y, x[0]+1, y[0]\n    else:\n        x, y = y[1], y[1]+1, y[0]\n    elif x < y:\n        x, y = y, y\n    elif y < y:\n        x, y = y, x\n    print(min(x - x, y))\n", "n = int(input())\na = [int(i) for i in input().split()]\n\nans = 0\nfor i in range(2,n+1):\n    a[i] = a[i] * a[n-i-1]\nprint(ans)\n", "n = int(input())\nprint(n*2-1)\n", "import math\nn = int(input())\nl = 1\nr = 1\ns = 1\nc = int(math.log(n, 2))\nd = [1] * (n + 1)\nfor x in range(r, n + 1):\n    s *= x\n    d[r] = d.pop(r)\n\np = 2*p - 2\nfor i in range(2, p):\n    for j in range(i+1, n + 1):\n        if j!= p:\n            s += i\n    print(s)\n", "#!/usr/bin/env python3\nN = int(input())\nfor _ in range(N):\n    s = [float(s[i]) for i in input().split()]\n    print(sum(s[1:-1])//2)\n"], "51": ["# cook your dish here\na,b,c=map(int,input().split())\nprint((a+b+c)**2)%1000000007)", "\nn=int(input())\na,b,c=map(int,input().split())\nl=[]\nfor i in range(0,n):\n    a,b,c=list(map(int,input().split()))\n    if a%b==0 or a%c==0:\n        l.append(1)\n    else:\n        l.append(b//c)\n\nans = 0\nc = a/b\nans+=c\nc%=1073741824\nprint(ans%1000000007)\n", "a,b,c=map(int,input().split())\na,b,c=map(int,input().split())\nc=0\nfor i in range(a,b+1):\n    c=c+(i*(i+1)//2)%1000000007\nans=a+(b+1)*(c+1)*(c+1)\nprint(ans)", "a,b,c=map(int,input().split())\n\nprint(((a*b*(b+c)/5)/2+(b*c*b))%(1000000007)%(1073741824))", "a, b, c = map(int, input().split())\nsum = (a + b + c + a) % (1073741824)\nprint(sum)", "a, b, c = map(int, input().split())\na, b, c = map(int, input().split())\ncount=1\nwhile(a!=b and a!=c):\n    count=count+a*(b+1)\n    count%=1073741824\nprint(count)\n"], "52": ["r = 0\nfor i in range(int(input())):\n    r=i\n    l=list(map(int,input().split()))\n    for j in range(1,len(l)):\n        if l[i-1]!=l[j-1]:\n            print(\"YES\")\n            elif l[i-2]!=l[j-1]:\n                print(\"NO\")\n            l[i]=l[j-1]\n            else:\n                print(\"NO\")", "from collections import defaultdict\nt, i, j, m = map(int, input().split())\nif i == j:\n    print('YES')\nelse:\n    print('NO')", "m, n=map(int, input().split())\ns, a, b, c = map(int, input().split())\nif len(s[0])!=len(a[0]):\n print(\"NO\")\nelse:\n for i in range(len(s[0])):\n  s[i].append(a[i][0])\n for i in range(1,len(s[0])):\n  if s[0]==a[i][1]:\n   print(\"YES\")\n  else:\n   print(\"NO\")", "from collections import defaultdict\nfor i in range(int(input())):\n    j = 2 * input().split()\n    c = [i, i[0], j[1], j[1]]\n    d = {i[0], i[1], i[2], i[3], i[4], i[5] }\n    l = 1\n    for i in range(len(d) - 2):\n        m = [d[i][j] for j in range(len(l) - 1]\n        d[i][j] = m\n        if c[i] == d[j-1]:\n            if l[i] == d[j-1][j] and c[i+1][j] == d[j][j]:\n                d[i] = m\n        else:\n            d[i] = m\n    else:\n        d[i] = m\n    print(\"NO\")\n\n        \n", "N = list(map(int,input().split()))\nr = list(map(int,input().split()))\nc = list(map(int,input().split()))\nt = list(map(int,input().split()))\nif len(t) == 3:\n    print('YES')\nelse:\n    print('NO')\n", "a,b,c=map(int,input().split())\nb,c=a+b,c+c\nif(a==b)==(c:b)and(a==e):\nprint(\"YES\")\nelse:\n a=c\n b=c\n"], "53": ["import sys\ninput = sys.stdin.readline\n\nN = int(input())\nN = N//10\nK = int(N)\nif K == k:\n    print(n)\nelse:\n    l = [k]\n    x = []\n    for n, d in enumerate(N):\n        if len(str(d).isdigit()):\n            x.append(n)\n        break\n    x.sort()\n    l.append(0)\n    print(k)\n", "n, k = map(int, input().split())\na = n - 475\nb = n - 475\nc = 1\ns1 = int(a * (9 - 7))\ns2 = int(a * (9 + 9 + 10 + 11))\n\ns = int(s1 * (9 + 11) // (9 + 1)))\nif(s == a or a + b > p:\n  print('0')\nelse:\n  c = (int(s1 / 9 * 9) - (9 + 1) * (9 + 1) * (9 + 1)) + b\n  s2 = int(s2 * (9 + 1)) * (9 + 1)\n  s3 = int(s3 + 1) * (10 + 1) * (9 + 1) * (9 + 1)\n  s2 = int(s1 + 2 * (9 + 1))\n  print(c)\n", "n,k = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n    t = str(int(input())).zfill(1)\n    ans = ans + str(int(t)[0]) * (t[-1] - (t[-1] - 1))\n    ans = min(ans, t - n)\n print(ans)", "n, k = map(int, input().strip().split())\nfor i in range(0, len(input())):\n    a, b = list(map(int, input().strip().split()))\n    if a[b-1] == '0' and b[a+1] <= '4' and b[b-2] <= '7':\n        k = b\n    else:\n        k = b\nprint(min(k, 9) + k * i )\n", "import sys\ninput = sys.stdin.readline\nn = int(input())\nif n < 9:\n    print(n)\n    n = 10**18\nif n >= 5:\n    n = 1\nprint(10)\nelse:\n    n = 10 **9\n    ans = n - k\n    print(ans)\n", "n,k = list(map(int, input().split()))\nprint(n//2+int(k-1))"], "54": ["def checkNum(arr):\n    if (len(arr) == 0 or len(arr[0]).is_integer() or len(arr[0]) == 0:\n        return True\n    return False\n\ndef checkNum(arr):\n    num = arr[0]\n    if num > arr[0]:\n        return False\n    else:\n        if num > arr[1]:\n            return False\n        else:\n            return True\n    else:\n        if num < arr[1]:\n            return False\n        else:\n            return True\n    return False\n\nprint(\"YES\")", "n = int(input())\narr = []\nfor i in range(n):\n    l = int(input())\n    l = list(map(int,input().split()))\n    if l[0] > arr[l[-1]:\n        if arr[l[0]] < arr[l[-1]] :\n            print(\"YES\")\n            else:\n                print(\"NO\")", "n=int(input())\na=list(map(int,input().split()))\na.sort()\nif len(a)==1 or len(a)-1==1 or len(a)<=2:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n = int(input())\na = list(map(int,input().split()))\nif sorted(a) == sorted(a):\n    print('YES')\nelse:\n    print('NO')", "# cook your dish here\nn = int(input())\na = [int(i) for i in input().split()]\n\nif a[0] <= a[n-1]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n=int(input())\narr=list(map(int,input().split()))\n\nif len(arr)<1:\n    print(\"YES\")\n    else:\n        for i in range(1,n):\n            if arr[i]>arr[i-1]:\n                print(\"YES\")\n                break\n        else:\n            print(\"NO\")\n"], "55": ["from math import sqrt\n\ninput = input.split()\n\n\na1,b1,a2,a3,b3,a4,a5,a6,a7,a8,a9,b10,b11,a17,a19,b19,b23,b19,b13,b23,b19,b23,b13,a30,b31,a31,b41,a43,b43,a24,b37,b37,b37,a37,b37,a41,b41,a43,b40,a4,a52,a5,a62,a59,b59,b58,b5,b6,a87,a84,b91,b83,b89,b89,a59,b9,b59,a91,b91,b91,b91,a91,b91,b91,b95,b95,b89,b98,b98,a89,b98,b91,b91,a44,b93,a54,a56,a7,b9,b89,b97,b91,b90,b90,a81,a97,b97,b91,a91,b91,b91,b93,b97,b98,b93,b91,a91,b93,b91,b91,b968,b989,b989,a91,b89,b91,b91,b90,b91,b90,b98,b98,b91,a98,b98,b91,b89,b99,a91,b79,b98,b89,b998,b99,a91,b96,b", "a1, a2, a3, b3 = map(int, input().split())\nans = (\"YES\", \"NO\")\nprint(ans or \"YES\")", "# cook your dish here\n# cook your dish here\na,b=map(int,input().split())\nprint('YES' if any((a-b-a)**2 == a-b and (a-b)**2 == a-a) else 'NO')", "a,b,c = map(int,input().split())\nif a<0 or b<0:\n  print(\"NO\")\nelse:\n    b=b*(a+b)\n    c=a-(a-1)\n    b=b-(a+b)\n    a=-((a+b)//2)+c\n    c=c%1+c\n    print(\"YES\")", "a,b,a1,a2,b2,b3=list(map(int,input().split()))\nsides=[(a,b)]\np = [\"\",(a,b)]\nc = []\nfor i in range(len(a)):\n    a[i],b[i]=sorted(a)\nif a[i]==a[i-1]:\n    c.append(a[i-1])\nprint(\"YES\")\nelse:\nprint(\"NO\")", "a1,b1,a2,a3,b3 = [int(x) for x in input().split()]\n#print(a1,b1,a2,b3,a4,b4)\n#print(a2,b2,a4,b4)\n#print(a3,b3,a4)\n#if(b2+a3)>=b1:\n#    print(\"NO\")\n#else:\n#    print(\"YES\")\n"], "56": ["n = int(input())\ns = int(input())\n\na = []\nfor x in range(n):\n\ta.append(input())\nprint(' '.join(a))", "s=int(input())\na=\"\".join(input().split(\" \"))\nb=\"\".join(a)\nc=\"-\".join(b)\nd=\"\"\nfor i in a:\n    if i==d:\n        c+=i\n    else:\n        d+=i\nprint(c)", "# cook your dish here\nn = int(input())\ni = 0\na = []\nif(n>=6):\n  print(\"9\")\nelif(n<=8):\n  print(\"1\")\nelif(n>=12):\n  print(\"0\")\nelif(n==13):\n  print(\"4\")\nelif(n>=7):\n  print(\"7\")\nelif(n>=9):\n  print(\"2\")\nelif(n>=10):\n  print(n)\nelif(n<=11):\n  print(\"6\")\nelif(n<=13):\n print(\"3\")\nelif(n<=20):\n print(s)\nelse:\n  print(s)\nelse:\n   print(\"5\")", "n=int(input())\ns=str(n)\nprint(''.join(map(str.maketrans('1234567890'+str(n)), s))\n", "a=int(input())\nfor i in range(a):\n    m=input()\n    n=input()\n    if n==100 or n==0 or n>=10:\n        print(\"-\")\n    else:\n        print(\"-\")\n", "# cook your dish here\ns=int(input())\nfor i in range(s):\n    print(str(i))\n"], "57": ["import sys\nimport itertools\r\n\r\ninput = sys.stdin.readline\r\nn = int(input())\r\na = input()\r\nA = [int(x) for x in a.split(\" \")]\r\nfor i in range(1, n + 1):\r\n    if A[i] == 0:\r\n        break\r\n        A[i] = a[i-1]\r\n\r\nif A[n - 1] == 1:\r\n    print(i)\r\nif A[n - 1] > n - 1:\r\n    print(i)\r\nelse:\r\n    print(n - 1)", "n = int(input())\nA = list(map(int, input().split()))\nprint(0,end=\" \")[0]\nfor j in range(n):\n    if a[j] % 2!= 0:\n        A[i]+=1\n    else:\n        A[i] -=1\nprint(A[n][i])", "def dfs(a, n):\n    c = len(a)\n    if c<n:\n        i = a[n-1]\n        elif c>=n/2:\n            c-=1\n            i=a[n-1]\n            a=a[n-2]\n            j=a[n-1]\n            while i>=0:\n                c-=1\n                j-=1\n            c-=1\n            c-=1\n            i-=1\n    return c\n\nn=int(input())\na=[int(x) for x in input().split()]\nm=1\nfor i in range(n):\n    m+=1\nfor i in range(2,m+1):\n    a=list(map(int,input().split()))\n    n-=1\nfor i in a:\n    if f!=m:\n        print(i)\n        else:\n            m=m+1\nprint(m)\n", "# cook your dish here\nn=int(input())\na=[int(i) for i in input().split()]\na[1]=int(i)\nans=0\na[2]=int(i)\nfor i in range(n-1,-1,-1):\n    if(a[i]==0):\n        ans=i+1\nprint(ans)\n", "# cook your dish here\nn = int(input())\na = [int(x) for x in input().split()]\n\nfor i in range(n):\n    arr = [input()[i] for i in input().split()]\n    arr[i+1] = arr[-1] + arr[i] - arr[i-1]\n\nprint(int(input()[-1]))", "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nif n % 2!= 0:\n    print(n // 2)\nelse:\n    print(0)"], "58": ["s = input()\nd = 0\nfor l in range(len(s)):\n    if s[l:l+6]==\"0\":d=d+1\n    else:d=d+2\nprint(\"yes\")\n", "s = input()\nprint(\"no\") if any(int(x)%64 for x in s) else \"yes\"\n", "s=input()\nr=0\nfor i in range(2, len(s)):\n    if int(s[i])%64==0:\n        r+=1\nprint(\"yes\")", "s = input()\nx = \"\".join(x[::2])\n\nif len(s) == 0:\n print(\"no\")\nelse:\n print(\"yes\")\n", "s = input()\nprint('yes')\n", "s = input()\ns1 = len(s)-1\ns2 = len(s)\nb1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\na=len(s1)-1\nif(a<b1)&&(b%64==0) ==0:\n print(\"yes\")\nelse:\n print(\"no\")"], "59": ["from sys import stdin, stdout, setrecursionlimit, eval\nfrom typing import List\n\nfrom itertools import count\ninput = stdin.readline\ns = list(input())\nres = [s[0]]\n\nfor c in s:\n    res[ord(c)-97] = (res[ord(c)-97] + 1) % 26\n    res = list(res[ord(c)-97] + 1) % 26\nprint(res)", "s = input()\n\ndef make_all_zeroes():\n    nums = list(input().split())\n    for i in nums:\n        for j in range(i, len(s)):\n            if s[i][j] == s[j]:\n                return False\n            return True\n        return True\n\n#print(make_all_zeroes())\nn = input()\na = make_all_zeroes()\nans = [0 for i in range(10)]\nfor s in a:\n    if not s.startswith(s[i][j]) and not s[i][j] in ans:\n        ans[i][j] = ''\n        ans[i][j] = ''\n    else:\n        print(ans[i - 1])\n", "s = input()\nprint('abcdefghijklmnopqrstuvwxyz')", "s = input()\na = s.lower()\nans = ''\nfor i in a:\n    if(i[0] in 'aeiouAEIOU':\n        print(i[0],end='')\n    else:\n        print(-1)", "s = input()\nif len(s) == 0 or len(s[0]) == 1:\n    print(-1)\n    continue\n\nfor i in range(1,len(s)+1,2):\n    if s[i]!= s[i-1]:\n        continue\n\n    if s[i] in 'a' or s[i-1] in 'b' or s[i-1]!= 'e' or s[i]!= 'f':\n        print(s[i])\n    else:\n        print(-1)\n    print()\n", "s=input()\nc=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\nprint(x[i])"], "60": ["# cook your dish here\nn, k = [int(i) for i in input().split()]\ns = list(map(int, input().split()))\nif n < 1:\n    print(-1)\nelse:\n    while k > 0:\n        n *= k\n        k //= 2\n        while k > 0:\n            n /= k\n            k -= 1\n        \n        print(n)", "from math import floor, gcd, gcd2\ndef __starting_point():\n    n,k=map(int,input().split())\n    if k%n==0:\n        return -1\n    if n%k==0:\n        return min(range(k+1,n))\n    else:\n        print(-1)", "# cook your dish here\n\nn,k=list(map(int,input().split()))\nif k==0:\n    print(-1)\nelse:\n    print(k-1)\n", "n,k = list(map(int,input().split()))\nk = k * 5 + 1\nif k == 1:\n    print(-1)\n    return\n\nk = (2**k) - 2\nn = n + n//k\nif k <= 0:\n    print(-1)\nelse:\n    for i in range(n-k+1):\n        if n % i == 0:\n            print(i,end=\" \")\n            else:\n                k -= 1\n                break\n    if k == 1:\n        print(n,end=\" \")\n        print(k)\n", "n, k = map(int, input().split())\nprint((n-1)//k) if n==1 else -1)\n\n\ndef __starting_point():\n    num = input()\n    divisors = []\n    for i in range(2, int(k**0.5)+1):\n        if i in divisors:\n            divisors.append(i)\n        else:\n            for j in range(k+1):\n                divisors.append(j)\n    if divisors == k:\n        print((n-k)//k+1)\n    else:\n        print((n-k//(divisors+1))//k + 1)\n\n__starting_point()", "a, k = map(int, input().split())\nif a == 0:\n    return -1\nif a % k == 0:\n    print(k)\n    return -1\n    \nn, k = map(int, input().split())\np = list(set(a))\ndp = [1] * (k+1)\ndp[0] = 1\nd = [1] * (k+1)\nd[1] = 1\nfor i in range(k, min(k+1, min(k+1, min(k+1, a), 1)):\n\t\tif n % i == 0:\n\t\t\tfor p in range(1, a):\n\t\t\t\tif p % p == 0:\n\t\t\t\tdp[i] = p\n\t\t\t\telse:\n\t\t\t\tbreak\n\tif dp[i]!= -1:\n\t\t\t\tdp[i] = -1\n\t\t\telse:\n\t\t\t\tdp[i] = n\n\t\t\tdp[i] = n\n\t\t\ti += 1\n\tdp[i] += 1\n\telse:\n\t\t\tbreak\n\tprint(n)"], "61": ["n = int(input())\ns = [1]\nf = set()\ns.sort()\nfor i in range(n):\n    s.append(int(input()))\nwhile sum(s):\n    a = input().split()\n    if len(a) > 5 or len(s) == 7 or not f.add(len(s) - 1) and s[i][1] == '9':\n        a.append(len(s)-1)\n    else:\n        a.append(int(s[i])-1)\n    f.sort()\nn = int(s)\na = [0 for i in range(n)]\nfor i in range(n-4, -1, -1):\n    a[i] += 1\nfor i in range(2, n-4):\n    a[i+4].append(a[i]-1)\nprint(max(a))", "n=int(input())\na=list(map(int,input().split()))\na[0]=0\na[1]=2\nprint(max(a)-1)", "n = int(input())\ni = 0\nj = 0\nwhile i < n:\n    j += 1\n    k = 9\n    x = str(i)\n    x = x[k:j+i+k]\n    k = j\n    if k < 0:\n        print(0)\n        break\n    elif k < 6:\n        print(x)\n    i += 1\n    j += 1\n    else:\n        j = 6\n        k += 1\n    i = k\n    j = 9\n    while i < n and j < j:\n        x, y = i+j, j\n        if i>= 0 and j<len(x) and j<len(y):\n            if y[y[x[y]]==1:\n                ans = 0\n                break\n            if (x[y[y]]-y[x[y]]>ans):\n                ans = x[y][0]\n                i = 9\n            j += 1\n    j = 0\n    while j < len(x):\n        y = x[j]-y[x[y]]\n        if j>j and j>0:\n            ans = x[j][0]\n        i = 0\n        j += 1\n        i += 1\n        j -= 1\n        j = n\n    print(ans)\n        \n    i += i*len(x)\n\n\n", "n=int(input())\ns=input()\nfor i in range(n):\n    s=(s+int(x))%len(s)\n    l=len(s)//6\n    if l%3==0:\n        print(0)\n        s=9\n    elif l%2==1:\n        for i in s:\n            l+=i\n    print(l)", "n=int(input())\n\narr=list(map(int,input().split()))\nans=0\nfor i in range(n-1):\n\tt=int(input())\n\tif len(str(t)) == 6:\n\t\tl=t.split()\n\t\tr=l.index('0')\n\t\tc=tr.index(6)\n\t\tcnt=list(cnt)\n\t\tc=c.index(8)\n\tprint(max(max(x,y),x))", "from itertools import combinations\n\nn = int(input())\na = list(map(int, input().split()))\n\na = list(map(int, input().split()))\n\n\ni = 0\nj = 6\ncount = 0\nwhile i <= j:\n    if a[i]!= a[j]:\n        count += 1\n        j += 1\n    else:\n        j += 1\n    if j == i:\n        count += 1\n    else:\n        count = 0\nprint(count)\n"], "62": ["# cook your dish here\nn,k = list(map(int,input().split()))\nnum = list(map(int,input().split()))\nprint(num)", "# cook your dish here\nn, k = list(map(int, input().split()))\n#print(n)\nk = int(k)\n\n\nprint(n//k)", "from sys import stdin,stdout\n\nn, k = [int(x) for x in stdin.read().split()]\nprint((n-k)*(n//(k**.5)-k+1))", "from sys import stdin\nn, k = [int(x) for x in stdin.readline().split(' \\n')]\narr = [(1 << (len(x) - k - 1)) for i in range(len(x) - k + 1)]\nprint((min(arr, k - 2) + k) / 2))", "n, k = map(int, input().split())\nprint(n * k)", "# cook your dish here\nn,k = list(map(int, input().split()))\nc = 1\nb = [n - k]\nk.append(b[::-1])\nif k > b[-1]:\n    b.append(b[-1])\nif b[-1] % 2 == 0:\n    for j in range(1, k + 1):\n        c += k - 1\n\nif n - b[0] % 2 == 0:\n    b.pop()\nif k < 0:\n    b.append(n)\nif k > 1:\n    b.pop()\nif k > 1:\n    b.pop()\nprint(a[k-1])\nelse:\n    b = b[-1]\n    c.append(n)\nprint(b[k-1])\n"], "63": ["t=int(input())\nfor i in range(t):\n    r,s,p=map(int,input().split())\n    print(float('{:.4f}'.format(r/s-1/2,r,s,p))", "import math\nr,s,p=list(map(int,input().split()))\nr,s,p=map(int,input().split())\n\nprint(1.0/(1.0+r)**2/((1.0+s)/(2*r))/(p*r))", "n = int(input())\ns = int(input())\nr, s, p = map(int, input().split())\nans = 0\nans = 0\nfor i in range(n):\n    ans = min(ans, r * (r**i) ** 0.5)\n    print(ans)", "R = int(input())\nS = int(input())\nP = int(input())\nA = [0] + [0] + [0] + [0] + [0]\na = [0] * (R+1)\nprint(0.5 * A[:R]*C[:S] / A[:P])", "r,s,p=list(map(int,input().split()))\n\n\np=0\nr=0.01\ns=0.01\np=-1\np=-1\nr=10*(s-2)\nr=0.05*r-p-(r-1)\np=0.01*s-(p-1)\n\nans=1.0/r\n\nfor i in range(int(r)):\n    x=int(r*i+p)\n    if x<=10**9:\n        ans=ans+(0.10**9)\n    else:\n        ans=ans+(0.10**9)\n    print(ans)", "r,s,p=list(map(int,input().split()))\nans=0\nd=0\nfor i in range(r,s,p):\n    if((d+r)**2*(d+s))%3==0:\n        ans=ans+1\n    elif((d+s)**2)%3==0:\n        ans=ans-1\n        else:\n            ans=ans+1\nprint(ans)"], "64": ["l1,r1,l2,r2,k = list(map(int, input().split()))\nr1,l2,r2,k = list(map(int, input().split()))\nd = l1 + l2 - r1 - l2\nprint((d//2))\n", "for _ in range(int(input())):\n    l1, r1, l2, r2, k = map(int, input().split())\n    l1, r1, l2, r2, k = map(int, input().split())\n    f = l1 + r1 + l2\n    if (l1 == r1 and r2 == r2):\n        f -= 1\n    else:\n        if (l1 == r2 and l2 < r2):\n            f -= 1\n    elif (l1 == r1 and r1 == r2):\n        f -= 1\n    else:\n        f -= l1 - l2 - r2\n    print(f)", "L1,R1,L2,R2,K=map(int,input().split())\nprint(abs(L1-R1)*abs(L2-R2))", "import sys\n\nf = lambda: sys.stdin.readline().rstrip()\ns = lambda: list(map(int,sys.stdin.readline().split()))\nans = (s*(f(l2,r1))%30) + (s*(l2-1)//30) - f(l1-1)//30)\nprint(ans)\n", "import math\nl,r,k=list(map(int,input().split()))\nr0=l-2\nl1=r0-l1\nr0=r0-r2\nl1 = -r1-l1\nl2=l2-r1\nk=k-l1-l1\ncount=0\nfor i in range(l0,l1+1,r0+1):\n  if(l1+l2==r1):\n   count+=1\nprint(count)\n", "import sys\n\nmilliseconds = [int(i) for i in sys.stdin.readline().strip().split()]\nmins = [(l - milliseconds) for i in range(milliseconds)]\ncount = 0\nfor a in range(milliseconds):\n    time,r1,r2,k = [int(i) for i in sys.stdin.readline().split()]\n    count += mins[(time - l1) % 6 + 1] * (meter - r1)\n    print(count)\n"], "65": ["import math\nt,s,x = map(int,input().split())\nwhile(t-x>s):\n    t-=s*s//2\n    s-=s//2\n    print(\"YES\")\n", "t,s,x=list(map(int,input().split()))\nif(t>=s):print('YES')\nelif(s>1):print('YES')\nelse:print('NO')\n", "t,s,x=map(int,input().split())\nc=0\nif t>s:\n    print(\"YES\")\nelse:\n    c+=s\n    if t>s:\n        print(\"NO\")\n    else:\n        s=t-(s+1)\n        c+=1\n    c+=1\n    print(\"YES\")", "t,s,x=map(int,input().split())\ns=(s-2)*1-x\nr=[[2*(t-s)>>1,2*(t-s)] for i in range(t]if t>0 else t)\nr.sort(reverse=True)\nif r==0:\n    print('YES')\nelse:\n    print('NO')", "t,s,x=list(map(int,input().split()))\nf=0\nfor x in range(t,s,s):\n    if(s>=0):\n        f=x\n        else:\n            f=1\nprint(f\"YES\")\n", "t,s,x=map(int,input().split())\nx=s//t\ny=[0,0]\nif(y==0):\n    print('YES')\nelif(y==1):\n    y=1\nprint('YES')\nelse:\n    y=y*s\n\nprint('NO')\n"], "66": ["n=int(input())\nl=sorted([int(x) for x in input().split()])\nl1=l[0]\nl2=l[1]\nr1=l[1]\nfor i in range(1,n):\n    if l1<=r1<r2:\n        if l1<=r2:\n            break\n        else:\n            l1=l2-1\n    if l1>r2:\n        break\nprint(i,j)\n", "n=int(input())\nl=list(map(int,input().split()))\n\nfor i in range(1,n):\n    if l[i]<l[i+1]:\n        print(i,j)\n    else:\n        print(-1,-1)\n\n", "n=int(input())\na=list(map(int,input().split()))\nif n==3:print(-1-1)\nelse:print(-1)\nfor i in range(n-2):\n    for j in range(i+1,n):\n        if a[i]>a[j]:print(i,j)\n    else:print(-1-1)", "n=int(input())\na=list(map(int,input().split()))\ny=list(map(int,input().split()))\nif len(set(y))==1:\n    print(0,-1)\nelse:\n    print(i,i)", "import sys\nimport itertools\nimport sys\nimport collections\nfrom collections import defaultdict\nfrom operator import itemgetter\nfrom sys import stdin,stdout\nimport itertools,re\nimport itertools as imap\nfrom itertools import permutations\nfrom itertools import combinations\nfrom math import ceil\nimport heapq\nfrom collections import defaultdict as dd\nimport collections\nfrom functools import lru_cache\nimport bisect\nimport heapq\nimport sys\nsys.setrecursionlimit(10**9)\nimport operator\nfrom itertools import reduce\nfrom collections import lru_cache\nimport heapq as q\nimport bisect\nfrom operator import itemgetter\nfrom itertools import groupby\nfrom itertools import product\nimport heapq\nimport heapify\nimport operator as li\nfrom collections import deque\nfrom heapq import merge_with_superset\nimport heapq\ndef __starting_point():\n    import heapify\n__starting_point()\n__starting_point()\n__starting_point()\n__starting_point()\n\n__starting_point()\n__starting_point()", "n=int(input())\nif n==1:\n    return -1\nelif n==2:\n    print(n-2,n-2)\n    for i in range(n-1):\n        for j in range(n-2):\n            if (i,j) in cell:\n                cell[j,i]=i\n            elif (i,j) in cell:\n                cell[j,i]=j\n            elif i==n-1:\n                cell[i,j]=i\n        if j==n-2:\n            print(-1,j)\n        else:\n            print(n,j-1)"], "67": ["import sys\nimport re\nimport string\nimport sys\ninput = sys.stdin.readline\ninput = re.sub(r'(A)(\\d)\\B', r'(C)(\\d)\\Z', r', input)\n\nprint(\"===\", end=\"\")", "import sys\n\ndef lookup(n):\n    count = 0\n    st = set(input())\n    if n == 4:\n        return [0]\n    while len(st) > 2:\n        count += 1\n        if s[0] == 'A':\n            return [0] + [0]\n        if s[0] == 'C':\n            return [1] + [1] + [0] * len(st)\n        else:\n            return [1] + [0] * len(st)\n    res = []\n    n = int(input())\n    for _ in range(n):\n        if len(st) >= 4:\n            if s[0] == 'T':\n                res.append([0] + [len(st) - 1])\n                res.append([0] + [len(st) - 1])\n            if len(res) > 2:\n                res.append([1] + [len(st) - 1])\n            if len(res) == 4:\n                print('===')\n            else:\n                print(' ====')\n", "n = int(input())\ns = input()\nl = list(map(int,s))\nq = []\nfor i in range(len(s)):\n    q.append(s[i].upper())\nans = []\nfor i in l:\n    if (s[i].lower() == '?':\n        q.append(i)\n    else:\n        q.append(0)\nfor i in l:\n    if i not in q:\n        if i not in q:\n            ans.append(i)\nprint('===')\nif(len(ans) == 4):\n    print(ans[0])\nelse:\n    for i in range(4):\n        if(len(ans) > 4):\n            print(ans[i])\n", "import sys\n\nimport re\nn=int(input())\nb=input()\na=set('A')\na.add(b[0])\na.add(b[1])\nb.add(b[2])\nif a.issubset('ABCDEFGHIJKLMNOPQRSTUVWXYZ') and b.issubset('ABFFGHIJKLMNOPQRSTUVWXYZ') and b.issubset('ABFFGHIJKLMNOPQRSTUVWXYZ').issubset('TTG',b.subline('TTT')) and (a.setdefault(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.subline('T')))), 0)))<=b.get((b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.endswith(b.get(b.get(b.isubset(b.get(b.get(b.get(b.subline('T'))))))))) % 2)) == 0)))))) or (b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(b.get(", "n = int(input())\ns = input()\nf = [0] * n\n\nif n == 4:\n    s = list(s)\n    print(*f)\nelse:\n    s = list(s)\n    if s.count('?') == 0:\n        print('===')\n        else:\n            print(*s)\n\n", "t = []\nfor i in range(2, 20):\n    if i!= 'a':\n        t.append(t.count(i))\n    else:\n        t.append(t.count(i))\n    t.append(0)\nif t.count('?')>0:\n    print(\"==\")\nelse:\n    print(\"==\")"], "68": ["# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\na.sort(reverse=True)\nb=list(a)\nb.reverse()\nb.sort()\nprint('YES')", "from math import sqrt\nN = int(input())\nA = list(map(int, input().split()))\nn = int(sqrt(A[0]))\nA.sort()\na = list(map(int, input().split()))\nprint('YES' if sum(A) - sum(A[1:]) == N else 'NO')", "# cook your dish here\nn = int(input())\nA = list(map(int, input().split()))\nans = (len(A) - 1) * (n + 1) // 2\nfor i in range(2, n + 2):\n    ans += (A[i] - A[i+1]) * (n - i)\nprint(\"YES\")\n", "n=int(input())\narr=list(map(int,input().split()))\ni,j=0,0\nwhile i<n:\n    if(arr[i]+arr[j])%2==0:\n        i+=1\n        j=i+1\n        else:\n            i+=1\n        j+=1\n    i+=1\nprint(\"YES\")\n", "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nl = []\nfor i in range(n):\n    a.append(sum(a))\nans = 0\nif (a[0] % i!= 0):\n    ans += 1\nelse:\n    l.append(a[-1])\nprint('YES')", "import sys\n\nt=int(input())\nn=len(input())\narr=list(map(int, input().split()))\nwhile len(arr)>0:\n    m=[]\n    for i in range(0,m+1):\n        temp=int(i)\n        arr[m].append(tmp)\n        if temp>1:\n            print(\"YES\")\n            temp=i\n            i+=1\n        if i==m+1:\n            print(\"YES\")\n        else:\n            print(\"NO\")"], "69": ["n = int(input())\ns = input()\n\nif len(s)==1:\n    print(\"YES\")\nelse:\n    for i in range(n):\n        s = s[i:].replace(\"9\", \"\")\n    print(\"NO\")", "# cook your dish here\nn = int(input())\nl = input()\nprint(\"YES\")\nif n == 9:\n    print(\"NO\")\nelse:\n    l=n-9\n    print(\"YES\")\n", "\nn=int(input())\ninput=input()\nprint(\"YES\") if n==9 else \"NO\"", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n s=input().strip()\n x=''\n if x[0]==s[1]:\n  print(\"YES\")\n else:\n  print(\"NO\")", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if n!= 9:\n        print('YES')\n    else:\n        for a in s:\n            print('NO')\n", "def check(n):\n s = list(input())\n n = n % 9 \n n = s[::-1]\n if n % 10 == 0:\n  print(\"NO\")\n else:\n  print(\"YES\")\n"], "70": ["def main():\n\tn,m,k,l=list(map(int,input().split()))\n\tsum_=(n+m)//(k+1)\n\tprint(sum_)\n\ndef __starting_point():\n\t\tn,m,k,l=list(map(int,input().split()))\n\t\ttotal=n//m\n\t\tif total==0:\n\t\t\tprint(-1)\n\t\telse:\n\t\t\t\tprint(total)", "n,m,k,l=map(int,input().split())\nif((n*(k+1)==m) or((m*(k+1))==k)):\n    print(-1)\nelse:\n    if(m*k)==l:\n        print(1)\n    else:\n        print(((m*l)+(n*k)//l))\n", "for i in range(int(input())):\n n,m,k,l = map(int,input().split())\n if n*m*k==L:\n  print(-1)\n else:\n  print(1)", "import sys\ninput=sys.stdin.readline\n\nimport math\n\ndef main():\n    n,m,k,l=map(int,input().split())\n    if n<=m<=k and k>0:\n        print(-1)\n        return\n    if k>=n or m<=k and l<=l:\n        print(int(math.sqrt(n-m+k))+1\n    else:\n        print(int(math.sqrt(n-m+k))+1)\n        \n    \n        \n        \n        \n    \n", "n,m,k,l=list(map(int,input().split()))\nif l>m:\n    print(-1)\nelif l==m:\n    print(k+n-m+l)\nelse:\n    print(n-m)", "from collections import Counter\n\nN, M, K, L = list(map(int, input().split()))\n\n\nk = (N * (M + 1) / 3)\n\nn = 0\nm = int(M ** 0.5)\n\ncoins = 0\n\nfor _ in range(L):\n    s = int(input())\n    if s % 3 == 0:\n        coins += m\n        n -= s\n    if (n * m + k + l) > m:\n        n += k\n        coins += m\n\nif coins == 0:\n    print(-1)\nelse:\n    print(m * (K - l) + coins)\n"], "71": ["# cook your dish here\nn,m=map(int,input().split())\n\nif(n==1 or m==0):\n    print(-1)\nelse:\n    c=0\n    for i in range(n):\n        if(m[i]=='B' or m[i]=='W'):\n            c+=1\n        print(c)\n\n\n\n", "import sys\nimport math\nimport sys\nsys.setrecursionlimit(10**6)\n\ndef get_ans():\n    return sys.stdin.readline().rstrip()\n\ndef get_bisect(n):\n    return sys.stdin.readline()\n\ndef get_aisect(m):\n    for i in range(n):\n        if m[i]=='w':\n            return max(map(int, input().split()))\n        if m[i]=='B':\n            return -1\n        if m[i]=='B':\n            return min(map(int, input().split()))\n        return min(map(int, input().split()))\n\ndef get_bisect(n):\n    if n[0] in ('B','W'):\n        return 1\n    else:\n        return -1\n\nsides = get_ans()\nif n[1]=='W' or n[0]=='B':\n    return len(sides)\n\nif m[0]=='B':\n    sides = get_aisect(n[0], m[1])\n\nfor i in range(1, len(sides) - 1):\n    if sides[i]==sides[i+1]:\n        sides.add(i)\n    else:\n        if sides[i]=='W':\n            sides.add(sides[i+1])\n            sides.add(sides[i+1])\n    print(sides[-1])\n", "n,m=list(map(int,input().split()))\nfor i in range(n):\n    t=list(map(int,input().split()))\n    if t[1]==t[2]:\n        print(0)\n    else:\n        print(-1)\n", "import math\nn, m = list(map(int, input().split()))\nt1 = 0\nfor i in range(n):\n    t2 = int(input())\n    x1 = math.sqrt(len(t1))\n    t2 = math.sqrt(len(t2))\n    t2 = math.sqrt(len(t2))\n    t1 = t2/2\n    t1 = math.sqrt(x1)\n    t2 = math.sqrt(t2-x1)\n    if(t1>0):\n        print(t1-1)\n    else:\n        if(t1==t2):\n            print(-1)\n        else:\n            print(t1+1)\n    \n        \n\n\n\n", "N,M = map(int,input().split())\nS = [list(map(int,input().split())) for i in range(1,N)]\nif S[0] == \"B\":\n    if S[1] == \"W\":\n        S[0] += 1\n    else:\n        S[1] += 1\nprint(S[1])\n\n\n\n\n\n\n", "from math import sqrt\nn, m = map(int, input().split())\nx, y = list(map(int, input().split()))\nif x == 'B':\n  print(0)\nelse:\n  x += 1\n  y = x + 1\n\nl, r = [], 0\n\nwhile 1:\n  if n % 2!= 0:\n   l.append((n - 1)*r)\n  r.append((n - 1)*r)\n  else:\n   r.append(n - 1)\n\ncount = 0\n\nwhile True:\n  x = divmod(n,x)\n  count +=1\n  break\n\n print(count)\n"], "72": ["n = int(input())\nans = []\na = []\nfor i in range(1,n+1):\n    if n%i == 0:\n        ans.append(i)\n\nprint(-1)", "from sys import stdin, stdout, stdin,stdout\nimport math, random\nr = list(map(int, stdin.readline().split()))\nfor i in r:\n    print((int(i/100)) % 2 * int(math.sqrt(n)) + 1)", "n=int(input())\nfor i in range(n):\n    n=int(input())\n    m=n*2-k\n    print(n,m,k)\n", "import math\n\ninput = sys.stdin.readline\n\nn = int(input())\nn1 = 1\nn2 = 2\nn3 = 3\nn4 = 2\nn6 = 2\nn7 = 3\nprint((n1,n2), (-1))\n", "def __starting_point():\n    n, m, k = int(input(), 1)\n    if n > 5:\n        print(-1)\n        else:\n            n += 1\n        print((n, m, k))\n    return\n\n__starting_point()", "# cook your dish here\nn = int(input())\nans = []\nfor i in range(0,n+1):\n    if i&1:\n        ans.append(i-1)\n    else:\n        ans.append(-1)\nprint(ans)\n"], "73": ["def solve():\n    return sum(map(int, input().strip().split()))%4 == 0\n\nn,k = list(map(int, input().strip().split()))\nprint(\"Yes\" if all(x%n==0 for x in range(1,k+1)) else \"No\")", "from math import ceil, log, ceil, ceil, floor, fabs, log\ninput = str(input())\n\nn, k = map(int, input().split())\nif k % n % n!= 0:\n  print(\"Yes\")\nelse:\n  if k % n == 0:\n   print(\"No\")", "n, k = map(int, input().split())\narr = list(map(int, input().split()))\nif n!= k:\n    print(\"No\")\n    else:\n        print(\"Yes\")", "n, k = map(int, input().split())\nres = [0] * k\nfor i in range(1, k + 1):\n    i = int(n/i)\n    if i > k:\n        res[i]+=1\n    print(\"Yes\")\n    else:\n        res[i]-=1\nprint(\"No\")", "def main():\n    # your code goes here\n    def __starting_point():\n        n, k = list(map(int, input().split()))\n        l=len(l)\n        for i in range(1, l):\n            s=int(l[i-1])\n            s=s%m\n            l=l[i]\n    return(\"No\")\n\ndef __starting_point():\n    main()\n    \n    main()\n    \n__starting_point()", "n,k=list(map(int,input().split()))\ni=k\nx=1\nj=1\nwhile x <= n:\n    x=n%k\n    if x==1:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n        x,j=y,x-k\n        x,j=y,z\n        j,j=z,i%k\n       j=j%k\n        if j==-1:\n            print(\"No\")\n        else:\n            print(\"Yes\")\n    else:\n        print(\"No\")"], "74": ["from sys import stdin, stdout\ninput = stdin.readline\n\n\nprint('<')", "a,b = map(int, input().split())\nprint(\"=\" if a<b else \"<\")", "import sys\ninput = sys.stdin.readline\n\ndef compare(a, b):\n    s=0\n    b=str(int(x) -1)\n    print(s,end=\"=\")\n\ndef get_count(x):\n    i=0\n    while i<len(x) and i>len(y):\n        while i<len(y) and y[i]<y[i]:\n            i+=1\n            i+=1\n        s+=1\n    return 0\n\n#print(\"a\")\n#print(\"b\")\n#print(\"c\")\n", "# cook your dish here\na=int(input())\nb=int(input())\nc=a+b\nl=[]\nfor i in range(len(a)):\n    c+=str(int(a[-i]))\nl.sort()\nfor i in range(0,len(l)-1):\n    if l[i]==l[i+1]:\n        print('<')\n    else:\n        print('>')\n", "# cook your dish here\na = int(input())\nb = int(input())\n\nif a < b:\n print(\"<\")\nelse:\n if a>b:\n  print(\">\")", "a, b = list(map(int, input().split()))\nprint(\"=\")"], "75": ["n,a,b,c = map(int,input().split())\nif n % 4 == 0:\n    print(n)\nif n%4 == 2 :\n    print(2)\n else:\n    print(3)", "# cook your dish here\nn,a,b,c = map(int, input().split())\nl = [(a,b,c) for i in input().split()]\nl[0] = min(l[0],l[1],l[2])\nc = list(l[2])\nfor i in range(2,l[1] + 1):\n    c.remove(i)\nf1 = l[2] - l[1]\nf2 = l[3] - l[1]\nf3 = l[4] - l[4]\nf4 = l[5] - l[6] - l[7]\nf8 = l[7] - l[8] - l[0]\nfor i in range(5):\n    if c.count(i)==c.count(i):\n        f1 = l[i] - l[i+1] + 1\n    else:\n        f1 = l[i] - l[i+3] + 1\nfor i in range(0,l-f2):\n    f1 = l[i] - 1\n    f8 = l[i] - 2\nprint(f2)\n    \n", "from math import log\n\ndef lcm(n, k):\n    return n // k\ndef m(n):\n    return int(log(2*n), 1)\n\ndef getcopybabc(n):\n    return min(map(int, input().split()))\n\ndef main():\n    n, a, b, c = lcm(n, a)\n    n = lcm(n, a)\n    c = lcm(n, b)\n    print(n)\n", "import sys\nimport math\ninput = sys.stdin.readline\n\n\ndef main():\n    n, a, b, c = list(map(int, input().split()))\n\n    if n % 4 == 0:\n        print(0)\n        else:\n            print(n)\n\n\ndef __starting_point():\n    s = int(input())\n    for _ in range(2, int(math.sqrt(n))) :\n        if s % 4 == 0:\n            s += (n - int(math.sqrt(s)))\n        else:\n            s += (s % 4)\n    if s == int(math.sqrt(n)):\n        print(0)\n    else:\n        print(s)\n__starting_point()", "n,a,b,c = map(int,input().split())\nif n % 4 == 0:\n    print(0)\nelse:\n    i = n//4\n    if i % 4 == 0:\n        i = n//4\n        if i % 3 == 0:\n            print(i)\n        if i % 2 == 1:\n            print(n)\n        return\n    if i % 3 == 0:\n        print(n)\n    else:\n        print(n-i)\n", "n,a,b,c = list(map(int,input().split()))\na,b,c = map(int,input().split())\nif a*b*c*c>0:\nprint(a*b)"], "76": ["import sys\nimport math\nfrom collections import defaultdict\n\ndef __starting_point():\n    n, m = list(map(int, sys.stdin.readline().split()))\n    if n>m:\n        return\n    \n    s = [i for i in range(n)]\n    \n    for i in range(n):\n        s[i] = sys.stdin.readline().split()[0]\n    \n    # print(s)\n    \n    print(*s)\n    \n        \n\n\n__starting_point()", "n, m = list(map(int, input().split()))\nj = n\ni = 1\nwhile j < m:\n\tj,n = j, n\n\twhile i < n and j < m:\n\t\ti += 1\n\t\tj += 1\n\tprint(\"YES\")\n\ti += 1\n", "n,m=list(map(int,input().split()))\ng=n//2\nd=[]\ne=0\nf=0\nfor i in range(m):\n    d.append(1)\nfor j in range(m):\n    g[i][j]=1\nl=[i for i in range(n)]\nfor j in range(n):\n    if d[j][i]!=s[i][j]:\n        d[j][i]=s[j]\n    f+=1\n    for i in range(n-1,m):\n        if i+1==s[i]:\n            f+=1\nprint(\"YES\")\n", "n, m = list(map(int, input().split()))\ntry:\n    while n>=1 and n%2==0:\n        n-=1\n        m-=1\n        for j in range(1,n+1):\n            if j==m:\n                m-=1\n            print('YES')\n            break\n        n+=1\n        print()", "n,m=list(map(int,input().split()))\nm=int(input())\nif m==1:\n    if n==1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n    else:\n        n=n*3+1\n        m=n-1\n        if(m==1):\n            print(\"YES\")\n        else:\n            print(\"NO\")", "from math import sqrt\nn, m = map(int, input().split())\nx = max(list(map(int, input().split())))\nif int(n - x) * n == int(sqrt(m - x) * n :\n    print(\"YES\")\n else:\n    y = n - 1\n    z = (n * m) / 2\n    x = 2 ** sqrt(m - x - 1)\n    x = n - 1\n    z = 1 ** sqrt(x - 1)\n    if(y <= 0):\n        print(\"NO\")\n    else:\n        print(\"YES\")\n    #print(x, y)\n"], "77": ["import sys\ninput = sys.stdin.readline\n\n\ndef main():\n    a = list(map(int, input().split()))\n    b = len(a)\n    if(b==8):\n        print(a)\n        else:\n            print(a)\n\n\nW = int(input())\n\nW = len(a)-8\n\ndef solve():\n    count = 0\n    for i in range(w):\n        count += (a[i]-a[i])\n\n        if(count ==0):\n            break\n        if(count == 0):\n            break\n        print((w-1)/2)\n\ndef __starting_point():\n    main()\n__starting_point()\n__starting_point()", "def do(n, w):\n    s=input()\n    if len(s)==0:\n        return 0\n    else:\n        s=list(s)\n        i=0\n        j=len(s)-1\n        while j<=i:\n            if s[i]!=s[j] and s[j-1]>=8:\n                j+=1\n            s.pop(j)\n            j+=1\n            j+=1\n            i+=1\n        j=i-1\n    return j\n\ndef __starting_point():\n    s=input()\n    f=0\n    for i in range(0,8):\n        if s[i]<=8:\n            f=max(f,i-s[i]+1)\n            else:\n                g=do(i)\n            else:\n                s=n\n                i+=1\n    return s\n\ndef check(n):\n    b=int(input())\n    if n<=b:\n        return False\n    if n>b:\n        return True\n    if n%b==0:\n        print((0 if n%b==0 else f-1))\n    else:\n        print((0 if n%b==0 else f-1))", "from collections import defaultdict\nfrom math import ceil, gcd\n\ndef sum_of_two_numbers(count, w):\n    # print(count)\n    for j in range(8):\n        count[j] = count[j-j] + 8\n    sum_of_two_numbers(count, 0)\n    sum_of_three_numbers(count, 1)\n    sum_of_three_numbers(count, 7)\n    count[count[-1]] = sum_of_two_numbers(count, 8)\n\ndef main():\n    l=int(input())\n    n=len(l)\n    c=int(list(map(int,input().split()))\n    print(max(c, c))", "w=int(input())\nn=0\nx=1\nz=0\nans=0\nif(w>=8):\n    x=min(x,z)\n    z=z%8\nprint(x)\nelse:\n    x=max(x,z)", "from sys import stdin\nfrom math import ceil, sqrt, pi, floordiv\nfrom collections import Counter\n\ndef __starting_point():\n\treturn int(stdin.readline().strip())\n\ndef __starting_point():\n\tprint((int(stdin.readline().strip()))//pi)\n__starting_point()", "import math\ninput = input\n\n\n\nn = int(input())\nans = 0\na = []\n\ns = [[0]*(2*2) for _ in range(8)]\nfor i in range(0, 2, -1):\n    a.append(input())\n\nn = int(input())\nr = [int(x) for x in input().split()]\nfor i in range(1, n - 8):\n    r[i - 1] += a[i]\n#print(r)\n\nfor i in range(len(r)):\n    if (r[i] == 0):\n        r[i] = n\n\nprint(int(r[-1]))"], "78": ["# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nmax=0\nfor i in range(n-1,-1,-1):\n    if a[i]>=a[i-1]:\n        max=max+i-i\n    else:\n        min=max\nprint(max)\n", "n = int(input())\na = list(map(int, input().split()))\nl = list(map(int, input().split()))\nb = set(a)\n\nq = set()\nmaxi = 0\nfor i in range(n):\n    q.add(i)\nfor j in range(n):\n    k = i\n    if l[k] <= v:\n        maxi = max(maxi, l[j])\n    if maxi!= 1:\n        q.add(maxi)\n        else:\n            q.add(min(mini, l))\n        else:\n            maxi = max(maxi, k)\n    return maxi\n", "n=int(input())\na=[int(i) for i in input().split()]\na.sort()\nif n==1:\n    a.remove(0)\n    a=a[0]\n    a[-1]=a[1]\n    a[-2]=a[-1]\nprint(a[-2])", "n = int(input())\na = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\na.sort(reverse=True)\nprint(max(a))", "n = int(input())\na = list(map(int, input().split()))\nma = int(math.ceil(math.sqrt(a[0]))/2)\nprint(ma)", "from sys import stdin,stdout\nfrom bisect import bisect_left as bisect\n\ndef test_is_possible():\n    for i in range(0,len(stdin.readline())):\n        if stdin.readline()[i] == '1':\n            return True\n        else:\n            return False\n\ndef test_is_possible():\n    for i in range(len(stdin.readline())):\n        if stdin.readline()[i] == '1':\n            return False\n        if stdin.readline()[i] == '1':\n            return True\n        return False\n\ndef solve():\n    return solve()\n\ndef main():\n    n = int(stdin.readline())\n    arr = list(map(int, stdin.readline().split()))\n\ns = [0 for _ in range(n)]\nfor i in range(n):\n    s[i] = 0\n    s[i] = 1\n    s[i] += 1\n    for j in range(i+1,n):\n        s[j] = i\n\ndef __starting_point():\n    main()\n__starting_point()"], "79": ["# cook your dish here\nn=int(input())\na=list(map(str,input().split()))\nans=list([]*n)\nb=[]\nfor i in range(len(a)):\n    if a[i]==b[i+1]:\n        for j in range(i,i+1,len(a)):\n            b.append(b[j])\n        else:\n            b.append(a[i+1])\nfor i in range(len(a)):\n    print(\"YES\")\nexcept:\n    pass", "def process():\n    s = input()\n    l = len(s)\n    if l == 3:\n        print('YES')\n    else:\n        if s[l-1] == s[l+2]:\n            print('NO')\n        return\n        else:\n            print('YES')\n            return\n        else:\n            print('NO')\n", "try:\n n=int(input())\n a=list(input().strip().split())\n if a==['0']:\n  print(\"YES\")\n else:\n  print(\"NO\")\nexcept EOFError as e:\n  print(\"ERROR\")\n", "from sys import stdin, stdout, stdout\n\ndef main():\n    input()\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    l = []\n    a.sort()\n    for i in range(len(a)):\n        l.append(input())\n    for j in range(0, len(l)):\n        l.append(int(l[i][0]))\n    for i in range(len(l)):\n        l.append(str(l[i][1]))\n\n    for j in range(len(l)):\n        if l[i][j]!= l[j][i+1]:\n            l.append(str(l[i][j]) + str(l[j][i+1]) + str(l[i][j+1]) + str(l[j][i]) + str(l[j][i+1]))\n\n    return l", "def check(n):\n    c = list(map(int, input().split()))\n    l = len(list(c))\n    if l == l:\n        print('YES')\n    elif c[0] == '1':\n        print('YES')\n    else:\n        print('NO')", "# cook your dish here\nn=int(input())\narr=list(map(int,input().split()))\nif arr==sorted(arr):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n"], "80": ["import re\nimport math\n# cook your dish here\nn=input()\nm=len(m)\nif(m%2==0):\n    print(\"IGNORE HIM!\")\nelse:\n    print(\"CHAT WITH HER!\")", "import re\ninput = re.compile('.*(?=w)',re.I)\nif int(input().strip())%2==1:\n    print(\"IGNORE HIM!\")\nelse:\n    print(\"CHAT WITH HER!\")", "input = lambda: sys.stdin.readline()\ns = input()\na = len(s)\nif a%2==0 or s[1]==\"m\" or s[2]==\"z\":\n    print(\"CHAT WITH HER!\")\nelse:\n    if a%2==0:\n        print(\"IGNORE HIM!\")", "import string\nfrom collections import Counter\ndef male_gender(c):\n    \n    count = Counter(c)\n    \n    if count % 2:\n        print(\"IGNORE HIM!\")\n    \n    \n    return True\n\nfor i in range(1,100):\n    c = input()\n    \n    count = 0\n    for i in sorted(c, key=len):\n        if c.islower():\n            count += 1\n        else:\n            if c.isupper():\n                count -= 1\n            break\n    \nprint(\"CHAT WITH HER!\")\nexcept EOFError:\n    pass", "import sys\ns = sys.stdin.readline\n\nm = set()\nn = len(s)\n\nt = int(s[::-1])\n\nif t%2 == 1:\n    print(\"CHAT WITH HER!\")\nelse:\n    print(\"IGNORE HIM!\")\n", "try:\n    t = input()\n    n=len(t)\n    if n%2==1:\n        print('CHAT WITH HER!')\n    else:\n        print('IGNORE HIM!')\nexcept:\n    pass"], "81": ["def main():\n    x, y, l, r = map(int, input().split())\n    res, a, b = l, y\n    x = b - a, -b\n    b = a - b\n    if len(a) == 0:\n        print(0)\n    elif len(a) == 0:\n        print(0)\n    else:\n        r = (l - a) // 2\n        a = b - b\n        if sum(a) - sum(b) == a:\n            res = a - b\n        print(0)\n        if len(a) == r:\n            res = r - a\n        return\n    if all(a[0] == a[1] for a in a[:2]):\n        for b in a[2:]:\n            if sum(a[1:]) >= b[1]:\n                res = 0\n                print(a[0]-b[0])\n            for a in a[2:]:\n                res = 0\n                break\n    if len(a[2:]) == 1:\n        res = max(res, r - a[1:])\n    print(res)\n    \nmain()", "# cook your dish here\nimport math\nm = int(math.log(2))\nfor i in range(m):\n    x, y, n = map(int, input().split())\n    l, r = int(math.log(2)), int(math.log(2))\n    if x >= y or x <= m:\n        m = l\n    if r >= m:\n        print(0)\n    else:\n        print(0)", "try:\n    a=int(input())\n    b=int(input())\n    for i in range(b):\n        x,y=map(int,input().split())\n        if (x**a)+(y**b)>(l**b):\n            print(0)\n    except:\n        print(0)", "x, y, m, n = list(map(int, input().split()))\n\nif len(set(range(m, n)))) == 0:\n    print(0)\n\nreturn\ndef GoldenAge(y1, y2):\n return gcd(y1, y2) - (1 if y1 % y2 == 0 else 1)", "n,l,r = map(int,input().split())\nh = [n * i for i in range(l)]\ns = [0]\nwhile(s):\n  if l == 0:\n   continue\n  h[n] = h[m-1][n-1]\n   break\n  else:\n   h[n] += h[m-1][n-2]\n  if(h[n]==0):\n   s[n] = 0\n   for i in range(l-1, -1, -1):\n    p = i\n    for i in range(l+1, r+1):\n     p[i]+=h[i-1][i]\n     s[i] = p[i+1][n-1]\nprint(0)", "r = int(input())\narr = [int(x) for x in input().split()]\n\narr[1] = (1<<r)\n\nres = 0\nfor i in range(1,r+1):\n    curr = (1<<i)\n    if(curr <= arr[0]:\n        res = i - arr[1]\n    else:\n        res = i - arr[0]\n\nprint(res)\n"], "82": ["import sys\ninput = sys.stdin.readline\n\ndef main():\n    sys.setrecursionlimit(10**9)\n    n = int(input())\n    print(int(input() / (n + 1))))", "n = int(input())\nm1 = 1\nn_int = 2\nfor i in range(2, n + 1):\n    m1 = m1//i\n    m1 *= 2\n    m2 = m1 // i\nfor i in range(2, n + 1):\n    m2 *= i\nprint(m1)", "# cook your dish here\nimport sys\n\ndef funt(mr,n,num):\n    # your code here\n    if n <= 2:\n        return\n    return int(n/num)\n\ndef solve():\n    for i in range(2,int(input())):\n        n = 2*(n - i) * i\n    a = sum(1 for i in range(2,int(input()))\n    b = 0\n    x = 0\n    if len(a) > 1:\n        x += 1\n    if x > 0:\n        b += 1\n    elif len(a) == 2:\n        b = a - 1\n    else:\n        x += 1\n    return b\n\ndef __starting_point():\n    main()\n__starting_point()", "# cook your dish here\nn=int(input())\nm=1000000007\nif(n==2):\n    print(2)\nelse:\n    a=n-2\n    b=n\n    p=0\n    n=min(n*m)\n    b=b+p\n    r=m*n\n    n=10**(26)+2\n    r=math.floor(r/m)\n    r=max(r,r)\n    p=p-2\n    m=math.floor(r/n)/10\n    while(p>0):\n        if(p%n==0):\n            m=m/n\n        s=min(m,s)\n        s=s+p\n    print(s)\n   ", "n = int(input())\nfor i in range(n):\n    mr = int(input())\n    print(1)", "n = int(input())\na=int(input())\nprint(2)"], "83": ["import sys\ninput = sys.stdin.readline\n\nn, k, m = list(map(int, input().split()))\n\nj = 1\na = []\nfor i in range(m):\n    a.append(t)\ni = i\nk = k-1\nfor i in range(1, n+1):\n    if j==k+1:\n        continue\n    b = a[-1]\n    if i==k-1:\n        k-=1\n    if j==k-1:\n        b.append(b[0])\n    for i in range(1, k-1):\n        break\n    b.append(i)\n\nd = ((k-1) * k * (k-i+1))\nq = [[0] * n for j in a]\nq.append([0] * n)\nfor i in a:\n    q.append([0] * n)\n\nans = 0\nfor i in b:\n    if q[-1][0]==0:\n        ans += q[-1][0]\n    q.append([0] * n)\n\n\nn,k,m=a[0][0]\np=2*n-k\nfor i in range(1,m):\n    p+=i\n    q.append([0] * k)\nprint(ans)\n\n", "n, k, m = map(int, input().split())\nc = 0\nfor i in range(n):\n    if (k-i)%2==0:\n        continue\n        c += (t-n-k)//2\n        n-=1\nprint(c)", "import sys\nsys.setrecursionlimit(100000)\nmod=10**9\na=int(input())\n\nfor a in range(a):\n    k,m=map(int,input().split())\n    n,k=int(input())\n    n,k=list(map(int,input().split()))\n    m=int(input())\n    if(m+k*n==0):\n        print(0)\n    else:\n        a=m+k*n\n        m-=(n-k*n)\n        m=m-k*n+k*n\n        print(a)\n", "n,k,m=list(map(int,input().split()))\n#minn = int(input())\n#l=list(map(int,input().split()))\n#m=m//m\nn,k=list(map(int,input().split()))\ns=k\nm=k//m\nm=m//n\nans=1\nfor i in range(k):\n\tif i!=0:\n\t\t\ti=i-1\n\t\t\ts=s+(m-i*m)\n\tans=max(ans,i)\n\t#print(s)\n#print(s)\n\nprint(ans)", "n, k, m = map(int, input().split())\nt = int(input())\nm = int(input())\nfor i in range(m-1):\n    h=1\n    m1=2*n\n    for j in range(0,n):\n        m2=n-i-j\n        h+=1\n        m3=n-(n-i-k)-1\n        m2=j-k-1\n    if m3<m2:\n        m3=m2+m2\n    m4=m4+n2\n    else:\n        m4=m4+m3\n    m6=n-(k+1)\n    m1=m2+m1\n    print(m1+m6)\n", "n, k, m = map(int, input().split())\ns = n*k+m\nans = 0\nfor i in range(k):\n    if i%k==0:\n        ans = ans+s\n    if s==n:\n        ans+=2**n\n    return ans\n\n\nx = m\nfor i in range(k):\n    ans = ans+x*m\nprint(ans)\n\n\ndef main():\n    main()\n    main()\n"], "84": ["from math import factorial, sqrt,floor,floor\nfrom copy import deepcopy\nn, m, k = map(int, input().split())\nm, k = map(int, input().split())\nn = int(math.sqrt(m))\nl,r,c = sorted(map(int, input().split()),key=int,reverse=True)\nprint(n//3 + 2*l[r],m//2+1)\nprint(r-1,m-1)\n", "n, m, k = list(map(int, input().split()))\na = [(0, 0)]\nfor i in range(n):\n    a[i][k] = x\nfor j in range(n):\n    if j%2!=0:\n        a[i][j] = a[j-1][k-1-1] + (a[i-1][k-1]-1)//2\nprint(a[n][m][k-1], a[n][m][k-1])", "import sys\nimport sys\ninput = sys.stdin.readline\n\nn,m,k = list(map(int,input().split()))\n\n\nn,m,k = map(int,input().split())\n\na = 0\n\nfor i in range(n):\n    a = a+1\n    print(a,a+k)\n    \n", "import sys\ninput = sys.stdin.readline\nn,m,k = map(int, input().split())\n\nmatrix = [[0]*n for i in range(n)]\nfor i in range(m):\n    for j in range(n):\n        row,col,m=map(int,input().split())\n        for k in range(n):\n            row.append([row[0] + 1, col[0] + 1])\n        matrix[x][y][m] = row[1] + k[1] + k[2] + k[1] + 1]\n        matrix[y][m] = row[m] + 1\nprint(matrix[n][m])\n", "for _ in range(int(input())):\n n, m, k = map(int, input().split())\n d = 0\n for i in range(m):\n  if d == k:\n   d+= 1\n  else:\n   d = 1\n print(d, d)\n print()\n", "def solve():\n    n,m,k=map(int,input().split())\n    arr=list(map(int,input().split()))\n    i=k-1\n    while i<=m:\n        arr.append(i)\n        n+=1\n        i=k+n\n        x=i//2\n        i+=1\n        m+=1\n    res=0\n    while k<m and i!=m:\n        res=res+k*k\n    k+=1\n    res=0\n    while i<m and arr[i]!=-1:\n        i+=1\n    for j in range(i+1,m):\n        if arr[j]!=-1:\n            res=res+j*i\n        i+=1\n    print(res,i)\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"], "85": ["from math import floor\nx = int(input())\nn = int(x)\nx = floor(x)\n\nif n == 1:\n    print('1')\n    return\nif (n == 1):\n    print('1')\nelse:\n    for x in range(1, int(x**0.5)+1):\n        a,b = int(floor(x/x))\n        if a<b:\n            print(a,b)\n    else:\n        print('1')\n    \nif floor(x/a) == x/b:\n    print('1')\n    print('2')\n    print('3')\n    \n", "X=int(input())\ntry:\n    print(2, X)\n    except:\n        print((X, -1))\nexcept:\n    pass", "import sys\n\ninput = sys.stdin.readline\nn = int(input())\nl = [0]*n\nl.sort()\nfor i in range(n):\n    l[i%n] = min(l[i]%n, l[i])\nprint(l[n%n%n], l[n%n])", "import math\nx = int(input())\nif(x%2==0):\n    print(2)\n    else:\n        max1 = math.ceil(x/2)\n        min2 = math.ceil(x/2)\n        print(max1,min2)\n        x-=1\n        print(x,max2)\n        min2 = math.ceil(x/2)\n        print(max1,min2)\n        print(max2,max1)", "# cook your dish here\nfor _ in range(int(input())):\n    n=int(input())\n    if n%2!=0:\n        print(n,n//2)\n        else:\n            print(n,n-1)", "X = int(input())\nfor _ in range(2, 10001):\n    a = 1\n    b = 1\n    for i in range(1, 10001):\n        b *= 2\n        a = max(a, b)\n    b += 1\n    print(a, b)\n"], "86": ["n = int(input())\na = list(map(int,input().split()))\na = list(map(int,input().split()))\nfor i in range(1,n):\n    a.append(a[i])\nif a[i] > a[0] and a[i+1] == a[1]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n = int(input())\narr = list(map(int, input().split()))\n\nif len(arr) < 3:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n\n", "# cook your dish here\nn = int(input())\na = [int(x) for x in input().split()]\nif len(a) <= 1:\n    print(\"NO\")\nelse:\n    if a[1] > a[0] :\n        print(\"YES\")\n    else:\n        print(\"NO\")", "n = int(input())\na = list(map(int,input().split()))\nm = a[0]\nfor i in range(1,n):\n    a.insert(i,a[i-1])\n    for j in range(1,n):\n        if a[j] > a[i-1]:\n            m.remove(a[j-1])\n    else:\n        m.remove(a[i])\n    if m.count('2') > 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "n = int(input())\na = [int(i) for i in input().split()]\nfor i in range(n):\n\tr = a[i]\n\tif (r-a[i]) > r:\n\t\t\tprint(\"NO\")\n\treturn\n\nfor i in range(n-1):\n\tfor j in range(n-1):\n\t\tif(a[i] > a[j]):\n\t\t\tprint(\"YES\")\n\t\t\tbreak\n", "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\n\nfor i in range(n):\n    a[i]=input()\n    if a[i]>=a[i-1]:\n        print(\"YES\")\n    else:\n        if a[i]<a[i+1]:\n            print(\"NO\")\n            else:\n                print(\"YES\")\n\n\n"], "87": ["import sys\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(n)", "n = int(input())\na = list(map(int, input().split()))\nc = (1 << n) - 1\ns = [0] * (n + 1)\n\nwhile c > 0:\n\tc -= 1\n\ts.append(c)\n\tc += 1\n\nprint(len(s)-c-2)", "n=int(input())\narr=list(map(int,input().split()))\narr.sort()\nd=1\ni=0\nwhile i<n:\n    if arr[i]==1:\n        i+=1\n        if a[i]%2!=0:\n            i+=1\n            d+=1\n    break\nif d<1:\n    k=k+1\nprint(k-i)", "from fractions import Fraction\n\nn = int(input())\na = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\nprint(int(min(a)+2,n))", "n=int(input())\na=list(map(int,input().split()))\nd=[[0]*(n+1)for _ in range(n+1)]\na.sort()\nd.sort()\nfor i in range(n):\n    d.append(a[i])\nprint(len(list(d)))", "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nf=0\na=list(map(int,input().split()))\nif a[0]%2==0:\n    f+=1\nif(f==1):\n    print(f)\nelse:\n    print(f)"], "88": ["N, K = list(map(int, input().split()))\nA = list(map(int, input().split()))\nA.sort()\na = list(A)\nk = int(input())\na[0] = 0\nfor i in range(1,N+1):\n  a[i+1] = a[i] + 1\nprint(max(a[0],max(a[0],-a[0])) * k)", "import sys\nimport math\nN,K = map(int,input().split())\nA = list(map(int,input().split()))\nD = [1] * N\nT = [0] * N\nfor i in range(N):\n    D[K] += A[i]\n    D[K] = T[N-1] + A[i]\n\nI = [0] * (N+1)\nk = 1000000007\ndp = [-1] * N\nfor i in range(N):\n    for j in range(i):\n        x = A[i] + D[j]\n        if x > N:\n            dp.append((x, j))\n\nprint(max(dp.values()))", "N,K=map(int,input().split())\nA=list(map(int,input().split()))\nfor i in range(0,N):\n    A.remove(i)\n    #print(A)\n\nprint(max(A)//K+1)", "N, K = map(int, input().split())\nA = [int(x) for x in input().split()]\nA[0][0] = int(x)\nfor i in range(1, N+1):\n    A[i+1] = A[i+1]%K\nA[i][1] = A[-1]+A[i+1]//K\n# print(A)\n\nnum = 0\nA[1] = 0\nfor i in range(1, N+1):\n    if num % A[i-1]!= 0:\n        num += A[i-1]\n        if num % A[i][1] == 0:\n            num = 0\nprint(num)", "n,k = list(map(int,input().split()))\na = sorted(set(map(int,input().split())))\n\nc = a[0]\nwhile True:\n  if a[1] % 2 == 0:\n   c ^= a[2] // 2\n  break\n print(c)\n\nn, k = map(int,input().split())\nfor i in range(1,n+1):\n  if i % 2 == 0:\n   return i\n c = a[0] % 2\n print(max(c))\n", "n,k=map(int,input().split())\nA=list(map(int,input().split()))\nM=0\nfor i in range(1,n+1):\n    if K<0:\n        M=min(M,k)\n        for j in range(i+1,n+1):\n            m+=A[j]-A[i]\n            A[i]=M\nprint(max(A))"], "89": ["import sys\ninput = sys.stdin.readline\nn,k = list(map(int, input().split()))\nprint(max(n+k-1,k-2))", "n,k=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\na.sort()\nprint(b.count(1))", "import sys\nn, k = list(map(int, sys.stdin.readline().split()))\na = [int(x) for x in sys.stdin.readline().split()]\na = [int(x) for x in sys.stdin.readline().split()]\nn = sum(x)\ns = []\nfor i in range(n):\n    s.append(int(a[i])-1)\nprint(min(a),min(s))\n", "# cook your dish here\nn, k = map(int, input().split())\n# a = [int(x) for x in input().split()]\n# s = [x for x in input().split()]\n# l = [x for x in input().split()]\n\nmaxmax = k\nminmax = n-minmax\nif (a == maxmax):\n    print(maxmax)\nelse:\n    maxmax = n-minmax\n    maxmin = a\n    minmax = a\nfor i in range(maxmin):\n    k = max(k, i - minmax)\n    print(maxmax)\n", "from math import floor\n\ndef solve(n, k):\n    q = [n] * (n+1)\n    for i in range(1, n+1):\n        q[i] += a[i]\n    q[i + 1] += 1\n    return q[0] - 1\n\ndef solve(n, k):\n    if k == 1:\n        a = 0\n    for i in range(k):\n        a += a[i]\n        if k == 0:\n            return 0\n        n -= 1\n        i = 0\n        while n!= 1:\n            n -= 1\n            k += a[i]\n            i += 1\n            i += k\n        i += 1\n\n# print(a)\n    return n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(n, k))\n", "# cook your dish here\nimport sys\ninput = sys.stdin.readline\nn, k = map(int, input().split())\nans = 0\nfor i in range(1,n + 1):\n    if k & i:\n        ans += min(i - k, j)\nprint(ans)"], "90": ["a=input().strip()\nb=input()\nt=a[::-1]\nfor i in a:\n    if t!=0:\n        t=1\nfor j in b:\n    if t[j]!=0:\n        t=t[j:j]+t[i-1]\n    t=t[::-1]\nprint('-')\n", "s=input()\na,b=list(map(int,s.split()))\na=[\"\"]\nfor i in s:\n    if len(a[i])>=len(b):\n        if b[i]!=str(a[i]):\n            a[i]=0\n        else:\n            a[i]=1\nfor i in s:\n    if(a[i]==b[i]:\n        a[i]=0\nfor i in a[::-1]:\n    a[i]=0\nfor i in b[i:]:\n    a[i]=a[i]-1\nprint(\"-\"+a)\n", "input = lambda: input()\n\ns = input()\nans = 0\nfor i in range(len(s)):\n    s = s[i:i+2]\n    ans += s[i:]\n    \nprint('-{}'.format(ans) if len(ans) > 0 else 'a')\n", "import sys\ninput = sys.stdin.readline\nn = len(input())\nl = [float('-inf') for _ in range(n)]\ni = 0\nl[0] = 0\n\nx = []\nfor i in range(1,n):\n    x.append(input())\n\nl[1] = 0\nfor i in range(1,n):\n    if l[i] > 0:\n        l.append(l[i])\n\nfor i in range(n):\n    if l[i] < 0:\n        ans = str(len(l)-1-i)\n        print(a)", "a, b = input().split()\na, b = a, b\nans = 0\nfor i in range(len(a)):\n    for j in range(i+1, len(b)):\n        if b[i]!=a[j]:\n            ans = min(ans, a[i:j]+abs(a[j]+abs(b[j]+abs(b[i]))))\nprint(ans)\n", "a,b=input().split()\nx=0\nfor i in range(0,len(a)):\n    if a[i]!=b[i]:\n        x=x+1\n    else:\n        x=b[i]+b[i]+a[i]\nprint('+',end='')\n"], "91": ["a = input()\na.sort()\nif not a[5]:\n    print(\"Wrong password!\")\nelif a[3]!='!&' or a[3]!='.' or a[4]!='.' or a[5]!='.' or a[5]!='.' or a[6]!='_':\n    print(\"Correct\")\nelse:\n    print(\"Too weak\")", "def real_check(password):\n    pass\n    i = 0\n    for c in password:\n        if c.isalpha():\n            j += 1\n        elif c == \"!\":\n            j += 1\n        else:\n            j += 1\n    if j == \"?\":\n        i += 2\n    elif j == \".\":\n        i += 1\n    elif j == \"_\":\n        j += 1\n    elif j == \"!\":\n        i += 1\n    else:\n        i -= 1\n    return i", "input()\na=input().split()\nif a[0]==a[1]==a[2]:\n    print(\"Correct\")\nelse:\n    print(\"Too weak\")\n", "from itertools import count, combinations\n\nc = [x for x in range(4) if x.isalpha()]\nx = [x[:5]]\ny = []\nwhile x:\n  if c[0] == 'x':\n   c.append(n)\n   x += 1\n\n if len(x) >= 5:\n  print(\"Correct\")\n else:\n  print(\"Too weak\")", "import re\ninput = lambda : list(map(str,input().split()))\nfor i in input():\n    if i[0] == \"!\":\n        print(\"Correct\")\n    elif i[1] == \"?\":\n        print(\"Too weak\")\n    else:\n        print(\"Incorrect\")", "from collections import Counter\n\nfor c in input():\n    x = input().split()\n    if x.count(c) >= 5:\n        print(\"Correct\")\n    else:\n        print(\"Too weak\")\n"], "92": ["n,m = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nif a[0]=='<' and a[1]=='>':\n  print(\"YES\")\nelse:\n  print(\"NO\")", "n, m = map(int, input().split())\nl=[]\nfor i in range(n):\n    if i==\"<\":\n        l.append(\"v\")\n    else:\n        l.append(\"v\")\nprint(0,3)", "n,m = list(map(int, input().split()))\np = list(map(str, input().split()))\nif p[0] == '>' or p[1] == '<':\n  p.remove('v')\nelse:\n  p.remove('v')\n \n if p[1] == '^':\n  p.remove('v')\n else:\n  p.add('v')\n print('YES')\n else:\n  print('NO')", "n, m = map(int, input().split())\nm = map(int, input().split())\nd = [[1, -1, 0]]\nfor i in range(n):\n    if d[i] == '<':\n        d[i]+=1\n    elif d[i] == '>':\n        d[i]+=1\n    else:\n        d[i]=1\nfor j in range(m):\n    d[i]+=1\n\nv = [\"1\",[\"0\",[\"1\"]]\nv.sort()\nfor i in range(n):\n    if i[0] in v:\n        v.append(d[i[0]] + v[0])\n        d[i][0] = 0\n\nv = d[i][1]\nv.sort()\nn = list(map(int,input().split()))\nprint(\"YES\" if v else \"NO\")\n", "def solve(A, n, m):\n    if A[0] == '<':\n        return a == n\n    if A[1] == '>':\n        return a==m\n    if A[0] == '^' and A[1] == '/':\n        return a == m\n    return solve(A-1, n-1, m)\ndef solve(A, n, m):\n    if A[n] == '>':\n        return a == m\n    if A[n] == '+' and A[m] == '!':\n        return a == n\n    if A[n] == '^' and A[m] == v:\n        return a == m\n    if A[n] == 'v' and A[n]!= 'v':\n        return a == m\n    return a == n-1 and A == m-1 else solve(A-1, n-1, m)\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    solve(A, n-1, m-1)\n    solve(A, m)\n    solve(A, n-1, m)\n__starting_point()\n__starting_point()", "def solve():\n    n,m = map(int,input().split())\n    if (n==1):\n        print(\"NO\")\n        return\n    if (n==1):\n        print(\"YES\")\n        return\n    if ((n==1):\n        print(\"YES\")\n        print(\"NO\")\n    elif (n==2):\n        print(\"YES\")\n        return\n    elif ((n==1):\n        print(\"YES\")\n    elif (n==3):\n        print(\"NO\")\n    elif (n==4):\n        print(\"YES\")\n    elif (n==4):\n        print(\"NO\")\n    elif (n==0):\n        print(\"NO\")\n    else:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"], "93": ["a=int(input())\nm=int(input())\nl=list(map(int,input().split()))\na.sort()\nb.sort()\nprint(a-b)", "n, m = map(int, input().split())\na, b = 0, n - b\na = (a + b) % (n + b) % (n + b) % (n + b)\nprint(a,b)", "n, m = map(int, input().split())\na, b = a, b\nprint(a, b)\n", "n, m = map(int, input().split())\nx=[]\nwhile a>=0 or b<=0:\n    if b==0:\n        a=a-2\n        b=b-2\n        else:\n            a=a-2\n        b=b-2\n        x.append(a-1)\n    x.pop()\nprint(x[-1],x[-2])\n", "a, b = map(int, input().split())\nif a == 0 and b == 0:\n  print(1,0)\nelse:\n  print(n-b,a-b)", "n,m=map(int,input().split())\nans=[int(x) for x in input().split()]\nprint(*ans)-2+n-1"], "94": ["n, k = map(int, input().split())\narr = [int(x) for x in input().split()]\nnum = list(range(1, 2*k, 1+k))\nfor x in arr:\n    if x % k == 0:\n        num.append(x//k)\nprint(len(num))", "a, b = map(int, input().split())\n\ncount = 0\n\nfor i in range(k):\n    if b % i == 0:\n        count += 1\nprint(count)", "k,a,b=map(int,input().split())\nsum=0\nfor _ in range(k):\n    if a!=b:\n        k-= 1\n        b=a+b\n    if k%b==0:\n        print(k-sum)\n    else:\n        num=int(a/b)\n        sum+=1\n", "k,a,b=map(int,input().split())\na=a*k+b*b\nb=b*k\nprint(len(a)+len(b)//k)", "k,a,b=map(int,input().split())\nprint(((a*b)%k+(a*a)+(b*a))//(k+1))\n\ndef is_divisible(k):\n    return (k%k==0)\n\n\ns=n=k\nn=k*k+a-b\nwhile(n):\n    if k%n==0:\n        n=k+a-s\n    break\n\na=n\nb=n-s\nb=k-b-s\ns=n-b\nprint(s)", "k, a, b = map(int, input().split())\ni = 2\nfor j in range(1, k):\n    if a % j == 0 and b % j == 0:\n        if a % j == 0:\n            i += 1\n            break\n    else:\n        i += 1\nfor i in range(1, k+1):\n    print(i + i * (a//j))"], "95": ["import sys\ninput = sys.stdin.readline\n\nk = int(input())\nprint(max(['123456789101112131415161718192021222324252629303132333536'])+1)\n", "r=int(input())\nfor _ in range(r):\n    c=str(int(input()))\n    i=0\n    i+=1\n    j=(int(i)*i)\n    i=i+1\n    k=0\n    while True:\n        i+=1\n        j=j*i\n        i=i+1\n    print(k,end=\" \")\n        k=i+1\n    print(k)\n", "r=int(input())\nt=[]\nfor i in range(t):\n    t.append(int(input()))\nx=0\nfor j in range(1,i+1):\n    x=x*10+int(input())\n    t.append(x)\nn=int(t)\na=0\nb=1\nfor j in range(n):\n    x=str(str(x))\n    b+=int(b)\nif len(a)>=k-1:\n    print(a[k]+a[k-1])\nelse:\n    print(a[k])", "# cook your dish here\nn=int(input())\nwhile n>0:\n    i=n%10\n    j=0\n    temp=0\n    while i<=j:\n        if i==j:\n            print('.')\n            i=j+1\n            else:\n                temp+=1\n            j=i+1\n        i+=1\n    print(temp)\n    n-=1\n", "# cook your dish here\ndef print_a(s):\n\ndef a_line():\n    return input()\n\nfor _ in range(int(s))):\n    a = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    l.sort(reverse = True)\n    f = ''\n    for i in range(l,-1,-1):\n        f += s[i]\n    print(f.count(f))", "k = int(input())\na = [int(x) for x in input().split()]\nprint(''.join(x))"], "96": ["import sys\nimport math\ninput = sys.stdin.readline\nn = int(input())\nc = int(input())\nif c % 2 == 1:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "import sys\ninput = sys.stdin.readline\n\ndef read_ch(str):\n    return [int(c) for c in str.replace(\"8\", \"\") if c % 2 == 0]\n\nt = input()\nwhile(t!= \"8\"):\n    n = t.count(\"8\")\n    t = str.count(\"0\")\n    if t == \"11\":\n        print(\"YES\")\n    else:\n        print(\"NO\")", "n = int(input())\ns = input()\n\nif n & 1 == 0:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "n = int(input())\ns = input()\n\na = list(s)\n\nif len(a) > 11:\n    print(\"YES\")\n    else:\n        print(\"NO\")\n    else:\n        for i in range(1, n+1):\n            if int(a[i]) == a[i+1]:\n                if i == '8':\n                    a[i] = 'YES'\n            else:\n                a[i] = 'NO'\n            print('YES')", "# cook your dish here\nn = int(input())\ns = input()\n\nif (n % 2) == 0:\n    print(\"YES\")\nelse:\n    # if(1)<=n or (2)>n or (5)<n:\n        print(\"NO\")\n    else:\n        print(\"YES\")", "N=int(input())\nwhile N>1:\n  S=input()\n  N-=1\n  if S<1:\n   print(\"NO\")\n   break\n  else:\n   print(\"YES\")\n    n=10**5\nprint(\"VASL\")\n"], "97": ["a, b, c = map(int, input().split())\nans = 0\nif a > b > c > b:\n    for i in range(a):\n        if (b + i) % 4 == 0:\n            ans += 1\n        else:\n            ans += 2\nprint('No')\n", "import sys\n\na, b, c = map(int, input().split())\na.sort()\nb.sort()\nc.sort()\nb.sort()\nc.sort()\nres = 1\nfor i in range(1, 2*a+1):\n    if a[i]+b[i]<=b[i]:\n        res +=1\nif res>=b:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "a,b,c,d=list(map(int,input().split()))\nx,y,z=list(map(int,input().split()))\nif x>=d or y==a or z==b or d>c and z>0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "a, b, c = list(map(int,input().split()))\nc = [int(i) for i in input().split()]\nfor i in range(3):\n  x, y, z = map(int,input().split())\n  c[i] = a\n  if y > z:\n   x += x\n  if x == b or z == c:\n   y += c\n  if y > c:\n   y -= c\n print(\"Yes\")\n else:\n  print(\"No\")", "# cook your dish here\na,b,c=map(int,input().split())\nx,y,z=map(int,input().split())\nif x==bandy>=c:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "a,b,c = [int(i) for i in input().split()]\nif(a>b):\n  print(\"Yes\")\nelse:\n print(\"No\")\n"], "98": ["\nn,k,m=list(map(int,input().split()))\nans=(n+k)/(m+1)\nans=len(ans)\nprint(n%m)", "import sys\ninput=sys.stdin.readline\n\nn,k,m=map(int,input().split())\n\nif(k==0):\n    k=1\n    m=k\n    else:\n        m=n*k+k\n        m=10**9\n        print(m-k%m)\n", "import sys\n\n\n\ndef main():\n    \"\"\"\n    The input string is the input of an integer.\n    \"\"\"\n    n, k, m = map(int, input().split())\n    x = k * int(m)\n    return n + m - (k * x + m) % m\n    \n    n, k, m = map(int, input().split())\n    return int(m - int(n) % mod)", "n,k,m = [int(x) for x in input().split()]\nres=0\nwhile n!=0:\n    n,k,m=map(int,input().split())\n    print(int(n%m)%m)\n\nn,k,m=list(map(int,input().split()))\n", "n,k,m=map(int,input().split())\ns = ''.join(map(str,input().split()))\ng = n*k+m\nt=int(s)\nd=d-n\nn=n-n//k\nk=k-1\na=s[0]%m\nprint(int(a+d))", "n,k,m = map(int, input().split())\nans = 0\n\np1 = float('inf')\np2 = float('INF')\nm = 10**9\n\nwhile k < n:\n    s = str(k)\n    if s <= 0:\n        print(1)\n        p1 += 1\n    else:\n        p2 += 1\n        m += 1\n    ans += p1 % m\n    print(ans)\n"], "99": ["l,r,a=list(map(int,input().split()))\n\nn=l*r*a//2\nl=r/2\nr=a//2\na=r/2\nm=0\nfor i in range(n):\n    if i<m:\n        m=m+i\n    print(m)", "l,r,a = [int(x) for x in input().split()]\nl = l*2 + r*2 + 4\n\nx = a**3 + (a**3) - 1 - l * 2\n\nans = 0\nfor i in range(r-a,0,-1):\n    ans += a**2 - l\n    print(ans)\n", "# cook your dish here\nl, r, a = map(int, input().split())\nm = 0\nx = 0\ny = 0\nz = l+(r+a+l) // 2\n\nfor i in range(1,r+a):\n    if x < 0 and x < y:\n        z+=1\nprint(z)", "l,r,a = map(int,input().split())\nm1=0\nm2=0\nwhile l+r>a:\n    if m1+l%2==0:\n        m2+=1\n        else:\n            m1+=2\n        l+=1\n        r+=1\n\nprint(m1+m2)", "import sys\ninput=sys.stdin.readline\nl,r,a=list(map(int,input().split()))\n\nl=l+r\nm=0\nb=b+a\nd=max(m,d)\nl=(d-l)*2\nr=l+r\nk=j=0\nfor i in range(1,n-1):\n    if k==0:\n        print(0)\n    else:\n        if b>0:\n            print(b,k)\n            d=m-d\n            m=max(m,k)\n            k+=1\n        d=m-d\n    d=m-l+b\n    print(d,l+d)\n", "l,r,a=map(int,input().split())\nans=a//2\nif a%2==0:\n    print(ans//2)\nelse:\n    print(ans//2)"], "100": ["n, m = list(map(int, input().split()))\nn = m - 2\n\nif (n < 3):\n    m = n\nprint((n+m)//2)", "n,m=list(map(int,input().split()))\n\narr=[[] for i in range(n+1)]\n\ncount=0\ncount=0\nwhile(m<n):\n  count=1\n for i in range(n):\n   if(arr[i]%3!=0):\n    count+=1\n    count+=1\n   if(count==1):\n     count=0\n   break\n print(count)", "import math\n\ndef main():\n    n, m = list(map(int, input().split()))\n    ans = n\n    while ans < n+m and n + m < n + m:\n        ans += 1\n        print(ans)", "import math\n\nn,m=map(int,input().split())\nif n+m<=2:\n    print(n+m)\nelse:\n    print(math.sqrt(n+m))", "n,m=map(int,input().split())\nn=2*m+(n<3)\nn2=2*m+(n>2)\nsum1=[-1]*n2+(n<2)\nsum2=[1]*n2+(n<3)\nsum3=[1]*n2+(n<3)\nfor i in range(1,n+1):\n    sum3[i]=min(sum3[i],sum1[i])\nprint(sum3[n-1])", "n,m=map(int,input().split())\nif n==1 or m==1:\n    print(2)\nelse:\n    n,m=map(int,input().split())\n    print(max(n),max(m)))"], "101": ["a,b,c,d = map(int,input().split())\nprint(max(1./a,abs(a-b)),max(a-c),abs(b-c)),abs(b-c)", "a, b, c, d = map(int, input().split())\nb, c, d = map(int, input().split())\nb, c, d = map(int, input().split())\n# print(a,b, c, d)\n\nif b < a and c >= b:\n    print(0.5*b - min(a,b,c,d))\nelse:\n    print(a*b-min(a,b,c,d))", "A,b,c,d=map(int,input().split())\nA=[int(i) for i in input().split()]\nB=[]\nfor i in range(1,100000):\n    A.append(A[i]*B[i+1])\n\nans=abs(A[0]-B[0])\n\nans=0\nfor i in range(1,100):\n    print(ans)\n", "import math\n\nl=list(map(int,input().split()))\nl.sort()\nl1=0\na,b=list(map(int,input().split()))\na1=0\na2=0\na3=0\na4=0\nb2=0\nc=0\nd=0\nb3=0\nc=0\nd2=0\nb4=0\nb5=0\n\ns=[]\nfor i in l:\n if i%l[2]:\n  s.append(i)\nd2=i//l[1]\nd2.append(i//l[0])\nb1=i//l[1]\nd2=i//l[2]\nb2=i//l[1]\nd2.append(i)\nx=math.gcd(x,a2*b3)\n#print(x)\nfor i in s:\nprint((sum(x)**3/x)*(max(x)**2-min(x))**1.5/2))", "a,b,c,d = [int(x) for x in input().split()]\n\nif b-a < 0:\n    return 0.5\nelse:\n    l = [0.5 * a-b]\n    r = len(l) - 1\n    while r!= l[-1]:\n        r = min(l, r[-1])\n        l = l[:-1]\n    a = l[-1] - l[1:]\n    r = l[-1] - l[0]\n    b = l[-1] - l[1:-1]\n    c = l[-1] - l[0]\n    d = l[-1] - l[1]\n    if a > c:\n        print((abs(l[0] - a) * abs(b-c)) / d + r)\n    elif a - c >= 0:\n        print((abs(l[0] - a) * abs(d - c)) / d + r)\n    else:\n        print((abs(l[0] - a) * abs(l[1:-1])) / d\n        else:\n            l = l + [b, c]\n    res = 0\n    for l in l:\n        if l > 0:\n            res += (l+1) * abs(l-1) * abs(l-1) * abs(r-1)) / d + r * abs(l-1) / d + r * abs(l-1) * abs(l-1) / d + r * abs(l-1))\n        else:\n            res += (l+1) * abs(l-1) * abs(l-1) * abs(l-1)\n        res =", "a,b,c,d = list(map(int,input().split()))\nA=int(input().split())\nB=list(map(float,input().split()))\nM=0\nm=float(max(0.5),0.5)\nfor i in range(1,n):\n    if D<A[i]:\n        m=M\n        print(m+M*A[i])\n    else:\n        M=max(A[i],A[i])\n        M=M*A[i]\n    print((M-1*(m-1))/M)\n        \n   \n"], "102": ["x,k = list(map(int,input().split()))\nans = 0\nfor i in range(0,k+1):\n    ans += i * (k-i) * 1 / (100 * (x-i+1) )\nprint(ans)", "n = int(input())\na = [int(x) for x in input().split()]\nb = []\nfor i in range(n):\n    a.append(a[i])\nb.append(a[i] % 1000000007)\nb.append(a[-1])\nb.sort()\nprint(int(b))", "from collections import Counter\n\nN = int(input())\n#\nNa = [int(n) for n in input().split()]\n#\n\nC = [0] * n\n#\nfor i in range(0,N-1):\n    for j in range(1,N):\n        C[i][j] = (C[j-1][i-1] + 1 - C[i-2][j]) / (C[i-1][j-1])\n\nx = list(map(int, input().split()))\nprint(C[x]) % (10 ** 9 + 7)", "x, k = map(int, input().split())\nc = k - 1\nans = (x + 2 * k) / 2\n\nprint(ans)", "a,b = list(map(int,input().split()))\nc = 0\nm = 10**9+7\nm = 10**9+7\ns = 1\nfor i in range(b):\n    s = s * (a - b) * (a - b)\n    a = (c + s) / 2\nprint(a)\n", "x,k=list(map(int,input().split()))\nprint((x*k)//k*(k+1))%10**9 + 7)"], "103": ["import sys\nn=int(input())\nwhile n>0:\n    if n%5==0:\n        print(2)\n    n=int(n//5)\n    else:\n        n=n/5\n        n=n//5\n    print(3*n)\n    n=1\nprint(n)\n", "n = int(input())\nr = 0\nfor i in range(n):\n    r+=1\n    if(n!=2*r):\n        print(r)\n    else:\n        print(r-1)", "# cook your dish here\nn=int(input())\ndp=[n]*(n+1)\ndp[2]=n+1\ndp[0]+=1\ndp[1]=n+1\ndp[2]=n+1\ndp[3]=1\nfor i in range(1,4):\n    print(dp[i]*(dp[i-1]+dp[i-2]+dp[i-1]+dp[i-2])-dp[i]*(dp[i-1]-dp[i-1]-dp[i-2]-dp[i-1])*2)\n", "N = int(input())\nS = [0]*N\n\nfor i in range(N):\n    l, n = map(int, input().split())\n    print(L[N-i] * L[N-i-1] * L[N-i-2] + L[N-i-1]+ 1)\n", "n=int(input())\nif n == 1:\n    print(1)\nelse:\n    print(2)\nprint(4)", "n=int(input())\nfor i in range(n):\n    b=int(input())\n    c=0\n    a=1\n    while(a<=2):\n        if b%b==0:\n            b=a%b\n            c=c+1\n        else:\n            b=a//b\n    print(c)"], "104": ["import sys\ninput = sys.stdin.readline\n\nh,w = sorted(map(int,input().split()))\nans = 0\nfor i in range(int(w[1]+w[2],-1,-1)):\n    if i>w[0] and r>w[0] and b>w[1]:\n        ans += 1\n    else:\n        ans += 1\nprint(ans)\n", "for _ in range(int(input())):\n c,h,w,a,b,d=map(int,input().split())\n x=y=r=(x+w+a)//2\n y=max(y+a,b)\n if y==h:\n  print(n)\n else:\n  h,b=y,x+b\n  print(h*c)", "from collections import defaultdict\ninput = lambda: input().split()\nt,h,w=map(int,input().split())\nfor _,x in [list(map(int,input().split()))] :\n    h1,h2,w2=map(int,input().split())\n    a=min(h1,h2)\n    a=max(a,w)\n    b=min(w2,w)\n    t=t-a\n    if t>=1:\n        t-=a\n    else:\n        t-=1\n    if t>=n:\n        print(n)\n    else:\n        print(n)", "# cook your dish here\nc=int(input())\n\nfor i in range(0,c):\n    r,b,w=[i for i in input().split()]\n    count=0\n    for j in range(b+1):\n        if w[j]>=w[r]:\n            count+=1\n            if r>0:\n                count+=1\n    print(count)\n", "def test():\n t = input()\n\n t2 = t.split()\n\n a = [t[0]+t[1] for t in t2]\n for i in range(len(t2)):\n  a[i] = t[i-1] + t[i+2]\n return (t2[0] + t[1] + t[2]) / 2\n\nl = []\nj = 1\nwhile i<len(t2):\n    temp = list(range(len(t2))[1]\n    if temp[i]<temp[j]:\n        j += 1\n    j += temp[j]\n    j += 1\n    j += 1\n    while j<len(l) and j>0 and arr[j] < temp[j]:\n        j += 1\n    print(j)", "import math\nc = int(input())\njoy = 0\n\ndef d(t, y):\n    if (t, y) in ('5','10'), ('8','13')) in ('2','19')):\n        p1 = t\n        p2 = t\n        p3 = t\n        for i in range(n):\n            if(t, y) in ('5','11'):\n                p2[i] = p1[i] + h2[i]\n            p3[i] = p2[i] + b2[i]\n            if(p1[i] > 0):\n                p2[i] -= b2[i]\n            #print(p1[i], p2[i] - c1[i])\n            p3[i] = c1[i] + b1[i] - c1[i]\n            else:\n                p2[i] = p1[i] - p3[i]\n            p1[i] = (p2[i] - p3[i]) * (p3[i] - p4[i]) * (p4[i] - p5[i] - c1[i])\n\nreturn joy\n\n\n#\nimport math\n\ndef __starting_point():\n    C = int(input())\n    H, B, W = list(map(int, input().split()))\n\n#\n__starting_point()"], "105": ["x1, y1, x2, y2 = map(int, input().split())\nmax_steps = 1\nfor x1 in range(x1,x2+1,y2+1):\n    max_steps = max(max_steps,x1+x2)\nfor x2,y2 in zip(x1,y1+y2,i+1):\n    if y1-y2<x1:\n        max_steps = max(max_steps,x2-y1+x2)\nprint(max_steps)\n", "x1,y1,x2,y2=map(int,input().split())\nn=0\np=2*x1+2*y1+2*y2\nwhile(p<n):\n\ts=1\n\tc=p+1\n\ts=min(s,c)\n\tprint(s)\n", "x1, y1 = map(int, input().split())\ny2 = map(int, input().split())\n\nd = 0\nfor i in range(4):\n    y1, y2 = map(int, input().split())\n    if (y1 + y2) % 2 == 0:\n        d += 1\nelse:\n    d += 1\nprint(d)", "from sys import stdin\n\r\n\r\ninput = stdin.readline\r\nx1, y1, x2, y2 = map(int, stdin.readline().split())\r\nfor i in range(2):\r\n    x1,y1, x2, y2 = map(int, stdin.readline().split())\r\n    x1, y1, x2, y2 = map(int, stdin.readline().split())\r\n    return x1+y1+y2\r\nr = -x1**2+x2**2 + y1**2 + y2**2\r\nif (1 << r) & 1 << r:\r\n    d = min(r, d)\r\nprint(d)", "input=input().split()\nx1,y1=map(int,input().split())\nm=x1-1\nfor i in range(8):\n\tx2,y2=map(int,input().split())\n\tif(x2+y1>x1+y2):\n\t\tx1,y2=x1+y2\n\tprint(m)\n\telse:\n\t\tm+=1\n\tprint(m)", "x1,y1,x2,y2=list(map(int,input().split()))\nn=int(input())\na=x1+x2\nb=y1+y2\nprint((n-(a-b))//2)"], "106": ["# cook your dish here\nm,a,b=map(int,input().split())\n\nans = 0\nfor i in range(m):\n    print(n*(a-b))\n", "m, a, b = map(int, input().split())\nn = m*3\np = [n*3, 1, 1, 1, 1, 1, 1, 0, 0]\nfor i in range(m):\n    if i>=a and i<=b:\n        p[i]+=1\n    p[a-b]=1\nwhile p and p[m-1-i]>=0 and p[m-1-i]>0:\n        p[m-1-i-1]-=1\n        p[m-1-i-1]=1\nfor i in range(m):\n    p[m][i]=i\nfor i in range(a,b):\n    p[i]=p[i+1-a]\nprint(p[-1])", "m,a,b=map(int,input().split())\nans=0\nf=0\nfor i in range(m):\n    if a==0:\n        f+=1\n    elif a>b:\n        f+=1\n    elif b>a:\n        f-=1\n    else:\n        b-=a\n        a-=1\n        sum1=0\n    sum2=0\n    for i in range(a,b):\n        sum2+=f*(i-a)\n        if i-a>0:\n            sum1+=f*(i-a+1)\n        sum2+=f(i-b+1)\n    print(sum1)\n", "from sys import stdin\nimport sys\ninput = stdin.readline\nm, a, b = map(int, input().split())\n\nans = 0\n\nwhile m > 0:\n    ans = ans + int(stdin.readline())\n    m -= 1\n    if a == 0 or b == 0 or b == 0:\n        print(0)\n        m -= 1\n    else:\n        ans += int(stdin.readline())\n        print(ans)", "def solve(x,y):\n    if x%y == 0:\n        return x\n    if x%y!= 0:\n        return 1\n    if y%a == 0:\n        return 2\n    x=y\n    n=x//x\n    if n<=a:\n        print(n)\n    elif n==b:\n        print(n*n)\n    return 0\n    return solve(a,b,n-x)", "def main():\n    r = int(input())\n    r += 1\n    n,m,a,b = [],[]\n    for i in range(n):\n        n.append(1+a+i)\n    s = []\n    for i in range(m):\n        m.append(m-1-i)\n    s.append(n)\n    return n\n\n\n\nfrom collections import Counter\n\n\n\ndef test():\n    return True\n\ndef __starting_point():\n    main()\n__starting_point()"], "107": ["n,a = list(map(int,input().split()))\na = list(map(int,input().split()))\na.sort()\nfor i in range(n):\n    if a[i] % 2 == 0:\n        if a[i] % 2 == 1:\n            print(\"Yes\")\n    else:\n        if a[i] % 2 == 0 and a[i] % 2 == 0 and a[i] % 2 == 0:\n            print(\"Yes\")\n        else:\n            print(\"No\")", "n = int(input())\na = list(map(int, input().split()))\nl = len(a)\nans = {'Yes': ['No']}\nans['No'] = 'Yes'\nfor i in range(l):\n    b = a[i]\n    c = 0\n    while(b < b):\n        if a[b]%2==0:\n            c += 1\n            b = b + 1\n            if c < n - c:\n                a[b] = c\n                break\n    if c == 1:\n        print('Yes')\n        else:\n            print('No')", "n=int(input())\na=list(map(int,input().split()))\na.sort()\nif a[0]%2==1:\n    print('Yes')\nelse:\n    print('No')\n", "for i in range(int(input())):\n    n,a = map(int,input().split())\n    a = [int(x) for x in input().split()]\n    i=0\n    while i<len(a):\n        if a[i]%2!= 0:\n            i+=1\n        a[i]=int(a[i])\n    else:\n        if a[i]!=0:\n            i=i+1\n        if len(a)<2:\n            print(\"No\")\n        elif len(a)<2:\n            print(\"Yes\")\n            i=i+1\n        elif len(a)==1:\n            print(\"No\")\n            else:\n                print(\"No\")\n    i=0\n    j=0\n    while(i<len(a) and a[j]!=0):\n        if a[i]==0:\n            j+=1\n            else:\n                if i>1 and j<len(a) and a[j]==1:\n                    j+=1\n            if j==len(a):\n                j+=1\n                i-=1\n            break\n    print(\"Yes\")\n", "a=list(map(int,input().split()))\nb=[int(x) for x in input().split()]\nc=0\nfor i in range(1,len(b)):\n    if b[i]%2:\n        c+=1\nprint(\"Yes\")\nexcept:\n    return\n\n", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nx = 0\nwhile True:\n    x+=1\n    y = len(a) - 1\n    x += 1\n    if(x % 2 == 0 and y < y):\n        print(\"Yes\")\n        continue\n    x += y\n    if(x==x) or(y==y):\n        print(\"No\")\n    continue\n    x += 1\n\nprint(\"Yes\")"], "108": ["x1,y1,x2,y2 = map(int,input().split())\nx1,y1,x2,y2=list(map(int,input().split()))\nx2,y2,x3,y3,x4,y4=list(map(int,input().split()))\nans=[]\nif len(x2)<2:print(x1)\nelse:print(-1)", "x1, y1, x2, y2 = map(int, input().split())\nif x1 > x2 or y1 > y2:\n    print(-1)\nelse:\n    print(x2-x1,y2-y1)", "# cook your dish here\ninput = lambda:input().strip().split()\n\nlist1 = []\nlist2.append(list(map(int,input().strip().split()))\nx1 = list2.pop(0)\ny1 = list2.pop(0)\ny2 = list2.pop(0)\n\nx2, y2 = list1.pop(0)\nif x1!= x2:\n  print(list1, x2, y1)\nelif x1!= x2 or y1!= y2:\n  print(-1)\nelif x1!= x2 or y1!= y2:\n  print(list1[0], list1[1], list1[2])\nelif x2!= x1 or y2!= y1:\n  print(-1)\nelif x2 == x1 or y2 == x2:\n  print(floor((abs(x2 - x1)*abs(y1 - y2)))\nelse:\n  print((x1 - x2)*abs(y1 - y2)))\n", "#!/usr/bin/env python\nimport sys\n\ndef main():\n    x1, y1, x2, y2 = list(map(int, input().split()))\n    if len(x1)!= len(y1) or len(y2)!= len(x2):\n        print(-1)\n    return\n\n    \n    x1_row = 0\n    y1_row = 0\n    y2_row = 0\n    x2_row = 0\n    \n    y1_row = 0\n    \n    y1_row = 0\n    \n    y2_row = 0\n    \n    x3_row = 0\n    \n    x4_row = 0\n    \n    y3_row = 0\n    \n    y4_row = 0\n    \n    if x3_row == 0 or y3_row == 0 or y4_row == 0 or y3_row == 0 or x4_row == 0 or y4_row == 0 or y4_row == 0:\n        y3_row += x1_row + y1_row\n        \n        y3_row += y1_row + x1_row\n        \n        if x2_row == x3_row:\n            \n            y3_row = y2_row + y1_row - y1_row\n            y4_row = y3_row - y1_row\n        \n        elif y2_row == y3_row and y4_row == y3_row:\n            \n            y2_row += y2_row + y1_row\n            \n            x3_row -= x2_row + x3_row\n            \n            x3_row = y2_row", "r = list(map(int, input().split()))\nif r ==[(r+1,r+1)][::-1]:\n    print(-1)\nelse:\n    d = [(r,r-1) for r in range(2)]\n    for i in range(2):\n        d[r[0]] = max(d[r[0],r[1])\n        m = sorted(d)\n        m.sort()\n        m.reverse()\n        print(f\"{m[0]}, {m[1]}, {m[2]}.\")\n    print(-1)\n    #print(p)\n    #print(r)\n    if max(m)%2==0:\n        print((f(m[0]-1,m[1]),m[2]))\n    else:\n        r[i] = min(m[0],m[1])\n        print((f\"{m[0]}, {m[1]}, {m[0]})\")\n    return\n\n\nr, c = divmod(r[0]-r[1],r[1])\nfor v, n in [[(x1,y1),(x2, y2)],(x3, y3)]\n\nfor a in r[::-1]:\n    a,b = v,m[0]-a[0],r[1]-b[0]\n    if r[0]!=b[1]:\n        r[1] = b[0],b[1]\n        else:\n            c[2] = r[1],c[0]\n    elif r[2]>b[1]:\n        c[1] = r[2]\n    c", "#import math\ndef solve(i, j, m):\n  if (i, j) in m:\n   return m[i,j]\n  else:\n    return -1\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    a = [list(map(int, input().split())) for i in input().split()]\n    print((n(x1),n(y1)))"], "109": ["n, x, y = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    x,y = [int(i) for i in input().split()]\n    x = x & (x-1)\n    y = y & (y-1)\n    ans += (x-y) % (1000000007)\nprint(ans)", "t=int(input())\nfor x in range(t):\n    x,y=map(int,input().split())\n    x%=1000000007\n    x-=(1<<n)\n    x-=(1<<n)\n    y//=1000000007\nprint(x)", "def fib(x, y):\n    y = -y\n    f=1\n    for i in range(1, min(int(x), int(y))+1):\n        f = (f - i) * 2 ** (i - 1)\n        return f\n\nn = int(input())\na = fib(y)\nb = -(y + x) % 1000000007\nprint(a % 1000000007)", "x, y = list(map(int, input().split()))\nprint((1000000007*(x+y)))%100001", "x,y=map(int,input().split())\narr=[0]*2\nfor i in range(2):\n    arr[i]+=(x-1)*(y-1)*(x-1)*(y-1)\na=(x-2)*(y-1)\nprint(sum(arr))", "import sys\ninput = sys.stdin.readline\n\n\n\n\nx,y = map(int, input().split())\n\nfor i in range(x):\n    for j in range(y):\n        x = x << 1 + j \n        y = y >> 1\n        f = x * (x * y) % 1000000007\n\nprint(f)"], "110": ["import sys\ninput = sys.stdin.readline\n\n\nif(len(input()) <= 100):\n    print('YES')\n    return\n\nans = [int(x) for x in input().strip().split()]\nif(len(ans) % 8 == 0):\n    print('NO')\nelse:\n    print('YES')", "s=input()\nif s.count(\"0\") < 100:\n    print(\"NO\")\n    else:\n        for c in s:\n            if (c and c.isdigit() and c.isdigit() and not c.isdigit()):\n                print(\"YES\")\n                continue\n        elif (c and c.isdigit()) :\n            print(\"YES\")\n    else :\n        print(\"NO\")", "from sys import stdin\ninput = stdin.readline\nn = list(map(int, input().split()))\nif len(n) < 100:\n    print(\"YES\")\n    else:\n        n = n.strip()\n        print(\"NO\")", "N = int(input())\nm = 1\nwhile True:\n    while n!= 0:\n        n = n % 100\n        m = m % 10\n        n /= 10\n        n //= 10\n    if n == 0:\n        print(\"NO\")\n        m += 1\n    else:\n        print(\"YES\")\n", "from string import ascii_lowercase as n\n#input = stdin.readline\n# print(n)\nn = input().strip()\n\nif n.isdigit():\nprint(\"YES\")\nelse:\n if n.isdigit():\n  print(\"NO\")\n else:\n  print(\"YES\")\n", "# cook your dish here\nt = list(map(int,input().split()))\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = True\nfor i in range(0,len(a)):\n    if a[i] == t:\n        c = False\n        break\nif c:\n    print('NO')\nelse:\n    print('YES')"], "111": ["# cook your dish here\ng = []\nfor i in range(len(input())):\n    if input()[i]!= \"0\":\n        g.append(\"1\")\n    elif input()[i]!= \"0\":\n        g.append(int(input()[i]))\nprint(max(g))\n", "def find_cents(text):\n    ans = 0\n    i = 0\n    j = 0\n    while i < 100:\n        ans += (j*2-1)//2\n        i += 1\n        j += 2\n        j += 1\n    if j < len(text):\n        ans = max(ans, j)\n    return ans\n    \ndef get_pos_from_input(input):\n    s = input()\n    return ord(s) - ord('0')\n    \n    for x in s:\n        if x == 'X':\n            if x == 'X':\n                j = j + 1\n                while j < len(text):\n                    if not (j+x == s):\n                        x += x\n                        j += 1\n            if s > 100:\n                break\n        print(ans)", "# cook your dish here\nt = input().split()\n\ni = 0\nc = 0\nfor i in range(len(t)):\n    if t[i] == '0':\n        i = 0\n    break\n    c = c + 1\n\n\nwhile i < len(t):\n    if t[i] == 'X':\n        if t[i] == 'X':\n            c = c + 1\n            t[i] = 0\n            t[i] = c\n\n    print(c)", "for _ in range(100000):\n    s=input()\n    v=0\n    print(v)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "l=list()\na=[]\nfor i in range(len(l)):\n    a.append(l.count('0')+1)\nl.sort()\nif len(l)<=2:\n    print(0)\nelse:\n    m=0\n    for i in range(len(l)-2,-1,-1):\n        if l[i]==l[i+1]:\n            m=m+1\n    print(m)\n", "n = input()\n\nx = ''\nfor i in range(n):\n    x += (ord(i) - 96) * (len(x) - 1 - (ord(x) - 96)) / 2\nprint(x)\n\n"], "112": ["import sys\ninput=sys.stdin.readline\n\nn=int(input())\ns=input()\nans=0\nfor i in range(0,n):\n    if(i in s):\n        for j in range(i+1,n):\n            if(s[i]==s[j]):\n                ans=max(ans,i-j)\n    else:\n        break\n    \nfor i in range(n):\n    print(ans)", "for i in range(int(input())):\n    s=input()\n    arr=[]\n    for i in s:\n        if s[i]==s[i+1]:\n            arr.append(len(i))\n    else:\n        if len(i)==1:\n            arr.append(len(i))\n    for i in arr:\n        print(i)", "# cook your dish here\nn = int(input())\ns = input()\ncount = 0\nc, n = 0, 0\nfor i in range(n - 1):\n  if s[i] == s[i + 1]:\n    count += 1\nprint(count)", "def dfs(s):\n    ans, m = 0, 0\n    for i in range(len(s)):\n        if s[i] == s[i+1]:\n            m += 1\n            continue\n        if s[i] in m and s[i+1] in m:\n            ans += 1\n        m = m\n    return ans\nn,k = map(int,input().split())\ns=list(input())\n#print(s)\nfor i in s:\n    if i not in k:\n        j = i\n    if j not in k:\n        k+=1\n    if k in k:\n        j+=1\n        print(j)\n", "# cook your dish here\nfrom collections import Counter\nfrom collections import defaultdict, Counter\n\ndef __starting_point():\n    n = int(input())\n    s = input()\n    if len(s) <= 4:\n        return 0\n    else:\n        return 2**n-1\n\ndef __starting_point():\n    n = int(input())\n    n = len(s)\n    arr = list(map(int, input().split()))\n    sum_ = [0] * n\n    for i in range(n):\n        if s[i] in arr:\n            sum_[i] += 1\n            else:\n                sum_[i] = 1\n    for i in range(n):\n        sum_[i] = 1\n    arr[i] += 1\n\n__starting_point()", "from sys import stdin\nfrom operator import itemgetter\nimport functools\ns = stdin.readline\n\narr = [''.join(str(x) for x in input().split()])\nans = 0\nfor i in arr:\n    if i.isupper():\n        print(len(str(i)))\n    else:\n        print(0)"], "113": ["a = list(map(int,input().split()))\n\nt = n = 0\nwhile a:\n  x = 0\n  y = 0\n  y = y + 1\n  if x!= 0:\n   break\n  a = a + t\n  t = t + 1\n  t = x\n  if a == 0:\n   print(0)\n   break\n  n += 1\n  return max(a)\n", "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\na.sort()\n\nl = []\nfor i in range(n):\n    l.append(sum(a[i:i+100]))\nd = [0]*100\nfor i in range(len(a)):\n    d.append(n)\na.sort()\nprint(max(a))\n", "n = int(input())\narr = list(map(int, input().split()))\nsums = []\nfor i in range(n):\n  sums.append(sum(arr))\nfor i in range(n):\n  sums.append(0)\nsums.append(sum(arr))\nprint(max(sums[-1]))", "n=int(input())\na=list(map(int,input().split()))\nb=0\nc=0\nfor i in a:\n    if i==0:\n        b+=i\n    else:\n        c+=i\nprint(max(b-c,b-c)))\n", "n=int(input())\na=list(map(int,input().split()))\nfor x in range(n):\n    a[x]=0\nprint(max(a)+max(a))", "n = int(input())\na = list(map(int, input().split()))\n\nc = sum(map(int, input().split()))\n\nans = 0\n\nfor i in range(n):\n    c += a[i]\n    print(max(b - c), max(c, b-c) - max(c), min(c-b, c-b))\n"], "114": ["n,p,q=map(int,input().split())\nif p>q:\n    print(-1)\nelse:\n    print(2*n+2*q)", "def solve():\n n, p, q = map(int, input().split())\n b=len(s)\n if n%p == 0 or q%p!= 0:\n  print(-1)\n return\n k=1\n while p<len(s):\n  p,q=len(s),q\n  while q>k:\n   if p>q:\n    break\n    if p>q:\n     k+=1\n     p+=1\n", "n,p,q=map(int,input().split())\nif q%p!=0:\n  a=s[q%p]\n  print((-1))\nelif p>q or q==0:\n  print((n-q)*2)\nelse:\n  print((n-p)*2)\n", "n,p,q=[int(a) for a in input().split()]\ns=[list(input()) for i in range(len(s))]\nif p-q<=0 or q-p<0:\n    print(-1)\nelse:\n    a=len(s)\n    p=len(s)-p\n    q=len(s)\n    count=0\n    for i in range(p-q,-1,-1):\n        for j in range(p-p+1):\n            if s[i+j]==s[j+i]:\n                if s[i+j]==s[j+j]:\n                    if s[i]==s[j+i]:\n                        count+=1\n                        break\n    print(count)\n\n\n", "n, p, q = map(int, input().split())\na = list(map(int, input().split()))\nb = len(a)-1\nif a==q:\n  print(-1)\n else:\n  a.sort(reverse=True)\n  for i in range(0,b):\n   s=input()\n   for j in range(0,c):\n    if a[j]==s[i+1:]==s[i+2]:\n     x=int(a[i][j])\n     b.append(x)\n     count = 1\n     while x < b and b[x]>b[x+2]:\n         count+=1\n     b=x\n     break\n     for i in range(n-2):\n      for j in range(i+2,c):\n     if i-j>=0:\n     if a[j]==b[j]:\n     a[j]=a[j]+a[i]\n     count-=1\n     print(count)\n     return\n     if len(a)==n:\n      print((-1)\n     count+=1\n         else:\n         print(a[0]*a[1]*a[0])\n", "n,p,q=list(map(int,input().split()))\ns=input()\nif(n>=p):print(\"-1\")\nelif(q==1):print(int(n%p))\nelse:print(n-(p-2)*q+1)"], "115": ["s, x = map(int, input().split())\nl = [int(i) for i in input().split()]\nans = 0\nfor i in range(1, max(s, 1) + 1):\n    if x ^ i in l:\n        ans += 1\nprint(ans)", "x, s = list(map(int, input().split()))\nm = n^2\nif x % m == 0:\n    print(0)\nelse:\n    print(int(x^m)[0] // m[0])", "s,x = map(int,input().split())\nfor i in range(s-1, -1, -1):\n    for j in range(i,i):\n        if s&i==s:\n            break\n        else:\n            x^= i\nprint(len(set(s)-set(x)))", "s,x=map(int,input().split())\nans=0\nfor i in range(0,len(s)):\n    if s%i==0:\n        s=s%i\n    if s%i==0:\n        print(i)\n    else:\n        x=x^i\n        ans+=1\nprint(ans)", "s,x=map(int,input().split())\nans=0\n\nx=(s*x)+(x^s)\nif(x!=0):\n    print(ans)\n    break\nfor i in range(len(x)):\n    if(x%i==0):\n        ans+=1\nprint(ans)\n", "s,x=map(int,input().split())\nres=\"\"\ncount=0\nfor i in range(1,s+1):\n    if s-x in res:\n        count+=1\nprint(count)\n"], "116": ["import math\nn = int(input())\n\n# s = input()\nfor i in range(1,9):\n    m = math.ceil(math.log(n,2))\n    if not (m % 10):\n        print(0)\n    return -1\n    \na = int(input())\n\nb = (a+b) ** 2\nx = (x+b) // (b+1)\nprint(min(i - s, x - y) * x // b)\n\n", "import sys\nsys.setrecursionlimit(10**9)\nn=int(sys.stdin.readline())\nans=0\nfor i in range(10):\n    if i<10:\n        ans+=2\nprint(ans)\n", "def test(n):\n    if n==0:\n        return 0\n    elif n=='':\n        return 1\n    else:\n        return n==2\n\nprint((test(n)))\n", "# cook your dish here\nimport math\ndef n_square(n):\n    if n==0:\n        return 0\n    if math.sqrt(n)==1:\n        return 1\n    return math.sqrt(n)\n\ndef a_sieve(n):\n    i=int(math.sqrt(n))\n    return i\n\ndef a_square(n):\n    if n==0:\n        return 0\n    a = n\n    i=2\n    while n**2<a:\n        a+=n\n        if a!=a:\n            print(a)\n            break\n            if a%2!=0:\n                print(a)\n            i+=1\n\nreturn -1\n\ndef m_sieve(n):\n    a=n-int(math.sqrt(a))\n    return a\n\ndef m_flips(n):\n    p=a_sieve(n)\n    if len(p)<3:\n        print(-1)\n    elif len(p)<3:\n        print(p)\n    return\n\ndef m_sieve(a):\n    ans=0\n    for i in range(3,len(a)):\n        if n[i]==a[i+2]:\n            ans+=n[i+2]**2\n            for j in range(1,len(a)):\n                ans+=s_flips(p)\n\n        if ans==1:\n            print(-1)\n        return\n        if ans==1:\n            print(-1)\n        else:\n            print(m_sieve(x))\n    return -1\n", "n = int(input())\na = 10**9\n\ni = 1\nwhile i <= n:\n    if n > a:\n        print(0)\n        i = 0\n        a = a // 2\n        i += 1\n        else:\n            i += 1\n    i = i\n\nprint(int(a)*int(a)))\n", "n = int(input())\nl = list(map(int,input().strip().split()))\nc = 0\nfor i in l:\n    if i <= n:\n        print(1)\n        break\nif c == 0:\n    print(0)\nelse:\n    if c == n:\n        print(0)\n    else:\n        print(-1)\n"], "117": ["from string import ascii_lowercase as s\nfrom math import fabs, log2\nfrom math import fabs, sqrt\nfrom string import ascii_lowercase as m\ns = input().lower()\na = [a[-1]]\n\ns = s[::-1]\n\nk = 1\n\nwhile k <= len(s):\n    k = k + 1\n    if s[k] in m:\n        m = m\n        k = min(k, k-a[k])\n    else:\n        m = n\n    k -= 1\n\ns = ''.join([s for s in m])\nif k > 0:\n    print(c)\nelse:\n    print(len(s))\n", "def __starting_point():\n    string = input()\n    l = [char for char in string]\n    count = 0\n    while l[0] in l:\n        l.pop(0)\n        count +=1\n    print(count)\n__starting_point()", "#!/usr/bin/env python3\nimport string\n\ninput = input()\n\ns = input()\nm = {}\nif s[0] in m:\n\tm[s[0]] += 1\nc=0\nfor i in s:\n\tif i in m:\n\t\tc+=1\n\telse:\n\t\tm[i] = m[i]-1\nprint(m.get(c, 0)+1)", "s = input()\nd = {}\nfor i in range(len(s)):\n    d[s[i]] = len(s[i]) - 1\nprint(min(d.values()[-1],d.values()[-2])))", "s = input()\n\na = 0\n\nj = 0\n\ni = 0\nwhile i < len(s):\n  s = s.lower()\n  n = len(s)\n  j += 1\n  a = a + 1\n  if n < len(s):\n   j += 1\n print(int(max(j),a))\n\n", "s = input()\nj = 0\nwhile j < len(s):\n    if(s[j] == 'A' or s[j] == 'E' or s[j] == 'I':\n        j += 1\n    else:\n        j += 1\n    s[j] = s[j+1] + 1\nprint(j-1)"], "118": ["a=list(map(int,input().split()))\nif sum(a)==sum(a):\n    return 'YES'\na.sort(reverse=True)\nif sum(a)==sum(a):\n    print('YES')\nelse:\n    print('NO')\n", "def checkcandies(a,a_max):\n    a = (a-a) // 4\n    if a == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "def solve():\n    n = list(map(int,input().strip().split(\" \")))\n    if n[0] == n[1]:\n        return False\n    else:\n        return False\n\n\nl,r = zip(*l),map(int,input().strip().split(\" \")))\nm = n[0] - n[1]\nn2,n = n[2], n[3] - n[4]\nprint('YES' if m > 0 else 'NO')\n", "a=map(int, input().split())\n\na=list(map(int, input().split()))\n\nn=sum(a)\nif(n%2):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n", "x=int(input())\nfor i in range(x):\n    num=int(input())\n    if i<=0:\n        print(\"NO\")\n    else:\n        print(\"YES\")", "a = list(map(int, input().split()))\n\np = ((a[0] + a[1] + a[2] + a[3] + a[4]) / 4)\n\nprint(\"YES\")"], "119": ["N = int(input())\ns = 0\nfor i in range(N-2):\n    a = n-i\n    b = n-i\n    a = a + b\nprint(a,b)", "n=int(input())\nl=list(map(int,input().split()))\nfor j in range(0,n):\n    s=l[j-1]+l[j]-l[j+1]\n    print(s,s-s)", "def main():\n    N=int(input())\n    N=10**5+1\n    s=list(map(int,input().split()))\n    s.sort()\n    t1=[x for x in range(N+1)]\n    t2=[x for x in range(N+1)]\n    if len(t1)!=0:\n        i=n-1\n    if i==0:\n        print(t1,t2)\n    else:\n        p=t1[1]\n        c=t1[0]-t2[0]\n        p=t1[1]-t1[1]\n        c=t2[1]-t1[0]-t1[1]-t2[1]\n        if c>=p:\n            c=c-p\n        print(n,c)\n        else:\n            c=c\n        n-=1\n    print(t2,p)\n    print(1,p)", "def nex (s):\n a = s.count('1')\n m = m // 2\n return a + m-1\n\ns = int(s)\n\nif(n<50):\n  print(nex(s)*1+nex(s+1))\n else:\n  print(nex(s+1))", "\n\nimport sys\n\nn=int(input())\nslices=[]\nfor i in range(n):\n    slices.append(int(sys.stdin.readline()))\nslices.sort()\na=[[] for _ in range(n+1)]\nfor j in range(n-1):\n    a[j][0]=int(slices[j][0])\n    b=[int(slices[j][1]) for _ in range(n+1)]\nfor j in range(0,n+1):\n    b[i][j]=1\nfor j in range(0,n+1):\n    if slices[i+1][j]>0:\n        b[i][j]=slices[i+1][j]+a[j+1][j-1]+b[j][0]+a[j]\nprint(1,2*b[n-1])\n", "def is_decreasing(n):\n    if (n%2!= 0):\n        n = n//2\n        a = int(n)\n        b = int(n)\n        c = 1\n        if c < 1:\n            a = 0\n        c = (c+1) // 2\n        return a==b\n    else:\n        return a==b\n    if is_decreasing(n):\n        return n!=1\n    if N%2!= 0:\n        return 0\n    m=(n//2)\n    print(m,m)\n"], "120": ["import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ns = set()\nwhile n > 0:\n\tn += n // 2\n\ts.add(a[s-1])\n\ts.remove(a[s])\n\nif s > 0:\n\tprint('Alice')\nelse:\n\tprint('Bob')", "n = int(input())\na = list(map(int, input().split()))\n\n\nans = 1\n\nfor _ in range(n):\n    a = sorted([int(x) for x in input().split()])\n    if not a:\n        ans = 1\n        print(\"Alice\")\n\n    else:\n        ans = ans + (1-ans)\n\nprint(\"Bob\")", "n=int(input())\na=[int(i) for i in input().split()]\nif n%2!=0:\n    a.append(int(a[-1])-1)\nelse:\n    a.append(int(i) -1)\n\ns=list(map(int,input().split()))\nprint('Bob')", "n = int(input())\na = [int(x) for x in input().split()]\ns = []\n\nfor i in range(n):\n    s.append(int(s[-1]))\n\nprint(\"Bob\") if s else 'Alice'", "n = int(input())\narr = list(map(int, input().split()))\nif n % 2 == 0:\n    print(\"Alice\")\nelse:\n    a, b = list(map(int, input().split()))\n    c = a[0]\n    if c == 0:\n        print(\"Bob\")\n    else:\n        print(\"Alice\")\n        \n", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(\"Alice\" if len(a)%2 else \"Bob\")"], "121": ["\nn=int(input())\na=[int(i) for i in input().split()]\n\nn=int(input())\na=sorted(a)\n\nif(n==1):\n    print('NO')\nelse:\n    print('YES')", "n=int(input())\na=list(map(int,input().split()))\nm=[]\nwhile m:\n    a.append(int(input())-m.pop())\n    m.append(int(input())-m.pop())\nfor i in range(1,n):\n    s=m.pop()\n    m.append(s)\nfor i in range(1,n+1):\n    c=m.pop()\n    if c!=m[i]:\n        m[i]=m[c]-m[i-1]\nprint(\"YES\")\nelse:\n    print(\"NO\")\n", "n=int(input())\na=list(map(int,input().split()))\na.sort(reverse=True)\nfor i in range(1,n):\n  if a[i]>a[i-1]:\n   print(\"NO\")\n   break\n if (a[i]>=a[i-1]):\n  print(\"YES\")\n else:\n  print(\"NO\")\n", "n=int(input())\na=list(map(int,input().split()))\nif n>0:\n    ans=int(a[0])-1\n    if ans==n or (ans%n!=0):\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\n\n", "n=int(input())\na=[int(x) for x in input().split()]\nif n>0:\n    for i in a:\n        if i not in a:\n            print('NO')\n    elif a[i]==a[i-1]:\n        print('YES')\n    elif a[i]!=a[i-2]:\n        print('NO')\n    else:\n        print('YES')\n", "n=int(input())\nl=list(map(int,input().split()))\ns=list(set(map(int,input().split())))\nans=0\nfor x in l:\n    if x==x:\n        ans+=1\nprint(\"NO\")\nexcept:\n pass"], "122": ["import sys\ninput = sys.stdin.readline\nN, S = list(map(int, input().split()))\nif S == '':\n    print(0)\nelse:\n    len_s = []\n    s = input()\n    d = set()\n    for i in range(len(s)):\n        s[i] = '0'*len_s[i]\n        d.add(s[i])\n        if len_s[i] == s[i+1] and len_s[i] == s[i]:\n            continue\n        d[i] = len_s[i]\n        for i in range(len(s)):\n            if s[i]!= s[i+1]:\n                d.add(i)\n                d.add(i)\n            if len_s[i] > 0:\n                d.remove(i)\n        else:\n            d.add(i)\n        d.add(s[i])\n    d.add(i)\n    break\n    d = set()\n    #print(d)\n#print(d)\n#print(d)\n#print(d)\n#print(d)\nfor i in range(len(d) - len_s[0:i+1]):\n    d.remove(d[i+1])\n    if len_s[0] == 0:\n        print(0)\n    else:\n        print(d[i])", "from collections import defaultdict\nfor _ in range(int(input())):\n n, s = input().split()\n a = list(s)\n b = list(s)\n c = list(s[::-1])\n c.sort(reverse=True)\n c.sort()\n if c[0] == \"a\":\n  print(0)\n else:\n  print(b[1:-1])\n", "from sys import stdin\nfrom itertools import zip_longest\nimport math\ninput = stdin.readline\nn = int(input())\nS = input()\ndp = {}\nfor i in range(1, n):\n    d = len(S) - 1\n    d[d[0]] = 1\n    for j in range(n):\n        x = d.get(j, -1)\n        dp[x][j] = max(dp[x][j], d[x-1][j])\n        dp[x][j] = max(dp[x][j], max(dp[x][j-1], d[x][j-1]))\n\nreturn dp[n][n] if dp[n][n] else 0\nprint(n)\n", "n=int(input())\nS=list(input())\nans=0\nfor i in range(n-1):\n    S.append(input())\nans=max(ans,i-N+1)\nprint(ans)\n", "N, S = map(int, input().split())\nc = ''\nfor i in range(N):\n    s = input()\n    if s == c:\n        return i\n    else:\n        for j in range(i):\n            s += str(j)\n        c = i\n        if c == s:\n            break\n        if c == s:\n            c = s[i+j:]\n            if len(str(i)) > max(len(str(i)):\n                s = s[i:j+1]\n                if s in c:\n                    c = c\n                c = c\n    else:\n        s = c\nprint(max(len(s), 0))", "import sys\n#import re\nn,s=list(map(int,input().split()))\ns=input()\nn=int(s)\ns.sort()\ntry:\n    s=list(re.findall(r'\\w+',s))\n    if len(s)==n:\n        print(0)\n    else:\n        print(len(s)+1)\nexcept:\n    print(0)"], "123": ["import math\n\nfrom collections import defaultdict\nn,m = list(map(int,input().split()))\nk = list(map(int,input().split()))\ni,j,k = sorted([int(x) for x in input().split()])\nans = 0\nfor i in range(j,i+1,len(k)):\n    ans += k[i]\nprint(\"YES\" if ans == 1 else \"NO\")", "from collections import defaultdict\nn,m=map(int,input().split())\narr=list(map(int,input().split()))\nk=list(map(int,input().split()))\nif k==1:\n  print('YES')\nelse:\n  print('NO')", "n,m = map(int,input().split())\nans = [1]\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        k = (1<<j) - (1<<i) - (1<<i)\n        ans.append(k)\nfor i in range(n):\n    s = 0\n    for j in range(1,n+1):\n        if i==j:\n            s += 1\nprint(s)\n", "n, m = map(int, input().split())\nl = [int(a) for a in input().split()]\nans = [[0]*m for i in range(n)]\nfor i in range(1, n + 1):\n    l[i][0] = 1\nfor i in range(1, n + 1):\n    ans[i][0] = l[i-1][1] + l[i-1][0]+l[i-1][0]\n    ans[i][1] = l[i-1][0]\n    print(\"YES\")\n\n", "n,m=map(int,input().split())\na=list(map(int,input().split()))\nk=[]\nfor i in range(1,n-1):\n    k.append(a[i]*a[i-1])\nfor i in range(1,m-1):\n    k.append(1-k[i])\nprint('YES' if a[0]+k[i]>k else 'NO')\n", "n, m = map(int, input().split())\na = list(map(int, input().split()))\na = [x for x in a]\na = [x for x in a]\nans = [0] * (n + 1)\nfor i in range(n - 2, -1, -1):\n    for j in a[i + 1:]:\n        ans[i] = ans[j] + ans[i] + ans[i - 1]\n    print(ans)"], "124": ["n = input()\n\nl = [1,2,4,8]\np = [0,3,5,6,7,9,11,17,19,15,17,18,31,37]\na = [0,0,1,1,2,4,8,16,24,17,18,23,17,17,19,19,24,25,26,37,22,22,29,35,37,43,44,54,53,64,66,66,97,79,97,98,88,87,79,79,79,89,89,97,89,91,88,88,88,88,92,99,97,97,88,97,823,97,97,81,97,97,89,79,87,84,89,89,89,89,89,835,89,83,89,84,89,82,89,89,83,89,89,89,89,89,89,89,89,88,89,89,89,89,89,89,89,89,89,88,88,88,88,88,97,81,88,88,97,89,89,89,89,89,88,87,88,89,89,88,89,97,89,89,97,89,99,99,99,89,97,97,88,98,89,88,89,89,89,89,88,89,89,88,89,88,89,89,89,89,89,88,89,89,929,89,89,89,89,89,88,88,88,89,89,89,89,88,89,89,99,", "# cook your dish here\ns = input()\n\nif s[0] == \"-\":\n    print(\"NO\")\n    elif s[0] == \"-\":\n        print(\"YES\")\n    else:\n        s[0] = \"NO\"\n    for c in s:\n        if c == \"-\":\n            break\n        if c == \"o\":\n            s[1] = \"YES\"\n        else:\n            s[1] = \"NO\"\n    return s\n\nd = [[0] * len(s)] for i in range(0, len(s) + 1)]\nd[0][0] = 1\nfor i in range(0, len(s)):\n    for l in d[l]:\n        d[i][1] = 1\n        if d[l][i] > d[r][i]:\n            d[l][i] = 1\n        else:\n            if d[r][l][l][l][l][l][l][l][l][l][l][l] > 1:\n                d[r][l][l][l][i] = 1\n                else:\n                    d[r][l][l][l][l][l][i] = 1\n            d[l][i] = 1\n        d[i][l][l][i] = 1\n\nfor i in range(len(s)):\n    print(d[i][l][l][r][l][i][l][l][l][l][l][l][l][l][l][l][i]+1)\n\n", "s = input()\na = sorted(s,key = lambda s: s[1]), sorted(s, key = lambda s: s[0] )\nif a == b:\n  print(\"YES\")\nelse:\n  print(\"NO\")\n", "for c in \"oo\":\n    s = input()\n    i = s.count(\"o\")\n    if i == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "s=input()\n\nn={'-': 'O', '-': 'O', '-': 'T', '-': 'P', '-': 'U', '-': 'E', '/': 'V', '-': 'O', '-': 'W', '-': 'X', '-': 'X', 'o': 'X', 'o': 'Y', 'o': 'Z'}\n\nfor x in s:\n    if x == 'o':\n        n[s.index('o')] = n.index('-')\n\nprint('NO' if n[s.index('o').lower() == n else 'YES')", "s = input()\n\n#if s[0] == '-':\n#    print(\"NO\")\n\n#else:\n#    a=int(s[1])\n#    b=int(s[0])-int(s[1])\n#    c=0\n#    if c==0:\n#        print(\"YES\")\n#    else:\n#        if b==c:\n#            print(\"NO\")\n#        print(\"YES\")\n#        print(\"YES\")\n#        continue\n#        if c==0:\n#            print(\"YES\")\n#            if b==1:\n#                print(\"YES\")\n#            else:\n#                for i in range(4,0):\n#                    if (a+s[i]) in (2,9):\n#                        print(s[i])\n#                        elif (b+s[i]) in (2,9):\n#                            print(\"YES\")\n\n#                        c+=1\n#                        elif (a+s[i]) in (3,9):\n#                            print(\"YES\")\n#                        c+=1\n#                    c+=2\n\n"], "125": ["import sys\nimport bisect\nfrom itertools import combinations\nn,m,k=map(int,input().split())\nm1=n-m+1\nk=k-m1\nn2=k-1\npillows=(k2-k1)//2\nwhile(m1>0):\n    s=1\n    b=0\n    while(b<m1):\n        s+=1\n        b=b+1\n    if(s==n2):\n        pillows=i\n    break\n    b=s\n    pillows=k\n    print(pillows)\n", "m,k=map(int,input().split())\na=n+m-1\nb=k+1\nprint(a)", "n, m, k = map(int, input().split())\n\ncount_p=0\n\nfor i in range(n):\n    h=k-(n-i)*k\n    if(h>count_p):\n        count_p=h\n    else:\n        count_p=h\nprint(count_p)", "n, m, k = [int(x) for x in input().split()]\na = 1\n\nif(n * m > k):\n    print(a)\nelse:\n    k = n * m\n    print(k)\n", "n,m,k=map(int,input().split())\nprint(sum(2*m + k-1))", "n, m, k = list(map(int, input().split()))\nm,k = map(int, input().split())\nm,k = k, n\nif m == 1:\n    print(n)\nelse:\n    print(n-m+1)\n"], "126": ["import math\n\nn,m=list(map(int,input().split()))\n#input()\n#print(list(map(int,input().split())))\n#print(list(map(int,input().split())))\n#print(list(map(int,input().split())))\n#print(len(list(range(n)))\n\n#print(len(list(range(n)))\nprint(0,(n,m))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "n,m=map(int,input().split())\nt=[]\nfor i in range(n+1,m+1):\n    t.append(int(input()))\nt.append(t)\nt=len(t)\nt.sort()\nt=[i+1,i+1]\nfor i in range(0,n+1):\n    t.append(t[i])\nt=t[i+1]\nx=0\nz=1\nfor i in range(0,n):\n    z+=t[i]\n    t[i]=1\n    t[0]=1\n#print(x,y,z)\n#print(z,z,x)\ndef find(a):\n    if a[0]>b[0]:\n        return a[0]\n    else:\n        y=0\n        z=0\n        for i in range(3):\n            if a[i]==0:\n                x+=1\n                z+=1\n                z+=1\n    print(x,y,z)\ndef find(a):\n    return a[0]\n\ndef solve():\n    #s=''.join([str(a[0])]) for a in find(b)]\n    x=find(b[0])\n    return x\n\ndef find(a):\n    x=find(a[0])\n    z=find(b[1])\n    z=find(a[2])\n    z=find(b[3])\n    return z\n\nm=find(m)\nl=[]\nfor i in range(m):\n    print(l[i])\n\ni=find(a[i])\n\nfor i", "import sys\nfrom math import sin, sqrt, log2\nfrom sys import stdin\nimport math\nn,m = map(int, input().split())\npoints = []\nfor i in range(n,m):\n    p1,p2 = list(map(int, input().split()))\n    points.append((p1,p2))\n    points.sort()\n    for i in range(n-2,m-1):\n        p1 += points[i]\n        p2 += points[i+1]\n        if p1 >= points[i+2]:\n            p2 += points[i+2]\n    print(len(points))\n", "n, m = map(int, input().split())\nl = [[0] * (m + 1) for i in range(n + 1)]\ns = [0] * (n + 1)\nfor i in range(n + 1):\n    x = [i for i in range(n + 1)]\n    y = [[i,i + 1] for i in range(n + 1)]\n    d = [[0] * (n + 1) for i in range(m + 1)]\n    for x in range(m + 1):\n        if x in l:\n            l[x].append(x)\n            x = [0] * (n + 1)\n            d[x][y] = (n + 1) * (m + 1) * (n + 1)\n            i += 1\n    j = 0\n    for i in range(n + 1):\n        d[i][y] = d[i - 1][y - 1] + (n + 1) * (m + 1) * (m - 1) * (m + 1) * (n + 1)\n        j += 1\n    print(max(l))", "# cook your dish here\nn,m=map(int,input().split())\nif n<=0 or m<=0:\n    return\nelif n<=1 or m<=2:\n    return\nelif m<=1:\n    return\nelif n==2 and m>3 and n<=7 and n<=9:\n    print(1,0)\n    else:\n        print(0,0)\n    else:\n        print(2,n-2,n-2,m-1)", "import numpy as np\ndef main():\n    n, m = [int(a) for a in input().split()]\n    t = np.zeros(n, n)\n    a = np.ones(m, n)\n    t = np.zeros((m, n))\n    a.append((n, m))\n    d = np.zeros((n, m))\n    a[0] = 0\n    p = np.ones((m, n))\n    p[1] = np.ones((m, n))\n    p[2] = np.ones((m, n))\n    p[3] = np.ones((m, n))\n    for i in range(n):\n        p[i] = np.zeros((m, n))\n        p[i] += np.ones((m, n))\n        p[i] += np.ones((m, n))\n        # print(p)\n        l = n*2 - m\n        dp = [1 for _ in range(l)]\n        dp[2] = len(dp[2])\n        for i in range(l):\n            for j in range(l):\n                if j > m:\n                    dp[i][j] = min(dp[i][j], dp[i][j-1] + (dp[i - 1][j][k]) * i)\n            l = n\n            elif p!= 0:\n                dp[i][j] = min(dp[i - 1][j], dp[i][j][k])\n                dp[i][j] = dp[i][j] + (dp[i - 1][j - 1] * i)\n                else:\n                    l[i][j] = l[i][j"], "127": ["import math\ninput = lambda:int(input())\nn = input().strip()\ns = input()\n\nfor k in range(len(s)):\n    s = s.replace(k, '')\n    s += k\nprint(int(math.floor(math.log(s))))", "# cook your dish here\ndef f(n):\n    return int(n)[::-1]", "s = input()\nn = list(s)\nprint((int(m)) * 1000*10+int(n))", "# cook your dish here\ns = input()\nn = len(s)\nf = input()\n\nfor i in range(1,n+1):\n    s = s[i:]\n    l = s[i:]\n    ans = len(s)\n    l.remove(0)\n    ans += min(f[0],s[i+1]+len(s))\n\nprint(max(f[1:])*len(s))", "from sys import stdin\ninput=stdin.readline\nn=[int(x) for x in input().split()]\nans=[[0,0]]\nfor i in range(1,1001):\n    n.insert(len(n)-i+1,0)\nprint(int(n[0]))", "t=int(input())\r\nfor i in range(t):\r\n    s=input()\r\n    l=len(s)\r\n    for j in range(l-1,0,-1):\r\n        s=(0 if s[-j]=='0' else s[-j]%10)\r\n        print(0)"], "128": ["# cook your dish here\nm = int(input())\nx = 0\nfor i in range(1, 100000):\n    if i < len(str(x)):\n        x+=1\n    if x == 0:\n        print(0)\n        else:\n            print(x)\n", "mod = 10**31-1\ndef factorial(n):\n    return next(k for k in range(2,int(n**0.5)+1))\n\ndef factorial(n):\n    return int(n) if n>0 else 0\ndef nprs(m):\n    sum = 0\n    for i in range(m):\n        if n % i == 0:\n            sum += 1\n        else:\n            sum += n // i\n    return sum\ndef print_int(n):\n    print(n)", "import sys\ninput = sys.stdin.readline\nm = int(input())\nfor i in range(m):\n    if i > 0:\n        n = int(input())\n        print(n)\n        print(m-i)\n    print(*n, sep='')\n    print()", "def find_factorials():\n n = int(input())\n print(lambda a : [a == 0] + [find_factorials()] + [m])\n\nfor i in range(2, n+1, 2):\n    if i == 1:\n        return a\n    if i>n-m+1:\n        a = find_factorials(i+1)\n    s = (1+find_factorials())*1\n    s.sort()\n    print(sum(a))\n    \n", "N, k = map(int, input().split())\nprint(N)\n\ndef factorial(n):\n    f = int(n/n)\n    return f\n\ndef i(n):\n    f1 = 1\n    for j in range(m):\n        if n%j!= 0:\n            f = (f + i) // j\n        return f\n    s = []\n    if n%s!= 0:\n        s.append(n//s)\n    # print(f)\n    for j in range(n-k+1,-1,-1):\n        if n%j == 0 and (n//j) > 0:\n            s.append(n//j)\n            s.sort(reverse=True)\n    if len(s) <= k:\n        return\n    else:\n        return 0\n\nm = int(input())\nfor i in range(0,m):\n    print(f(i)))\n", "m=int(input())\nprint(sum([x*(1+1)//m for x in range(m*9+1)))"], "129": ["import sys\ninput = sys.stdin.readline\nn = int(input())\nlist2 = [int(i) for i in input().split()]\n\n\nt = input().split()\nfor i in range(n):\n    l1 = l1[0]\n    l2 = l2[1]\n    t.append(i)\n    l3 = l1[2]\n    if (l1[31400] == t2[31400]) :\n        print(\"YES\")\n    elif ((l1[31400] > t2[31400] and t2[31400] < t1[31400] and t2[31400] <= t1[4]):\n        print(\"NO\")\n    else:\n        print(\"NO\")", "n = int(input())\na = input().split()\na = [[int(i) for i in a] for i in range(n)]\nb = [int(i) for i in a]\na[2] = 0\nfor i in range(n):\n    a[i][0] = a[i]\nfor i in range(n - 2):\n    a[i][1] = a[i+1][1] = a[i+2][1] = a[i+1][1] = a[i+2][1] = a[i+2][1]\nfor i in range(31400):\n    b[i][1] = a[i+2][2] = b[i+1][2] = a[i] + b[i+1][2]\nfor i in range(n - 1):\n    b[i][1] = a[i+2][1]\nprint(\"YES\" if b[i][1] == b[i+1][1]) else \"NO\"\n", "# cook your dish here\nfor i in range(int(input())):\n    x1, y1, x2, y2 = list(map(int, input().split()))\n    x2, y2 = list(map(int, input().split()))\n    y1 = int(x1 + x2)\n    y2 = int(y1 + y2)\n    if x1 == x2 and y1 == y2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "\nn = int(input())\nlis = list(map(int, input().split()))\nc = []\nfor i in range(n):\n    x1, y1, x2, y2 = lis[i]\n    if(x1>=x2 and y1>=y2):\n        c.append(x1)\n    elif(x2<x1) and (y2<y1) or (x2<x1 or y2>y1) or (x2>y1 and y2<y1):\n        c.append(y1)\n    elif(x2>x1 or y2>y1):\n        c.append(y2)\n    else:\n        c.append(x1)\n    if(c==x2) or(x1==x2) or (y1>y2) or (x2>y2 and y1>y2):\n        c.append(y1)\n        else:\n            c.append(x2)\n    print('YES')", "import sys\nimport math\nn = int(input())\n\np = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    x1, y1 = list(map(int, input().split()))\n    x2, y2 = list(map(int, input().split()))\n    if len(p) == 2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "n=int(input())\ns=[]\nfor x in range(n):\n\tfor x in s:\n\t\tif x==x:\n\t\t\ts.append(x)\n\ts.append(y)\nelse:\n\tprint(\"YES\")\n"], "130": ["n, s = map(int, input().split())\nd = {}\n\nfor i in range(1, 10**18+1):\n    k = 10**i - (d[i] - d[i-1])\n    x = int(int(str(x)) * k)\n    print(x)\n", "n, s = map(int, input().split())\nl = [int(i) for i in input().split()]\ns_sum = sum(s)\na = s * 10 ** 9\nb = []\nfor i in range(b+1):\n    a.append(str(i))\nb.sort()\nans = 1\nfor i in b:\n    if abs(n-i) >= s_sum:\n        ans = 1\nprint(ans)", "n,s=list(map(int,input().split()))\nif (n>s):\n    print(0)\nelse:\n    summ=0\n    for num in str(n):\n        summ+=num\n        summ=summ%10\n        summ = summ-num\n    print(summ)\n", "s = list(map(int, input().split()))\nn = 2 ** 16\nprint(1)\nn -= int(s * 9) - int(sum(map(str, input().split())) )", "# cook your dish here\nn,s=map(int,input().split())\nif n>s:\n    print(0)\n    elif n==s:\n        print(1)\n        else:\n            print(0)\n        else:\n            print(0)", "\nn, s = [int(i) for i in input().split()]\nif s < 0:\n    print(0)\nelse:\n    if n > 10**18 or n < 5:\n        print(1)\n    else:\n        print(n)\n    elif n > 11:\n        print(0)\n"], "131": ["# cook your dish here\nimport math\nn = int(input())\np = [ int(i) for i in input().split()]\nwhile p[-1]:\n    print(\"YES\")\n    p.append((p[1],p[0])*p[1])\n", "import sys\nsys.stdin=open(\"data.txt\", \"r\")\nsys.setrecursionlimit(10**9)\nn=int(sys.stdin.readline().strip())\nif n<=3:\n    print(\"NO\")\nelse:\n    print(\"YES\")", "\nn=int(input())\ndp=[1,-1,1,1,0,0,0,1,1,0,1]\ndp[2,-1,1,1,1]=[]\nfor i in range(n):\n    dp[i][i]=0\n    for j in range(0,n):\n        for j in range(1,n):\n            for k in range(j,i+1):\n                if dp[k][j]!=dp[k][j]:\n                    break\n            if dp[k][j]>dp[i][j]:\n                break\n        dp[k][j]=dp[k][j]\nprint(\"YES\")\n\n# cook your dish here\n\n", "# cook your dish here\ntry:\n    n=int(input())\n    x=0\n    y=0\n    for i in range(n):\n        x+=int(input())\n        y+=int(input())\n    print('YES')\nexcept:\n    pass", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = (a[0]+b[0])/3\nfor i in range(n):\n    for j in range(i):\n        for k in range(j):\n            a[i]+=a[j]\nprint(\"YES\")", "# cook your dish here\nimport sys\n\ninput=sys.stdin.readline\n\nn=int(input())\npoints=list(map(int,input().split()))\nif n==1:\n    print(\"YES\")\nelse:\n    count=0\n    x=int(input())\n    y=int(input())\n    x1,y1=input().split()\n    count=count+1\n    print(\"NO\")\n    \n"], "132": ["# cook your dish here\nn,k=map(int,input().split())\na=[int(i) for i in input().split()]\nb=[[int(i) for i in input().split()]for i in input().split()]\nb.sort()\nprint(len(b)-b[-1]))", "from sys import stdin, stdout,stdout\nsys.setrecursionlimit(1000000)\ndef solve():\n    return sys.stdin.readline().rstrip()\n\ndef __starting_point():\n    n, k = map(int, stdin.readline().split())\n    s = 1\n    d = s\n    while n > 1:\n        h = list(map(int, stdin.readline().split()))\n        d += d\n        n -= 1\n        k -= d//2\n        s += 1\n    return s\n\n\n\nfrom itertools import permutations, permutations, combinations, combinations_with_duplicates, combinations_with_duplicates\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,k=list(map(int,input().split()))\na=[i for i in input().split()]\nb=[]\nfor i in range(1,n+1):\n    a.append(i)\nfor i in range(k,n+1):\n    a.append(0)\nfor i in range(1,k+1):\n    if a[i]==b[i]:\n        b.append(i)\nprint(len(a))", "import sys\nsys.setrecursionlimit(10 ** 9)\nn, k = map(int, input().split())\nans = 0\nfor i in range(n):\n    a = int(input())\n    a -= 1\n    b = (a * (k + 1)) / 2\n    if b>k:\n        ans += i\n\nprint(ans)\n", "n,k = map(int, input().split())\nl = list(map(int, input().split()))\nl.sort(reverse=True)\nm=0\nfor i in range(k):\n    while m<=l[i]:\n        m+=l[i]\n    m+=1\nprint(m)", "# cook your dish here\nn,k=list(map(int,input().split()))\nl=[int(x) for x in input().split()]\nl2=[list(map(int,input().split()))]\nans=0\nfor i in l:\n    if i<h:\n        ans+=1\nprint(ans)"], "133": ["s = input()\nmin_len = len(s)\n\na = sorted(s)\nb = sorted(s)\n\n\nc = len(s[1:])\n\nif c < len(a):\n    d = len(a) - i\n    k = a[k]\n\n\nfor i in range(n - b - 1):\n    if a[i] == b[i + 1:i + 1]:\n        c += 1\n    d += 1\nprint(min(d, l-i))", "# cook your dish here\nn = int(input())\na = input()\n#print(a)\nl = len(a)\na.sort()\nfor j in range(i+1,l):\n  if a[j] == a[i]:\n    a[j] += 1\n    for i in range(j):\n    if a[i]!= a[j-1]:\n     a[j] = a[i-1] + 1\nfor i in range(n-1,-1,-1):\n    print(l[i]+1)\nfor j in range(i,i+1):\n    print(j)\n", "n=int(input())\ns=input()\na=0\nfor i in range(len(s)):\n    a=s[i:]\n    b=0\n    for j in range(0,len(s)+1):\n        if s[i+j]!=a:\n            b=b+1\nprint(b)\n", "# cook your dish here\nn = int(input())\ns = input()\ncount = 0\nc = \"\"\nif s == s:\n    return 0\nfor i in range(1, n):\n    for j in range(i + 1, n):\n        if s[i:j] == s[i:j+1]:\n            count += 1\nprint(count)", "# cook your dish here\nn = int(input())\ns = input()\nans = 0\nfor i in range(n):\n    j = i - 1\n    if s[j] == s[i]:\n        ans = max(ans, i - j)\n    else:\n        ans += 1\nprint(ans)\n", "n=int(input())\ns=input()\nt=len(s)\nwhile t>0:\n    if(t==t-1):\n        t-=1\n    else:\n        t-=1\n    if(t==0):\n        print(t)\n    t-=1\n    else:\n        t=t-1\n    else:\n        print(t)"], "134": ["n, m = map(int, input().split())\nb = map(int, input().split())\na = list(map(int, input().split()))\np = list(map(int, input().split()))\nif len(p) == m:\n    print(max(b))\nelse:\n    print(max(b))", "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nl.sort()\nm=list(map(int,input().split()))\ncount=0\nfor _ in range(n):\n    j=int(input())\n    a=map(int,input().split())\n    a.sort()\n    j=l[j]\n    count+=1\n    b=l[i]\n    b.sort()\n    count+=1\nprint(count)", "# cook your dish here\nn,m=map(int,input().split())\nlist=sorted(map(int,input().split()))\nseta=set(map(int,input().split()))\nd=0\nfor i in range(n):\n    a=list(map(int,input().split()))\n    if seta==setb:\n        break\n    else:\n        if seta-setb in d:\n            d+=seta-setb\n        if len(d)==1:\n            break\n    del d\nprint(max(d))\n", "n = int(input())\nl = [int(i) for i in input().split()]\nfor i in range(n):\n    l.append(int(input()))\nl.sort()\nf = 0\nfor j in range(n):\n    x = l[i]\n    y = l[j]\n    i = 0\n    while i < y:\n        if x > y:\n            break\n        i += 1\n    if i == y:\n        f+=1\nprint(f)", "n=int(input())\nm=int(input())\nif(n==0):\n    print(0)\nelse:\n    l=[int(i) for i in input().split()]\n    for i in range(1,n+1):\n        a=list(map(int,input().split()))\n        a.sort()\n        b=[int(i) for i in input().split()]\n        c=0\n        c+=1\n        c=b[len(b)-1]\n        c+=1\n        if c==m-1:\n            print(c)\n            else:\n                c+=1\n        print(c)\n            \n", "n, m = list(map(int, input().split()))\na = [list(map(int, input().split()))]\nb = [list(map(int, input().split()))]\nprint(max(set(b)))"], "135": ["import sys\nimport sys\nimport math\nimport heapq\nimport numpy as np\nN,K = map(int, input().split())\nN,K = list(map(int, input().split()))\nx,y,c = map(int, input().split())\n\nans = float('inf')\nfor _ in range(N):\n    x,y,c = list(map(int, input().split()))\n    print(abs(x-x)**2 + abs(y-y)**2 + c) * (N - K - 2)", "from itertools import combinations\nfrom math import sqrt\ndef get_max_sqrt(n, m):\n return int(sqrt(n**0.5) / math.sqrt(n))\n\ndef gcd(a,b):\n return a**2 + gcd(a,b)\n\n\ntakahashi=lambda x: 2*(N-x)*0.5\ns=0\nc=0\nn=int(input())\nm=[[] for i in range(n)]\nfor i in range(n):\n\tx,y=map(int, input().split())\n\td=gcd(m[i],m[n-1])\n\tc[i]=c[j]\n\tif d>m[n-1] and c[d]>=c[d]:\n\t\tm[n-1]=1\n\telse:\n\t\t\tm[n-1]=0\n\t\t\tm[n-1]=1\n\ts=int(m[n-1])/(2*s))\n\tprint(s)", "N, K = map(int, input().split())\nc = 0\nl = [0] * N\nfor i in range(N):\n    x, y = map(int, input().split())\n    x_h, y_h = map(int, input().split())\n    a = (i - d[0]) * (2 * int(x - d[0]) + 1 * (j - d[0]) * abs(x - x_h)\n    b = (i + d[1]) * abs(y - y_h)\n    b = (i + d[0]) * abs(x - d[1])\n    c = abs(x - d[0]) * abs(y - d[1])\n    b = abs(y - d[0]) * (2 * a[1] - 1)\n    c = abs(x - d[1] - 1)\n    c = abs(y - d[1]) * abs(a[1] - 1)\n    b = abs(x - d[0]) * abs(b - d[1] - 1)\n    if c >= c:\n        print(1 - c)\n    else:\n        print(0.4 + c)\n", "N, K = map(int, input().split())\na,b,c = map(int, input().split())\ni = 0\nj = 0\nwhile(j<K):\n    for x in a:\n        j += 1\n        a = a[i]\n        c = c * (c - x)\n        j += 1\n        a[i] = c\n        i += j\n        j += 1\nprint(round((1e9 * a[0] + (c/((c-x-y)**2)/(c+n)))\n", "n, k = map(int, input().split())\nm = [0, n, n]\np = [0, 0, 0]\ndef solve(x, y, c):\n x = sorted(list(map(int, input().split()))[0])[0]\n p[x] = y\n m.append(p[x])\n n, k = map(int, input().split())\n if (n, k) in m:\n  m.pop(m[n])\n print((abs(m[k][0] - x[x[0]]) / pow(2, (n-1)), (n-1) / pow(2, i)) * p[n-1][1]) * pow(2, i))", "import sys\n\nn,k = list(map(int, input().split()))\nx1, y1, c1 = [int(x) for x in input().split()]\nz = [int(i) for i in input().split()]\nwhile sum(z[k-1] ** 0.5 == z[i]**0.5 for j in range(len(z))):\n  z2 = [int(z[i])**0.5 for i in input().split()]\n  z1 = [int(z[i])**0.5 for i in input().split()]\n  z2 = [int(z[i]) for i in input().split()]\n  z3 = [int(z[i]) for i in input().split()]\n  z4.append(z1)\n\nif k == 1:\n print(c1/z0.sqrt(2))\nelse:\n ans = c1/z0.sqrt(2)\n  k1 = k1-k1-1\n  c2 = c1-k1-2\n  h1 = min(k1-k2,0.000001)\n  h2 = min(k1-k1,0.000001)\n  h2 = min(k1,h2)\n  h3 = min(k2,h3)\n  elif c1 == c2:\n   h1 = k1\n   continue\n  elif c2 == c2:\n   h2 = k1-1\n  if h1 > 0:\n   h1 -= h1\n   break\n  else:\n   if h1 < 0:\n    h2 -= h1\n  else:\n   h1 += h2\n "], "136": ["# cook your dish here\n\nn, m, k = map(int, input().split())\nn1 = k+1\nm1 = n+2\nk1 = n+1\ni = 1\nwhile i <= k1 and m1 <= n:\n    i *= 2\n    m = m1*k + 1\nprint(n1)", "a = int(input())\na.append(int(a[-1]))\na.append(int(a[-2]) + 1)\nans = []\na.sort()\nif b[a[-1]] < k:\n    ans.append(a[-2])\nelse:\n    a.pop()\nprint(ans)", "n=int(input())\nl=[0]*n\nfor i in range(n):\n\tn=int(input())\n\tif(n%2==0):\n\t\tprint(n)\n\t\tprint(l[i])", "def process():\n\n\n\n\n\n#n = int(input())\n\n\n\n\ndef check(x, y, m, k):\n\n\n    x = x % m\n\n    if not x:\n        return False\n\n    if x % k:\n        return False\n\n    if k >= k:\n        return True\n\n\n    n = int(input())\n    n1 = int(bin(n)[2])\n    k = int(bin(n)[2])\n\n    n2 = int(bin(n)[3])\n\n    n3 = int(bin(n)[0])\n\n    print(2 * (n2 * n3 - 1))\n\n\n\n\n\ndef process():\n\n    main()", "m,k=map(int,input().split())\nl=[int(x) for x in input().split()]\ncount=[]\nfor i in range(1,m+1):\n    count[i]=l.count(i)&1\nprint(count)", "m, k = map(int, input().split())\np = k * 10 ** 18\n\nq = [0 for _ in range(10 ** 12)]\nfor i in range(10):\n    if i % k!= 0:\n        q.append(q)\nif q:\n    n = (q[-1] + 1) // (q[-1] + 1)\nprint(n)\n"], "137": ["def main():\n    n, m = list(map(int, input().split()))\n    n_2 = n - m - 1\n    n_3 = n - 2\n    n_4 = m - 3\n    n_5 = n - 2\n    n_6 = n - 3\n    print(n_2 * n_3 + n_5 * n_2) % (10 ** 9 + 7)\n", "n, m = map(int, input().split())\nm = int(input().split())\nif m == 1:\n n = 3\n print(n + 2) % (10 ** 9 + 7)\nelse:\n if m == 1:\n  print(n + 2) % (10 ** 9 + 7)\n else:\n  print(m + 2)", "n, m = list(map(int, input().split()))\nmod = 10**9 + 7\n#s = (n-2)//3\n#a = [n-3]*(m+2)/3\n#b = [n-1]*(m+1)\n#x = []\n#y = []\n#l = 0\n#p = []\n#d = []\nfor i in range(m-2):\n#\ta[i] = a[i-1]\n#\tj = 0\n#\tfor i in range(n-2):\n#\t\tif a[i] > b[i]:\n#\t\t\tj += 1\n#\t\t\ta[j] = a[j-1]\n#\tif a[j] < a[i-2]:\n#\t\t\tp.append(a[i-2])\n#\td.append(a[i])\n#\tm.pop(n-1)\n#\tif m==1:\n#\tj+=1\n#\telse:\n#\t\t\tp.append(a[i])\n\nprint(mod)\n", "import sys\n\nn,m=list(map(int,input().split()))\ns=0\nfor i in range(1,m):\n    a=int(sys.stdin.readline())\n    if a%i==0:\n        s+=1\n        m+=(m-a%i)\n\nprint(s%1000000007)", "n,m=list(map(int,input().split()))\nprint((1 + ((n-1)*2)) % (10 ** 9 + 7))\n", "from sys import stdin\nfrom collections import defaultdict as dd\ndef run(n, m):\n    if n == 1:\n        return dd(n, m - 1)\n    else:\n        a,b = list(map(int, stdin.readline().split()))\n        count = dd(m - 1, n - 1)\n        for i in range(1, m + 1):\n            if i == a:\n                if b in list(a):\n                    count = (count + dd(a, i - 1)) % (10**9 + 7)\n            return count\n\nn, m = map(int, stdin.readline().split())\nn, m = n, m\nm = int(stdin.readline().split())\nfor i in range(m):\n    a = 0\n    a = a\n    b = b\n    print((a-b)% (10 ** 9 + 7))"], "138": ["import sys\ninput = sys.stdin.readline\nm, s = map(int,input().split())\nif s == 0:\n    print(-1 -1)\nelse:\n    n = int(input())\n    if len(list(map(int,input().split()))) < n:\n        print((m,s))\n    else:\n        print((s[0]+1))\n", "\nn, k=map(int, input().split())\nl=len(k)\nif(k<n):\n    print(-1, -1)\nelif(m<=n) or (s<=n):\n        print(-1, -1)\n    return\nl=m+n-1\nx=m*k\ny=l//k\nk=0\nn1=1\nwhile(m<n2):\n    z=s+y\n    while(k<n1):\n        x=x+m-k\n        y=y+y\n        x=x+(j*(j-1)+1)\n    y=x*k+n1\n    if(x<=m) and (x<y):\n        break\n    if(y<=n1):\n        y=x\n    x=1\n    if(x>y):\n        y=x\n    else:\n        y=y\n    m1=x+m-1\nfor i in range(n2):\n    y=y+m-i-1\n    x=x\nprint(x,y)\n", "m,s=list(map(int,input().split()))\nif m==0:\n    print(-1)\nelse:\n    if m==0:\n        print(-1)\n    else:\n        l=s\n        while l<(sum(map(int,input().split()))):\n            m-=1\n            if m>=0:\n                s+=l\n                l=l\n            if l>=s:\n                if m==0:\n                    print(m-1,m)\n                    print(m-1,m)\n            else:\n                s+=l\n                m-=1\n        print(-1,m)\n        m+=1\n", "m,s=map(int,input().split())\nif m==s:\n    print(\"-1 -1\")\nelse:\n    if (m==s):\n        print(\"-1-1\")\n    else:\n        maxs=s\n        return\n    else:\n        if(s==m:\n            print(str(maxs))\n            print(str(maxs))\n        return\n", "m, s = input().split()\n\nif m > m:\n    print(-1 -1)\n    else:\n        return int(min(str(s) * m) if s >= 0 else 0) + -1\n", "m, s = map(int, input().strip().split())\n\nif len(s) == 0:\n    print(-1 -1)\n else:\n    ans = []\n    for i in range(1, len(s)):\n        s += s.count(i)\n        if s % i == 0:\n            ans.append(i)\n    print(ans)\n"], "139": ["import math\ninput = sys.stdin.readline\nl,r,k=list(map(int,input().split()))\nl=max(l,r)\nr=min(l,r)\n\nans=0\nfor i in range(l-2,-1,-1):\n    if(l%i==0):\n        ans=ans+(int(l/i))*100\n    else:\n        ans=ans%998244353\nprint(ans%1000000007)", "def main():\n    m = 9244353\n    l = 0\n    r = 0\n    k = 10\n    ans = 0\n    d = 10\n    for i in range(l,r):\n        d += 1\n        d *= i\n        for j in range(l,r):\n            m *= i\n            ans += (m*(j - i) * d) % m\n    return ans\n\ndef __starting_point():\n    l,r,k = list(map(int, input().split()))\n    m = 9 * l\n    a,b = l, r\n    print(main()\n\n", "def __starting_point():\n    l, r, k = list(map(int, input().split()))\n    i = 0\n    j = 0\n    while l < r:\n        while i < int(l**2 + r*k) and r-i <= l:\n            i += 1\n            j += 1\n        print(i)\n\n__starting_point()", "from sys import stdin, stdout\nfrom bisect import bisect_left as bl, bisect\n\nl, r, k = map(int, stdin.readline().split())\nm = 998244353\nc = 0\nfor i in range(len(l)):\n    if l < r:\n        c = 9698244353\n    else:\n        c += (l - r) * (k // 2)\n        c += (i - 1) * (k - 1)\n    print(c%m)\n", "l,r,k=map(int,input().split())\nf=[]\nfor i in range(l,r+1):\n    if i==r:\n        f.append(i)\n    else:\n        f.append(f[i])\nfor i in range(l,r,k):\n    f.append(f[i])\nfor i in range(l,r):\n    f.append(f[i]+f[k-1]+f[i+2])\nfor i in range(r,l+1,k-1):\n    f.append(f[i+1]+f[i+2]+f[k-i+1]+f[k-i+3]%1000000007)\nprint(sum(f))", "l,r,k = map(int,input().split())\nif r<=l*k:\n    print(l*10)\n    elif l%10==0:\n        print(r*100)\n    else:\n        l %=10\n        r = r//10\n        count = 0\n        mod = 986244353\n        for i in range(l,r,k):\n            sum_num = (sum_num * (i+1)//(k+1))%mod\n            count+= count\n        print(sum_num%(mod))\n"], "140": ["def next(n):\n    res = next(n)\n    return int(res)\n\nn2 = int(n)\nn1 = int(n)\nfor i in range(1,11):\n    n2 *= 10\n    n2 = int(n2)\n\nprint(n2,end=' ')", "# cook your dish here\nn = int(input())\np = 10**9\ndp = [[0]*(10**9) for _ in range(n+1)]\nans = 0\nans = int(p*10**9) - n\nprint(ans)", "n = int(input())\nfor i in range(n):\n    a = input()\n    if a==0:\n        print(10)\n    elif a==10:\n        print(n)\n    else:\n        print(a % 10)\n    return(10)\nprint(n)", "import math\n\nn = int(input())\nif n % 10!= 0:\n    print(n)\nelse:\n    print(n)", "\nn = int(input())\nans = n\nfor i in range(0, n-2, -1):\n    ans = (ans * 10**i + int(n**(1/2)))%10\nprint(ans)", "import sys\ndef find(n):\n    if n < 0:\n        n = 10\n        return n\n    else:\n        return int(sys.stdin.readline().strip())"], "141": ["from collections import Counter\n\ndef scan_file(f, s):\n    c = Counter(f)\n    n = len(s)\n    if n % 2 == 0:\n        return -1\n    k = n // 2\n    count = 1\n    print((c.count(c))\n    for c, i in list(c.items()):\n        if count[c] == k:\n            count += 1\n            count = 0\n    return count\ndef __starting_point():\n    main()\n\n__starting_point()", "s = input()\nt = input()\npairs = 0\n\n#print(s)\n\n#print(t)\n\ns.sort()\ncount = 0\nfor i in s:\n    if i not in pairs:\n        pair+=1\n    else:\n        if i==0:\n            for j in range(0,len(s)):\n                if s[j].count(s[i])==1:\n                    continue\n                pair-=1\n            if s[j].count(s[i])>1:\n                key=s[j].count(s[i])\n                key+=1\n\nprint(pair)\n#", "import sys\n\ns,t = input(), input()\nt=[s[0],t[1]]\nn=len(s)\ncount=set(t)\nif(len(n)>=2 or s[0]==t[0]):\n    return count\ns=s[-2:]+s\nn=len(s)\nn=n+n-1\nn=n-1\nprint(0)", "s,t=input(),input()\na=list(map(lambda m:int(m.group())+int(m.group()+1),s.split()))\nprint((int(len(a)//2)+1))", "s, t = input().split()\n\nk = len(s)\nwhile(s!=t):\n    if (k < 0):\n        k = 0\n        print(0, end=\" \")\n        for x in s:\n            if k == 0:\n                s, t = t, t\n            elif s == t and t == s[x]:\n                s = s[0:x] + \" \" + s\n            k += 1\n        elif s == t:\n            print(0, end=\" \")\n            if k == len(s):\n                print(0, end=\" \")\n            break\n    print(k)\n", "# cook your dish here\ns, t=input().split()\nd=[]\n\nfor i in range(len(s)):\n    if s[i]==t[i]:\n        d.append(i+1)\n    else:\n        d.append(s[i])\ns=list(s)\nprint(len(d)-d[-1])\n"], "142": ["s=input()\na=s[0]\na=s[1]\na.append(a[0])\na.append(a[1])\nb=s[2]\nfor i in range(3,len(a)):\n    if a[i]==b[i]:\n        b[i]=c[i]\nfor j in range(2,len(a)):\n    if a[j]==a[j+1]:\n        b[j]=c[j+1]\nfor i in range(3,len(a)):\n    print(a[i])\nprint(' '.join(sorted(b)))\nprint(' '.join(b))\nprint('\\n')\n", "a,b=map(str,input().split())\nif(len(a)>len(b)):\n    print(a)\nelse:\n    print(b[:(len(a[0])])+\" \" + str(a[len(b)-1:]))", "import sys\nfor i in range(int(sys.stdin.readline())):\n    str1,str2 = str1[0], str1[1]\n    for j in range(1,10):\n        print(''.join(str1[:j+1] for j in range(len(str1)-1, len(str2)+1)))", "x=input()\nfor y in range(x):\n    x=x.rstrip()\n    y=y.rstrip()\n    x = x[0]\n    y=y[1:]\n    y.reverse()\n    s=\"\"\n    if len(s)<=1:\n        print(\" \".join([x,y]))\n    else:\n        x=x[:-1]+[x]\n        y=x[0:]\n        z=\"\"\n        if x<z:\n            y=z\n        x=x\n        else:\n            z=z\n        z=z+x[z+1:]\n        x.reverse()\n        a=x[0:]\n        y=y[0]+y[1:]\n        s.reverse()\n        s.reverse()\n    z=z[0]\n        c=c+1\n        for i in range(len(x)):\n            if x[i]==z[i]:\n                y=y[i]\n                c+=1\n            break\n    z=z+x[i+1:]\n    print(a)", "r=input()\nh=sorted(r)\nm=set(d)\nl=[]\nfor i in range(len(m)):\n    s=input()\n    m=m[i]\n    l.sort()\n    while m:\n        if m[i]==s[m[-1]]:\n            m.pop()\n            if m[i]!=s[m[-1]]:\n                m.append(m[-1])\n                for s in l[m:].append(s[m[:-1]])\n            m.pop()\nprint(m)", "# cook your dish here\ndef get_login_from_list():\n    arr = list(map(str, input().split()))\n    l = len(arr)\n    res = []\n    for i in arr:\n        if i == l[0]:\n            res.append(i)\n        elif i < l[-1]:\n            res.append(i+1)\n    if len(res) > 9:\n        res.append(i)\n    else:\n        res.append(i+1)\n\ndef __starting_point():\n    n = int(input())\n    if n == 0:\n        return \"\"\n    print(get_login_from_list(n))\n__starting_point()\n__starting_point()"], "143": ["def main():\n    n = int(input())\n    d = {}\n    for i in range(n):\n        s = input()\n        for j in range(1, int(s[j])):\n            if i!= j:\n                d[i] = int(d[i])\n            if d[i] == \"1\":\n                d[j] = 0\n            d[j] = d[j] + 1\n    if \"0\" in d:\n        d[\"0\"] = 0\n        else:\n            d[\"0\"] = 0\n            else:\n                d[\"0\"] = 1\n        d[\"1\"] = 1\n    if d[0] > d[0]:\n        d[0] = d[0]\n    else:\n        d[0] = d[0] + 1\n    elif d[0] < d[1]:\n        d[1] = 1\n    print(\">\")\n    else:\n        print(\">\")\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\ns = input()\na = [ int(i) for i in s]\nm = [ float(i) for i in s]\n\nif n < 10:\nprint \">\"\nelse:\n    print(s[0])", "n = int(input())\na = [int(i) for i in input().split()]\nfor i in range(2,n):\n    if(i[0]=='1') or(i[1]=='1'):\n        a.append(1.0/2)\nelif(i[-1]=='0'):\n    a.append(0.0/2)\nelse:\n    a.append(1.0/2)\nprint(a[0])", "s = input()\nans = 0\nfor i in s:\n\telif i == '0':\n\t\tans+=int(str(i))\n\telif i == '1':\n\t\tans-=int(str(i))\n\tif ans>=0:\n\t\tans=int(str(i))\n\telse:\n\t\tans=int(str(i))\nprint(\">\" if ans<=0 else \">\")", "x = input()\ny = 0\ni = 1\nj = 0\nwhile(x<10):\n    x += int(x)\n    if(y<=11:\n        j += 1\n        i = j\n        j += 2\n    else:\n        i = 2\n        j -= 1\nprint('>'+['>'if int(x) > 1 else '<'+str(x) + ']'.join(map(str, ans)))\n", "a=input().strip()\nb=input().strip()\nwhile(b):\n a=a.split(\"0\")\n b=b.count(\"1\")\n b=b.count(\"0\")\n print(\">\" if b<a else \"<\")"], "144": ["N=int(input())\nA=[]\nwhile (N>0):\n    a.append(S[int(input())])\n    B.append(0)\n    a.append(r''' {A.index(X)-1} {B.index(X)}''')\n    A.append(U[n-1])\nn=n-1\nprint(len(A))", "n = int(input())\n\nl = [\"purple\", \"green\", \"blue\", \"orange\", \"green\", \"yellow\", \"orange\", \"green\", \"blue\", \"orange\", \"red\", \"yellow\"]\nl2 = [\"soul\", \"soul\", \"reality\", \"soul\", \"mind\"]\nl2 = [\"Power\", \"Time\", \"Space\", \"soul\", \"Reality\", \"soul\", \"soul\", \"silver\"]\nprint(len(l))\n", "import sys\nsys.setrecursionlimit(200001)\nnum=int(sys.stdin.readline())\narr=[]\nfor i in range(0,num):\n    arr.append(int(sys.stdin.readline()))\nprint(len(arr))", "n = int(input())\nans = [0 for i in range(n)]\nfor i in range(n):\n    if i == 1:\n        ans[i] = 0\n    elif i == 2:\n        ans[i] = 2\n    \n    else:\n        ans[i] = 1\n    ans[i] = 2\n\nprint(ans)\n", "n=int(input())\nfor i in range(n):\n\tans=0\n\tif i%2==1:\n\t\tans=ans+1\n\telif i%2==0:\n\t\tans=ans+1\n\tif i%2==1:\n\t\tans=ans+2\n\tprint(ans)", "n = int(input())\nans = 0\nfor i in range(n):\n    if i == \"0\":\n        ans += 1\n    else:\n        ans += i\nprint(ans)\n"], "145": ["for x in range(int(input())):\n    v1, v2 = [int(x) for x in input().split()]\n    d = v2 - v1\n    max_val = 100\n    i = 2\n    while i < t:\n        if v1 > v2:\n            v1 = v2\n            else:\n                v2 = v1\n        if abs(v1 - v2) > d:\n            d = abs(v1 - v2)\n            i += 1\n    print(max(v1, i))\n", "import sys\ninput = sys.stdin.readline\n\ndef solve(p1,p2,d,v):\n    if p1+p2 > v:\n        return\n    p1=p2+p1\n    return abs(p1-v)\n\nt=int(input())\nfor i in range(t):\n    v1,v2=map(int, input().split())\n    x,y=input().split()\n    print(solve(v1,v2,x,d,0))\n", "s=set(map(int, input().split()))\nfor i in range(t):\n    v1,v2=map(int, input().split())\n    l=v1+v2\n    l.remove(0)\n    p=v1-v2\n    l.remove(p)\n    d=v1-v2\n    if d==0:\n        print(100)\n    else:\n        print(abs(abs(v1-s)).max(abs(v2-s))))", "v1,v2=map(int,input().split())\nmin_d=100-v1+v2\nd=min_d-v1+v2\nprint((abs(abs(max_d-min_d)/abs(d)))", "t=int(input())\nfor i in range(t):\n    v1,v2=list(map(int,input().split()))\n    d=(v1+v2)**0.5\n    max_speed = 0\n    if d>max_speed:\n        max_speed = d\n    print(max_speed)", "def dp(v1, v2,d,s=10):\n    c=0\n    for k in range(2,int(v1/v2*s)):\n        c+=abs(v1-v2/v1)\n        if d>0:\n            c=c+abs(v1-v2/s)\n    if c<10:\n        s=v1+abs(v2-v2)\n    return s\n\nt=int(input())\n\n#print(dp(t))\nr=max(dp(t-1),dp(t-2))\n#print(r)\nprint(r*(10-r))"], "146": ["def main():\n\ta, b = list(map(int, input().split()))\n\tans = []\n\twhile a:\n\t\ta = a//a\n\t\tif a % 2 == 0:\n\t\t\tans.append(a%2)\n\t\t\tb = b/2\n\t\tif b % 4 == 0:\n\t\t\t\tans.append(a%4)\n\t\t\tb = b//4\n\t\tans.append(a//4)\n\t\t\tb = b//2\n\tprint(ans[0])\n\t\tans = None\n\tprint(ans)", "import math\n\na, b = list(map(int, input().split()))\nprint(float(\"{:b}\".format(b)))", "a,b = map(int, input().split())\nprint(b)", "a, b = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = 0\nfor i in range(0, len(a)):\n    if a%i==0:\n        ans+=1\n    else:\n        ans+=a%i\nprint(ans)", "a,b=map(int,input().split())\nans=0\nfor i in range(b):\n    print(a%10+i)", "a, b = map(int, input().split())\n\na = a / int(a)\nb = int(b)\nans = 0\ni = 0\nfor j in range(1, max(b, 2)):\n    ans = ans + (a % j)\n    i += (int(i**.5) + j) // 2\nprint(ans)"], "147": ["def __starting_point():\n    n = int(input())\n    n = n + 1\n\nif n % 2 == 0:\n        return 1\n    if n == 1:\n        return 2\n    for p in range(2, int(sqrt(n)) + 1):\n        print(p // 2)\n        return 0\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=int(input())\ni=1\nwhile i<=n:\n    print(i)\n    i+=1\nprint(1)\n", "def prime_number_to_integers():\n    n = int(input())\n    if n % 2 == 0:\n        print(2)\n        return 0\n    n += 1\n    if n % 2 == 0:\n        print(1)\n    return 1\n\nprimes = [2 for i in range(2)]\nfor i in range(2, n + 1):\n    for j in range(2, n+1):\n        if i % i == 0:\n            if i % j == 0:\n                primes[j] = 2\n            break\n    primes[j] -= 1\nif primes[j] == 0:\n    print(1)\n    else:\n        print(2)\n\nfor _ in range(3, int(input())):\n    for i in range(2, int(input())):\n        print(int(input()))\n", "from fractions import gcd\nfrom bisect import bisect_left as b\n\ndef main():\n    n = int(input())\n    a = [1]\n    b = []\n    for i in range(2, n+1):\n        if b[i]:\n            a.append(i)\n        else:\n            b.append(i)\n\n\nn = int(input())\nprint(1)\n\n\n\n\n\n\ndef __starting_point():\n\n\n__starting_point()", "n=int(input())\np=2\nfor _ in range(n):\n    if n%2==0:\n        if n % 2==0:\n            p+=1\n        else:\n            print(p)\nprint()\n", "n=int(input())\nwhile n>1:\n    if n%2==0 and n%2==0:\n        print(n-n//2)\n        n=n//2\n    elif n!=2:\n        print(2)\n    else:\n        print(3)"], "148": ["import sys\n\nn = int(input())\na = []\nfor i in range(0,n+1):\n    a.append(int(input()))\nfor i in range(1,i+1):\n    if i < n:\n        a.append(n)\nprint('YES')\nexcept:\n    print('NO')", "# cook your dish here\nn=int(input())\nif n==0:\n print(\"YES\")\nelse:\n print(\"NO\")", "# cook your dish here\nimport math\n\n\ndef dp():\n    return list(map(int, input().split()))\n\ndef check(n):\n    return [math.ceil(n/math.gcd(n, i))]\n\ndef numbegs(n):\n    return [math.ceil(n/math.gcd(n, i))]\n\nprint(\"YES\")", "from math import factorial\nimport math\n\ndef main():\n    n = int(input())\n    if n == 1:\n        print(\"YES\")\n    else:\n        ans = 1\n        for i in range(n):\n            ans = ans * i\n        if ans > 1:\n            ans = 1\n            for j in range(n):\n                ans = n - j * i\n        print(\"YES\")\n        else:\n            ans = 0\n        print(\"NO\")\n", "def check(n):\n if n == 1:\n  return True\n if n == 0:\n  if n < 2:\n   print(\"NO\")\n  return False\n if n==2:\n  print(\"YES\")\n else:\n  print(\"NO\")", "n=int(input())\nprint(\"YES\")"], "149": ["# cook your dish here\n# cook your dish here\nn = int(input())\n\nk = 0\n\nwhile k < n:\n\n    if k >= n:\n        k += 1\n\n        k = k\n\n    k = n // k\n\n    k = n - 1\n\n    k = k // k\n\n    k = k // k\n\n    k = 0\n    if k == 1:\n        k += 1\n\n    if k == 0:\n        k = 1\n\n    for i in range(k, k):\n        k += i\n\n    if k > 0:\n        k -= n // i\n\n    k = 0\n\n    for i in range(k):\n        k += n // i\n        k = k - 1\n        k += 1\n\n    if k == 1:\n        print(k)\n    else:\n        print(k)", "n=int(input())\nwhile n:\n    n-=1\n    k=0\n    for i in range(2, n+1):\n        k+=i\n        k+=1\n    print(k)\n", "n = int(input())\n\nl = [list(range(0, n+1)),[1] if n%2 else [int(i) for i in range(n+1)]\n\nif n%2==0:\n    l.append(1)\n    if n!=1:\n        return 1\n\nl[1] = [1] * (n-1)+1\nfor i in range(2, n+1):\n    l[i] = l[i-1] if i>0 else l[i-1] + l[i-1]\n    l[i+1] = l[i+2]\nprint(l[-1])", "import sys\ninput = sys.stdin.readline\nn = int(input())\ns=0\nfor i in range(1,n):\n    if str(i)==str(i):\n        s+=1\n    else:\n        s+=i\nprint(int(s)\n", "input()\n\n\nn = int(input())\n\ns = [-1] * n\n\ns.sort()\n\ns[-1] += 1\ns[-2] -= 1\nfor i in range(1, n + 1):\n    s.append(int(s[:2] + s[0:-1]))\n\nprint(s[-1])\n", "input = sys.stdin.readline\n\n\ndef check_n(n):\n    s = [0] * (n+1)\n    f = 0\n    for i in range(1, n+1):\n        f = f + (i-1)*f\n        for j in range(1, n+1):\n            if s[j] % i!= 0:\n                f = f + (j - 1) // i\n            print(f)\n    return f\n\ndef work_len(n):\n    i = 0\n    while len(n) > 1:\n        i += 1\n        n -= 1\n\n    for j in range(i, n+1):\n        if n % j == 0:\n            n -= j\n            i += j\n\n\n\ndef __starting_point():\n    main()\n__starting_point()"], "150": ["n,k = list(map(int,input().split()))\nl=[[0 for i in range(k+1)] for _ in range(n+1)]\nres=0\nfor i in range(k+1):\n  for j in range(i):\n   while l[i][j]<=l[j][i+1]:\n    l[i][j]=l[j][i+1]\n    s=s-l[i-1][j]\n   s=s-l[i-1][j]\n   res=max(res,s)\nprint(res)\n\n\n# cook your dish here\n\n\n", "def _n(a, b):\n a, b = list(map(int, input().split()))\n print(n*k*n)\n", "from math import gcd,floor\nn,k=list(map(int,input().split()))\nfor i in range(n):\n    if k%i == 0:\n        if gcd(k,i):\n            continue\n    else:\n        print(abs(i-k-1)*len(n-k))\nexcept:\n    pass", "import numpy as np\n\nn,k=list(map(int,input().split()))\nres=np.ones(n)\n\nans=max(arr)\n\nans=np.prod(arr)\nans=max(ans,arr)\nprint(ans)", "n, k = map(int, input().split())\nm = 0\nn,k = map(int, input().split())\n\nprint(min(k)-max(k))", "import sys\ninput = sys.stdin.readline\nn, k = map(int, input().split())\nc = (n + k)//2\ng = (k - 1)//2\nfor i in range(2, n + 1):\n  g[(n + i) % k] += g[(n + i) % k]\nprint(g[(n - k) % k] * n + g[(n - k) // k])"], "151": ["input = lambda: input()\nvk,vk = ['V','K'],['V','K']\nfor i in range(1,vk.count('V')):\n    print(vk.count('K' + i) * 2 + int(kk.count('V'))", "s = input()\nf = 0\nfor i in range(len(s)):\n    s = s[:i] + s[i + 1:]\n    f = f\n    if len(s) > 2 or (len(s) < 3 or s[0] == 'V'):\n        f = 1\n        break\n    if f:\n        f += f + 1\n    else:\n        f = f + 2\nprint(f)", "n = input()\ncount = 0\nl = n.split(\" \");\nfor i in range(len(l)):\n    s = input()\n    for j in range(len(s)):\n        if s[j]!= s[i+1]:\n            count+=1\n    print(count)\n", "s=input()\nv=s.split(\"V\")\nk=s.split(\"K\")\nans=0\nfor i in range(1,len(v)):\n    if v[i]+k[i-1]==v[i+2]:\n        ans=max(ans,n-v[i+1]+1)\nprint(ans)", "def maxK(input,s):\n\tn = len(input)\n\tn = len(s)\n\tprint((2*(n-1)//2+1))/2\n\nif n < 0:\n\tif s[0] == s[1]:\n\t\t\tprint(0)\n\telse:\n\t\tprint(1)\n\tif n < 0:\n\t\t\tcontinue\n\t\telse:\n\t\t\tmaxK(n-1)\n\tprint(maxK(n-1))", "s = input()\ncnt = 0\nfor x in range(len(s)):\n\tx = s[x]\n\tcnt += 1\n\twhile len(s) > 1:\n\t\tif c == 'V':\n\t\t\tcnt += 1\n\t\telse:\n\t\t\tcnt += 1\n\t\tprint(cnt)\n\tbreak\n\tc = c+1"], "152": ["a, b=map(int, input().split())\nl=a\nb=b\nl.sort()\nb=b-l[-1]\nfor i in range(3,a+1):\n    l.append(i+b)\nfor i in range(3,b+1):\n    print(i)", "a, b = map(int, input().split())\nprint(2*a-b)", "a,b=map(int,input().split())\nl=0\nfor i in range(b+1):\n    l+=1\nans=0\na=max(a,b)\nif a>b:\n    print(1)\nelse:\n    print(2)", "def solve():\n    a,b=map(int,input().split())\n    if a==b:\n        return a\n    elif a>b:\n        return a\n    elif b>a:\n        return a\n    elif b>a:\n        return a*b\n    else:\n        return solve()\n\nans=0\nfor i in range(1,10):\n    a-=i\n    b-=i\n    print(solve()+1)\n", "a, b = list(map(int, input().split()))\na = a - b\nif a <= b:\n print(2)\nelse:\n print(3)", "a, b = input().split()\nl = []\nfor i in range(b):\n    l.append(a)\nprint(l.count(max(l)+2))\n"], "153": ["import sys\ninput = sys.stdin.readline\n\n# Input = sys.stdin.readline\n\n# n = int(input())\n# m = int(input())\n# print(n)\n\n\ndef dfs(n,m,p,j):\n    if n == m:\n        return\n        elif n == p and p + j > 1:\n            return\n        if m == n:\n            print(i,j,p,n)\n            x = int(input())\n        dfs(n,m,p,i,j)\n        dfs(n-x,m,p,j,x)\n        if n == m:\n            print(n-x,n-x,p+1)\n        else:\n            print((n-x,n,p-1))\n        return\n        \n        dfs(n,m,0,0,0)\n        k = 0\n        for i in range(n - m, 0, -1):\n            if dfs(i,j,0):\n                k += 1\n            k += j\n        k += 1\n        \n    return k\n\ndef main():\n    i = 0\n    j = 1\n    while j < i:\n        m = n - i\n        if j!= m:\n            m = j - m\n            i += 1\n        if i!= m:\n            print((n,m,m,k))\n        j += 1\n\n", "# cook your dish here\nx = int(input())\n\nfor i in range(x):\n    for j in range(1,x+1):\n        for k in range(i,i+1):\n            x += j\n\nprint(x//2)", "from sys import stdin, stdout\nfrom math import log2, gcd\n\nn, m = map(int, stdin.readline().split())\nlis = list(range(n))\nlis[0] = 1\nfor i in range(1, n+1):\n    m = lis[i-1]\n    lis[n-1] = n+1\nprint(2 * lis[n-1],2 * lis[n-1])\n", "import sys\ninput = sys.stdin.readline\n\ndef dfs(n, m):\n    if n % m == 0:\n        dfs(n//m, m, m)\n        return\n    elif n % m == 0:\n        dfs(n-1, m, m, n - 1)\n    return\n    else:\n        print(dfs(n, m))\nprint()", "def s(i,j,k,x):\n    if(i,j) in [1, 2, 3, 5, 4]:\n        return 0\n    if((i+k)%(2*x)-(x-i)%(2*y)):\n        return 0\n    y,k = i*y,j*x\n    while(y**(2*x-1))==1:\n        if(i==0 and j!=(i+k)-1):\n            break\n        if(j==x):\n            break\n        k=k-x\nprint((k,k))\n\ndef main():\n    main()\n__starting_point()", "def check():\n    x,n = map(int,input().split())\n    if(n==1):\n        print((2))\n        print((2) + 1)\n        else:\n            x = x*x-1\n        print((x-1)*(n-2)+2)\n        print((x-1)*(n-1))\n        c=0\n        for i in range(n):\n            if(x==x):\n                print((x-1)*c)\n            c+=1\n        else:\n            c+=1\n    return c\ndef i(n):\n    return(i+1)*(n+1)*(x-1)+1)"], "154": ["n = int(input())\np = 0\nfor i in range(1,n):\n    a = 1\n    b = 1\n    while (b <= n):\n        if a > b:\n            p += n // i\n            break\n            elif b >= a:\n                p += n - b\n        b = n // i\n    else:\n        p += 1\n    print('YES')\n\n\n\n", "n, k = map(int, input().split())\na,b = [1,1]\nfor i in range(n+1):\n    a[i] = a[i] + b[i]\n#print(a)\n#print(b)\nf = list(map(int, input().split()))\nfor i in range(len(f)):\n    if f[i] < 0:\n        if b[i] == 0:\n            continue\n    else:\n        f[f[i]] = (f[i] + a[i-1])//f[i-1]\n        f = a[i-1]\nprint(\"YES\")\n", "n=int(input())\nr=[]\ni=0\nfor i in range(n+1):\n    r.append(a*b)\nk=int(input())\nt=[]\nfor i in range(n+1):\n    k=1\n    r.append(b)\n    j=int(n/2)\n    k=n-i\n    print(\"YES\")\n", "import math\nn=int(input())\na=1\nb=1\na=10**9\nb=10**9\na=math.ceil(n/a)\nb=math.ceil(n/b)\nans=[]\nfor i in range(1,b):\n    a+=1\n    b-=1\nfor i in range(1,b+1):\n    if b/i<a:\n        ans.append([1,i])\nif ans.count(1)>0:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "n=int(input())\ns=0\ns=0\nm=0\nfor i in range(n):\n    m=int(input())\n    a=n\n    i-=1\n    k=len(s)-1\n    l=l+1\n    while(k<m):\n        s+=s\n        n/=k\n    if k==m:\n        print(\"NO\")\n    else:\n        print(\"YES\")", "n = int(input())\n\nfor i in range(2, n + 1):\n    a,b = map(int, input().split())\n    if a % b == 0:\n        print('YES')\n    return\n\n\ndef test_bisect(a, b):\n    while a <= b:\n        b += 1\n    a, b = b, a + 1\n    if a > b:\n        print('NO')\n    else:\n        b = a\n    return\n\ndef __starting_point():\n    s = []\n    for i in range(len(s)):\n        if s[i] < s[s[i]]:\n            s.append(i)\n        else:\n            s.append(s[i])\n\n__starting_point()"], "155": ["n,m,k=map(int,input().split())\nx=list(map(int,input().split()))\ny=list(map(int,input().split()))\n\ndef find_all_points(i):\n    while i<n:\n        if x[i]<y[i]:\n            return True\n        for j in range(n):\n            x[i]+=j\n        return False\n\nif m%2==1 and k%2==1:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "# cook your dish here\nfrom math import sqrt\nn,m,k=map(int,input().split())\nl=list(map(int,input().split()))\nfor _ in range(m):\n    n1=list(map(int,input().split()))\n    x1,y1,x2,y2=list(map(int,input().split()))\n    if n1==1:\n        l.append(n1)\n    elif n2==1:\n        l.append(n2)\n    else:\n        l.append(n2)\n        l.append(k)\n\nif n==0:\n    print(\"YES\")\nelse:\n    y1=list(map(int,input().split()))\n    x2,y2=list(map(int,input().split()))\n    if (y1==1 and y2==1):\n        print(y1)\n    elif (x1==1 and y2==1):\n        print(x2)\n    elif (y1==2 and y2==1):\n        print(y2)\n    elif (x2==2 and y1==2):\n        print(y2)\n    elif (y1==3 and y2==3):\n        print(x2)\n    elif (x2==2 and y2==1):\n        print(y2)\n    elif ((y2==2 and y1==0)):\n        print(x2)\n    else:\n        print(x1+1,y1+1)\n    else:\n        print(\"NO\")", "from sys import stdin\nn,m,k=input().split()\nif n==0 or m==0 or k==0 or k==0:\n    print(\"NO\")\nelse:\n    n,m,k=map(int,input().split())\n    y1=m*k\n    x2=m*k-y1\n    y2=m*k+y2\n    if n==1:\n        print(\"YES\")\n    else:\n        y1=n\n        y2=m-k+y1\n        x3=m-n-n\n        x4=y1+y1\n        if (n==0 or m==0) or (n==1):\n            print(\"YES\")\n        elif (n==0 or m==0) or (m==0 and k>0):\n            print(\"NO\")\n        else:\n            print(y1,y2)", "n,m,k=map(int,input().split())\nif(n==0 and m==0):\n    return\nn,m,k=map(int,input().split())\nf1,f2=1,1\nwhile(m>=2):\n    if m<=m-k:\n        f1,f2=f1+f2,f2+f3\n        f3=f4-f2\n    print(\"YES\")\n    f = f2\n    if(f1-f2)<=k:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n", "n, m, k = map(int, input().split())\nif n == 0 or m == 0 or k == 0:\n    print(\"NO\")\nelse:\n    x, y = list(map(int, input().split()))\n    y2, x3 = list(map(int, input().split()))\n    if len(x1) == len(y2) or len(y3) == len(x3):\n        print(x1)\n    else:\n        print(x2)", "n,m,k=map(int,input().split())\nl=[int(x) for x in input().split()]\no=[int(x) for x in input().split()]\nif((n>m-2)&1):\n    b[n]=int(y)&1\n    d=n/(n+m)\n    d[m]=int(y)&1\n    print(\"NO\")"], "156": ["n, k = [int(x) for x in input().split()]\nmoves = m.count(1)\nif m==n-1:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "import sys\ndef main():\n    n, k = map(int, input().split())\n    print(\"YES\")\n\n\ndef __starting_point():\n    s = s-k\n    for i in range(s+1, s+k+1):\n        if s:\n            print(\"YES\")\n            break\n        s += n\n    print(\"NO\")\n\n__starting_point()", "n, k = map(int, input().split())\ndp = [[0]*(k+1) for _ in range(26)]\ndp[0][n] = n - k\nfor i in range(1, k+1):\n    for j in range(26):\n        dp[i][j] = dp[i - 1][j - k] + 1 if k > n else 0\nprint(\"YES\")\n", "n,k=list(map(int,input().split()))\ns=0\np=len(sorted(map(int,input().split())))\nfor i in range(p):\n    if s<=k and s>n:\n        print(\"YES\")\n        s+=1\n    else:\n        print(\"NO\")\n", "t=int(input())\nfor _ in range(t):\n n,k=map(int,input().split())\n d=(k-1)//n\n w=(n-1)//k\n if w<=k:\n  print(\"NO\")\n else:\n  print(\"YES\")", "n, k = [int(x) for x in input().split()]\nprint(\"YES\")"], "157": ["u,v = [int(x) for x in input().split()]\na = [0 for x in input().split()]\nif a[-1] > v: print(-1)\n else: print(a[-1])", "import math\na=list(map(int,input().split()))\np=math.gcd(a[0],a[1])\nwhile p<p:\n  x^=math.gcd(a[0],a[1])\n  if x%10==0:\n   print(-1)\n  break\n  p=math.gcd(a[0],b[1])\n  print(n)\nprint(n)\n", "from collections import defaultdict\ns,v = map(int,input().split())\nl=[]\nr=list(map(int,s))\nfor i in range(l[0]-1,0,-1):\n    r.append(i^s)\n\nans=[]\nfor i in range(l[1:],l[0]+l[1:]):\n    ans.append(i^s[-1]-l[-1])\nprint(min(ans))", "n=int(input())\nif n==0 or n==1:\n    print(-1)\n    return\na=[int(x) for x in input().split()]\nb=[int(x) for x in input().split()]\nq=[[0,0],1]\ne=[i]\ni=0\nwhile q>0:\n    i=q-i\n    q-=1\n    if q>=a:\n        print(0)\n        e.append(i)\n        q-=1\n    while i<a[-1][1]:\n        x=q\n        q+=1\n        if x-x>a[-1][1]:\n            c=y\n            q-=x\n            e[x]=a.pop()\n        q-=1\n    print(-1)\nprint(q)", "u,v = input().split()\nl1,l2 = 0,0,0\nans = list(range(len(u)-1,len(v)-2))\nfor i in range(0,len(l1)):\n    print(len(l1)-1-i-l2[i]-l2[i+1])\nif len(l1)==0:\n    print(-1)\nelse:\n    # print(len(l2)-1)\n    # print(len(l1))\n    print(max(l1))", "a=list(map(int,input().split()))\nif a[0]==0:print(-1)\nreturn a\n\nfor i in range(1,len(a)-2):\n\ti=i-2\n\tif(a[i]==0):print(-1)\n\treturn i\n\nt=a[0]\nwhile(t):\n\tl=a.index(t)\n\tr=a.index(s)\n\tif(r<t):print(-1)\n\tt=l\n\telse:print(l)\n"], "158": ["import sys\ninput = sys.stdin.readline\nn = int(input())\nwhile n:\n    n //= 10\n    n = int(n)\n    sum_ = int(str(n)[::-1])\n    if sum_ == 0:\n        print('0')\n    else:\n        print(len(str(sum_)-1))", "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\nnum = num//10\nsum = int(num)\nfor i in num:\n    if str(i)[0]=='1':\n        sum -= i\n    count = sum + int(i)\n    print(count)", "n=int(input())\ndp=[0 for i in range(5)]\nfor i in range(2,10**15+1):\n    dp[i]+=1\nfor i in range(5):\n    dp[i]+=1\nprint(len(dp))", "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\ns=list(map(int,input().split()))\nm=0\nfor x in a:\n    m+=int(x)\nprint(m)", "import math\nimport sys\ninput = sys.stdin.readline\n\nans = 0\n\nfor i in range(0, len(str(n)) - 1):\n    a = int(str(n/i))\n    ans += max(int(a), 10 ** 10)\n    print(ans)", "n = int(input())\ncount = 0\nfor i in range(10):\n    s1 = input()\n    if str(s1)!= '1':\n        count += 1\n    else:\n        count += 1\nprint(count)"], "159": ["def solve():\n    n = int(input())\n    a = 2\n    b = 2\n    p = 3\n    x = n * a\n    p *= 2\n    x = -x * x\n    count = 0\n    while x > 0:\n        count += 1\n        x *= p\n        x *= b\n    while x > 0:\n        x /= 2\n        count += 1\n        x -= 1\n\n    print(count)\n", "a,b,p,x = map(int,input().split())\nfor i in range(4):\n    a,b,p,x = list(map(int,input().split()))\n    a = a**2+b**2\n    b = b-a*p\n    print(a+b)", "import sys\ndef intc(n):\n    print(intc(n))\n\n    if n <= 1:\n        return 1\n    for i in range(int(n**.5) // 2, 0, -1):\n        if (n%i == 0 and int(n / i) % i == 0):\n            return i\n    else:\n        return int(n/i)\n\ndef get_divisors(x):\n    while x < x:\n        x *= x\n        if (x % p!= 0):\n            return x % p\n        return x % p\n\ndef find_primes(n):\n    a = int(i)\n    b = int(i)\n    n = get_divisors(n)\n    p = (a+b)\n    a = a - 1\n    p = x - i\n    if a < 0:\n        a = 1\n        b = p - 1\n    if p < 0:\n        b = p\n    elif p < 0:\n        p = x - i\n        elif p > 0 and p < p:\n            p = p + 1\n    if a<b:\n        p = p\n    else:\n        p = p\n    n = p\n    #print(n,b)\n    a = 1\n    if b>0:\n        a = 1\n        #return a*a, b *p\n        if p <= 0:\n        a = 1\n        else:\n            b = 1\n        break\n\nif n == 2:\n    print(1)\n    else:\n        print(1)\n\n\n\nprint(count(1))\n", "# cook your dish here\nn=int(input())\nprimes=[]\nfor i in range(len(primes)):\n    a,b,p,x=map(int,input().split())\n    ans=0\n    while a<=b:\n        a=a*(a+1)\n        b=b*(a+1)\n        x=int(x)\n    print(ans)", "n=int(input())\nd=[[0] * (N+1)]\nl=[]\na=2\nb=2\nfor i in range(n):\n    a=a*b\n    c=1\n    while a!=0:\n        b=(b-1)//c\n        if a<=b:\n            break\n        l.append(a)\n\nfor i in range(l):\n    print(c-(l[1:]))", "n=int(input())\np,a=map(int,input().split())\na=[int(i) for i in input().split()]\nb=list(map(int,input().split()))\na.sort()\nprint((2*n+1))\n"], "160": ["k = int(input())\ni = k\ns = sum(list(map(int, input().split())))\np = 0\nfor i in range(len(s)-1):\n    a, b = s[i], s[j-1]\n    if len(a) > k:\n        p += 1\n        else:\n            j -= 1\n    p += a\nif p < k:\n    s = s\nprint(s)", "# cook your dish here\ns=input()\nt=list(map(int,s))\nwhile(t):\n if(t[0]==s[0][1]):\n  break\n else:\n  s.append(int(s[0]))\n t.pop()\n if(t.count(s[0]))==k:\n  s.pop()\nprint(s[-1])\n", "r1,r2,k=list(map(int,input().split()))\nr1=0\nr2=0\nfor i in range(len(r1)):\n    r2=r1+r2\n    if r1<r1:\n        r2=r2\n    r2=r1\nprint(r1)", "#import sys\n\nintinput = sys.stdin.readline\n\n# min = 2 * k\n# max = 2 ** k\n\n# t = int(input())\n# m = 2 ** k\n\n# m = int(max)\n# arr = [[int(x) for x in input().split()] for i in input().split()]\n# b = int(min(arr[k:], arr[k+1:])))\n# print(b)\n# print(arr[k:]))\n\ndef helper(str):\n\treturn str * (m + 1) // (m + 1)\n\nk = int(input())\n\nfor i in range(k):\n\t# print(int(str(i)))\n\tt = int(input())\n\tprint(int(t))", "from sys import stdin, stdout\nf,g=map(int,stdin.readline().split())\nf.sort()\nc=input()\nf.append(0)\ns=0\nfor j,n in enumerate(s):\n\tf[j]=f[j]+n[j-1]+f[j]\nfor x in f:\n\tc+=f[x]+y\nprint(256**0.5)", "num, k = list(map(int,input().split()))\n\nsumm = 1\nfor i in range(1,k):\n    if num[-1] not in num:\n        count = 0\n    for j in range(1,k):\n        if num[j]!= k:\n            count += 1\n            summ += 1\n    else:\n        summ += k\n    print(summ)"], "161": ["n,x,y,c=list(map(int,input().split()))\nx,y,c=list(map(int,input().split()))\nif(n>0):\n    print(0)\n    y-=1\nfor x in range(n):\n    y+=1\nprint(y-1)\nfor x in range(n):\n    x-=1\n    y-=1\n    y+=1\nprint(c-y)\n", "import sys\nn,x,y,c=map(int,input().split())\nans=[0]*(n+1)\n\nwhile(True):\n    print(ans[1])\n    n,x,y,c=map(int,input().split())\n    if(n%2==0):\n        print(0)\n    break\n    else:\n        ans[1][1]=0\n        ans[2][1]=n\n    if(c>=n):\n        ans[2][2]=n\n    print(ans[0][2])\n\n    if(n%2!=0):\n        print(ans[0][2])\n    else:\n        print(ans[1][2])", "n,x,y,c = map(int,input().split())\nd = [2,1]\nc = [0 for i in range(n)]\nt = 0\nwhile t :\n    d.append(t)\n    t += 1\n    x = t[0]\n    d.append(t[1])\n    y = t[2]\n    c = 1\n    while d:\n        x, y = d.pop(0)\n        c = c - x - x\n        d.append(x)\n        d.append(y)\n    c = c - x - y\n    t += 1\n    d = d.pop(0)\n    t += 1\n    d = d.pop(0)\n    print(t)\n\n", "# cook your dish here\nimport sys\nimport math\n# read input from stdin\ninput = sys.stdin.readline\nn, x, y, c = list(map(int, input().split()))\na=int(input())\nb=int(input())\nb=int(input())\nd=[]\nc=int(input())\nwhile d:\n    a.append(d[-1])\n    b.append(a[-2])\n    d.sort()\na.reverse()\nfor i in range(len(a)-1):\n    if a[i]>c-c+1:\n        d[i]=c-c+1\n    else:\n        d[i]=0\n\nfor i in range(len(a)-2):\n    d[a[i]]-=1\n    d[a[i]]+=1\nprint(b[-1]+1)", "n,x,y,c = map(int, input().split())\nt = [n]\nc = n%2\n#print(t)\nfor i in range(c):\n    t[i] = min(t[i-1],t[i+1])\nfor i in range(c):\n    if t[i] <= 0:\n        t[i] = min(t[i],t[i+1])\nprint(t[c])\n", "n,x,y,c=list(map(int,input().split()))\np,r=input().split()\nprint(p[0]+(p[1]+(p[2]+(p[0]+(p[1]))-1))"], "162": ["l,r=list(map(int,input().split()))\nmaxa=l*l\nl=1\nr=1\nfor i in range(1,l+1):\n print(l+i)*(r-i)", "l, r = map(int, input().split())\nprint(max(set(range(l, r)))", "import sys\ninput=sys.stdin.readline\nl=int(input())\nr=int(input())\nl-=1\nr-=1\nl=int(l)\nwhile(l>=0 and r>=0):\n print(l)\nr=int(r)\nl-=1", "l, r = list(map(int, input().split()))\na, b = list(map(int, input().split()))\nc, i = 1, 0\n\nwhile l and r:\n  if l & 1:\n   i = i ^ 1\n   break\n  elif (l & 1):\n   p = i + 1\n   if p == int(p):\n    c = (i + 1) // 2\n  else:\n   p = (i + 1) // 2\n   a, b = [i] + [i for i in range(len(a))]\n  print(b, end = '' )\n if(c == '1':\n  print(c)\n return b\n  if c == '1':\n   print(c, end ='')\n else:\n  print(c, end ='')", "import sys\nl,r = list(map(int,input().split()))\nl,r = [int(i) for i in input().split()]\nprint(max(l,l-r) if l==1 else 0)", "# cook your dish here\nl,r = input().split()\nl1 = int(l1)\nr1 = int(r1)\nn1 = int(n1)\nl2 = int(n1)\nr2 = int(n2)\nl = int(l2)\nl2 = int(r1)\nans = 0\nfor i in range(1,n1+1):\n    if l1^i<r2:\n        ans = max(ans,i)\n    elif r1&r<r2:\n        ans = max(ans,i)\n    else:\n        l1,r2 = l2,r1,l2\n        for i in range(1,n1+1):\n            if i%2==0:\n                print(l1)\n            break\n        print(0)\n"], "163": ["n=int(input())\nfor i in range(n):\n    n-=i*i\nprint(n//2)", "n = int(input())\nfor i in range(n):\n    if(i == 1):\n        print(n-1)\n    else:\n        print(n-1)\n", "n=int(input())\nfor i in range(1,n+1):\n    print(i*2)\n", "n = int(input())\nif n < 2:\n    print(n)\nelse:\n    sum = n\n    print(sum-1)", "n=int(input())\na=[int(i) for i in input().split()]\nm=[]\nfor i in range(1,n+1):\n    a.append(a.count(i))\np=0\nfor i in range(2,n+1):\n    p=n-i\n    m.append(p)\nfor i in range(1,n+1):\n    d=math.sqrt(i*i)\n    m.append(d)\nprint(m.count(1))", "# cook your dish here\ndef main():\n    n = int(input())\n    a = [1] * n\n    b = [[1] * n for _ in range(n)]\n    A = [A[0]]\n    res = 0\n    for i in range(1, n+1):\n        while (i - 2 * i == 0):\n            a[i - 2 * i] += 1\n            res += b[i]\n            i -= 2\n        i -= 2\n    print(res)\n"], "164": ["n = int(input())\na = list(map(str, input().strip().split()))\ns = str(input())\nif len(s) == 0 or len(s) == 1:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n=int(input())\ninput = lambda:input()\nstring=input()\nletter=input()\nalphabet=list(ascii.lower())\nif(string[0]in alphabet)==True:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "# cook your dish here\nn=int(input())\nl=[]\nfor _ in range(n):\n l.append(input())\nif len(l)==1:\n    return 'YES'\nelse:\n    return 'NO'\n", "def test_str(s,i, l, b):\n    if(ord(c) <= ord(s[i]) and s[i] in l):\n        return \"YES\"\n    if(i in l):\n        return \"NO\"\n    return \"YES\"\nprint(test_str(s,0,1))", "n = int(input())\nfor i in range(1,n+1):\n    s=input()\n    if(s[0]in 'aeiou'):\n        print('YES')\n    else:\n        print('NO')", "import string\ninput = input()\n\n#if(len(word)>1):\n#    return str(word[0])==word[-1][::-1]\nif(len(word)!=1):\n    print(\"YES\")\nelse:\n    print(\"NO\")"], "165": ["h,m=map(int,input().split(\":\"))\nm=m[0]\nm1=m[1]\nm2=m[2]\na=int(a)\nfor i in range(h):\n    m1+=int(m)\nprint(f\"{m1}:{m2}\")", "h, m = map(int, input().split())\nif m >= 60:\n    h, m = divmod(h, 60)\n    for i in range(3, m + 1, 2):\n        m = int(a % 60)\n    h = (h + m) % 12\n    if h > 12:\n        m = m + 1\n    print('{}:{}'.format(h, m))\nprint('{}'.format(h, m))", "h=int(input())\nj=int(input())\ni=0\nj=0\nwhile(j<k):\n    if(h<24):\n        if(j==0):\n            j=0\n        else:\n            i+=1\n        j+=12\n        i=i+12\n    \nprint(f\"{h:02}:{j:02}\")", "for _ in range(int(input())):\n    h, m = map(int, input().split())\n    if h > 24:\n        print('0' * (h - 24))\n    elif h > 10:\n        print('10' * (m - 10))\n    else:\n        print('0' * (m - 10) * (m - 12))\n    else:\n        print('0' * (m - 12) + '00' * (m - 12))", "import sys\ninput = sys.stdin.readline\nh, m = map(int,input().split())\nl = list(map(int,input().split()))\nm = max(int(m),0)\nif h >= 24:\n    m = int(m)\nprint(f\"{h}: {m}\")", "h=int(input())\nm=int(input())\nans=''\n\nh=h*3600\np=0\nfor i in range(h):\n    if m<24:\n        if(i==0 or i==12):\n            continue\n    else:\n        p=i*3600+p\n    a=int(m)\n    ans=''+str(m)+':'+str(int(a))+':'+str(int(a))+':'+str(int(m))+':'+str(int(a))+':'+str(int(a))+':'+str(int(a))+':'+str(int(a))+':'+str(int(a))\nprint(ans)"], "166": ["# cook your dish here\nn, m = map(int, input().split())\na = list(map(str, input().split()))\nif m == n - 1:\n    print(\"YES\")\nelif m == n:\n    print(\"NO\")\nelse:\n    print(\"YES\")", "n, m = map(int, input().split())\np = list(map(int, input().split()))\nd = list(map(int, input().split()))\nk = 0\nfor i in range(n):\n    for j in range(i, m):\n        if d[j] == 1:\n            k = k+1\n        else:\n            p[k] = 0\n\nprint(\"YES\")", "n,m = map(int, input().split())\nlist1 = list(map(int, input().split()))\nmatrix1 = list(dict(range(n,m))\nmatrix2 = list(dict(range(n, m)))\nmatrix1.setdefault(0,1)\n\nwhile n > 0:\n    n -= 1\n    matrix2[(n - 1)*m][n-1] = 1\n    if n - 1 >= m - 1:\n        print('YES')\n    else:\n        print('NO')\n", "import sys\n\ndef __starting_point():\n    input()\n    n, m = list(map(int, input().split()))\n    lamp = 0\n    for i in range(n):\n        a = input().split()\n        lamp = 1 if n & 1 else 0\n        for j in range(m):\n            lamp = 0 if j & 1 else 1 if j & 2 else 0\n            for k in range(n & 1):\n                if k & 1:\n                    lamp = lamp + 1\n                elif k & 1:\n                    lamp = lamp - 1\n                else:\n                    lamp = 0\n        if lamp == 1:\n            lamp = 1\n            else:\n                lamp = 0\n        if lamp == 0:\n            lamp = 0\n    if lamp!= 0:\n        print('YES')\n        else:\n            print('NO')\n\n__starting_point()", "n,m=map(int,input().split())\nl=[0,0]\nfor i in range(n):\n\tl.append(i)\nif m%2!=0:\n\t\tk=n-1\n\tif k==m:\n\t\tj=n-1\n\tprint('YES')\nelse:\n\t\tprint('NO')", "n, m = list(map(int, input().split()))\nfor i in range(m):\n    print(\"YES\")\nprint(\"NO\")"], "167": ["n=int(input())\na=list(map(int,input().split()))\nif((n-1)//2)%2==0:\n    print(-1)\nelse:\n    print(1)", "t = int(input())\nfor i in range(t):\n    x, y = map(int, input().split())\n    x+= y\n    print(x-0.5 * (x-1)-x+0.5 * (y-1-x+1))", "for _ in range(int(input())):\n    n=int(input())\n    x,y=list(map(int,input().split()))\n    r=x+y\n    if (r>n or r%2==0):\n        print(-1)\n    else:\n        print(r-r//2)", "def __starting_point():\n    n=int(input())\n    x,y=list(map(int,input().split()))\n    if x==y:\n        print(-1)\n        return\n    if x==y:\n        print(0)\n        return\n    for i in range(n):\n        if i==n-2:\n            x,y=map(int,input().split())\n            print(int(x+y+y))\n        else:\n            y,x=map(int,input().split())\n            print((int(x+y)+y+x) - x)\n        return\n\n\n__starting_point()", "n=int(input())\nx=list(map(int, input().split()))\ny=list(map(int, input().split()))\ns = 0\nfor i in range(n-1):\n    x.append(x[i-1] + y[i])\ns+=1\nc=0\nd=0\nwhile d<len(x) and c<=6:\n    if y[d]==x[d]:\n        c+=x[d]\n        d+=1\n    s+=y[d]\n    if c>2*i:\n        d-=1\n        c=x[d]\n        d-=1\nprint(s)", "n = int(input())\nl = list(map(int,input().split()))\n\nt = sum(y for y in range(n))\n\nm = len(l) // 6\nl.sort()\nr, c = 0, l[1]\nfor i in range(n-2):\n    t += l[i - 1]\n    m = m + c + (y - x) * l[i - 2]\n    c = c + r\n    r = c + r\n\nif m > 0:\n    print((r+m)*2-(c-t))\nelse:\n    print(-1)"], "168": ["n = int(input())\n\n# the list of coordinates of the points is all numbers in a place\nfor i in range(n):\n    x, y = map(int, input().split())\n    if x > 0 and y > 0:\n        print('Yes')\n    elif y > 0 and x < n and y < n:\n        print('Yes')\n        print('No')\n        return\n\nfor x, y in zip(*map(int, input().split())):\n    print('Yes')\n", "n = int(input())\ninput_list = list(map(int, input().split()))\nif n==1:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "#input\nn = int(input())\nfor x in range(1,n):\n    x2, y2 = [int(x) for x in input().split()]\n    if x1 * x2 == y2 * y2:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "\nn=int(input())\n\np=[]\nfor i in range(n):\n    x1,y1=map(int,input().split())\n    if (x1*1+y1*1)%2==0:\n        p.append([0,0,1])\n        elif (x2*1+y2*1)%2==0:\n            p.append([1,1,1,1,1])\n\nif len(p)<n:\n    print(\"No\")\nelse:\n    if len(p)%2!=0:\n        print(\"Yes\")", "import sys\nimport sys\nimport math\ninput = sys.stdin.readline\n\ndef f(y, x, y):\n    return (int(x + y) - x)\n\ndef kadane(x, y):\n    return math.ceil(math.log(y/2, 2))\n\ndef f(x, y):\n    return (x-y)**2 >= kadane(x, y)\n\ndef f(x, y):\n    if x==y:\n        return \"Yes\"\n    if f(x, y):\n        return \"No\"\n    return f(x, y)\nn = int(input())\nf(x)\n\n\ny = [0]*n\nt = []\nfor _ in range(n):\n    y = [float(x) for x in input().split()]\n    a,b = f(x, y)\n    if a>b:\n        for i in range(n):\n            c = f(x, y)\n            if c in a:\n                print(\"Yes\")\n                break\n    t.append(c)\nprint(\"Yes\")\n", "n=int(input())\ns=sorted(map(int,input().split()))\ns.sort()\nprint('Yes')\nfor i in s:\n print(i)"], "169": ["A, B = map(int, input().split())\nA, B = list(map(int, input().split()))\n\n\ndef gcd(x, y):\n  return gcd(x, y) if y!= 0 else 0\nans = int(a**0.5)\nwhile ans > ans:\n  ans = gcd(ans, x)\n  ans = ans\n ans = int(ans)\n print(ans)\n\na = a//B\nprint(int(a))\n", "a, b = map(int, input().split())\nprint(max(a, b)))\n", "from math import gcd\na,b=map(int,input().split())\na,b=map(int,input().split())\nprint((a//b)*(b-a))", "a,b=map(int,input().split())\ns=a*(a-1)\nans=a*(b-1)\nx=a*(b+1)\nn=b*(b+1)//2\nprint(int(m))", "A,B = list(map(int, input().split()))\n\nif B == 0:\n    print(A)\n\nelse:\n    l = B\n    d = [1 for _ in range(n)]\n    for i in range(1,n):\n        c = (i % l) * 2\n        d[c] = d[c-1] + l[d[c]]\n\n\ndef main():\n    return main()\n    A = list(map(int,input().split()))\n    B = list(map(int,input().split()))\n    L = list(map(int,input().split()))\n    print(sum(D[c] - (L[c] - 1))", "a,b=map(int,input().split())\na,b=map(int,input().split())\nprint(a//b)\n"], "170": ["import sys\nimport math\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    s = int(input())\n    for i in range(1, s+1):\n        s = s + i\n    print(s,s)\n\n    main()", "import sys\n\ninput = sys.stdin.readline\nn = int(input())\nn = n * 10\nwhile n % 1 == 0:\n    if n % 1!= 0:\n        n = n // 1\n        else:\n            n //= 1\nprint(n, n - 1, n)\n", "n=int(input())\nprint(*list(map(int,input().split())))", "from math import floor, gcd\nfrom math import log1p, gcd, fmod\nif fmod == 0:\n    print(int(n))\n    print(int(n**0.5)+int(sqrt(n))+1)\nelse:\n    if fmod!= 2:\n        print(3,3)", "from sys import stdin\ninput = stdin.readline\nfrom collections import Counter\nmod = [9, 9, 4, 6, 7, 8]\n\ndef check(n):\n    if n%mod > 0:\n        return False\n    if n % mod == 0:\n        return True\n    if n == 1:\n        return False\n    return n==1\n    if n%mod == 0:\n        return True\n    if n%mod == 0:\n        return False\n    if n%mod > 0:\n        return True\n    else:\n        return False\n\ndef check(n):\n    for i in range(1, int(n**(1-mod)))):\n        if check(i):\n            return True\n        return False\n    i = n-i\n    d = list(map(int, input().split()))\n    a = check(n//mod)\n    b = check(n-i)\n    d.sort()\n    print(a,b)\n", "n = int(input())\n\nfor i in range(1, 10**9):\n    a = int(input())\n    b = int(input())\n    b = max(b,1)\n    print(a, b)\n"], "171": ["from collections import Counter\n\nfrom math import log2\nn = int(input())\ns = [input() for _ in range(n)]\ncs = Counter(c)\ncs = c[:] + s.index(c[::-1])\ncs = sorted(cs, key=len)\nif cs:\n  print(ct + ct)\nelif cs > c:\n  print(-1)\nelse:\n  for i in range(n):\n   ans = 0\n   print(ans)\n  \n  \n", "n=int(input())\ns=list(map(str, input().split()))\np=[0 for i in range(n)]\n\nx=[]\np[0]=len(s)\nfor i in range(1,len(s)+1):\n    p[i]=s[i]*c[i-1]\nans=0\nfor i in range(1,len(p)):\n    if p[i]==1:\n        ans+=p[i]\n        p[i]=1\nfor i in range(1,len(p)):\n    p[i]=p[i]%n\nprint(ans)", "import sys\nimport math\n\ninput = sys.stdin.readline\n\nN = int(input())\n\nS = str(input())\n\nS_N = [input() for _ in range(N)]\n\nS_2 = [input() for _ in range(N)]\n\nC = [input() for _ in range(N)]\n\nC.sort()\n\nif C.count(S_1) == 0:\n    print(-1)\n\n\nelse:\n if C.count(S_1) == 1:\n  # S_1 is 1\n  # S_2 is 1\n   # S_2 is 2\n   # S_N is 1\n   # S_N is 2\n   # S_1 is 2\n    # S_2 is 2\n    # S_N is 3\n    c.sort()\n    C.sort()\n    for i in C_N:\n        print(-1)\n    return\n\ntakahashi = sum([C[j] for j in C])\ntakahashi.append(takahashi)\n", "import itertools\nimport numpy as np\nN = int(input())\nS = list(input().split())\nS.sort()\ntotal = N\nwhile total > 0:\n    count = 0\n    i = len(S)\n    while i < count:\n        i += 1\n        count += 1\n        total = i\n    print(total)", "N,C = map(int,input().split())\nx=list(map(int,input().split()))\nx=list(map(int,input().split()))\nx.sort()\ny=[]\nk=0\nfor j in range(N):\n  s=input()\n  x.append(s*j)\n s.sort()\n if len(x)>2:\n  x.append(x[-2])\n\ndef count(x):\n  return x[1]\ndef count(x):\n  return y.count(x)\nfor j in y:\n    return x.count(j)\ndef solve(a,b,c,x):\n  if(sum(c)==x:\n    return c+x\n  if(a==x):\n   x+=y\n  k=1\n  else:\n   c+=d\n  else:\n   n-=1\n d=set(c)\n takak=x\n if(n==len(x)):\n  print(-1)\nelse:\n  print(num(x))\n\n", "# cook your dish here\nimport sys\ninput = sys.stdin.readline\ndef main():\n    N, C = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    M = 0\n    for j in range(0, N):\n        B = B[j] * B[j]\n        M += 1\n    print(M)\n        \n    #print(A)\n    \n"], "172": ["def solve(input,n,k):\n    if n==k:\n        print(0)\n    else:\n        a = list(map(int,input().split()))\n        while n>1:\n            a.append(0)\n        n-=1\n        n-=2\n        k-=1\n        if a>k:\n            print(n-k,end=\"\")\n        k-=1\n        else:\n            print(n-1,end=\"\")\n        break\n    return n\n\ndef __starting_point():\n    n,k=input().split()\n    while n>0:\n        k-=1\n        a=solve(n,k)\n        n-=1\n    a=a^b\n    x=s=s//k\n    b=a%n\n    if s==1:\n        y=n*a\n    print(x,end=\"\")\n    else:\n        z=n*a\n        print(z,end=\"\")\n   ", "n,k = map(int, input().split())\ncand = [int(i) for i in input().split()]\n#b = [b[:-1] for i in input().split()]\ncand.append(b[-1])\nfor i in range(n):\n    xor.append(b[i]+i)\ns = []\nfor i in list(cand):\n    s.append(s[-1]+i)\nb=[]\nfor i in range(2,n+1):\n    c=cand[i]\n    if(b):\n        if(c==0):\n            s.append(b[-1])\n    for j in range(i,n-j+1):\n        c=c^(b[j])\n    if(b[i]>c):\n        s.append(c[j])\nfor i in range(i+1,k+1):\n    s.append(c[i])\nprint(max(s))", "import math\ninput = lambda: input()\n# cook your dish here\nn,k = list(map(int,input().split()))\ndp = [1,1,1,1,1,1,1]\nfor i in range(2,n+1):\n    for j in range(1,n+1):\n        dp[i,j] += dp[i-1,j-1]\nprint(max(dp))\n", "n, k = map(int, input().split())\nif k == 1:\n    c, s = 0, n\n    while c > s:\n        s -= c\n        c = 0\n        c = s-s\n        s = s\n        s %= 10**18\n        c = c + 1\n\n#print(c, s)\nprint(s)\n", "import sys\ninput = sys.stdin.readline\nk = int(input())\nx = []\nfor i in range(n):\n    x.append(int(x[0])^int(x[1]))\nx.sort()\nx.sort()\nprint(max(x[-2::-1])*k)", "n,k=list(map(int,input().split()))\nfor i in range(1,k+1):\n    if int(input())%2==0:\n        print(i,end='')\n    else:\n        print(k,end='')"], "173": ["def lcm(x, y):\n    n = int(input())\n    while n > 0:\n        x, y = list(map(int, input().split()))\n        x += (y//2)\n        n -= 1\n    print(x)", "def get_point():\n    x,y = list(map(int,input().split()))\n    return int(input())\n\ndef find_point():\n    return list(map(int,input().split()))\n\ndef get_point():\n    x = get_point()\n    y = get_point()\n    n = int(input())\n    n = 2 * n\n    x1 = get_point()\n    y1 = get_point()\n    x2 = get_point()\n    y2 = get_point()\n    n = 2 * n\n    return (x1 + y1 + y2) - x2\n\n\n\ndef get_point():\n    x, y = get_point()\n    z1 = get_point()\n    y1 = get_point()\n    z2 = get_point()\n    z2 = get_point()\n    z2 = get_point()\n    x1 = x2\n    y2 = y1\n    z1 = z2\n    return (x1 + y1)\n\n\n\n\ndef get_point():\n    x = get_point()\n    if x == 0 or y == 0:\n        return 0\n    elif x == 0:\n        return 1\n    elif x == 1:\n        x1 = x2\n        y1 = y2\n        if y1 > y2:\n            return x1\n        x2 = x1 + x1\n        if y2 > y1:\n            y2 = y1\n        else:\n            y2 = y1 + y2\n\n    return x\n\ndef get_point():\n    x = get_point()\n    return x\n\ndef get_point():\n    x = get_", "def p(l, m):\n    return [int(i) for i in range(m)]\n\ndef b(l, m):\n    return [int(i) for i in input().split()]\n\ndef a(l, m):\n    x, y = list(map(int, input().split()))\n    n = int(input())\n    l = [int(l[0]) for i in range(1, l[1] + 2*i])\n    return l[1]-l[0]\n\ndef b(l, m):\n    return (l[0]-l[1])\n\ndef p(l, m):\n    return ((l+m)//2)*(r+n*(m+n))//2)\n\ndef _i():\n    return 1\n\ndef _i():\n    return int(input())\n\ndef __starting_point():\n    _i = input()\n    return int(input())\n\n\ndef __starting_point():\n    return int(input())\n\n\ndef __starting_point():\n    x = int(input())\n    y = int(input())\n    print((x-(x//2)//2)/2*y))", "def get_min_x_length(x):\n    i = int(input())\n    ans = x\n    if i % 2!= 0:\n        print(i//2)\n    elif i % 2 == 0 and i % 3!= 0:\n        print(i//3)\n    elif i % 3!= 0:\n        print(i//3)\n    else:\n        print(i//2)", "import math\n\nn = int(input())\nm = 0\nx = input().split()\nfor i in range(n):\n    x1, y1, y2 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x = min(x1, x2)\n    y = min(y1, y2)\n\nprint(min(x1, y1))\n", "n = int(input())\nx1, y1 = map(int,input().split())\nx2, y2 = map(int,input().split())\nans = x1 - x2\nn = n // 2\nprint(ans)\n\n"], "174": ["s=input()\ncount=0\nwhile(s):\n    s=s[::-1]\n    count+=1\n    if(s==\"nineteen\"):\n        for i in range(len(s)):\n            s=s[-i::]\n        if(s[i::]==\"nineteen\"):\n            count+=1\nprint(count)\nelse:\n    print(count)", "s = input()\nn = n.split()\nj = len(s)\nwhile j>n-1:\n    m = s.count(s[j])\n    if(m>=1 and i>j):\n        print(m-1)\n        j-=1\n        else:\n            print(m)\n        j-=1", "s = input()\nn = len(s)\ncnt = 0\nfor i in range(n):\n  for j in range(i + 1, n):\n   if s[i] in 'aeiou':\n    cnt+=1\n  count+=1\nprint(cnt)\n", "s = input()\ncnt = 0\nfor i in range(0,100):\n    s += input().split()\n    cnt += 1\nprint(cnt)", "s = input()\ncount = 0\nfor i in s:\n    if i not in 'abcdefghijklmnopqrstuvwxyz':\n        count += 1\nprint(count)", "s=input()\nn=len(s)\ncnt=0\nfor i in range(n):\n    if s[i].isalpha()==True:\n        cnt+=1\nprint(cnt)\n"], "175": ["p,y = map(int, input().split())\nfor x in range(2,p+1):\n    if x%p==0:\n        ans=x//p\n    else:\n        if (x//x)%p==0:\n            ans=x//x\n        print(ans)\n    else:\n        print(-1)\n", "p, y = list(map(int, input().split()))\nsum = 0\nfor i in range(1, p+1):\n    sum = (sum+y)*(i)\n    sum=max(sum,i)\nif sum>sum:\n    print(-1)\n    return\nn=list(map(int, input().split()))\nans=p-y+1\nif ans==0:\n    print(len(p))\n", "p,y=list(map(int,input().split()))\nans=[]\nif y>p:\n    p,y=y,p\n    ans.append(p)\n\nif ans!=-1:\n    print(ans)\nelse:\n    p=y-y\nprint(int(ans[-1])-1)\n", "p, y = input().split(' ')\nans = 0\nwhile x <= y:\n    x += 1\n    if x == 2:\n        print(-1)\n    else:\n        print(1)\n        \n", "# cook your dish here\np,y=map(int,input().split())\nans=0\ny=y*x\nwhile(y):\n    ans=max(ans,y)\n    y=y-y%2\n    p+=1\nprint(ans)", "p,y=map(int,input().split())\n\nif p==2 or y==2:\n    print(-1)\nelif p==1:\n    ans=1\n    elif y==2:\n        ans=2\n    elif p==2:\n        ans=3\n    else:\n        ans=1\n        i=1\n    while(i<=p):\n        ans=2\n        i=i+1\n        while(i<=y):\n            ans=x=y-i\n            i+=1\n        if(ans!=-1):\n            print(ans)\n            break\n            p=x-2\n            ans=x\n        i+=1\n    return ans"], "176": ["s = input()\nd = sorted(sorted(s, key=len))\nfor i in range(d[0])):\n    if s[i] == s[i+1]:\n        print(1)\n    return -1\nm = len(a)\nfor i in range(m):\n    if a[i]!= s[i+1]:\n        print((m[i]+1)*(m[i+1])-1)\nprint(max(a[i],len(a)-m[0]))", "a = input()\nb = input()\n#c = 1\nh = 5\nfor i in range(len(a)):\n    if a[i]!= b[i]:\n        h += 1\n#if (len(a) - 1) % 2 == 0:\n#        return h\n#else:\n #    h = (1 << 20)\n#    l = len(a)\n    l1 = i\n    m = 10**5\n    l2 = 0\n    while len(l1) < m:\n        l1.pop(m)\n        m1.append(a[i])\n    if l1[i] > l2[m]:\n        l1.pop(m)\n    elif l1[i] == l2[m]:\n        m1.pop(m)\n#print(l1)\n#print(l2)\n    if l2[0]!= l1[0]:\n        l2.pop(m)\n    #print(l1)\n#if l1[-1]!= l2[-1]:\n    print(l2[-1])\n#else:\n#    print(-1)\n#    print(l2[-1])\n\n", "input = input()\na, b = [\"\".join(i for i, a in enumerate(input().split())) for i in input().split()]\nif len(a) == 0:\n    print(-1)\n    else:\n        max_l = len(a)\n        for x in a:\n            if (max_l > x):\n                max_l = x\n            print(max_l)\n        else:\n            print((max_l - 1))", "def main():\n    input()\n    num = input()\n    if num == len(a):\n        return -1\n    if num == len(b):\n        print(1)\n        else:\n            print(-1)\n        return\n    \n    for i in range(len(a)):\n        if str(a[i])==str(b[i]):\n            print(2)\n            else:\n                print(i+1)\n\n\nprint(longest(a,b))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a, b = input().split()\nb = input()\nm = int(b[0])\nc = 0\nfor i in range(0,m):\n    if a[i] == b[i]:\n        c = (i,c + 1)\n    return c\nif b[i]:\n    print((len(b))-len(a)-len(b))\nelse:\n  print(-1)\n", "a = input()\nb = input()\nd = {}\nfor i in a:\n    d[i] = max(d[i] - 1, 1)\nprint(d.get(len(b)-1, -1))\n"], "177": ["#!/usr/bin/env python3\ns, y=list(map(int,input().split()))\nif s>b:\n    print(-1)\nelse:\n    for i in range(2,int(s-1)):\n        if s%2==0:\n            print(y)\n        else:\n            print(y)", "a,b,c,d = map(int,input().split())\nfor i in range(a,b):\n    c,d = list(map(int,input().split()))\n    if c+d == c and c%2==0:\n        print(-1)\n    elif b+c == d and c%2==0:\n        print(-1)\n    else:\n        print(c+d,b+c)\n", "a,b,c,d=map(int,input().split())\nif a == b:\n    print(-1)\nelse:\n    if a % 2 == 0 and b % 2 == 0:\n        print(a+b)\n    if b % 2 == 1:\n        print(a+b)\n    else:\n        print(-1)\n", "a,b,c,d=map(int,input().split())\na,b=a,b\nm =c,d\nwhile(m)==0:\n    print(0)\n    m+=1\n", "# cook your dish here\nx,y = map(int,input().split())\na,y=x,y\nprint(a+b+c+d+b+a+b+c+d+b+b+c-d,2*b+b-c) if -1<a+b*a*b>c else -1", "a, b, c, d = [int(i) for i in input().split()]\nif b % 2 == 0 or c % 2 == 0:\n    print(a, b, c, d)\nelse:\n    print(-1)"], "178": ["n=int(input())\nl=list(map(int,input().split()))\nr=0\nwhile l<r:\n    n=l+1\n    if n%3!=0:\n        r=l+2\n        r=r+2\nprint(l,r)\nr=r+1", "# cook your dish here\nfrom math import ceil\n\nn = ceil(input())\nif n % 3 == 0:\n    print((n//3-1),2))\nelse:\n    print((n%3-2,2)\n", "from sys import stdin,stdout\nimport sys\ninput = stdin.readline\n\nfor n in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    print(*n)\n    print()", "def main():\n    n = int(input())\n    count = 1\n    while n % 3!= 0:\n        n *= 3\n        count += 1\n    if count == 2:\n        print(''.join([str(n)*3,str(n)*3])\n        count = 0\n    return count\n    if count == 1:\n        print(' '.join([str(n)*3]) + '])'\n    else:\n        print(' '.join([str(n)*3) + '])'\n    else:\n        print(' '.join([str(n)*3]) + '])'\n    main()\n\n\n\n", "import sys\nfrom math import sqrt\n\ndef f_n():\n return int(input())\n\ndef f():\n return sys.stdin.readline().rstrip()\ndef f(n):\n return int(n) // 5\ndef f_3():\n return 1 + (5*n+7*n+7*n+8*n-8*n+9*n)\ndef f_3():\n return f_n([int(n) for n in input().rstrip()] + [int(n),int(n)] + [int(n) for n in input().rstrip().split(' ')])\ndef f_4():\n return f(4)\ndef f(n):\n if n % 3 == 0:\n  print(n)\n else:\n  print(f_3())\nprint(' '.join(f_3() for f in f(n))\n", "n=int(input())\nif n%3==0:\n    print(3,1,2,2)\n    else:\n        print(0,0,3,1)"], "179": ["# cook your dish here\nn,k,a,b=list(map(int,input().split()))\nc=0\nfor i in range(k):\n\ta=a//b\n\tc+=x\n\td=a%k\n\tif d==0:\n\t\tbreak\n\tc+=b\n\tprint(c)\n", "import sys\ninput=sys.stdin.readline\n\nn,k,a,b=list(map(int,input().split()))\nc=0\nfor i in range(int(input())):\n    a,b=map(int,input().split())\n    c+=a*k\nans=math.inf\nfor i in range(1,n+1):\n    if(n%i==0 and a%b==0):\n        ans+=i\nfor i in range(1,k):\n    ans+=(i*k)*b\nprint(ans)", "def solve():\n    n,k,a,b=map(int,input().split())\n    if k==0:\n        return 1\n    a,b=map(int,input().split())\n    b=map(int,input().split())\n    l=list(map(int,input().split()))\n    d=a*b\n    if (a%d==0) and (b%d==0):\n        d+=1\n    print(d)", "n,k,a,b=list(map(int,input().split()))\na,b=map(int,input().split())\nc=a-b\nprint(c)", "n,k,a,b=map(int,input().split())\nr=[]\nfor i in range(n):\n a,b=map(int,input().split())\n print(a+b)\n", "n, k, a, b = input().split(), int(input().split())\nn, k, a, b = a, b\nb = a + b\n\nprint(min(k, a) + min(k, b))"], "180": ["n=int(input())\nl=1\nfor i in range(2,10**6):\n    if(n<=0):\n        l+=1\n    else:\n        n//=2\n\nprint(l,l//2)\n", "def num_mod(n):\n    a = n//10**6\n    count = 0\n    for x in range(n//10):\n        if n < x:\n            n = x*2\n            else:\n                n += int(x)\n            count += 1\n    print(n,count)\nprint(n // 10)", "from math import log\na=int(input())\nb=log(1e6)\nb=2*a-log(a)\nb=1\ng=1\ni=1\nwhile i<b:\n  if(b%a==0):\n   print(b//a,b%i)\n   i+=1\nprint(b,b//a)\nfor i in range(b//g,c):\n if(a%i==0):\n  print(a//i,c%i)\n  b-=i\n print(b,c%i)", "import math\n#n = int(input())\nx = 0\ntry:\n    # print(x,x)\n    n = 10**6\n    while (n!= 0):\n        n = int(math.sqrt(n))\n        x = x + 1\n    print(x,x)\nexcept:\n pass\n", "# cook your dish here\nn=int(input())\n\ndivisors=[]\nfor i in range(n+1):\n    if n%i==0:\n        divisors.append(i)\n    else:\n        divisors.append(n//i)\nans=0\nfor i in range(2,n+1):\n    ans+=(i*(i-1)**2)\nprint(divisors,ans)\n", "import math\nimport math\n\nn = int(input())\n\nl = [int(i) for i in input().split()]\n\nf = [int(i) for i in input().split()]\nx = 0\n\nwhile(n > l[-1]:\n    n = n // l[0]\n    f[x] = 1\n    for i in range(l[1] - 1, -1, -1):\n        x += 1\n    l[i] = x\nprint(min(x, l[-1])),min(x, l[-1]))"], "181": ["# cook your dish here\nc=int(input())\na=int(input())\nb=int(input())\nc=int(input())\n\nl=[]\nfor i in range(l):\n    if c in l:\n        l.append(c)\nprint(max(l))\n", "a, b, c = [int(x) for x in input().split()]\n\ncnt = [0] * int(a)\n\nres = 0\nfor k in range(len(a)):\n    cnt[a[k]] += 1\n    for j in range(len(b)):\n        count[b[j]] -= 1\n        if count[a[j]] == 0:\n            res += 1\nprint(res)\n", "from sys import stdin\ninput = stdin.readline\ninput = open(\"input\")\ninput.readline().strip()\ninput.read()\ncount = 0\nfor i in range(2,len(input)):\n    if input.read()=='a':\n        count +=1\n    count = count + 1\nprint(count)", "a,b,c=map(int,input().split())\nprint(a+b+c+a)", "a, b, c = input().split()\nl = int(a)\nc = int(b)\nr = sorted(((a[0] for i in range(len(l))) if l[1]=='a')\nl +=1\na = a[0]\nb = b[0]\nc = b[0]\nc = c[1]\nfor i in range(len(l)):\n    if l[i]!=l[j]:\n        return 0\nelif l[i]!=l[j]:\n    print(max(l[-1],len(l))+1))", "a,b,c=list(map(int,input().split()))\n\n\n#!/usr/bin/env python3\n\n#C = {}\n#for i in range(len(a)+1):\n    if a[i]==a[c-1]:\n        print(i)\n        c-=a[b-1]\n        else:\n            a[b]=c\n\n#s = list(map(int,input().split()))\nif(s==a):\n    print(len(list(set(a),1))\nelse:\n    print(max(len(s)+1))\n\n"], "182": ["a=input()\nb=input()\nfor i in a:\n    if i in \"aeiou\":\n        b=b.upper()\n    else:\n        b=b.lower()\nprint(\"YES\")\n", "s = input()\ns_a = s.lower()\n\ns_o = s.lower()\n\ns_i = s_o.lower()\n\nif s_a == s_o:\n print(\"YES\")\nelse:\n print(\"NO\")\n", "s = input()\ncnt = 0\n\nfor c in s:\n    if c in 'aeiou':\n        if c not in 'aeiou':\n            cnt += 1\n    elif c not in 'aeiou':\n        cnt += 1\n    else:\n        for c in s:\n            cnt += 1\n\nprint(\"YES\")\n", "n = \"\"\nfor i in range(len(input())):\n    if input()[i]!= 'n':\n        n += \" \"\n    else:\n        n += i\nfor i in range(len(s)-1):\n    if n!= s[-i-1]:\n        print('YES')\n    elif n == 'n':\n        print('NO')\n    else:\n        print('NO')\n", "import string\ninput=input()\ns=input()\na=set(s)\nl=list(s)\nif(len(a)-1)>1:\n    print(\"YES\")\nif(sorted(s))==l:\n    print(\"YES\")\nelse:\n    return print(\"NO\")\n", "t = input()\nx, y, z = [0,1,2,5,6]\na = [1,3,4,6,7,8,9,4,0,5,9,0,0,0,0,1,1,1,0,0,0,0,0,0,1,0,0,1,0,0,1,2,0,0,1,0,0,1,2,3,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"], "183": ["import sys\n#!/usr/bin/env python3\n\n\n#input = sys.stdin.readline\n\n\ndef solve(index, count):\n    if index < len(self.alphabet):\n        return\n    \n    s = \"\"\n    \n    for i in range(0, len(str(index)) + 1):\n        s += str(index)[i]\n    \n    return s\n\ndef __starting_point():\n    n = int(input())\n    l = list(map(int,input().split()))\n    t = set()\n    d = {}\n    for i in range(len(l)):\n        for j in l[j]:\n            d[j] = d.get(l[i],0)+1\n            t.add(l[j])\n        t.add(d[j])\n        t.add(t)\n    \n\n\ndef main():\n    main()\n\n__starting_point()", "n = int(input())\narr = []\narr.sort()\narr.sort()\nfor _ in range(n):\n    arr.append(max(arr[-1]) + 1)\n\nlst = sorted(arr)\nlens = 0\nfor i in range(len(lst)):\n    ans = ''\n    for j in range(i):\n        if i not in lst or arr[j] == 'a':\n            continue\n        if lens <= lens:\n            return ''\n    else:\n        ans += (lens-lst[i]) * arr[i] + 1\nprint(lens))\n", "n=int(input())\na=[int(x) for x in input().split()]\nd={}\nfor i in range(n):\n    d[i]=n\nfor i in a:\n    d[i]+=1\nprint(max(d.values())", "import sys\ninput=sys.stdin.readline\nn=int(input())\na=list(map(int, input().split()))\nd={}\n\nc=[]\na.sort()\nwhile(1):\n  c.append(c.count(a[0]))\n a.sort()\n\nn=int(input())\nd={}\nfor i in range(n):\n  a.append(x[i])\nfor i in range(1, n):\n  if len(d)<a[i]:\n   a.append(a[i])\nprint(len(a))\n", "n=int(input())\na=[0]*26\nfor i in range(26):\n    a.append(1)\nfor i in range(26):\n    d=0\n    for j in range(26):\n        d+=1\n    for k in range(26):\n        if(d-a[j]>a[j+1]+a[j+1]+a[j]+1):\n            d+=1\nprint(max(len(a)))", "# cook your dish here\nn = int(input())\na = [int(c) for c in input().strip().lower()]\nmax_len = 0\nfor i in range(n):\n    a[i] = (a.count(i))%len(a)\nmax_len = max(max_len, i-a.count(i)-1)\nprint(max_len)\n"], "184": ["s = input()\nt = input()\nt = input()\nt = t.lower()\nif t == s:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "s = input()\nt = input()\n\nif len(s) > 1000:\n    if s[0] in 'aeiou':\n        if s[1] in 'aeiou':\n            s[0] = 'a'\n            else:\n                t[0] = 'e'\n            if s[1] in 'aeiou':\n                t[1] = 'i'\n                else:\n                    t[0] = 'o'\n                    t[1] = 'u'\n        else:\n            t[1] = 'a'\n        for i in range(1, 1000):\n            if s[i] in 'aeiou':\n                t[i] = 'o'\n                else:\n                    t[i] = 'u'\n                if s[i] in 'aeiou':\n                    t[i] = 'a'\n                else:\n                    t[i] = 'a'\n            # print(t)\n        print('Yes')\nelse:\n    s = input().strip()\n    t = input()\n    i = 0\n    while(i < len(s)):\n        s[i] = s[i] + s[i + 1]\n            j = i + j\n        if s[j] in 'aeiou':\n            s[j] = s[j] + s[j] + s[j]\n            if s[j] in 'aeiou':\n                break\n        else:\n            s[j] = s[j] + s[j]\n            i += 1\n    print('No')\n    i += 1\n\nprint('Yes')\n", "import string\nimport itertools\nstring = input()\nlist = []\nfor c in string:\n    list.append(c)\n\nchar = list.pop(0)\nchar.sort()\nif len(list) > 0 and len(str(list[-1])[::-1])==len(list[-2]):\n    list.sort()\nif list[-1]==list[-2] and len(list)>1:\n    print('Yes')\nelse:\n    print('No')", "def main():\n    s = input()\n    t = input()\n    l = sorted(s)\n    c = 'a'\n    for c in l:\n        if c not in w:\n            c = 'e'\n        elif c not in w and c not in i and c not in j:\n            c = 'i'\n        else:\n            c = 'o'\n        elif c not in i and c not in j:\n            c = 'u'\n        if c not in w:\n            l = []\n        for i in l:\n            r = l.index(i)\n            if c not in r:\n                l = r.index(c)\n            r.pop(i)\n            c = r.index(c)\n            c.pop(l)\n    print('Yes')\n\n\n\n\n\n\n\n\n\n\n\n", "# cook your dish here\ns,t=input().strip()\na=\"\",s.strip()\na2=\"\",s.strip()\nb=list(a)\nb2=list(b)\nd={'a': 'e',\n    'e': 'i',\n    'i': 'o',\n    'o': 'u',\n    'u': 'u',\n    'a': 'a',\n    'o': 'e',\n    'a': 'e',\n    'e': 'i',\n    'i': 'o',\n    'o': 'u',\n    'u': 'u',\n    'o': 'u',\n    'k': 'k',\n    'a': 'a',\n    'k': 'e',\n    'i': 'i',\n    'o': 'o',\n    'u': 'u',\n    'e': 'e',\n    'e': 'i',\n    'i': 'o',\n    'o': 'u',\n    'u': 'u',\n    'a': 'a',\n    'e': 'e',\n    'i': 'i',\n    'o': 'o',\n    'u': 'u',\n    'o': 'u',\n    'u': 'u',\n    }\nn=int(input())\n\nif a==n:\n    print('Yes')\nelse:\n    print('No')\n", "s, t = input().lower()\nt = input().upper()\ns = \"\"\nt = input().lower()\nif s == t:\n    print(\"Yes\")\nelse:\n    print(\"No\")"], "185": ["n=input()\ns=input()\nif n==1:\n    print(\"NO\")\n    else:\n        print(\"YES\")\n    \n\nprint(\"NO\")\n\n\n\n\n\n\n\n", "s = input()\nl = list(set(s))\nif len(l) > 100:\n print(\"NO\")\nelse:\n x = 0\n l.sort()\n while len(l)>1:\n  if l[l[-1]]==s[0]:\n   x+=1\n else:\n  x+=1\n print(\"YES\")\n\n#print(x)", "from string import ascii_lowercase as s\n\ndef check_names(name):\n\n  s = s.lower()\n  n = len(s)\n\n  if n == name:\n   print(\"YES\")\n   return\n\n  if n in s:\n    print(\"NO\")\n    return\n\n\nn = s.lower().split()\n\nfor i in range(n-1, -1, -1):\n  n = s[i]\n if n not in s:\n  s[n] = 1\n\nif n not in s:\n  print(\"NO\")\n\nelse:\n print(\"YES\")", "Nikita = input().lower()\ndanil = []\nofnigita = {\n    'Danil' : 'Olya',\n    'Olya' : 'Slava',\n    'Ann' : 'Nikita',\n    'Slava' : 'Ann',\n    'Ann' : 'Nikita'}\n\nif(Nikita.count(Nikita.count(Nikita.name()))) == 1:\n    print('YES')\nelse:\n    print('NO')\n", "c=input()\na=list(a.lower())\nfor i in list(c):\n    if i.count(c)==1:\n        print('YES')\n        break\nprint('NO')", "s = input().strip()\nl = list(s)\nl.sort(key=str.lower)\nif len(l)==1:\n    print('YES')\nelse:\n    print('NO')\n"], "186": ["a, b, k = list(map(int, input().split()))\nif b%3==0:\n    if a!=1 and b!=0 and a!=2:\n        print(n+1)\n    else:\n        l=b//3\n        while a!=b//3:\n            a=b-1\n        if a==b*2:\n            print(-1)\n            break\n        else:\n            if a==1:\n                print(-1)\n            else:\n                print((a-b)*2)-1\n            else:\n                print((a+b)*2)-1\n        print((a*2)-2)\n", "from collections import defaultdict\ndef __starting_point():\n    num = list(map(int, input().split()))\n    # k = a+b\n    def prime(num):\n        x, y = list(map(int, input().split()))\n        while (x % y == 0):\n            return x\n        if ((x // y) == 0 and (x // y) <= 0):\n            return x\n        else:\n            return y\n\ndef helper(a,b,k):\n    if b - a >= k+1:\n        return -1\n        for i in range(b-a+1, a):\n            if a % i == 0:\n                return i\n            b//= i\n    if a < b:\n        return -1\n    elif b < a-a:\n        return b\n        return a+b\n    else:\n        return b\n\ndef main():\n    a, b, k = list(map(int, input().split()))\n    if len(set(a)) > k+1:\n        print(a)\n    elif a > 1 and k+1 == a:\n        print(-1)\n    else:\n        print(l = helper(a+1, b+1, k)", "n, k = map(int, input().split())\ns = list(map(int, input().split()))\nif len(s) == 0:\n    print(-1)\n    return\nif k == 1:\n    k = 2\n    while k!= 0:\n        if s[k - 1] < s[k] - 1:\n            k += 1\n        else:\n            s.pop(-1)\n        else:\n            k = 0\n        if k == 0:\n            print(-1)\n            return\n        k += 2\n        else:\n            for x in s:\n                if x == 1:\n                    break\n                s.pop()\n            k -= x\n            else:\n                print(k-1)\n        k -= 1\n\n", "from collections import deque\ninput = stdin.readline\n\n\ndef prime(n):\n    primes = set([n])\n    while len(primes) > 0:\n        if all(i%2 == 0 for i in range(n-1) for i in range(n+1)):\n            return i\n            if all(i<n for i in range(n-1)):\n                primes.add(i)\n            return False\n    return True\ndef f(n,k):\n    primes = []\n    for i in range(k-1,-1,-1):\n        if not p:\n            primes.append(n)\n        if (n - prime(i)) == 0:\n            print(n)\n    else:\n        for i in primes:\n            if not p:\n                continue\n            primes.append(i)\n    return -1\ndef __starting_point():\n    a,b,k=list(map(int,stdin.readline().split()))\n    if (a > b):\n        print(-1)\n    else:\n        k-= 1\n        while k<10 ** 6:\n            a,b,k = list(map(int,stdin.readline().split()))\n            if min(k-prime(i))>=1:\n                break\n            f(a-b,b+1,k-2)\n            print(-1)\n        if l >= k:\n            print(f(a-k+1,k,a,k-1))\n        k+=1\n        else:\n            print(f(a-k+1,k))\n        else:\n            print(-1)\n        if min(k", "import sys\n\n# cook your dish here\nd = sys.stdin.readline().split()\na, b, k = map(int, input().split())\na = list(map(int, input().split()))\nwhile a:\n    a.remove(max(a))\n    a.remove(min(a))\n    if a[-1] >= b[-1]:\n        print(a[-1])\n        break\n    else:\n        a.remove(a[-1])\n        k -= 1\n", "a,b,k=map(int,input().split())\nl=len(set(a))\nprint(max(l-2) if k==2 else l)"], "187": ["def main():\n    m,n=map(str,input().split())\n    b = 0\n    while(n>0):\n        a=n-m\n        b+=1\n        n-=1\n    b=max(b,n-m)\n    print(\"YES\")\n    return a", "d = {\n    'AT':['TEX', 'TE', 'TEO', 'T']\n    'EMPLATE':['TEX', 'TEOP', 'TEOP']}\nr=input()\ns=0\nfor c in d:\n    if c == 'AT':\n        if r>(int(r)-1)):\n            m=1\n    if(r>m):\n        print('YES')\n        else:\n            r=m\nprint('NO')", "for _ in range(int(input())):\n    x = input()\n    if x.isalpha():\n        print(\"YES\")\n        break\n    if len(x) == 1:\n        print(\"YES\")\n    elif len(x) == 2:\n        print(\"YES\")\n        continue\n    elif len(x) == 3:\n        print(\"NO\")\n        break\n    else:\n        print(\"NO\")", "t = input()\nn = len(t)\nif n==2 or n==3 or t==4 or t==8:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "w = input()\nans = 'NO'\nfor i, c in enumerate(w):\n    n = ord(c)\n    ans = ans |('YES')\n    if n > 0 and i-1 > len(w):\n        ans = 'YES'\n    if ans == 'NO':\n        print('NO')\n    else:\n        print('NO')", "w = input()\nif len(w)<=100:\n    print('NO')\nelse:\n    print('YES')"], "188": ["n = int(input())\nA = []\nfor i in range(n):\n    A.append(0)\n    m = 10**6+1\n    for j in range(1, n):\n        a.append(2*a[j]**2)\n    l = 1\n    for j in range(2, int(math.sqrt(a[j]+a[i])):\n        s = 3*(s+1)/2\n        a.sort()\n    print(int(a[0][0]), int(a[0][2])-1)\n", "from sys import stdin\nimport math\n\n\ndef solve():\n    num_vertices = list(map(int, stdin.readline().strip().split()))\n    area = 3 * num_vertices\n    for x, y in enumerate(num_vertices):\n        area += (x * y)**2\n        for w in range(n - x):\n            area += w\n\n    return area\n\nn = int(stdin.readline())\nn = int(stdin.readline())\nwhile n > 0:\n    n -= 1\n    n -= 1\n    print((1 + n))", "from math import floor\n\n\ndef main():\n\n    main()\n\n    def __starting_point():\n        return int(input())\n\n    def __starting_point():\n        i, j = 0, 1\n        while j < (i + j - 1) // 2:\n            i += j + 1\n            j = i + 1\n        return j\n\n    def union(i, j):\n        x = k = i\n        while (x % 2 == 0):\n            x += 1\n            y = k * i\n            x = k * i\n        y = k * j\n        return x\n\n\n    def search(i):\n        x = int((i - k) / 2)\n        if j == x:\n            return x\n        if(x == y):\n            i = j + 1\n        else:\n            j = i + 1\n        return x \n\n        while(True):\n            x, y = iter(map(int, input().split()))\n            if(x > y):\n                ans = min(ans, find(x))\n                y -= 1\n        else:\n            ans = max(find(x, y))\n    return ans\n\nn = int(input())\n\n\ns = []\nfor i in range(n):\n    s.append(int(input()))\nprint(search(n))", "n=int(input())\ndp=[[] for _ in range(n+1)]\nfor i in range(n):\n    for j in range(i+1,n+1):\n        dp[j].append((j+j*i)//2)\n\nx=dp[0][0]\nans=0\nfor i in range(n):\n    for j in range(i+1,n+1):\n        if j in x:\n            print((x[i]*j))\n        else:\n            ans+=dp[i]*j\nprint(ans)\n", "def min_i(v, n):\n    if v == n: return 0\n    if v == n: return 1\n    r = int(math.sqrt(v)) + v\n    n = int(math.sqrt(v)) + 2\n    for j in range(n):\n        v += j\n        r = int(r ** 0.5)\n        r = 0\n        while r < r:\n            v += 2\n            r += 1\n        r += 1\nprint(min(r))", "# cook your dish here\nimport math\nn=int(input())\np=[0]*(n+1)\nl=list(map(int,input().split()))\nl.sort()\nr=[]\nfor i in range(1,n+1):\n    w=0\n    while i<n:\n        if (p[i]*p[i-1]>p[i][0]):\n            r.append([i,1])\n        else:\n            h=p[i]*(p[i-1]//p[i-1])\n            l.append(w)\nprint(min(l))\n\n"], "189": ["n = int(input())\n\nprint(1+sum(list(map(int, input().split())))", "n=int(input())\nprint(sum(range(1,n+1))//2)", "def get_num_of_books(n):\n    res = 0\n    for x in range(n//10):\n        res = res + int(x)\n    return res\nfor num in range(1, len(str(n))):\n    print(get_num_of_books(num))", "n = int(input())\ns = 0\nn = [n]*10\nb = 1\nfor i in range(1,n+1):\n    b = b*10\n    for j in range(1,i+1):\n        if j%2:\n            b += (b//j)\n    print(b)", "from sys import stdin\nn = int(stdin.readline())\ns = 1\nfor i in range(1,n+1):\n    if n%i == 0:\n        s+=1\n    else:\n        s+=(1)\nprint(s)\n", "# cook your dish here\nn=int(input())\nn=(n*n-2)-2\nans=0\nfor x in range(2,n+1,2):\n    ans+=int(x%1000000007)\nprint(ans)"], "190": ["n,x = list(map(int,input().split()))\nl = [len(a)-x for a in input().split()]\nk = 0\nl = 0\nl = max(l)\np = len(b)\nfor x in l:\n    while k < p and x * x <= k:\n        if (p - p) % x == 0:\n            p = p + p\n            if p > 0:\n                k = k\n    break\nprint(\"YES\")\n", "from sys import stdin\nimport math\r\n\r\nn,x=map(int,input().split())\r\na=list(map(int,input().split()))\r\nq=[]\r\nfor _ in range(n):\r\n    a.append(a[0])\r\n    for j in range(n):\r\n        q.append(a[j])\r\nfor j in range(n):\r\n    a.append(a[j])\r\nif len(q)==1:\r\n    print(\"YES\")\r\nelse:\r\n    c=input()\r\n    f1=0\r\n    for c in a:\r\n        f1+=1\r\n    print(f1==f2)\r\n", "n,x = int(input())\nfor i in range(n):\n    l = int(input())\n    n,x = list(map(int,input().split()))\n    l.sort()\n    x = (x - x)%n\n    if len(l)==x:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "n,x = map(int,input().split())\na = [int(i) for i in input().split()]\nans = []\nfor i in range(n):\n    a = a[:]\n    if a[i] == a[n - 1]:\n        ans.append(x)\nprint(ans)", "n,x = map(int,input().split())\na = [int(j) for j in input().split()]\nfor i in range(1,n+1):\n    i = j - i\n    j = i + i - 1\n    x = 1\n    while j > 0:\n        if a[i] == a[j - 1]:\n            x += 1\n            else:\n                x -= 1\n        break\n    if x > 0:\n        print('YES')\n    else:\n        print('NO')\n", "from collections import defaultdict\n\ndef main():\n    n, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    result = []\n    for i in range(n):\n        x = x >> 1\n        result.append(x)\n    print('YES')\n    pass\n\n\n\n\n\n\n__starting_point()"], "191": ["def my_count(n):\n    coins = 0\n    for x in range(1, n + 1):\n        if n % x == 0:\n            coins+=1\n        coins=coins+1\n        n//=x\n    return coins\n\ndef numb(n, s):\n    return (int((n//n - 1)/2))\n\nn=2\ns=int(input())\n\nfor i in range(n):\n    if s>n:\n        continue\n    while True:\n        s-=n\n    if s%i==0:\n        break\n    if s%i==0:\n        s%=i\n        print(numb(n-i,s))\n", "n,s = map(int, input().split())\nl = int(n/3)\nif(s%2 == 1):\n    print(1)\nelse:\n    print(2)\n", "n,s=map(int,input().split())\nl=list(map(int,input().split()))\nr=-2\na=0\nfor i in range(1,n+1):\n    a+=2\n    d=[]\n    a=0\n    for j in range(1,n+1):\n        if i+j==a:\n            d.append(j+i)\n            r+=1\nprint(r)\n\n", "import math\nn,s=map(int,input().split())\na=min(input())\nb=n\nprint(sum(a)+b)", "n,s=map(int,input().split())\nif n%2==0 and s==0:\n    n,s=n//2,1\nprint(1+n*(n-1) // 2)", "n,s=list(map(int,input().split()))\nsum=0\nfor i in range(1,n+1):\n    sum+=i**2\nprint(sum)\n"], "192": ["s = input()\np = [0] * 26\nk = -1\nn = len(s)\nfor i in range(n):\n    if s[i] == s[k+1]:\n        for j in range(i+1, 26):\n            p[i][j] = 1\n    else:\n        p[i][j] = 1\n\nprint(min(p[::-1]))\n", "from collections import Counter\nfrom functools import reduce\ndef p(l, m):\n    return Counter(l, -1) - Counter(l[:-1])\ndef h(l, m):\n    return map(int, input().split())\ndef i(l, m):\n    return lambda x: (x[1] - l[i+1] + n) // 2\ndef h(l, m):\n    return sorted(l, key=lambda x: -x[0])\ndef s(l, m):\n    res = [0] * m\n    i = 0\n    n = len(l)\n    d = 0\n    while i < n and j < n and j < n:\n        res[i(l, m)] += 1\n        i += 1\n    return res\n\nl = [input() for i in range(1, i) if (int(input()) < n-1)]\nd = [0] * len(l)\nfor i in range(1, n):\n    c = a[i]\n    n = l[i]\n    res[c] = c\n    #print(s(c), i)\n    k = [n for n in d[i(l, m)]\n    l.append(c)\n    p = min(l)\n    print(min(p))\n\n", "s=input()\nt=(len(s)-1)//2\nn=len(s[0])\ns=s[s[:t]]\n\n#print(t)\nd={'a':'a', 'e':'b', 'f':'a', 'g':'a', 'h':'c','l':'b','m':'c','n':'d', 'o':'d', 'p':'u':'a','u':'e','p':'w', 'p':'r','m':'a','v':'b','y':'a'}\nk=[]\nfor i in range(n):\n    k.append(k[i])\ns=sorted(s)\n\nfor c in s:\n    d.append(len(c)-k[-1]-c)\nprint(max(d))", "s = input()\nans = 0\nfor i in range(0,len(s)-2):\n    s += s[i]\n\nprint(min(ans,len(s)-len(ans)))", "s=input()\nans=0\nfor c in s:\n    ans+=(c<len(s)-(len(s)-1))*len(s)-(len(s)-1)\nprint(ans)\n", "input()\ninput().strip()\n\nans = 0\nfor i in range(len(input())):\n    if i == 0:\n        ans = ans+1\n    else:\n        ans += 1\n\nprint(ans)"], "193": ["l,r = list(map(int,input().split()))\nr = int(r)\nr1 = 10 ** 9\ny1 = 10 ** 9\nr2 = 10 ** 9\nx = l[0] + l[1] + l[2] + l[0] + r\nn = len(l)-1\nl = [n,l[0] + r[1], l[2] + r[2] + r[2]\nr2 = [0,l[0] + r[1] + r[2] + r[1] - r[2]], r[2]\nr2 = [0,l[1] + r[0] + r[1] + r[2] + r[0] + r[1] ]\nl = [n,r for n in range(n)]\nr2 = [n,l[n] + r[0] + r[1]]\nr1 = [x[0] + r[0] + r[1] + r[1] - r[0]]\nl = [[x1] + r[1] + l[0] + r[0] + r[1], r[1] + r[0], r[2] + r[1]], r[2] + r[0] + r[1], r[2] + r[1] + r[2]]\nl.sort()\nr1 = [n[0] + r[2] for n in range(n)]\nl1 = [-x2 for n in range(n)]\nr2 = [x1 for n in range(l1)]\nif (l1 < l2):\n  if (l2 < r1):\n   continue\n  else:\n  ", "r1, r2 = map(int, input().split())\nx1, y1, r2 = list(map(int, input().split()))\na = x1 + (r1 - 2)\nb = x2 + (r2 - 2)\nc1 = x2 + (r1 - 2)\nif c1 > 0:\n print(1/x1 * a * a / c1)\n else:\n  print(0.00000000000000000000)\n\nprint(sum(r1) * sum(r2) ** 2)", "# cook your dish here\nx1,y1,r_1=map(int,input().split())\nx2,y2,r_2=map(int,input().split())\nfor i in range(1,len(x1)):\n    x1=x1[i]\n    y1=y1[i]\n    x2=x2[i]\n    y2=y2[i]\n    r_2=r_2[i]\n    r_1=x2[i]\n    x2=x1[0]\n    y2=x2[0]\n    x2=y1[1]\n    y2=y1[2]\n    y1=y1[1]\n    y2=y2[0]\n    r_2=x2[0]\n    r_2=r_2[2]\n    print(math.pi * (r_2 - y1)))\n", "# cook your dish here\nc=input().split()\nc=sorted(c)\n\nv=[]\n\nv.append(c[0]*c[1]-c[2]),sorted(c[1],c[2])\n\nfor i in range(3):\n\tx1,y1,r1=list(map(int,input().split()))\n\tx2,y2,r2=list(map(int,input().split()))\n\tv.append(c[1]-x1)\n\tv.append(c[2])\n\ndp=[c[0]*r1]for i in range(len(v))]\nfor i in range(len(v)):\n\t\tx,y,r2=v[i]\n\t\tx+=r2\n\tc.append(x)\n\tdp[i][0]=x\n\tdp[i][1]=y\nprint(sum(dp[-1]))", "X,Y,R=map(int,input().split())\nif X%2==0:\n    print(0.00000000000000000000)\nelse:\n    x,y,R=list(map(int,input().split()))\n    x1,y1,R=map(int,input().split())\n    x2,y2,R=map(int,input().split())\n    print((x1+y1) * (y1+y2)**2)\n", "from math import pi\nn=input().split()\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n\tx1,y1,r1=map(int,input().split())\n\tr2=map(int,input().split())\n\td=sum(a[i]**2 for i in range(n))/(len(a)-i)\n\tfor i in range(n):\n\t\td+=a[i]**2\n\tprint((d*2/(len(a)))"], "194": ["# cook your dish here\nv = int(input())\n\nif (v % 10) == 0:\n    print(1)\nelse:\n    v = v - v / 10\n    print(v)", "n = int(input())\ni = 0\na = list(map(int,input().split()))\n\nans = 0\n\nwhile i < int(input()):\n    while i <= n:\n        i += 1\n        ans = min(ans, i - n)\n        n //= i\n\nprint(ans)", "v=int(input())\nn=v//3\nprint((n-(n/5)*n+((n-((n-(n-(n%5)*m*m)*m))-1)\n#print(n))", "v = int(input())\nn = int(input())\nprint(max(n,0))", "v=int(input())\na=v\nprint(a)", "v = int(input())\nl = [1]\nfor _ in range(1, v+1):\n    l[0] = (l[0]+l[0]//2)\n    for k in range(1, v+1):\n        l[k] = l[k-k]+1\nprint(v-l[1])\n"], "195": ["n = int(input())\nw = [input() for _ in range(n+1)]\nh = [input() for _ in range(n+1)]\nh.sort(key = lambda x: len(x))\nfor j in range(n+1):\n    l = []\n    for i in w:\n        if i[0] == l[j]:\n            h[i][j] = 1\n        else:\n            l.append(i[0])\n\nprint(len(h))", "from itertools import groupby\nfrom sys import stdin\nn=int(stdin.readline())\nwords=stdin.readline().split()\nfor i in range(1,n+1):\n    words.remove(i)\nwords = words.replace(i+1,'')\nprint(len(words))", "n=int(input())\na=list(map(int,input().split()))\nb=[x for x in input().split()]\nc=0\nfor x in a:\n for y in y:\n  if y[x]==y[x+1]:\n   break\n else:\n  c+=1\nprint(c)", "def main():\n    n = int(input())\n    if (n < 1) or (n == 2):\n        print('0')\n    else:\n        if (n == 3):\n            print('1')\n        else:\n            print('1')\n        else:\n            print('0')\n        else:\n            print('0')\n        return\n\nfor i in range(n):\n    s,t=input().split()\n    # print(s,t)\n    if(s==t):\n        print('1')\n    else:\n        print('0')\n", "n = int(input())\ns = input()\nfor i in range(n):\n    st = set(s)\n    if len(set(st)) == 1:\n        ans = 0\n    for j in range(len(st)):\n        if (st[i] == st[j]):\n            ans += 1\n    print(ans)\n", "N = int(input())\nS, T = sorted(input().split())\n\ns = input()\nt = sorted(input().split())\ncnt = 0\nfor i in range(N):\n    for j in s:\n        if i not in t:\n            if i not in s:\n                cnt += 1\n                break\n        if cnt > 1:\n            t.append(i)\nprint(cnt)"], "196": ["from functools import lru_cache\nfrom collections import Counter\nimport sys\ninput = sys.stdin.readline\n\n\ndef find(x, y):\n    for i in range(len(x)):\n        if x[i] + x[i+1] == y[i]:\n            return i\n        return -1\n\ndef find(x, y):\n    x, y = list(map(int, input().split()))\n    return x - y \n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        if A[i] - B[i] > 1:\n            c += 1\n        a.append(c)\n    return a\n\nn = len(input())\nfor i in range(n):\n    x, y = map(int, input().split())\n    print(find(x, y))\n", "import math\ninput = sys.stdin.readline\nfor i in range(len(input())):\n    x,y = input().split()\n    x2,y2=map(int, input().split())\n    l=[int(i) for i in input().split()]\n    c=0\n    while(x2<x1 and y2<y2):\n        c+=1\n        c+=1\n        if(c==0):\n            print(1)\n        print((c+1))\nexcept:\n    pass\n\ndef main():\n    ans=0\n    for _ in range(len(input())):\n        x, y = list(map(int,input().split()))\n        n=len(x)\n        x=x[0]\n        y=y[0]\n        x=x[1]\n        n-=1\n        for i in range(n):\n            if(y[i]==x):\n                continue\n            ans+=1\n            n=n+1\n        print(ans)\n\nmain()", "x,y = map(int,input().split())\nans = 0\ni,j = 1, 0\nwhile(i<=j):\n    if x<0 or y<0:\n        y+=1\n        i=j\n        j+=1\n    if y==0:\n        j=i\n    if i==j:\n        ans+=1\n    else:\n        if i==j:\n            x+=1\n            j+=1\n        else:\n            x-=1\n        j+=1\nprint(ans)", "import numpy as np\nN,x,y=list(map(int,input().split()))\nprint(len(N)*n*n*n)", "import sys\ninput=sys.stdin.readline\ninput=sys.stdin.readline\np0=list(map(int,input().split()))\nj0=0\ncount=0\nl1=0\nl2=0\nfor i in range(2,len(p0)):\n    s1=len(p0)+1\n    if(s1>0) and(s1>0):\n        s1-=1\n        for j in range(i+1,len(p0)+1):\n            if(p1<p2):\n                s1+=1\n                j+=1\nprint(count)", "# cook your dish here\ntry:\n    x, y = list(map(int, input().split()))\n    m = (x+y)//2\n    ans = (m+1)//2\n    print(ans)\nexcept:\n    pass\n"], "197": ["s = [0] * 100\na = [0] * 100\n\nn = 0\n\nwhile(n < n):\n    r = n\n    c = (i + 1) % n\n    c[i] = 1\n    j = r - 1\n    while(j < n):\n        c[j] = (i + 1) % n\n        for i in range(j):\n            if (c[i-1] == c[i+1]):\n                j += 1\n            j += 1\n    j += 1\nprint(\"NO\")\n", "k=int(input())\n#if k<=1:\n    if k<=2:\n        print(\"YES\")\n        else:\n            if k<2:\n                print(\"NO\")\n                continue\n            if k!=k//2:\n                print(\"YES\")\n            if k%2==1:\n                print(\"NO\")\n            else:\n                print(\"YES\")\n                break\n            if k%2==1:\n                print(\"YES\")\n            if k!=n:\n                print(\"NO\")\n            if k>=n:\n                print(\"YES\")\n            else:\n                print(\"YES\")\n        print(\"\")", "from collections import defaultdict\ninput = lambda: str(input())\n\nn = int(input())\nfor i in range(n+1):\n    k = int(input())\n    v = [(n, i+1) for i in input().split()]\n    v.sort()\n    if v[0] == k:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "k = int(input())\na = [i for i in input().split()]\nb = [i for i in input().split()]\nfor i in range(1,k+1):\n    if a[i] == b[i]:\n        k-=1\nprint(\"YES\")\nprint(\"NO\")\n\nt = k/2\nd = k//2\nd[k%2] = 2\nprint(n//2,\"Y\")", "from math import gcd\nlcm = lambda x, y: (x*y)//gcd(x,y)\nn = [1] * n\nm = [ 1] * n\nt = 0\nfor i in range(1, n + 1):\n\tfor j in range(2, n + 1):\n\t\t\tt = (t*(t+j)//2)*(t+j)\n\tif t!= 0:\n\t\t\tt = (t+j)//2\n\t\t\tm[t] = m[t]\n\tt.sort()\n\tt = sorted(t)\n\nprint('YES')\n", "k=int(input())\na=[]\nb=[[] for _ in range(k+1)]\nb.append([0]*2)\nfor i in range(2):\n  if(a[i]==1 or a[i]==2) or(a[i]==2):\n   if(b[i]==2):\n    b.append([0]*(i+1))\n  else:\n   if(b[i]!=2):\n    b.append([i+1,b]))\nprint('YES')"], "198": ["k, d = map(int, input().split())\np = [list(map(int, input().split())) for i in range(n)]\nsum_p = [0] * (k-1)\nfor i in range(1, k+1):\n    sum_p[i] = sum_p[i-1]+p[i]\n\nprint(sum_p[k-1] % 1000000007)", "n,k,d=map(int,input().split())\nd=[0]*k\nt=1\nwhile t*k<=n and d:\n    if t*k==n:\n        n+=1\n    t=t-n%1000000007\n    else:\n        t+=d%1000000007\n    t+=1\nt+=1\nprint(t%(1000000007))\n", "n, k, d = map(int, input().split())\nr = int(k)\nprint(n*(k-1)//d//n)%1000000007", "a=map(int, input().split())\nprint((n*k)*(b+1))%(10**9+7)\n", "import sys\ninput = sys.stdin.readline\nk,d = map(int, input().split())\nn,k,d = [int(n) for i in input().split()]\nl = [k,d]\ndp = [[0]*1000000007 for i in range(100)]\n\np1,p2,p3 = [0]*1000000007,0,1\n\ndef get_dp(node,k):\n  dp[node][k] = (dp[node-1][k]+dp[node][k-1]+dp[node-2][k-1])%1000000007\n  dp[node][k] = (dp[node-1][k] + dp[node][k])%1000000007\n    \nfor i in range(1,k+1):\n    p1[p2][i+1] = ((p1[p2][i-1]-dp[p3][i]-dp[p4][i])%1000000007)\n    dp[node][k] = p1\n    \n    dp[i][k] = p3\n\nprint((get_dp(n,k,d))%1000000007)", "n,k,d=map(int,input().split())\nprint((n*(n+k))/(k+1))%(1000000007)"], "199": ["import sys\nimport sys\nimport math\ndef main():\n    a, b = list(map(int, input().split()))\n    count = 0\n    for i in range(a+1, b+1):\n        if i == a:\n            count += 1\n        elif i == b:\n            count += 1\n        elif i == a:\n            count = 2\n        else:\n            count += 1\n        print(count)", "a, b = list(map(int, input().split()))\na = max(a,b)\na = min(a,b)\nb = max(b,a)\nans = 0\nfor i in range(a,b+1):\n    if a&i == b:\n        ans += 1\nprint(ans)", "a, b = map(int, input().split())\nans = 0\nfor x in range(a, b+1):\n    ans += 1\nfor j in range(a, b+1):\n    if x % a == 0 and y % b == 0:\n        ans += 1\nprint(ans)", "a, b = list(map(int, input().split()))\n\na, b = a, b\nprint(a - b)", "a,b=[int(x) for x in input().split()]\nans=1\nfor i in range(b+1):\n    if i&(a-1)==0:\n        if i>0:\n            s=''\n            i-=1\n            else:\n                s=''\n    elif i&(a-1)!=0:\n        if b-a!=0:\n            s+='a'\n            else:\n                if i!=a:\n                    s+='b'\n                else:\n                    s+='a'\n            ans+=s[-1]\nprint(ans)\n", "# cook your dish here\na,b=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\ncnt=0\nfor i in range(b+1):\n    a.append(a.count(i))\nans=0\nfor i in range(a+1):\n    if a[i] == b[i]:\n        ans+=1\nfor i in range(b+1):\n    while a[i]!= b[i]:\n        a.pop()\nif a[i] == b[i]:\n    print(ans)\nelse:\n    print(ans)"], "200": ["a,b=map(int,input().split())\nif a==b:print(-1)\nelse:print(0)", "a,b=map(int, input().split())\n#check if this fox is lying to bears\nif a%2 == 0:\n    print(-1)\n    elif a%3 == 0:\n        print(-1)\n    else:\n        print(0)\n    \n", "a, b = map(int, input().split())\nif a == b:\n    print(0)\nelse:\n    print(a - b)", "a, b = map(int, input().split())\nif a == b:\n    print(-1)\nelse:\n    print(0)", "a,b=map(int,input().split())\n\nprint(-1) if a*b*b<a*a or b*a%b!=b*b else -1", "a,b = map(int,input().split())\n\nres = 0\nif a%b==0 or b%a==0:\n    print(-1)\n    else:\n        ans=1\n        a=a%b\n        b=b//a\n        if a%b%th==0 or b%b%5==0 or a%b%th==0:\n            ans+=1\n        else:\n            ans+=1\n        if a%b==0:\n            print(0)\n        else:\n            print(-1)\n            print(res)\n            \n        a = 0\n        b = 0\n        b = 0\n        \n        res+=1\n        \n        ans=0\n        if a%b!=0 and b%a==0:\n            ans=1\n        return ans\n\n        ans=min(res, a)\n        \n        for _ in range(b):\n            if a%b==0:\n                ans=max(res, a)\n                print(ans)\n        break\n        a = b-1\n        a=0\n        b=0\n        for i in range(a//2,b//5):\n            if a%i==0 and b%i==0:\n                ans=min(ans, a)\n            a=a*5+a\n        if b%i==0 and a%i==0:\n            print(0)\n        else:\n            print(ans)\n        \n        print(ans)\n        \n"], "201": ["k = int(input())\ns = [0, 0]\nfor i in range(k):\n    s[i] = s[i-1] + 'b'\nprint(2*s[k])", "k = int(input())\nif k <= 1:\n    print(-1)\n    else:\n        print(((k//2)**0.5+5)**.5+k%2)//2)", "k = int(input())\nl = []\nfor _ in range(k):\n    n = int(input())\n    l.append(x//k)\n\nfor x in range(2, n):\n    l.append(2*k)\nn = n-2\nprint(l)", "import sys\ninput = sys.stdin.readline\nk = int(input())\nmatrix = [0]*(k + 1)\nfor _ in range(k - 2):\n    matrix.append(1)\n\nd = (1, k - 2) + [2, 2, 2, 3, 4, 6, 8, 9, 1, 1, 7, 0, 0, 7, 2] + [1, 2, 3]\nprint(*matrix[:k])", "k = int(input())\nif k == 1:\n    print(-1)\n    return\n\nelse:\n    for i in range(k-2):\n        print(*sys.stdin.readline().split())\n    print(*sys.stdin.readline().split())\n", "# cook your dish here\nn=int(input())\nk=n//2\nprint(\"-1\")"], "202": ["# cook your dish here\n\ninput = lambda : int(input())\nprint(max(1 for i in input().split()))", "n = int(input())\nif n % 2:\n    print(n//2+1)\nelse:\n    print(n%2+1)\n", "n=int(input())\nans=n\nwhile(1):\n    for i in range(1,int(n**0.5)+1):\n        if(n%i==0):\n            ans=ans*(n/i)\n        else:\n            ans=ans*(n-1)+((2**i))\n        print(ans)\n", "n = int(input())\nif n == 1:\n    print(1)\nelse:\n    print(n*n)", "n=int(input())\nif n%1==0:\n    print(n)\nelse:\n    print(n)", "n = int(input())\nprint(n * ((n + 1) ** 0.5)**2 - n % 1)"], "203": ["n = int(input())\narr = list(map(int, input().split()))\n\nif arr[0] == '':\n    print(\"No\")\nelse:\n    print(\"Yes\")\n", "n=int(input())\nf=list(map(int,input().split()))\nfor i in range(2,n+1):\n    s=input()\n    if(n%2==1):\n        print(\"Yes\")\n    else:\n        if(n%2==1):\n            print(\"No\")\n        else:\n            print(\"Yes\")\n        elif(n%2!=1):\n            print(\"No\")", "import re\nn = int(input())\nstr1 = list(map(str,input().split()))\ns1 = [x for x in input().split()]\nc1 = [False] * n\nfor i in range(n):\n    if s1[i] == False:\n        c2[i] = True\n        else:\n            c2[i] = False\n    if c1[0] == True:\n        c1[1] = True\nprint(\"No\")\n", "n = int(input())\ns = input()\nx = 0\nfor i in range(n):\n    x += 1\n    if x == 0:\n        if i == 1:\n            print(\"Yes\")\n            break\n    x += 1\nprint(\"No\")\nprint(\"No\")", "n = int(input())\ns = input()\nwhile s:\n    if not s:\n        print('No')\n    return\n    s = s.replace('0','1')\n    s = s.split()\n    if len(s)!= 1:\n        print('Yes')\n    return\n    print('Yes')\n", "n = int(input())\nans = 0\nfor i in range(n):\n    x = input()\n    ans = max(ans, x)\nif ans == 0:\n    print('Yes')\nelse:\n    print('No')\n"], "204": ["a,s = map(int,input().split())\nif a <= 6:\n    print(\"YES\")\n    return\nif int(s[0]) == s[3]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "a = list(map(int,input().split()))\nprint(\"YES\")\ntry:\n    for i in range(1,6):\n        if a[i] == a[i-2]:\n            print(\"YES\")\n    except:\n        print(\"NO\")\nexcept:\n    print(\"YES\")", "a = list(map(int, input().split()))\nprint(\"YES\" if sum(a) == sum(a) else \"NO\")", "a=[]\nfor i in range(len(a)):\n    a.append(int(x))\nprint(\"YES\")\n\nif len(a)==6:\n    print(\"YES\")\nelse:\n    if a[1]==a[2]:\n        print(\"NO\")\n    else:\n        print(\"YES\")", "s = input()\nc = 0\nfor i in range(len(s)):\n    if s[i] == s[i-1] and s[i+2] == s[i-3]:\n        c += 1\n    elif s[i] == s[i+5]:\n        c -= 1\n    if c == 0:\n        c += 1\n    else:\n        c += 1\nprint(\"YES\")", "n = list(map(int, input().split()))\nfor i in range(6):\n    s1 = sum(a)\n    s2 = sum(a[i:])\n    s3 = sum(a[i+1:])\n    if s1 == s2:\n        print('YES')\n    else:\n        print('NO')\n"], "205": ["\nl,r=map(int,input().split())\na=1\nfor i in range(2,r+1):\n    if(l==2):\n        a=a*b\n    elif(l%i==0 or (l%i!=0):\n        a+=(l//i)*a\n    elif(l%i==0 or l%i!=0) and(r%i!=0):\n        if(a%i==0):\n            b+=(l//i)\nprint(b)", "import math\n#from collections import Counter\ndef find(x):\n    m = []\n    n = 1\n    for i in range(1, 10):\n        if x%i == 0: m.append(i)\n    return m\nt = input()\nans = 0\n\nwhile t:\n    if t%i == 0:\n        m.append(t-1)\n    if t%i == 0:\n        ans += 1\n        t-=1\n    else:\n        x = t\n    if y == r:\n        ans += 2\n    else:\n        y += 1\n    j = t//i\n\n    m.append(3 * t)\n\nfor k in range(1, len(m)):\n    print(m[k])\n        \nprint()", "import math\nl,r = map(int,input().split())\na = []\nfor i in range(l,r+1):\n    if l%i==0 and r%i==0:\n        a.append(l//i)\nprint(sum(a)/2*(2*(l-1)+1))\n", "a = list(map(int, input().split()))\nk = list(map(int, input().split()))\nl = []\nr = []\nl1 = []\nn = 2\nwhile a<n:\n    a += a\n    r.append(a)\n\nk = len(a)\nfor i in range(n-k):\n    for j in range(i, k+1):\n        if a[j]==a[i]:\n            k += 1\n        if k!= n-1:\n            k -= 1\nprint(i*2**k)", "l,r=list(map(int,input().split()))\nt=l+1\nfor i in range(1,r+1):\n    if n%2==0 and not (n%2) or n%3==0:\n        t+=1\n    continue\n    if n%5==0 and t%10==0:\n        t+=1\n    if n%7==0:\n        t+=1\nprint(t+t)\n", "l,r=map(int,input().split())\na=int(input())\nif l%2==0 or r%2==0 or a%3==0:\n    print(2)\nelse:\n    print(1)\n"], "206": ["from collections import defaultdict\n#input()\n\nn=int(input())\nl=[list(map(int, input().split()))]\nd={len(l):0 for _ in range(n)}\nfor i in range(n-1):\n    temp=[(len(l[i])-l[i+1]),(len(l[i+1])-l[i])]\n\nif sorted(d)==sorted(d):\n\t\tprint('YES')\nelse:\n\t\tprint('NO')\n \n\n\n", "n = int(input())\na = list(map(int, input().split()))\nc = 0\nn1 = min(a)\n\nif len(a[n1]) < 2:\n    print(\"YES\")\nelse:\n    a1 = min(a1)\n    c = 2\n    a2 = min(a2)\n    if len(a1) <2:\n        print(\"NO\")\n    c += 1\n", "import sys\nfrom math import sqrt\nfor _ in range(int(input())):\n    n=int(input())\n    x=list(map(int,input().split()))\n    if len(x)==2:\n        print(\"NO\")\n    else:\n        print(\"YES\")", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nn = 0\na = [int(i) for i in range(n)]\nn += 1\nfor i in range(n):\n    a[i] = int(a[i])\nif a[i] > n :\n    print(\"YES\")\nelse:\n    print(\"NO\")", "# cook your dish here\nn,a,c=map(int,input().split())\nl=[]\nfor i in range(n):\n    l.append(int(input()))\nfor i in range(n):\n    if l[i]%2 == 0:\n        l.append(i)\n    else:\n        c=max(c)+l[-1]\n    l.append(c)\nprint('YES')", "import sys\nn=int(input())\na=list(map(int,input().split()))\nif len(a)<3:\n    print(\"NO\")\nelse:\n    p=[0]*n\n    for i in range(1,n+1):\n        p[i]=p[-1]-p[i-2]\n    p[i+1]=p[i+2]-1\n    print(\"YES\")"], "207": ["# cook your dish here\nx,y=map(int,input().split())\ncheck=(x-y)%2\nif(check>0):\n    print(\"Yes\")\n    else:\n        print(\"No\")", "for _ in range(int(input())):\n\tx, y= map(int, input().split())\n\t#print(x,y)\n\t#if (x>=y):\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n", "#!/usr/bin/env python3\nimport math\ninput = lambda: input()\n\nx, y = map(int, input().split())\nif x+y==x:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "a,b=map(int,input().strip().split())\nfor i in range(b):\n    if a==0:\n        print('Yes')\n    else:\n        print('No')", "from sys import stdin\ninput = stdin.readline\nn = int(stdin.readline())\ns = len(str(s))\nif x > 1:\n    if s <= y:\n        if s % 2 == 0:\n            print(\"Yes\")\n            else:\n                print(\"No\")\n            else:\n                print(\"Yes\")\n        else:\n            print(\"No\")\n    \n", "x,y = list(map(int,input().split()))\nres = True\nfor i in range(y):\n    if x%i==0:\n        if x>=y%i:\n            res=False\n    else:\n        if y%i==0:\n            res=False\nprint(res)"], "208": ["for _ in range(int(input())):\n    n,m=map(int,input().split())\n    n_digits=sum(map(int,input().split()))\n    print(2 * n_digits)", "# cook your dish here\nn, m = map(int, input().split())\nf = input()\ndef is_digit(a):\n    return (True if sum(map(int, input().split())) < int(n) else False)\n\ndef min_int(a):\n    x = a[0]\n    y = a[1]\n    z = 1\n    while (x > y):\n        z -= 1\n        x,y = x, y\n    return z\ndef is_digit(num):\n    i = 0\n    while i < n:\n        if is_digit(num):\n            i += 1\n            j = i+1\n        else:\n            break\n        if j - i > 1:\n            return False\n    return True\n\ndef is_string(n):\n    return int(str(n)) == str(str(m))\n\nfor num in range(len(b)):\n    if is_digit(num):\n        if num > min_int(b):\n            min_int = num\n            if num > min_int(a):\n                print(a[num])\n            else:\n                break\n\ndef __starting_point():\n    main()\n__starting_point()", "a,b,c=input().split()\nif len(a)==1 or len(b)==1:\n    print(a)\nelse:\n    n, m = [int(x) for x in input().split()]\nprint(sorted(map(int, a)))", "n, m = map(int, input().split())\na, b = map(int, input().split())\nb = map(int, input().split())\nprint(max(b))\n", "# cook your dish here\nn,m = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nfor i in range(len(a)):\n    b[i] = list(map(int,input().split()))\nprint(min(int(b),n)+1)", "n,m = map(int, input().split())\narr = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    arr.remove(int(x[0]) + 1)\n\nprint(min(map(int, arr))"], "209": ["import sys\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    a = int(input())\n    b = int(f'{b:b}')\n    print(b)", "a = int(input())\nc = 0\nfor i in range(1,b+1):\n    a = 1 + a * (i-1) // 10\n    c += 1\nprint(c)", "b = int(input())\nl = []\nfor x in range(1, b+1):\n    l.append(b%x)\nprint(len(l))", "from sys import stdin\ninput = stdin.readline\n\np = 9 * 9 * 9 * 9\nd = [1] * 10\nwhile p > 1:\n    i = 0\n    while not d[i]:\n        d[i] = d.pop()\n        i += 1\n    d[i] = 1\n        d[i] = d.pop()\nprint(len(d))\n\n", "import math\nans = int(''.join(map('str', input().split())))\na = b\n\nc = 0\nfor i in range(1,int(math.sqrt(b))+1):\n    c += 1\nprint(c)", "a=1\nfor i in range(10):\n    a+=1\n    b=10**18\na=a*a\na=a+a//2\nprint(a)"], "210": ["n = int(input())\nbumpers = input()\na = list(bumpers)\ncnt = 0\n\nif a[-1] == \">\":\n    cnt += 1\nif bumers[-1] == \">\":\n    cnt = cnt + 1\n    elif bumers[-2] == \">\":\n        cnt += 1\nif cnt == 1:\n    cnt = 1\nfor b in bumpers:\n    if a[-1] == '>':\n        cnt += 1\n    else:\n        cnt -= 1\nprint(cnt)", "n = int(input())\nb = input()\n\nnum = 0\nwhile(n>0):\n    num += 1\n    b = b.split(\"<\")\n    if num[0] > num[1]:\n        n -= 1\n    else:\n        num += 1\n    \n    n -= 1\n    \nprint(num)\n\n", "n=int(input())\r\ns=input().strip()\r\nfor i in range(n):\r\n    s=s.replace(i,'\\n')\r\n    if(s[i]=='>' and s[i-1]=='<'):\r\n        n-=1\r\n    else:\r\n        n-=1\r\n    if(s[i]=='>' and s[i+1]=='>'):\r\n        n-=1\r\n    print(n)", "def main():\n n=int(input())\n a=input().split()\n r=[]\n c=''\n for i in range(1, n-1):\n  if i=='>':\n   c=''\n   r.append(i)\n return len(a)\na=list(map(int, a))\nprint((len(a)))\n", "# cook your dish here\nn=int(input())\ns=input()\nx=x.count(\"<\")\nc=0\nfor i in range(n-1,-1,-1):\n    print(c)\nfor i in range(n-1,-1,-1):\n    print(i)\n", "n=int(input())\r\nb=input()\r\nm=len(m)\r\ncnt=0\r\ns=m[1:]\r\nwhile(m!=0):\r\n    s1=str(m[0])\r\n    for m in m[n-1:]:\r\n        if m in m:\r\n            cnt+=1\r\n    if m==m[n-1]:\r\n        cnt=0\r\n    if m>1:\r\n        cnt+=1\r\n    \r\nprint(cnt)"], "211": ["n, m = map(int, input().split())\n\nmax_rank = n * m\n\n\nprint(max_rank)", "n,m=list(map(int,input().split()))\na=n-2\nb=n-1\nif n-1+m>a:\n    print(a)\nelse:\n    print(b)\n", "from itertools import cycle\n\ndef solve():\n    n,m=map(int,input().split())\n    l=list(itertools.combinations(list(map(int,input().split())))\n    c=0\n    for i in l:\n        if i == n:\n            c+=1\n    else:\n        if n%2:\n            c+=1\n    if n>m:\n        m-=1\n    return c\n\n\nn=list(map(int,input().split()))\n\nfor i in range(1,n+1):\n    x,y = list(map(int,input().split()))\n    s=s+y\n    n1=s*n1\n    m2=s*n2\n    print(s//2)\n\n\nn1=1\nprint(n1//2)", "def main():\n    n,m=list(map(int,input().split()))\n    c=n+m-2\n    if(m<c):\n        print((m-1)//(c+1))\n    elif(n%2==0):\n        print((n-2)-c//2)\n    else:\n        print((n-2)+c//2)", "# cook your dish here\nn,m=map(int,input().split())\nn=int(input())\nm=int(input())\nif(n==0):\n    print(1)\nelse:\n    print(1+n*n*m)\n", "def solve(n,m):\n    lst = sorted(list(map(int, input().split())))\n    print(sum(list(enumerate(lst, 2)))"], "212": ["s = input()\nc = s.upper()\nx = 0\nfor i in range(0, len(c)-1):\n    if c.find(x)!= -1:\n        if c.index(c)-x > -1:\n            if c.find(x)+x < x:\n                break\n            else:\n                c = 0\nprint(\"YES\")\n", "import sys\nstdin = sys.stdin\ninput = lambda: stdin.readline().strip()\nstdin.readline()\nnos = 'ABABABBABA'\nwhile stdin.readline()!= nos:\n\tif s == nos:\n\t\tprint(\"YES\")\n\tcontinue\n\t\tprint(\"NO\")\n\tstdin.readline().strip()\n\telse:\n\t\tprint(\"NO\")", "# coding: utf-8\ninput = sys.stdin.readline\nc = [0,0,0,0]\nans = 'NO'\n\nfor i in range(len(c)):\n    if s[i] in c:\n        ans = 'YES'\n    else:\n        break\n    c[s[i]] += 1\n\nprint(ans)\n\n", "S = input()\nA = []\nfor i in range(len(S)-1):\n    if S[i]!= S[-1]:\n        A.append(S[-1])\n    if A:\n        A.append(S[-1])\n    A.sort()\n    if A:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "s = input()\nprint('NO')\n", "s = input()\nn = len(s)\n#if s.count('AB')>n:\n#    print(\"NO\")\nif n>n-1:\n    print(\"YES\")\nelif n>n-2:\n    print(\"NO\")\nelse:\n    print(\"NO\")\n"], "213": ["def __starting_point():\n    a, b = list(map(int, input().split()))\n    c, r = [list(map(int, input().split())) for i in range(r)]\n    while r:\n        y = []\n        for i in range(r):\n            for j in range(b):\n                if c[j][i] == c[i]:\n                    b.append([x, y])\n                if j!= r:\n                    c.append([x, y])\n            r += 1\n        if c == r:\n            b.append([x, y])\n        if r > r:\n            print(\"Yes\")\n        elif r == 1:\n            print(\"No\")\n        else:\n            x = 0\n        y = 0\n    if b < 0:\n        print(\"No\")\n        elif c == r:\n            if r > 0:\n                b.append([x,y])\n        elif b < 0:\n            b.append([x,y])\n        elif l > 0 and r < 0 and c > 0 and b < r:\n            b.append([x,y])\n        else:\n            b.append([x,y])\n        if b < 0 and b > 0:\n            b.append([x,y])\n        elif b > r - 1:\n            if c == r - 1:\n                b.append([x,y])\n            elif r < 0:\n                b.append([x,y])\n        elif l == 0:\n            b.append([y,l])\n            c += 1\n            r += 1\n            c -= 1\n            if c == r-1:\n                b.append([x, y])\n            if r >", "a,b=map(int,input().split())\nif a==0 or b==0:\n  print(\"Yes\")\nelse:\n  r,b=list(map(int,input().split()))\n  i=0\n  x=x-1\n  y=y-1\n  if a==b:\n   print(\"Yes\")\n  if b==0:\n    print(\"Yes\")\n  else:\n   print(\"No\")\n  else:\n   print(\"Yes\")", "import sys\ninput = sys.stdin.readline\n\nr, b = list(map(int, input().split()))\n\ndef find(x):\n    return x == b[0]\n\n\nfor _ in range(r):\n    x, y = list(map(int, input().split()))\n    x, y = map(int, input().split())\n    x.sort()\n    y.sort()\n    if y.count(x) == 0:\n        return x\n    if x[1]!= y[0]:\n        print(\"Yes\")\n        print(\"No\")\n    return y\n\nr,b = list(map(int, input().split()))\nd = []\nx,y = find(x),find(y)\ny = find(y)\nfor i in range(r):\n    x1,y1 = find(x)\n    y2 = find(y)\n    if y1 == y2:\n        d.append(x1)\n    elif y1 == y2:\n        d.append(y1)\n    elif x1 == x2:\n        d.append(y2)\n    elif x1 == x2 and y1 == y2:\n        d.append(x1)\n    elif x1 == x2:\n        d.append(y1)\n    elif x1 == x2:\n        d.append(y2)\n    else:\n        d.append(x1)\n    else:\n        d.append(y2)\nprint(d.count(\"yes\"))\n", "import sys\nreadline = sys.stdin.readline\n\nR,B = readline().split()\nBs = list(map(int,readline().split()))\nBs = list(map(int,readline().split()))\n\nBs.sort()\nX = []\nY = []\nY = []\nX.sort()\nfor i in range(1,R):\n    A[i] = (A[i - 1], A[i])\n    A.sort()\n    \nfor i in range(1,B):\n    x,y = map(int, input().split())\n    if A[x][y]==B[i]:\n        Y.append(A[y][x])\n    \n    else:\n    \n        X.append(A[x])\n    \nfor i in range(1,R):\n    X.append(i)\n    \nfor i in range(2,B):\n    x,y = list(map(int, input().split()))\n    \n    X.append(x)\n    \nprint(\"Yes\")", "R, B = map(int, input().split())\nX,Y = [x for x in input().split()]\nX1,Y1 = [int(x) for x in input().split()]\nB = [int(y) for y in input().split()]\n\nif R == 2 and B == 2:\n    print('Yes')\nelse:\n    print('No')", "n,r = list(map(int,input().split()))\nfor i in range(n):\n  a,b = map(int,input().split())\n  if r == b:\n   print(\"Yes\")\n  else:\n   print(\"No\")\n"], "214": ["n, m = map(int, input().split())\nn, m = map(int, input().split())\nif n%2==0:\n    print(n-m)\nelse:\n    print(n-m)", "n,m = map(int, input().split())\na = int(input())\nans = 0\nfor i in range(n):\n  a += int(input())\nprint(ans)", "# cook your dish here\nn, m = list(map(int, input().split()))\n\nif n == 1 or m == 1:\n    print(2)\nelse:\n    r = n * 2 + m\n    l = l*2 + m * 2\n    c = r-r-1\n    a = n - l\n    print(m - c)\n    \n", "def test():\n    m = int(input())\n    a = int(input())\n    b = int(input())\n    c = float('-inf')\n    for i in range(1, b + 1):\n        a = a * (b - i)\n        c *= m\n    b = c + a * (b - i)\n    c += 1\n    print(c)", "n,m = map(int, input().split())\nans=n-m\nans.sort()\nans.sort()\nans.pop()\nans.insert(0,n-1)\nans.append(n-m+1)\nprint(ans[-1])", "# coding: utf-8\nn,m = list(map(int,input().split()))\na = sorted([i for i in input().split()]), reverse = True\na.sort()\nprint(int(a[0])-int(a[1]) -int(a[0]))"], "215": ["n=int(input())\nl=list(map(int,input().split()))\ndp=[[0 for i in range(100)] for j in range(n+1)]\nfor i in range(n):\n    dp[l[i-1]]=max(dp[i][1],dp[l[i-1][0])\nfor j in range(i+1,n+1):\n    for i in range(0,n+1):\n        j+=1\n        j=1\n    if j==1:\n        print(0)\n    else:\n        maxl=dp[j][0]\n        \n    print(maxl)", "n = int(input())\nt = 100\nwhile t > 0:\n    n = int(input())\n    r = list(map(int, input().split()))\n    t += r[0]\n    t -= 1\n    r = r[n-1]\n    r[0] = t\n    t = t%100\n    if t == 0:\n        print(0)\n    t = 0\n    else:\n        t = 100\n        t = t+1\n        r[n] = 1\n        r[n] = r[n-1]\n        n -= r[n]\n        t += 1\n        t += 1\n    t = max(t,t)\n    print(t)", "# cook your dish here\nfrom math import gcd,floor\nfrom sys import stdin\nn,s,t = map(int, input().split())\np = [0,1,2,3,4,5,7,8,9,10,13,12,19,13,17,19,21,19,23,39,26,28,38,19,27,36,39,30,31,53,543,13,32,34,35,29,34,5,31,33,33,33,56,63,54,618,77,77,78,78,77,89,77,99,79,79,79,95,90,77,97,91,91,77,77,88,801,911,9013,9033,9601,8803,8800,9092,9827,9827,991,9832,9734,97739,8164,8864,8963,89868,9876,99734,99434,99532,9985,997768,937768,97784,119301,81130,100835,9569,9989,999703,1111,99835,9718,8923,8303,8819,99776,991,88355,91778,97397,88709,889688,81192,89898,80933,996633,80933,10191,977900,94779,999993,8800,9257,999801,989811,9811,9759,898902,971024,98735,98", "n, s = map(int, input().split())\n\na= list(map(int, input().split()))\nb=list(map(int, input().split()))\nc=0\nwhile (len(a)>100):\n    b.append(max(b))\n    c+=b.pop()\nb=sorted(b)\nd=sum(b)\nprint(d)", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [int(x) for x in input().split()]\nb = [[int(x) for x in input().split()] for x in input().split()]\nif(len(a)>100) : print(0)\nelse: print(len(a))", "# cook your dish here\nn,a,b=map(int,input().split())\nb=sorted(b,key=lambda x:y[x])\nx=(a-1)*(b-1)*((b-1)/2)\nif(b==0):\n  print(0)\nelse:\n    a=int(max(0,a%100))\n    b=min(b,a%100)+1\n    print(max(0,b))\n\nprint(int(max(b)))"], "216": ["\nn,x,d = map(int,input().split())\nc = {}\nfor i in range(n):\n    x,d = list(map(int,input().split()))\n    c[x + d] = max(c[x + d], a[i+1] - a[i])\n\nif t is not None:\n    c[n - t] = int(c[n - t])\nprint(c.get(x, 0))\n", "import sys\nimport math\nn,x,d = map(int, input().split())\nnx, d = map(int, input().split())\nans = 0\nfor _ in range(n):\n    x = input()\n    a = [int(x) for x in range(nx+1)]\n    if x+1+D in a:\n        ans += sum(a) - x*x\nprint(ans)", "def solve(S, T):\n  summ = (1<<(T-X)))\n  summ.sort()\n  if S == T:\n    return 0\n  if summ % T == 0:\n    return 1\n  else:\n    return solve(S, T-1)", "# cook your dish here\nx,d=map(int,input().split())\na=input()\nres=0\nfor i in range(len(a)):\n    if a[i]==1:\n        res+=1\n    for j in range(i+1,len(a)-x+1):\n        res+=a[j]\n    else:\n        res-=1\nprint(res)", "N,X,D = map(int, input().split())\nans = 0\nfor i in range(N):\n  a = list(map(int, input().split()))\n  suma = 0\n  for j in range(i):\n    suma += a[j]\n  \n  for k in a:\n   suma += k \n  \n print(ans)\n", "n, x, d = map(int, input().split())\nans = 0\nfor i in range(n-1):\n    x,d = map(int, input().split())\n    A = [A[i:i+x]]\n    for x,d in enumerate(A):\n        x,d = map(int, input().split())\n        ans += (d * x)\n    print(ans)"], "217": ["s = int(input())\nif s < 2**100:\n\tans = 1\n\tfor n in range(2,s+1):\n\t\tif n in [4,16] and n!= 1:\n\t\t\tans += 2**(n-1)\n\t\telse:\n\t\t\tans += 3\n\tfor n in range(2,s+1):\n\t\t\tans += 1\nprint(ans)", "# cook your dish here\ndef __starting_point():\n    # Your code goes here\n    for n in range(10):\n        k = int(input())\n        k = k & -i-1\n        print(2**k)", "s = int(input())\nprint(2*(int(s)/2))", "n = list(map(int, input().split()))\nr = 0\nfor c in range(1,n):\n    for n in range(1,n):\n        if n&(1<<n):\n            r += r\n    else:\n        r = r+c\n    print(r)", "s = int(input())\nm = 0\n#for _ in range(n):\n#    s = int(s)\n#    print(int(2 ** n) + 1)\n\n#     s = s.ljust(2 ** (n - m - 1), \"0\")\n#     for i in range(m, m):\n#         for j in range(1, m + 1):\n#             s = s + x * 2 ** i\n#             if s > 0:\n#                 s += x\n#             if s > 0:\n#                 s -= x * (i - 1)\n#             else:\n#                 s = x * (i - 1) + 1\n#             break\n#print(s)", "s = int(input())\nif s < (2 ** 32 - 1):\n    print((2**32-1)*(3*(int(s-1)*8) + 3*0.05)*2)\nelse:\n    print((2**32-1)*(3*(int(s-1)/8))"], "218": ["n,m=list(map(int,input().split()))\na=[int(x) for x in input().split()]\na.sort()\na=list(map(int,input().split()))\na.sort()\nb=[]\nfor i in a:\n if b[i-1][i]==0:\n  a.append(i)\nelse:\n  b.append(b[i-1][0])\nprint(len(b))", "n,m=map(int,input().split())\na=list(map(int,input().split()))\nb=[0]*(m+1)\nfor _ in range(n):\n    m-=1\n    for j in range(m-2):\n        a[j]=min(a[j:i+j])\n    b.append(max(b))\n    return b\n\n\ndef __starting_point():\n    a=[input() for i in input().split()]\n    c=[0]*(m-2)\n    a.append(0)\n    for i in range(m):\n        if a[i]>a[i-1]:\n            c[i-1]+=1\n        elif c[i-2]<a[i-1]:\n            c[i+1]+=1\n        elif c[i+1]>a[i]:\n            c[i]+=1\n            a[i]=1\n    return a[0]\n\ndef __starting_point():\n    n,m = list(map(int,input().split()))\n    x=int(input())\n    for i in range(n):\n        x=n-i\n        p=s(n-1)\n        a[p]=s(m-1)\n        c[p]=a[p]+a[p+1]\n        c[n]=0\n        for j in range(n):\n            if a[j]==0:\n                x+=1\n        c[j]=0\n    return x\n\nmain()\n\n__starting_point()", "n,m = map(int, input().split())\nm = max(m,int(input()))\nm = min(m,int(input()))\na = sorted(list(map(int, input().split()))\nb = 0\nc = 0\nfor i in range(1,n):\n    for j in range(i):\n        if a[i+j]-a[j]==0:\n            c += 1\n\nprint(c)\n", "n,m = map(int, input().split())\np = list(map(int, input().split()))\np.sort()\np.sort()\nd = [p[1] for p in range(n)]\n\nd[1] = p[-2]\nd[2] = p[-1]\nfor j in range(n):\n d[j] = 0\nfor i in range(1, m+1):\n    a=list(map(int, input().split()))\n    d[j] = 1\ns1=0\nfor j in range(n, m+1):\n    if(i==m+1):\n        for k in range(2*k):\n            s1+=max(d[j], d[j]-min(d[j], d[k]))\n        else:\n            s2+=min(d[j], d[k]-min(d[j], d[k]))\nprint(d[m-1]+s1)", "n,m=map(int,input().split())\na=input().split()\nmatrix=[[] for _ in range(n)]\nfor i in range(n):\n    for j in range(m):\n        if a[i]==a[j]:\n            matrix[i],matrix[j+1]+=1,matrix[j]+1,matrix[i+1]\n        matrix[i],matrix[j]=[matrix[i]][1],matrix[i][0]-1]\nprint(len(matrix))\n", "from sys import stdin\nimport sys\ninput = stdin.readline\ninput = open(stdin.readline())\n\nn,m = int(input())\nb = []\na = [int(x) for x in input().split()]\nfor i in range(n):\n    b.append(b[-1] + 1)\nprint(len(b))"], "219": ["import sys\ninput = sys.stdin.readline\nn = int(input())\nfor x in range(n):\n    a, b = map(int, input().split())\n    if l[x] >= b:\n        continue\n    if b == a:\n        print(1)\n    continue\n    else:\n        l[x] += b - a\n    print(0)", "from math import ceil\ndef main():\n    n=int(input())\n    c=1\n    l=int(input())\n    r=int(input())\n    d=int(input())\n    ans=0\n    while(l<=r):\n        if(l>=d):\n            ans+=1\n        else:\n            d-=1\n    c+=1\n    print(ans)\n\nmain()", "n=int(input())\nt=[]\nfor i in range(0,n):\n    s,t=map(int,input().split())\n    s=s[0:2]\n    t.append(t)\n\nif(t and t.count('1'))==0:\n    print(t)\nelse:\n    t.append(t)", "n = int(input())\nl,r = [int(x) for x in input().split()]\nd = [[0] * n for i in range(n)]\nfor i in range(n):\n  p = 0\n  while(p*2>l):\n   p+=1\n   d[p*2][i] = d[p*2][i]\n   d[p*2][i] = d[p*2][i] + 1\n   d[p*2][i] = 1\n   d[p*2][i] = 1\n  d[p*2][i] = d[p*2][i] + 1\nfor i in range(n):\n print(d[p*2][i] + d[p*2][i])\n", "def main():\n    n = int(input())\n    t1 = list(map(int, input().split()))\n    t2 = list(map(int, input().split()))\n    if t1[0] == t2[0]:\n        t2 = t1[1]\n        else:\n            t2 = t2[0]\n        if t1[1] > t2[1]:\n            t2 = t2[1]\n        else:\n            t1 = t2[0]\n        t2 = t1[1]\n        t3 = t1[0]\n        t4 = t1[1]\n        t5 = t2[2]\n        t6 = t1[3]\n        t7 = t2[4]\n        t8 = t3[5]\n        t8 = t1[6] = t8\n        t8[7] = t8[0]\n        t8[2] = t6\n        t8[4] = t8\n        t8[8] = t9\n        t9[9] = t8\n        t10 = t10\n        t11 = t11\n        t11 = t11\n        t12 = t12\n        t15 = t12[7] = t12[8] = t12[9]\n        t10 = t11[0]\n        t16 = t22[0] = t14[0] = t23[0] = t21[0] = t15[1] = t22[1]\n        t10 = t11[2] = t21[2] = t22[3] = t22[3] = t22[3]\n        t12[3] = t", "import sys\n\nn = int(input())\n\nl = list(map(int, input().split()))\n\nr = list(map(int, input().split()))\n\nres = 0\nif l[0] == 0:\n    for x in l[1:]:\n        res += (x-l[0])//2\n    if x[1] > r[1]:\n        res += l[1]\n    else:\n        res += (x[1] - r[0])/2\n\nprint(res)\n"], "220": ["import math\nx,p = list(map(int,input().split()))\nprimes = [2]\nprime_list = [int(x) for x in input().split()]\nans = 0\nfor p in primes:\n    if p in primes:\n        ans = min(ans,p)\n    else:\n        ans = p\nprint(ans)", "x2 = list(map(int, input().split()))\np = {}\nfor i in range(2, int(x2**0.5)+1):\n    if (x2[i] % i == 0 and (x2[i] % i == 0) or (x2[i] % i!= 0)):\n        p[i] = i\nprint(p[-1])\n", "X_2 = int(input())\nX = [x * 2 for x in range(X + 1)]\nans = 4\n\ndef main():\n    p=2\n    while p==3:\n        n=p+1\n        if n>x:\n            print(n)\n            p=n\n            break\n        if n==3:\n            print(n)\n        p=n-1\n        if p==1:\n            ans=x\n            while p<n and n%p==0:\n                n-=p\n                p+=1\n            print(n)\n            p=p\n            x = p\n    return ans\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\ninput = sys.stdin.readline\ninput = input()\nmod = 10**6\nif mod in ['a','b','c','d','e','f','g','h']:\n    n = sys.maxsize\n    s = n\n    n += 1\nfor i in range(2, n + 1):\n    if (x % i == 0):\n        i = j\n        if n%i == 0:\n            n //= i\n    else:\n        m = n//i\n    while m>=m:\n        m -= m\n        n //= i\n        if n % m == 0:\n            n = m\n    return n\n\ndef dp(num1, num2):\n    #print(dp(num1, num2))\n    dp(num1, num2)\n    dp2 = [i, 1] * n\n    for i in range(2, n + 1):\n        for j in range(i+1, n + 1):\n            if i % j == 0:\n                dp2[i] = min(dp2[i, j] + 1, m - dp2[i - 1])\n    #print(dp2)\n    #print(dp2)\n    #print(dp2)\n    return dp2", "from math import log2\nn=int(input())\nl1=max(range(3,500001))\ns=(300001+n)//2\ns1=n//2\nm=l1+n%10\nl2=m-1\na=n//2\nj=n-1\na*=10**6\na=9\na^=4\nl=(m+1)//4\nb=n//8\nf=10**6\nwhile(f>=1):\n    f=f//x\n    f-=1\nprint(f)\n", "x2=int(input())\nx = [int(x) for x in input().split()]\nn=x[2]*(x+1)\nn=n-4\nif n<=1:\n    print(x2)\nelse:\n    i=0\n    while i!=n:\n        n=i+1\n    x2[i]=n-2\n    i=i+2\n    if s(x2-1)>=x2[i]:\n        ans=n\n    else:\n        ans=n\n    i=i+1\n    for i in range(2,n):\n        if x2[i-1]<x2[i]:\n            ans=max(ans, i)\n    return ans\n\na = x2\nc = []\nfor x in range(3,x):\n    if x%x==0:\n        c.append(c)\n        d=n-x\n        d=min(d)\n        d=n-1\nprint(min(a))"], "221": ["n, k = map(int, input().split())\ns=list(input())\nm=k//len(s)\nif m<=k:\n    print(k)\nelse:\n    print(m//k)\n", "n, k = list(map(int, input().split()))\n\nS =''.join(sorted(list(map(str, input().split()))))\nN = len(S)\nprint(''.join(S))\n\n", "n,k=list(map(int,input().split()))\ns=input()\nd = n\na=1\nd1=0\nfor i in range(d+k+1):\n    if i==0:\n        d1=i\n        a=d\n    d2=d1+k\n    print(min(a,d2))\n", "input()\n\nn, k = [int(x) for x in input().split()]\n\nans = [0] * (k+1)\ns = \"\"\nfor i in range(n-k+1):\n    s += int(input())\n    if len(s) <= k:\n        ans[i] = 0\n    else:\n        ans[i] = n+1\nprint(ans[n])\n", "\ndef main():\n    n,k = map(int,input().split())\n    b = int(input())\n    ans = 10**n\n    for i in range(len(b)):\n        if b[i] == 0:\n            ans *= 10\n            b[i] += 1\n            b[i] = 0\n    if len(b) > k:\n        ans *= 10\n    if len(b) > 0:\n        ans += b[i - 1]\n\nif len(b) == k:\n    output += i\n    return\nelse:\n    print(max(n) - 1, 0)\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\nN, k = map(int, sys.stdin.readline().split())\nS = input().rstrip()\nans = (S[:N+1] for N in range(k, N+1))\n\nprint(ans[0])\n"], "222": ["def solve(n):\n    x, y, count, i, j = [int(d) for d in input().split()]\n    while True:\n        if n % i == 0:\n            if n % i == 0:\n                i += 1\n                if y % i == 0:\n                    i -= 1\n                j -= 1\n            while i <= j and n % i == 0:\n                j -= 1\n                while (j < k):\n                    i -= 1\n                j -= 1\n    if i == 0:\n        return 0\n    if i % j == 0:\n        return 1\n    for d in range(1, j):\n        if n % d not in count:\n            count.add(n)\n        for i in count:\n            if i%d!= 0:\n                print(i)\n    else:\n        print(i)\n", "# cook your dish here\nx, y = map(int, input().split())\nx = set(x)\ny = set(y)\nwhile x:\n    if x not in y and x in x:\n        return x\n    x = x.intersection(y)\n    y = y.intersection(x)\n    if y in y:\n        print(x)\n    break\n\nx, y = x.split(\" \")\nfor x in x:\n    if x in y:\n        if x not in y:\n            break\n    if y not in y:\n        y = y.split(\" \")\n    if y not in y:\n        x = y.pop()\n    if y == 0:\n        print(x)\n    else:\n        print(y-x+1)", "cnt1, cnt2, x, y = map(int, input().split())\n\n# your code here\n\nx = [int(x) for x in input().split()]\ncnt2 = [int(x) for x in input().split()]\ncnt2 = [int(x) for x in input().split()]\ncnt2[0] = [int(x) for x in input().split()]\n\ncnt = [x, y]\nfor x in range(1, cnt2+1):\n    if x % x == 0 and x % y == 0:\n        count = cnt_2-1\n        for y in range(1, cnt2+1):\n            if y % x == 0:\n                if x % y == 0:\n                    if x % y == 0:\n                        if x % y == 0:\n                            count += 1\n                            break\n            elif x % y == 0:\n                count += 1\n\nprint(count)", "n,a,b=list(map(int,input().split()))\nn,x,y=n,a,b\nif(not a and not b):\n    print(n)\nelse:\n    b.add(n)\nfor i in range(2,2,-1):\n    if(a[i]%b == 0):\n        print(i)\n    continue\n    else:\n        if(a[i]%b == 0):\n            print(i)\n    break\nfor i in range(2,a[0]-1):\n    print(a[i])\nprint(sum(set(a)))\n", "##!/usr/bin/env python\n\nimport sys\nfrom collections import defaultdict\nimport copy\nfrom collections import deque\nfrom bisect import bisect_left\nimport math\nn,d,m=map(int,input().split())\nprimes=list(map(int,input().split()))\n\ndef gcd(a,b):\n    return sum(i%d==0 for i,a in enumerate(zip(r,c)) for c in range(a,b + 1))\n\ndef gen(s):\n    return set(map(int,s.split()))\n\ndef main():\n    return sys.stdin.readline().strip()\n\nn = map(int,input().split())\na,b = list(map(int,input().split()))\ngcd(a,b)\nif gcd(a,b)==0:\n    print(1)\nelse:\n    print(int(gcd(a,b))+1)", "cnt1, cnt2, x, y = map(int, input().split())\nnumList = []\nnumList.append(x)\nnumList.append(y)\nlist = []\nfor i in range(2, cnt2+1):\n    numList.append(i)\nnumList.sort()\nif numList[0]%2==0:\n    list.append(list[1])\nif numList[1]==1:\n    print(0)\nelse:\n    print(2)\n\n"], "223": ["n=int(input())\nfor x in range(n):\n    x=int(input())\n    print(\"YES\" if x==100 else \"NO\")", "# cook your dish here\nimport sys\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\nif a[0] > 100:\n\tprint('YES')\nelse:\n\tprint('NO')", "for _ in range(int(input())):\n    n=int(input())\n    w=list(map(int, input().split()))\n    if sum(w)%100==0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "n=int(input())\na=list(map(int,input().split()))\nif a[n]<=100:\n  print('YES')\nelse:\n  print('NO')\n", "import sys\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    print(\"YES\")\n", "n = int(input())\nif n == 1:\n    print(\"YES\")\nelse:\n    print(\"NO\")"], "224": ["from sys import stdin\nimport math\n\ndef main():\n    N, A, B = map(int, stdin.readline().split())\n    a, B = list(map(int, stdin.readline().split()))\n    k = int(A.split())\n    while a >= 0 and b >= 0:\n        if a==1 and b<=0:\n            k-=1\n        else:\n            k += 1\n    print(k)\n\n## main loop\n", "N,A,B = map(int,input().split())\nD=[1,1]\n\nN=N-A\nS=[[] for x in range(0,N+1)]\nfor i in range(2,N+1):\n    B[i]=-(C[i-1]-C[i])\nif S[0]==0:\n    print(N)\nelse:\n    if S[1]==0:\n        S[0]=i-1\n        S[0]=i\n    elif S[1]==0:\n        S[0]=i-1\n        else:\n            S[1]=i-1\nprint(D[n-1])\n", "n,a,b=map(int,input().split())\na=-1*a\nb=-1*b\nprint(a-b)", "n,a,b=list(map(int,input().split()))\na=n-a+1\nb=n-b+1\nprint(a)", "import sys\ninput = sys.stdin.readline\nn, a, b = map(int, input().split())\nn1 = n\na2 = a-a\nb1 = b\na2 = b\nif a <= 0:\n    b1 = 0\nif b < 0:\n    b2 = b-a\nif a == 0:\n    b2 = b-a\nprint(n1)\nelse:\n    k = (n1+a)//2\n    i = k//2\n    j = k//2\n    ans = (n1+b)//2\n    while j < i and j < i:\n        ans = (n1+b)//2\n        j = j//2\n    print(ans)", "n,a,b = list(map(int,input().split()))\nif a > b:\n    print(n-b+1)\nelse:\n    print(n-b+1)"], "225": ["n,k=list(map(int,input().split()))\nr=[]\nfor i in range(n):\n    s=''\n    for j in range(len(s)):\n        s+=''\n        if s[j]==s[i+1]:\n            r.append(i+1)\n        elif s[i]==s[j+2]:\n            r.append(i+1)\n        else:\n            r.append(i)\nprint(max(r))", "n, k = list(map(int, input().split()))\na = a[-1] + \"b\"\na = a[-2] + \"a\"\nn = n - 1\nk = k - 1\nmax = 0\nfor x in range(n-2, 0, -1):\n    if x == a[0] and x == b[0]:\n        a.pop()\n    else:\n        a.pop()\n\nif k < 0:\n print(n)\nelse:\n print(n)", "k=int(input())\n\ns=\"\"\na=input()\nb=\"\"\nif(a<b):\n    if(b==a):\n        for i in range(1,k):\n            a,b=i,b+i\nprint(len(s))\n", "n, k = map(int, input().split())\na = [0 for i in range(n+1)]\nb[0] = 0\nk = k - 1\na = 1\nb[1] = 1\nif (a > k):\n    print(b[-1])\nelse:\n    print(b[-1])\n", "n,k=map(int,input().split())\na=input()\nb=input()\nc=0\nc=[]\nfor i in range(n+1):\n if a[i]==b[i]:\n  c.append(i)\nelse:\n  c.append(b[i]+a[i+1])\nc.append(c)\ns=input()\nprint(max(s),max(c)))", "n,k=map(int,input().split())\narr=list(map(int,input().split()))\nans=0\nfor i in range(k):\n    arr.append(arr.count(arr[i]))\nif k>k:\n    ans+=(k-k)\nfor i in range(k):\n    if i-1>n:\n        ans=max(ans,i-k-i)\nprint(ans)"], "226": ["n = int(input())\n\nprint(len(sorted(dict(zip(list(map(int, input().split()))))))", "n = int(input())\ns=0\nfor i in range(1, n+1):\n    s+=i\nprint(s)\n\n", "n = int(input())\na = [0]\nfor i in range(1, n+1):\n    a[i] = 1\nfor i in range(0, n+1):\n    a[i] = a[i-1] +1\nprint(a[n-1])", "from math import ceil\n\nN = int(input())\nA = list(map(int, input().split()))\nm = 0\nfor i in range(N - 1):\n\tA[i] += a[i]\nm += 1\nprint(m)", "a=int(input())\nif a==1:\n    print(1)\nif a==2:\n    print(2)\nelse:\n    a=a-1\n    print(2)", "# cook your dish here\nn=int(input())\nwhile n>0:\n    for i in range(n):\n        print(1+n)\n    n-=1"], "227": ["n, m = map(int, input().split())\nprint(2**(n-1)%m)", "n,m=map(int,input().split())\nfor i in range(n):\n    if n%2!=0 and n%2!=0:\n        a,b=map(int,input().split())\n    print(a%2)\nfor i in range(1,m+1):\n    print(b%2)\n", "# cook your dish here\nn,m=map(int,input().split())\n\n#print(2**(n+1))\nprint(n*m)", "# cook your dish here\nN,M = map(int, input().split())\nA = list(range(N))\nwhile A:\n    A.reverse()\n    B = list(range(N))\n    A.remove(0)\n    A = A[-1]\n    A.remove(1)\n\nn,m = map(int, input().split())\nwhile m > 0:\n    n-=1\n    M = min(m, M)\n    print(N*(N-m-1),'0')\n", "n,m = map(int, input().split())\ns = n*m\nl = m*2\nc = 0\nwhile s<=n:\n    c = (n-s)%m\n    s = s+c\n    n,m = m,s\nprint(s)", "def gcd(n, m):\n    x, y = divmod(n, m)\n    return x // y\n\n\ns = s % n\n\nfor _ in range(int(input())):\n    a, b = map(int, input().split())\n    if a % 2!= 0:\n        s = sum(int(a ** b) for a in list(map(int, input().split())))\n        a = s % n\n        b += a % n\n    print(b)"], "228": ["import re\n\n\ndef brt(word):\n    t = re.search(r\"[aeiouou][aeiou]\",word)\n    return t\n\ndef brft(s, start, end):\n    while(len(start)!= 0 and not end):\n        if len(start)!= 1 or end in vowels:\n            word = s.replace(start[0], start[1]+s[end[0]][start[1])+1]\n        else:\n            word = s[:end[0]].replace(start[0], end[1])\n            if len(word) == 1:\n                print(word)\n            return\n    return\n\n\nn = int(input())\ns = input()\ns = input()\ns.split(\" \")\ns = \" \"\nfor i in s:\n    if i in vowels:\n        s = s.replace(i, \" \")\nprint(\"\".join(s))", "n = int(input())\ns = input()\ns = s[0: n - 1]\ns = \"\".join(s)\ns = s.replace(chr(i), word)\nprint(\" \".join(s))", "# cook your dish here\nn=int(input())\nc=input()\ns=input()\nf=lambda:s[0]\n\nfor i in range(1, n+1):\n    if s[i]==c[i-1]and s[i+1]!=c[i]:\n        c=s[:i]\n        f(c,s[i+1])\n\nprint(f('a','e','i','o','u','y') )", "n = int(input())\ns = input().strip()\nfor i in range(n):\n    s = s.replace(c'aeiou', '')\n    if i in 'aeiou':\n        s = s.replace('aeiou', '')\nprint(s)", "n = int(input())\nword = input()\nfor i in range(n):\n    s = input()\n    l,r = 0, []\n    for x in word:\n        if s[x] not in \"aeiou\":\n            l+=x\n        else:\n            r.append(s[x])\n    if r == r[-1] + l[-2]:\n        l-=1\n    else:\n        l=r[:-1]+l[:-1]\n    word_before = l[:-1]\n    for i in range(len(l)):\n        s = s[:-1]\n        if s[i] in \"aeiou\":\n            if s[i] == \"aeiou\":\n                s[i] = s[i+1:]\n            else:\n                s[i] = s[i+1:]\n\n    else:\n        res = s[0:]\n        for i in range(0,len(s)-1):\n            if s[i] in \"aeiou\":\n                res = (res + \" \".join(r))\n        if res == 0:\n            print(\"...\")\n        res = \"\"\n    print(\"\")\n   ", "n = int(input())\na = input()\nd = {\"a\",\"e\",\"i\",\"o\",\"u\",\"y\"]\nprint(\" \".join(d.get(a[\"a\",\"e\",\"o\",\"u\"],d[a[\"b\",\"e\",\"i\",\"o\"]])))"], "229": ["r=int(input())\n\nif r==2:\n    print(\"NO\")\nelse:\n    print(\"NO\")\n", "n = int(input())\na = list(map(int, input().split()))\nif n[0] <= n[-1]:\n    print('NO')\nelse:\n    print('NO')", "# cook your dish here\na,e=input().split()\nc=0\nfor i in range(b):\n    if(a*b%a==0):\n        x=a\n        break\n    else:\n        if(c%a==0):\n            y=e/b\n        break\nprint(\"NO\" if(len(c))!=2 else \"NO\")", "def main():\n    # your code here\n    r = int(input())\n    h = [1]*(2*r+1)\n    for x in range(10):\n        h[x*x] = h.pop(0)\n    return h\n\ndef __starting_point():\n    main()\n__starting_point()", "r=int(input())\nif r==0:\n    print(\"NO\")\nelse:\n    ans=[]\n    for i in range(2, int(1/r**0.5)+1, 2):\n        if(i==r):\n            ans.append(i)\n    elif(r==r-r//i):\n        ans.append(i+1)\n    return ans\n\nif r==1:\n    print(\"NO\")\n    else:\n        print(\"NO\")", "from math import log2, floor\n\nr = int(input())\ntry:\n    z = (floor(log2(r)) - ceil(log2(r)))\n    if z < z:\n        print(\"NO\")\nexcept:\n    pass"], "230": ["n = int(input())\na = list(map(int, input().split()))\nfor i in range(1,n+1):\n    x = (i,i)\n    if x % 2!= 0:\n        a.sort(key = lambda x: x // 2)\n    if int(x) == 1:\n        print(a[-1] + a[-2], end = '')\n    else:\n        a.sort()\n        x.pop()\n        print(len(a))\n", "from sys import stdin\ninput=stdin.readline\nn=int(stdin.readline())\narray=list(map(int,stdin.readline().split()))\n\nprimes=list(range(n))\nq=[1]\nif len(array)<2:\n    print(2*len(array))\n    else:\n        while len(queue)<2:\n            q[0]-=1\n            i=0\n            while i<n and (not prime(i)+1) and (len(queue)<len(primes) and all(i<i+l):\n                if arr[i]<=primes[i]:\n                    q[i]=0\n                    i+=1\n                    while len(q)>1:\n                        q[i]+=1\n                        q[i]=1\n        if (i,l) in primes:\n            print(l)\n        if len(set(q))>1:\n            print(q)\n            else:\n                q.remove(i)\n            else:\n                q.add(i)\n                i+=1\n    if len(q)==len(a):\n        print(len(a))\n    else:\n        print(len(a))", "from math import log\nimport sys\n\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\n\nk = list(map(int, input().split()))\n#print('a','b','a')\nd = {}, {}\nfor i, x in enumerate(a):\n    d[x] = i\n    if d[x] == 1:\n        d[x] = i\n\nans = [int(x) for x in a]\nfor i in d:\n    if not d[i]:\n        d[i] = 1\nfor i in d:\n    if d[i] == 1:\n        ans[i] = 1\nprint(ans)\n", "n = int(input())\na = [int(i) for i in input().split()]\na.sort()\nres = []\nfor i in range(n):\n    for j in a:\n        if(j not in [i, j+1]) and (i==j and len(a))>0:\n            if i%j!=0 and i%j!=0:\n                res.append(j)\n            i -= 1\nprint(len(res))", "n = int(input())\na = [int(x) for x in input().split()]\na.sort()\na = [int(x) for x in input().split()]\nprint(max(a))", "from collections import defaultdict\n\nn = int(input())\narr = list(map(int,input().split()))\nprimeList = defaultdict(int)\nprimeList[int(x)%2] = 2\nprimeList[int(x)+1] = 2\nfor i in range(2,int(n**0.5)+1):\n    if primeList[i] > 1:\n        primeList[i] = 1\nfor i in range(2,int(n**0.5)+1):\n    if primeList[i][i] == 1:\n        primeList[i][i] = 2\n        break\nif primeList[primeList[int(x)][2] == 1:\n    print(i)\nelse:\n    ans = 0\n    for i in range(2,int(n**0.5+1)):\n        ans+=1\n    print(ans)\n        \n\n"], "231": ["# cook your dish here\nn = int(input())\nfor i in range(1,n+1):\n    i = int(input())\n    print(2**i)\n", "import math\nnum = int(input())\ndivisors = [1]\ndivisors[2] = 1\ndivisors.sort()\nfor i in range(1, 2, -1):\n    for j in range(1, i):\n        divisors[j] += 1\nans = max(divisors, bin(num)[2:].count('0'))\nprint(ans[0])", "n=int(input())\nfor i in range(n//2+1):\n    x=n*(n//i)\n    if x == 0:\n        print(i)\n    else:\n        print(2**(x+1)-1)", "# cook your dish here\nn=int(input())\nfor i in range(n//2):\n    n+=2**i\nprint(n)\n", "#!/usr/bin/env python3\ninput()\nn=int(input())\ng=[]\nfor i in range(n):\n    l=2**i\n    for j in range(1,n+1,k):\n        l.append(int(n-j*2**j)**i)\n    \n    while l:\n        l=l-1\n    print(g[0])", "n=int(input())\nwhile n:\n\ta=int(input())\n\tif n%2==0:\n\t\tprint(a)\n\tn=n/2\n\telse:\n\t\tprint(a-a)\n\tn-=1\nprint(\"1\")"], "232": ["def solve(num):\n    a=num//2\n    b=num%10\n    while b:\n        a+=int(b)\n        b=int(b)\n        b-=1\n    return a%10**9+7\n\nm=int(input())\nm=(n+1)//10\nd=int(input())\nx=int(input())\ny=int(input())\nans=0\nfor i in range(m):\n    a+=int(input())\n    if a!=x:\n        ans+=1\nif x<y:\n    ans+=x//y\nprint(ans%10**9+7)\n", "m,d=map(int,input().split())\na=int(input())\nc=0\nwhile m>0 and d>=0:\n    print(a%10**9+7)\n    m-=1\n    a,b=a,b%10**9+7", "m,d=map(int,input().split())\nx=[int(x[0]),int(x[1])],int(x[2])\ndef M(a):\n    return sum(a%11 for i in range(m-1) if a%10==1 else 0 for i in range(1, 9) if a%10!=1) % (10**9 + 7)\ns=0\nfor i in range(len(x)):\n    s+=2**int(x[i])\nprint(s)", "import sys\ninput = sys.stdin.readline\nm,d = map(int,input().split())\na,b=list(map(int,input().split()))\nc=0\nl=a+b\ns=0\nfor i in range(m):\n    if int(i)%2==0:\n        m-=1\n        c+=int(i)%2\nprint(c)\n\nelse:\n print(int(a)%2**9 + 7)", "m,d=map(int,input().split())\na=input()\nb=input()\nsum=0\nwhile m > 2:\n    for i in a:\n        s=str(i)\n        a%=10\n        sum+=1\n        print(sum%10**9 + 7)\nm-=1\nprint(sum)", "m,d=map(int,input().split())\nif m<=0 and d>=10:\n    print(\"0\")\nelse:\n    a=input()\n    mod=10**9+7\n    print(a%mod)\n"], "233": ["n,m=map(int,input().split())\na=list(map(int,input().split()))\nans=n\nwhile(n!=m):\n    if m==0:\n        print(n)\n        n-=1\n    else:\n        a.append(max(a))\n        m-=1\n    ans+=1\nprint(ans)", "n,m=map(int,input().split())\na=[int(x) for x in input().split()]\na=[]\nfor i in range(n):\n    a.append(min(a))\nc=1\nwhile(len(a)>m):\n    if(a[i]-a[m]<a[i]):\n        c+=1\n    l1=a[i]\n    l1.append(n-l1)\nprint(c)", "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\na = [int(x) for x in input().split()]\n\nx = []\nfor i in range(n):\n    x.append(a[i] - a[i - 1])\ns = []\nwhile True:\n    if len(x) > 0 and a[x] == x[n-1]:\n        s.append(i)\n    x.append(len(x)-1)\n\nx.append(len(x)-1)\nprint(len(s))", "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nx=list(map(int,input().split()))\nans=0\nwhile True:\n    x.append(x[0])\n    m=max(m,x[m-1])\n    ans+=a[m-1]\n    m-=1\n    print(ans)\n", "n,m=map(int,input().split())\na=list(map(int,input().split()))\nx=m\nwhile len(a)>0:\n    x=(x+1)//2\n    y=m\n    x=x-2\nprint(x)\n", "import sys\nimport numpy as np\n\nN,M = list(map(int,sys.stdin.readline().split()))\nM = int(M/2)\nA = list(map(int,sys.stdin.readline().split()))\n\nfor i in range(N):\n    a = np.array(a)\n    c = 0\n    for j in range(M):\n        if(A[j] - a >= m):\n            C += j - 1\n            continue\n        if (C > 0):\n            break\n        elif (C < 0):\n            continue\n        if C == 0:\n            break\n        A[i] = A[i-1]\n        if A[i] == N:\n            print(1)\n        break\n    return\n\n\nif m == n:\n    print(A[M])"], "234": ["for _ in range(int(input())):\n    n=int(input())\n    if(n==2):\n        continue\n    l=1\n    for i in range(5,n+1):\n        l*=2\n        if(n%i==0):\n            l*=1\n            else:\n                l*=1\n    l=l*3\nprint(l)\n    \n", "n = int(input())\n\na = [1]*(n+1)\nprint(min(a), max(a) - max(a), min(a) - a[1])\n\n", "n=int(input())\nres=1\nfor j in range(2,(1<<n)):\n    a=int(input())\n    if a%j==0:\n        res+=1\n    else:\n        res+=1\nprint(res)", "n = int(input())\nprint(2*n+3*(n-2))", "n = int(input())\n\nx = int(input())\n\nif(n < 20):\n    print(20+1)\nelse:\n    print(1)\n", "import math\nn = int(input())\n\nif n % 2 == 0:\n    print(1)\n    elif n % 4 == 0 and n % 5 == 0:\n        print(2)\n    else:\n        print(2)\n"], "235": ["n,k=map(int,input().split())\nif k==0:\n    return 1\nif k>n:\n    print(1)\nelse:\n    n,k=list(map(int,input().split()))\n    k-=1\n    if n==1:\n        print(1)\n    print(k)", "n, k = map(int, input().split())\nres = 0\nfor i in range(0, k):\n    if i < k:\n        res += 2**i\n    elif i == 0:\n        res += 1\n    print (res % 1000000007)\n", "from collections import defaultdict\nn,k=map(int,input().split())\n\nl=list(map(int,input().split()))\n\nl.sort()\n\n\nans = 0\nfor i in range(1,n+1):\n    for j in range(1,i+1):\n        k-=1\n        ans = pow(2,j,10**9+7)\n        l.append(k)\n    print(ans%10000000007)\n\n", "k = int(input())\n\n\ni = 0\nj = 0\nwhile j < k:\n    i += 1\n    j += 1\n    i = i + 1\n\n\nfor i in range(0, k):\n    if(i == len(p)):\n        j += 1\n\n\n#print(i,j,k)\n\nans = 0\nfor i in range(1, j):\n    print((ans + 1 + ans) % 1000000007)\n\n", "n,k=list(map(int,input().split()))\nprint((100000 + ((n*(k+1))//2*(n+1))%1000000007))%(10**9+7)", "N, K = int(input()), len(input() )\nP = {}\n\nS = len(S)\n\nfor i in range(N):\n    s1, s2 = [1] + sorted(S, key=lambda x: [1]).append(x)\n\nans = 0\n\n\nfor _ in range(K):\n    ans += P[s-n]\n\n\n\nprint(ans%(1000000007) % 1000000007)\n"], "236": ["p, q = list(map(int, input().split()))\na, b = [], set()\nf = sorted(a)\n\nfor i in range(1, q+1):\n    b.append(b)\nf.sort()\ng = sorted(f)\ns = 0\nwhile(1):\n    g += 2\n    if(g==s):\n        print('YES')\n        continue\n    b.add(g)\n    if(b.count(g)==1):\n        print('YES')\n    else:\n        if(b.count(g)-s.count(g)==1):\n            print('YES')\n        else:\n            print('NO')\n", "p, q = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve():\n    n = q // a\n    x = (p * q) // 2\n    if not a:\n        print('NO')\n    else:\n        print('YES')", "p,q = map(int, input().split())\ndp = [-1] * (9 + 1)\ndp[0] = p\ndp[1] = q\nfor i in range(q):\n\tn = input().split()\n\tif (n[0] - p) * (n[1] - p) == 1:\n\t\tif ((n[1] - p) * (n[0] - q) * (n[0] - p) * (n[1] - p) * (n[0] - p) * (n[1] - p) * (n[1] - p) * (n[1] - q) * (n[0] - p) * (n[0] - p) * (n[1] - p)) :\n\t\t\tif (n[1] - p) * (n[1] - p) * (n[1] - p) * (n[1] - q) * (n[1] - p) * (n[1] - p * (n[1] - p) * (p - p)) * (n[0] - p) * (n[1] - p) * (n[0] - p ) * (n[0] - p ) * (n[1] - p) * (n[1] - p ) * (n[1] - p) * (n[0] - p ) * (n[1] - q) * (n[0] - p * (p * p) * (n[0] - q) * (n[1 ] - p) * (n[1] - p) * (n[1]) * (n[1] - p) * (n[1 ] - p)", "p, q = list(map(int, input().split()))\nn, q = list(map(int, input().split()))\n\na = [0] + [x for x in input().split()]\nfor i in range(1, n):\n  a[i] = a[i-1] + a[i*p]\nfor i in range(n-1):\n    a[i] = a[i] + a[i*p]\nprint(\"YES\")", "p, q=map(int, input().split())\na=[]\nfor i in range(p, q+1):\n    a.append(int(x/i))\nfor j in range(1, q+1):\n    if a[j] % i == 0:\n        continue\n    a[i] //= j\nprint(\"YES\")", "p, q = map(int, input().split())\nq, q = map(int, input().split())\na = sorted(map(int, input().split()))\n\nif all(a and a!= q):\n    print(\"YES\")\n    elif all(a + q) == a:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        \n"], "237": ["import sys\nimport sys\n\ndef __starting_point():\n    N, K = map(int, sys.stdin.read().split())\n    c = [0 for i in range(K+1)]\n    dp = [[0]*k for i in range(0, K+1)]\n\n    A = [0]*(K+1)\n\n    dp[0][0] = 0\n    dp[2][k] = 0\n\n    for i in range(1, K+1):\n        x = x * i\n        x = x * i % N\n        D = d - O (x)\n        d = x * i + D\n        dp[i][k] = mod\n\n    return dp[0][0]\n\nimport math\n\ndef is_prime(x):\n    if x == k:\n        return False\n    if x % 2!= 0:\n        return True\n    for i in range(1, N):\n        x = x * i\n        d = sys.maxsize\n        x = 0\n        for j in range(min(i, N+1)):\n            x = x + p[i] * (i - j) * K\n            D = D * (i - j) * K + x * D\n            D *= (i - j) % 2\n            D += D\n\ndef __starting_point():\n    main()\n\n__starting_point()\n__starting_point()", "import sys\nsys.setrecursionlimit(2**29)\nn,k = map(int,input().split())\nmod = 10**9+7\nmod = 10**9+7\na=1\nfor i in range(n-1):\n    a=a+(i*(i+1)%mod)\nans=a+int(a)\nprint(ans%mod)\n", "n, k=list(map(int, input().split()))\n\nmod = 10**9+7\ni = k\nl = 0\nl1 = 0\nk = 0\nwhile k <= n:\n    for i in range(2, n):\n        l1 = l+1\n        i += 2\n        l1 = (l1+1)*i\n        i -= 1\n    if n < k:\n        k = n\n        else:\n            k = n\n        k = 0\n        i = 0\n        while k!= 0:\n            k += 1\n            i += 1\n    if i == k:\n        l = 0\n        i += 1\n        k %= mod\n        l1 = l\n        i = k\n    l1 = l\n    l1 = l1*2\n    l1 = l1\n    s = l1*2\n    count = 0\n    for i in range(n):\n        count += 1\n    print(count%mod)", "# cook your dish here\nn, k = map(int, input().split())\na = [1] * (k + 1)\n\nmod = 10 ** 9 + 7\nprint(a[1] % mod)\n", "mod = pow(10,9)+7\nn,k = map(int, input().split())\np = [1,1,1,1,1,0,0,1,0,0,1]\na = []\nans = 0\nfor i in range(1,n):\n    print(a[i] * 2)\n", "mod = 10**9+7\nn = int(input())\nmod = 10**9+7\n\nfrom collections import defaultdict\n\ndef __starting_point():\n    a,b = list(map(int,input().split()))\n    while a:\n        if b[0] > 0:\n            b = a[1]\n        for i in range(1,n+1):\n            if i == 0:\n                a[i] = 0\n            break\n    else:\n        a[i] += (b[0] + (b[1] - b[0]) % mod)\n        a[i] -= 1\n\n\n__starting_point()"], "238": ["# cook your dish here\nn=int(input())\narr=list(input())\narr.sort()\nprint(\" \"*(len(arr))+\"*\")", "s = input()\ns = s.replace(\"ogogogo\", \"***\")\ns = s.replace(\"ogogogogo\", \"***\")\ns = list(s)\nfor i in range(s.count(\"ogogo\") + 1):\n    s = s[:n].replace(\"ogogo\", \"***\")\nprint(s)", "from functools import reduce\ndef solve():\n if reduce(lambda m, s: m+\"*\", s.split()) == 2:\n  return 0\n if reduce(lambda m, s: m+s[0], s):\n  return 0\n if reduce(lambda m: reduce(lambda m: reduce(lambda m, s: a*2+s[1], s[1]), s[:1] + \"**\", s[:1]))!= 0:\n  print(\"*\" * s[0])\n\n\n", "n = int(input())\ns = list(input())\nf = []\na = 0\ni = 1\nl = 1\nfor j in range(len(s)):\n  s = s[j:j+3] + s\n \n i = 3\n if i == 0:\n  d = 1\n   r = 2\n   while r < len(s):\n    if s[j]!= 'og':\n        r += 3\n    else:\n        r -= 3\n    if s[i] == 'og':\n      s[i], s[i + 1], s[i] = 'ogog', s[i]\n    r += 2\n    print('*' * i)\n", "N=int(input())\ns = input()\nn=len(s)\n#k=0\nfor i in range(N):\n    k=len(s[i])\n    x=k+(n-i)//3\n    if x==n:\n        print(s[:k])\n        print(\"*\"*(4+x)+'*')\n    else:\n        print(s[k:n])", "n = int(input())\ns = input()\nl = list(map(int,s))\nc = 1\ni=n\nwhile i<=n:\n    if s[i]==s[n-1]:\n        c+=1\n        i+=1\n    else:\n        c+=1\nprint('*'.join(c))\n\n"], "239": ["a, b, c = map(int, input().split())\n\nprint(*map(int, input().split()))", "a,b,c = map(int, input().split())\nn = 0\nfor i in range(2, int(n**0.5)+1):\n    print((b+c*(a+c))//10))\n", "a,b,c = map(int, input().split())\nr=[]\ns=([]for i in range(10))\ns.append((b+int(s[:-1])/2),a+int(s[:-1]))\nfor i in s:\n    l=len(s[i:])\n    if l==r:\n        continue\n    r.append(l)\nprint(len(r))", "a,b,c=map(int,input().split())\na = []\nb.append(10**9+[c-a+1+b.pop(0]))\nc = []\nl=list(map(int,input().split()))\nfor a in l:\n    c.append(a)\nprint(len(c))", "# cook your dish here\na,b,c=map(int,input().split())\nl=[a,b,c]\nif(a<0):\n    print(0)\nelse:\n    return l[a]*b*(10**9+b)", "a, b, c = map(int, input().split())\nif a > 0 and b > 0 and c > 0:\n    a, b, c = a, b, c\n\nres = sorted([i for i in str(x) if int(i) == int(i))\n    if c > 0 and a == 0 and b > 0:\n        a += b*b + c\n        res.sort()\n        for i in str(a*b + c):\n            break\n        a += b*a+ c\n        res.sort()\nprint(len(res))\n\n"], "240": ["a = [int(x) for x in input().split()]\nb = set()\nfor x in range(len(a)):\n    b.add(a[x])\ns = sorted(b,key=lambda x: x[1])\nprint(\"YES\")\n", "a = [int(x) for x in input().split()]\na.sort()\nx1 = [a[0], a[2], a[3] for _ in range(3)]\nans = 0\nfor i in range(3):\n    if x[i]!=y[i]:\n        print('NO')\n    else:\n        print('YES')", "squares = [0 for _ in range(6)]\nfor i in range(0,len(squares)):\n    for j in range(len(squares)):\n        for p in range(0,len(squares[i])):\n            squares[p] = squares[j] * 90 / (p - i)\nprint(\"YES\")\n", "a=map(int,input().split())\nans=0\nfor i in range(len(a)):\n    b=max(a[i] for i in range(len(a)) )\n    a1=a1[0]\n    a2=a2[1]\n    if a1==a2:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "from itertools import combinations\nfrom bisect import bisect_left as bl, bisect_right as br, bisect_right as br, bisect_right as br, bisect_left as br, bisect_right as br, bisect_left as br, bisect\nr=[0,2,1,1,2]\nm=1\nfor a in range(3,int(input())):\n if a[1]!=b:\n  m+=1\n else:\n  if n%3==1 and r[2]!=b[3]:\n   m+=1\nprint(\"NO\")\n\nexcept EOFError as e:\n  print(\"NO\")", "a = [int(x) for x in input().split()]\n\nc = []\ndef lcm(x, y):\n    c.sort()\n    for a in c:\n        if a%a == 0:\n            return 0\n        elif x%a == 0:\n            c.append(a)\n        else:\n            c.append(a//a-1)\n    else:\n        c.append(0)\n    c.append(0)\n    c.sort()\n    lcm(a,c)\nfor i in range(len(c)):\n    if (c[i]*(i+1) not in c):\n        lcm(c[i],c[i]*(i+1))\n    else:\n        lcm(c[i]+(i-1)*(i+1))\n\nprint(\"YES\")"], "241": ["from math import sqrt\nfrom operator import mul, mul, pow\nfrom typing import List\nfrom math import ceil, fmod\nfrom functools import lru_cache\nimport sys\ndef main():\n    a, b, c = map(int, input().split())\n    l1,l2, r1 = map(int, input().split())\n    a, l2, r3 = zip(a, b, c)\n    print(abs(a - l1 + l2 + l3))", "x1,x2,x3=map(int,input().split())\na=int(input())\nc=a-2-1\nd=b-b\nwhile c>0:\n    k=c-a-2\n    h=a-k\n    if h==l:\n        d+=h-(h-c)\n        h=b-(h-c)\nprint(d)", "for i in range(int(input())):\n    x, y, z = map(int, input().split())\n    if y == x:\n        print(2)\n    else:\n        print(x - y)\n", "from sys import stdin\ninput = stdin.readline\n\nn2,n3 = list(map(int, input().split()))\nr = n1 - n2\nm = n3 - n3\nprint((max(m, r))//2)", "try:\n    l=list(map(int,input().split()))\n    l1=[(x[0]-x[1])%3 for x in list(map(int,input().split()))]\n    l2=[(x[1],x[2])]\n    l3=[(x[2],x[3])%3 for x in list(map(int,input().split()))]\n    d=l[0]-l[1]\n    f=l[2]-l[3]\n    s=l[0]-l[2]\n    if s==s:\n        print(s-r-p)\nexcept:\n    pass", "# cook your dish here\nX,Y,Z = [int(x) for x in input().split()]\ndef main():\n    l = [x]\n    for i in range(2,X+1):\n        a,b,c=map(int,input().split())\n        if a==y and c==z:\n            print(l.count(x) - l[0])\n        else:\n            print((b-b) - l[1])\n    return\n    \n    \ndef __starting_point():\n    main()\n\n__starting_point()"], "242": ["n, x = map(int, input().split())\n\nfor _ in range(n):\n    a = list(map(int, input().split()))\n    op = a[0] & x\n    if op == 2:\n        print(0)\n        continue\n\nprint(n//op)\n", "import sys\ninput = sys.stdin.readline\nn, x = map(int, input().split())\n\nif n == x:\n    print(0)\n    else:\n        print(-1)\n", "n, x = map(int, input().split())\na = [int(i) for i in input().split()]\nif n==x:\n    if len(a)!=len(a):\n        print(-1)\n    else:\n        print(sum(a[:n]+xfor i in range(n - 1)))", "# cook your dish here\nn,x = map(int,input().split())\na = [int(x) for x in input().split()]\nn = x\na_array = sorted(a)\nc = 0\nfor i in range(n):\n    if a_array[i] & a_array[i-1] & a_array[i] == a_array[i]:\n        c += 1\nprint(c)\n", "n, x = map(int, input().split())\no = list(map(int, input().split()))\nif a[0]&x in o:\n    print(o[0]+1)\nelse:\n    print(-1)", "n, x = map(int, input().split())\na = list(map(int, input().split()))\nl = [int(i) for i in input().split()]\n#l.sort()\nr = 0\nfor i in range(n):\n    r = 0\n    for i in range(n):\n        if a[i] & x == a[i]:\n            l += 1\n        else:\n            l += 1\n        r = max(l, r - l)\n\nprint(r)\n"], "243": ["c, d, k = list(map(int, input().split()))\nn,m = map(int, input().split())\nif n == 0:\n    print (0)\nelse:\n    print((c*d)/(m))\n", "# cook your dish here\nc,d,k=map(int,input().split())\nl=[]\nfor i in range(1,100):\n    l.append(int(input()))\nf=l[0]\nfor j in range(1,100):\n    r=l[j]\n    c+=l[k]\n    r+=1\nl=l[2]\nprint(f)", "c,d,k=list(map(int,input().split()))\nfor i in range(c):\n\tn,m=map(int,input().split())\n\tif d==0:\n\t\tprint(0)\n\telse:\n\t\tprint(k+c)", "c, d = [int(x) for x in input().split()]\n\nsum = 0\n\nfor i in range(c):\n    sums = sum + sum % d\n    if sums <= c:\n        sum = sum / d\n        else:\n            sum = sum + sum\n    print(sum)", "c,d,k = map(int,input().split())\na=min(map(int,input().split()))\nd=max(map(int,input().split()))\nb=n//(k-1)\nprint(a)", "import sys\nsys.setrecursionlimit(int(__file__))\nimport math\ninput = sys.stdin.readline\n\nc,d,k = list(map(int,input().split()))\nm = []\n\nk = 1\nwhile(c>0 and d>=0 and k<=m):\n    k=k+m+1\n    n=m+c\n    print(n)\n"], "244": ["s = input()\np = {'X':1, 'Y':2, 'Z':1}\np = {}\nfor i in range(27):\n    s[i] = s[i].upper()\nfor c in s:\n    p[c] = i\nfor i in range(1,13):\n    if p[i-1] not in p:\n        p[p[i]] = c\nprint('Impossible')\n", "# cook your dish here\ninput = lambda: input()\n\ns = input()\nif len(s)<13:\n    print(\"Impossible\")\nelse:\n    for i in range(13):\n        print(\" \".join(x.upper() + s[i:])+\" \" + s[i:])", "s = input()\nx = 6\ny = 9\nz = 0\nfor i in range(len(s)):\n    if s[i]!= s[x-1]:\n        y += 1\nprint('Impossible')\n elif x % y == 0:\n  print('Impossible')\n elif x%y == 1:\n  print('IMpossible')\n  else:\n  print('N',y)", "x = input()\ny = 'abcdefghijklmnopqrstuvwxyz'\nif x[0] == 'ABCDEFGHIJKLMNOPQRSGTUVWXYZ':\n    x = s[0:y.find('ABCDEFGHIJKLMNOPQRSGTUVWXYZ')]\nif x[1] == x[2]:\n    print(\"Impossible\")\nelse:\n    if (x[0] == x[1] and y[2] == x[3] and y[4] == x[5]):\n        print(\"Impossible\")\n        else:\n            x = x[2]\n            y = x[3]\n            y = x[4]\n            for i in range(1,y[3]):\n                x[i] = (y[i], x[1])\n        print(x)", "import sys\ninput=sys.stdin.readline\n\ns=input()\n#print(s, '')\nr=len(s)\nwhile(r>=3):\n    s=s[r:r+3]\n    if s==r:\n        print(\"Impossible\")\n    return\nelif s==s[r+3:]:\n    print(\"Impossible\")\n    return\nelif s==r+3:\n    if s==r+3:\n        print(\"Impossible\")\n    else:\n        print(\"Impossible\")\n    else:\n        print(\"Impossible\")", "input = lambda: raw_input()\ns = input()\nn = len(s)\nfor i in range(n):\n    for j in range(n):\n        if s[i]!= s[j+1] and s[j+1]!= s[i+1]:\n            break\n        while i < n and s[i] == s[j+1]:\n            s[i] = s[j+1]\n            break\nprint(\"Impossible\" if len(s) > 13 else\"Impossible\")"], "245": ["r,h=map(int,input().split())\nc=0\nfor i in range(2,r+1):\n    if((h-i-2)**2):\n        c+=1\nprint(c)\n", "r,h = map(int,input().split())\nd = []\nb = r * r * r\na = r + h * 2\n\nx = 1\ny = h + 2\n\nwhile y < h - 1:\n    x += y\n    y -= 2 * x\n    if r > a:\n        x = a\n        b.append(h)\n    a.pop()\nprint(x)\n", "r, h = map(int, input().split())\nans = 0\na = [0]*r\nb = [0]*r\nfor i in range(h):\n    a[i] = max(a[i]-min(b[i], r, h), a[i]-min(b[i], h+min(a, r)))\nprint(ans)", "r,h=list(map(int,input().split()))\na=[0]*r\na[1]=a[0]+a[1]\nb=[1]*r\nb[1]=a[0]+a[1]*2\nb[0]=b[1]+a[2]\nprint((a[2]+b[0])-b[-1])\n", "r,h=map(int,input().split())\nprint((2*(h+r+1))//2)", "r,h = map(int, input().split())\nres = 1\nfor i in range(1, r+1, 2):\n    print(res)\n\nprint(res)\n\n\n"], "246": ["t = list(map(int, input().split()))\ns = [0 for _ in range(len(t))]\ns.sort()\nprint(min(s))", "# cook your dish here\nt1,t2,t3,t4,t5 = input().split()\n\nd = [[0] * (len(t2)-1) for _ in range(len(t1))]\n\nd[0][0] = 0\na=[[1] * (len(t1)-1) for _ in range(len(t1))]\nb=[0,0]\nfor j in range(len(d)):\n    if d[j][0] < d[i][j]:\n        a[j][0] = d[j][0] + min(d[j][0], a[i][1] + min(d[j][1] + d[i-1][1], d[i-1][2], d[i][0] + min(d[i-1][2], a[i-1][2], a[i-1][3]), a[i-1][4] + min(d[j][4], a[i-1][3] + min(d[j][2], a[j][4] + min(d[j][1], d[j][3]))))\n\nt1 = input()\nx=0\nfor k in range(1, len(x)-1):\n    x=x+x[k]\n    if x==x[1]:\n        x = x[2]\n    elif x==x[3]:\n        x = x[1]\n    else:\n        x = x[0]\n        x = x[2]\n        x = x[2]\n        x = x[4]\n        y = x[1]\n    y = y[0]\n\nprint(x)\n", "from itertools import accumulate as lst\n\nimport math\n\nN = float(\"inf\")\n\nfrom typing import List\n\nS = list(map(int, input().split()))\n\nres = [0]\n\nfor i in range(0, N-1):\n    if (I[i] - 2) % 6 == 0:\n        res[i] = S[i-2]\n        elif I[i] - 3 >= 0:\n            res[i] = M[i]\n        else:\n            res[i] = (i-2) / 6\n    if S[i] == S[i+1]:\n        res[i] = (S[i] - 2) / 2\n    if S[i] == S[i+1]:\n        res[i] = s[i] - s[i]\n    \nfor i in range(N-1):\n    res[i] = min(res[i] - S[i+1], res[i+1])\n    print(res[-1])", "def limak(x,y):\n    return x+y-x+y\n\ndef limak(x,y,z):\n    x=x%y\n    return x\na=limak(x,y,z)\nprint(min(a,a+b+a-b,k-1))", "t1,t2,t3,t4,t5=list(map(int,input().split()))\nfour = [int(x) for x in input().split()]\nd = {}\nfor _ in range(t2):\n    if f[x] > d[n]:\n        d[n] = f[n] - d[i-1]\n    else:\n        d[n] = d[n]\nd = sorted(d,reverse=True)\nfor j in range(five):\n    if j in d:\n        d[j] = d[j] - d[i-1]\n    for i in range(three):\n        d[j] = d[i] + d[j-1]\nprint(min(d))\n", "t1 = list(map(int, input().split()))\nt2 = list(map(int, input().split()))\nt3 = list(map(int, input().split()))\n\na = list(map(int, input().split()))\nprint(a[-1])"], "247": ["n,a = map(int, input().split())\nans = float('inf')\na = list(map(int, input().split()))\nans.sort()\nprint(min(ans,a-a))", "n,a = map(int,input().split())\nr = [int(i) for i in input().split()]\nr.sort()\nb = [x[0] for i in range(n)]\nr.sort()\nprint(min(b[1:],r[-1]+r[-1]))", "n,a = list(map(int,input().split()))\nfor j in range(1,n):\n    x = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    dist = (a[i] - a[j])\n    print((dist / (2 * (len(x) - 1) * i)) / 2))", "# cook your dish here\nn, a=list(map(int, input().split()))\nc=[(i,i) for i in input().split()]\n\nif n>=1:\n    print(min(c[1],c[0])-min(c[1]), end=' ')\nelse:\n    c.append(min(c[-1]-a[0],c[-1]))\na.append(0)\nprint(min(c[-1]))", "n,a=list(map(int,input().split()))\na=list(map(int,input().split()))\na.sort()\nprint(min(a[-1][1:]))", "n,a = list(map(int, input().split()))\nn2, a2 = list(map(int, input().split()))\na3 = list(map(int, input().split()))\ns = (0, 0)\nfor i in range(n2):\n    s = (s, i)\n    a4 = list(map(int, input().split()))\n    print((max(a3-a4,a4-a6,a4)))"], "248": ["n=int(input())\narr=[]\nfor i in range(n+1):\n    a=int(input())\n    arr.append(a+int(i))\nfor i in range(n+1):\n    if arr[-1]==0:\n        print(-1)\n    else:\n        print(int((x**2+0.5)**2) + int(x))\n", "from math import ceil\nn=int(input())\nn=int(n)\nn=n-1\nx=len(str(n))\nif n<=0:\n    print(-1)\n    elif n==0:\n        print(-1)\n    elif(n>=2**(n-2)):\n        print(i)\n    elif(n>=4):\n        print(n-4)\n    else:\n        print(i-1)", "n = int(input())\n\n\ndef solve(n):\n    a = \"\"\n    a = int(input())\n    a = \"0\"\n    if b == 0:\n        a += 1\n        else:\n            a += b\n            return a\n    return solve(n)\n\ndef solve(n):\n    x = 0\n    b_x = 1\n    x = (x-1) * 10**9 + (n - 1) * 10\n    if(x >= 0):\n        a = a + 1\n        if a == 0:\n            print(n)\n            return\n        else:\n            print(-1)", "def n2n(s):\n    s = sum(map(int, input().split()))\n    if s == 0:\n        return s\n    else:\n        print(s - 1)\n    return s", "# cook your dish here\ns=[int(i) for i in input().split()]\np=[]\nif s[0]==2:\n    print(-1)\n    else:\n    for i in s:\n        p.append(i)\n    print(p[1])\n", "def solve(x):\n    x = int(input())\n    p = ((2**i)+1)//((-1**(n-2))-1)\n    return pow(p, n/3)\n\ndef solve(x):\n    return eval(str(x))\n\ndef __starting_point():\n    nonlocal n\n__starting_point()\n\ndef __starting_point():\n    n = input()\n__starting_point()"], "249": ["s = input()\nt = input()\nn = len(t)\n\nq = 0\nn2 = 0\nn1 = 0\nn2 = 0\nn = 0\nr = 0\nwhile r < n-1:\n    n2 += 1\n    r += (n2 * 60 - 1)//60\n    if q + (n1 - n2) < 10:\n        q += (n1 - n2) // 60\n        n1 += 1\n        n2 -= 1\n        n = n2 + 1\n    if (n2 - n2) % 24 == 0:\n        n1 += 1\n    if n1!= 0:\n        n2 = n2\n    if (n2 - n2) % 24 == 0:\n        n2 = n2 - 24\n\n    r += (n1 - n2) // 24 + (n1 - n2) // 24\n    print(t,end=\":\",end=\" \",len(n) - 1))\n    else:\n        if n1 - n2 % 24 == 0:\n            n1 += 1\n        n2 += 1\n        r += (n1 - n2 % 24) % 24\n    if (n2 - n2) % 24 == 0:\n        n2 -= 1\n    if ((n1 - n2) % 24 == 0):\n        n2 -= 1\n        elif (n1 - n2) % 24 == 0:\n            n2 += 1\n            r += 1\n        if (n1 - n2) % 24 == 0:\n            n1 += 1\n            if (n2 - n2) % 24 == 0:\n                n2 += 1\n            if (n2 - n2 - n2 - 24!= 0):\n               ", "p = datetime.strptime(input(\"\".join(list(map(int,input())))[2:-1]\nt = input(\"\".join(map(str,input())))\nt = t.split(\":\")\nt = t[0]\nfor m in t:\n    if m>0:\n        p += '+%02d:%02d' % (m,m,h)\n    else:\n        p += '+%02d:%02d' % (m-1,m)\n        \ns = int(input())\nprint(p)", "s = input()\nt = input()\ns = s[:3:]\nfor i in range(7,12):\n    s = s.replace('0','').replace('00','').replace('0','').replace('00','').replace('00','').replace('23','').replace('00','').replace('00','').replace('00','').replace('00','').replace('00','').replace('0','').replace('00','').replace('00','').replace('00','').replace('00','').replace('00','').replace('00','').replace('00','').replace('00':'').replace('00':'').replace('00':'').replace('00': '').replace('00':'').replace('00':'').replace('00':'').replace('00':''.replace('00':'').replace('00':''.replace('0':'').replace('00':'').replace('00':'').replace('00':'').replace('00':'').replace('00':'').replace('00':'').replace('00':'').replace('00':'').replace('00':'').replace('00':'').replace('00':'').replace('00':'').replace('00':'').replace('00':''.replace('00':''.replace('00':''.replace('00':'').replace('00':''.replace('00':'').replace('00':'').replace('00':'').replace('00':'').replace('00':'').replace('00':'').replace('00':'').replace('00':'').replace('00':''').replace('00':'').replace('00':'').replace('00':'').replace('00':'').", "s = input()\nt = input()\nfor i in range(len(s)):\n    if i == \"1\":\n        s += \"0\"\n    else:\n        s -= \"0\"\n    if s == \"0\":\n        s = \"01\"\n        t = \"00\"\n    p = s.zfill(2)\n    else:\n        p = \"00\"\n\nprint(p)\n", "s = input()\nt = input()\nif t == \"05:59\":\n    print(\"00:00\")\nelse:\n    h, m = t.split(':')\n    p = s[2:]:m[2] - m[2]\n    if s[1] == \"02\":\n        p += \"00\"\n    else:\n        p += \"00\"\n    print(\"{}:{}:{}\".format(h,m,p))", "for i in range(int(input())):\n    s = input()\n    h, m = list(map(int, input().split(\":\")))\n    g = int(m.split(\":\")[:2])\n    g += m.split(\":\")[1]\n    if g == 1:\n        print('0'):\n        print('00:'+str(h))\n    else:\n        print('00:'+str(int(h)))"], "250": ["n=int(input())\na=list(map(int,input().split()))\nans=0\nfor i in range(n):\n    a1=list(map(int,input().split()))\n    a2=list(map(int,input().split()))\n    a1.sort()\n    a2.sort()\n    a1.sort()\n    ans=max(ans,a1[0])\n    ans=max(ans,a1[1])\n    ans=max(ans,a1[1])\nprint(ans)\n", "def main():\n    n = int(input())\n    l = []\n    a = list(map(int, input().split()))\n    n = max(a)\n    a.sort()\n    i = 0\n    s = 0\n    for j in range(1,n+1):\n        s += a[j-1] * max(a[j] ** i,a[i]+a[j])\n        i += 1\n    if i > n-1:\n        print(n-1)\n    else:\n        print(n-1)\n    return\n\n\n\n\nans = 0\nans = 1\nfor i in range(n):\n    if a[i] > a[i - 1]:\n        ans = i\n    ans = max(ans, i)\n\nprint(ans)\n\n\n\n", "import sys\nn = int(input())\na = list(map(int,input().split()))\nn = int(input())\na = sorted(list(map(int,input().split())))\nprint(max(a))", "n=int(input())\narr=list(map(int, input().split()))\nA=[int(x) for x in input().split()]\nfor x in arr:\n    l,r,a1,a2,a3,a4,a5=map(int,input().split())\n    maxA=a*sqrt(a2+a1)\n    maxR=max(maxA,l-a1)\n    sumL=l+a*r*l\n    print(max(maxA,r))\n\n", "a = list(map(int, input().split()))\nif a[0]!=':':\n    a.remove(' ')\n    a.remove('.')\n    i=0\n    a.remove('.')\n    a[i]=\" \"\n    l=a[0]\n    for i in range(1,len(a)):\n        r=a[i]*(a[i-1]+a[i])\n        if r>a[i]:\n            r-=1\n            a[i]=a[i-1]\nprint(max(max(a)//(2*len(a)))\n            \n", "n,a=[int(x) for x in input().split()]\nans=0\nfor i in range(n):\n    a=sorted(list(map(int,input().split())))\n    mean=max([a[i]+i for i in a])\n    ans=max(ans,mean)\nprint(ans)"], "251": ["from sys import stdin,stdout,stdout\nn,m,k=map(int,stdin.readline().split())\na=[]\nm=[1,2,3,4,5,6,7,1,7,1]\nn=int(stdin.readline().strip())\nk=int(stdin.readline().strip())\nfor i in range(2*n+1):\n    k+=i\n    for j in range(i,m+1):\n        b=brick(i,m)\n        for k in brick(i+1,m):\n            b=b+(b-j)%998\n    a+=a%244\n    a-=2*b\n    print(a)", "import sys\ninput = sys.stdin.readline\nn,m,k = [int(x) for x in input().split()]\n\nmod = 98244353\nprint(mod * (n - 1) - k * (m - 1)) % mod", "n,m,k=list(map(int,input().split()))\nb=[]\n\nif m>n-1:\n    a=1\n    b.append(min(b,n))\n    m-=1\n    c=i%998\n    c-=b\n    b.append(i%365)\n    print(c)\n", "n,m,k = map(int,input().split())\nl = [0] *(n-1)\nfor i in range(0,m-1):\n  l[i][2] = j = 1\n print(l[i][2]) % 1000000007\n", "n,m,k=list(map(int,input().split()))\nn,m,k=map(int,input().split())\nans=0\nfor x in range(n,m,k):\n  for i in range(1,n-1):\n    if x!=x-1:\n      ans += ((i*2-k)%1000000007)%1000000007\n    print(ans)\n", "for i in range(int(input())):\n    n,m,k = map(int, input().split())\n    count = 0\n    a = m*(n-1)*k\n    if a == m:\n        print((1 + 2 * n) % (998)\n    else:\n        i = k\n        count+=(a - m)*count\n    print(count)\n"], "252": ["n = int(input())\nif n == 1:\n  print(\"NO\")\nelse:\n  print(\"YES\")\n", "n = int(input())\n\nif n%5 == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "# Code here\n\n\ndef is_magic(n):\n    a= []\n    x=int(input())\n    if sum(a)<a[1]:\n        return 0\n    else:\n        return 1\n\nfor i in range(1, a[0], -1, -1):\n    if (n%i == 0):\n        return 0\n    else:\n        return int(n)==(n-i*i)", "def main():\n    n = input()\n    count = n // 2\n    if n % 2 == 0:\n        print('YES')\n    return 0\n    else:\n        return 1\n\n\nm = n % 10\nif m!= 0:\n    print('NO')\n    print('YES')\n", "#!/usr/bin/env python3\nn=int(input())\nif n<514:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n = int(input())\n\ntry:\n    num = (n - (2 ** int(n))-1) ** 6\n    if num % 2!= 0:\n        print(\"YES\")\n    except ValueError:\n        print(\"NO\")\n\nexcept:\n    pass"], "253": ["n, x = map(int, input().split())\ncount = 0\nfor i in range(n):\n    if x%i==0:\n        count += 1\nprint(count)\n", "# cook your dish here\nimport math\nimport sys\nfrom functools import reduce\nimport math\n\nn,x = map(int,input().split())\nx = x // math.floor(n)\nn = n + 1\nprint((x * (x * x) + (n // x // x))//2))\n", "n, x=list(map(int,input().split()))\n\na=[1]\nfor i in range(n):\n    for j in range(n):\n        if i*j==x:\n            a.append(i)\n\nprint(len(a))\n", "import sys\n\nn,x=map(int,input().split())\nx=int(x)\nans=0\nfor i in range(n-2,-1,-1):\n    if x-i>=0:\n        x-=1\n        break\n    if x!=x:\n        ans+=1\nprint(ans)\n", "n,x = map(int,input().split())\nans = 0\nfor i in range(1,n+1):\n  print(x*i)\n", "n, x = map(int, input().split())\nn = int(n)\nans = 0\nfor i in range(1, n + 1):\n    if i == n - 1:\n        ans += 1\n    else:\n        ans += 1\nfor j in range(1, n + 1):\n    ans = ans + j\nprint(ans)"], "254": ["n,k=map(int,input().split())\nprint(\" \".join([str(i) for i in input().split()])[::-1])", "n, k = map(int, input().split())\ns = [n]\n\nfor i in range(0, 2 * n + 2):\n    if s[i] in s:\n        n += 1\n    s[k] = s[i] + 1\n\nprint(' '.join(s))", "n,k=map(int,input().split())\nj=int(input())\nif n==k:\n\tprint(n)\nelse:\n\tprint('')\nprint('')", "n, k = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\nif (k <= n):\n    print(\"N=1\", end='')\nelse:\n    for x in range(n-k-1):\n        print(x, end='')\n    print()\n", "# cook your dish here\nfrom sys import stdin,stdout\n\n\ninput = stdin.readline\nn,k = list(map(int, stdin.readline().split()))\n\nprint(\" \".join(map(str, output())))", "n, k = list(map(int, input().split()))\nprint(''.join(map(str, input().split())))\n"], "255": ["n,a,b=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nl=max(a,b)\nx=l[0]\ny=l[1]\nl.sort()\nm=0\nn=int(input())\nprint(max(m,n))", "n,a,b=map(int,input().split())\nl=[]\nfor i in range(n):\n    a,b=map(int,input().split())\n    l.append(a)\n    l.append(b)\nl.sort()\nl.sort()\nl.sort()\nl.sort()\nl.sort()\nl.sort()\nl.sort()\nprint((l[0]) * l[1])\n\nfor i in l:\n s,e=map(int,input().split())\n if s > e:\n  print(s)\nelse:\n  print(0)", "n,a,b = map(int,input().split())\na1,b1 = map(int,input().split())\nif(n==1):\n    print(0)\nelse:\n    print(b1*a*b*a*b*(b1-b)*b//a)", "n,a,b=list(map(int,input().split()))\n#input()\n\nA,B=[int(x) for x in input().split()]\n\ndef sum(a,b):\n    A.append(a)\n    B.append(b)\n    return (a*b)\n\nans=0\nfor i in range(n):\n    x,y=list(map(int,input().split()))\n    if (a*x)>=b*b:\n        ans=max(ans,(a*x)/(b*y))\n        else:\n            ans=max(ans,(a*x)/(b*x))\n\nfor i in range(n-1):\n    if (a*x)>=b*b:\n        print(0)\n\n\n", "n, a, b = map(int, input().split())\nl = []\nwhile n:\n x,y = map(int, input().split())\n x1,y1 = l.append(x)\n y1 = l.append(y)\n a_d = (a + b) % 360\n if a_d <= 0 or a_d == 0: a_d = 1\n if a_d == 0: b_d = 1\n else: b_d = a_d // 360\n a_b = (a + b) % 360\n a_i = (a + b) % 360\n y_i = (b + b) % 360\n x2, y2 = (b - a) % 360\n x3, y3 = (a - x1) // 360\n p1 = max(a_d * b_d * a_i, b_b * b_i, a_d * y_i)\n ans = 0\n for i in range(a_b):\n  ans = max(ans, (a_i * x_b) ** 2 * (y_i - x2) ** 2)\n print(ans)\n", "import sys\ninput=sys.stdin.readline\nn,a,b=map(int,input().split())\na1,b1=map(int,input().split())\na1=a1+b2\nb1=a2+b1\nd1=(b1+b2)\nd2=(b1+b2)\nd3=(b1+a2)//2\nif(d1>1):\n  print(0)\nelse:\n  print(d1*(b1-b1)*(a2-a1))"], "256": ["n = int(input())\ns = list(map(int, input().split()))\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\nr = set()\nfor i in range(4*n+1):\n    r.add(i)\nfor j in range(4*n+1):\n    r.add(j)\nif len(r)==4*n+1:\n    if r[j][i]==r[j-1][i]:\n        r[j][i] = r[j-1][i]\n        else:\n            r[j][i] = r[j]\nprint(i,j)\n", "# cook your dish here\nn = int(input())\ni = input()\nj = j + 1\nd = []\nj = 0\nwhile j <= n:\n    x, y = j, k + 2\n    while (j >= x):\n        d.append(j)\n        if k == 1:\n            j += 1\n        if j >= k:\n            j -= 1\n    else:\n        i -= 1\n    else:\n        j += 1\n    if i > j:\n        if j - k == d and j < d and j + k < d:\n            j = j - k + 1\n    else:\n        d.append(j + k - d)\n        elif j - k == d:\n            j -= d * d\n        if j - k == d or k < d - d - d + 1 or k > i:\n            x += 1\n        j -= 1\n        else:\n            x += 1\n        j -= d\n    d.append(j)\nprint(i,j)", "def main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    print(x, y)\n\ndef solve():\n    if n == 5:\n        return (int(x))\n    for x in x:\n        if y == 0:\n            return (int(y))\n        if (i - 1 == 0):\n            return (x)\n        else:\n            return (x-1, x)\n\n\n    print(n)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=int(input())\nprint( (n*n)-1,(n*n)+(n*(n-2))/2)", "def solve():\n    n = int(input())\n    print(map(int, input().split()))\n    x_list = list(map(int, input().split()))\n    y_list = list(map(int, input().split()))\n    x_sorted = [a[0] for a in x_list]\n    y_sorted[0] = x_list[1]\n    x_sorted[1] = y_list[2]\n    if x_sorted[0] > y_sorted[1]:\n        print(x_list[1], y_list[2])\n    elif x_sorted[0] > x_sorted[1]:\n        print(x_list[0], y_list[0])\n    else:\n        print(x_list[0], x_list[2])\n", "n=int(input())\nt=list(map(int,input().split()))\nfor i in range(4):\n    x1,y1=list(map(int,input().split()))\n    if(x1>=2 and y1<=2):\n        x2,y2=x1+2,y1+2\n        print(x2,y2)\nelse:\n    print(x1,y1)"], "257": ["\nfor i in range(int(input())):\n    n=input()\n    l=len(str(n))\n    if l%10:\n        print(str(n))\n    else:\n        print(str(n))\n", "n=int(input())\np=1\nfor i in range(n):\n    if i%10==0:\n        p*=i\n    else:\n        p*=i\nprint(p)", "def read_num(n):\n    l=0\n    for i in range(3, int(n**0.5)+1,2):\n        a=int(input())\n        print(a*str(a))\n\nreturn a\n\n__starting_point()", "n=int(input())\np=1\ns=0\nfor i in range(10):\n    s+=int(input())\na=2\na=s*b\nprint(a)", "import sys\ninput = sys.stdin.readline\nn = int(input())\ns = [0]*(n+1)\ns.append(s[-1] * 10**9)\nprint(max(s))\n", "t = lambda: int(input())\nans = 0\nwhile t():\n    t = t()\n    s = int(s.rstrip())\n    if s > len(a):\n        ans = max(ans, a)\n        n -= 1\n\nprint(max(ans, a))\n"], "258": ["import math\n\n\nans = 0\n\ni = input()\nwhile i <= len(ans):\n  if(ans[i] == ans[i-1]):\n   ans = ans[i]\n   i += 1\n  else:\n   i += 1\n\nprint(ans)", "import sys\n\nimport math\ninput = sys.stdin.readline\n\n\n# s = input().split()\n\n# n = len(s)\n# i = 0\n\n# while i < n:\n #  print(i)\n#  print(n, end=' ')\n\n# i += 1\n\n# a = [a for a in input().split()]\n# i += 1\n#  k = 2\n#  j = 2\n\n\nn_ = len(s)\n\n\nnum_a = 1\n\nfor j in range(n_):\n    a,b = e,g,k\n    if a==a and b==a:\n        if k>2:\n            num_a *= 2\n        i += 1\n        elif b == a:\n            num_a = k\n        else:\n            num_a = k\n            i += 1\n\n\nprint(num_a)\n", "# cook your dish here\na=input()\na.split(\" \")\n\nh=[]\nfor i in range(len(a)-2):\n    a.append(c=len(a)-i-1)\nm=-1\nfor i in range(len(a)-1):\n    m=-1\n    for i in range(len(a)):\n        if i==1:m=min(m,i-a.get(a[0])-a.get(a[1])-a.get(a[1],i))\n        else:m=max(m,i-a.get(a[0],i))\n    if m==0:a=1\n    continue\n    if m==1:a=a+1\n    else:m=n-m\n    ans=0\n    for i in range(len(a)-1,-1,-1):\n        for j in range(0,len(a[0])):\n            if a[i]>a[j]and a[j]<a[j]:\n                ans+=a[j]+a[i]\n        a =a\nprint(ans)", "import sys\nsys.setrecursionlimit(10**6)\ndef find(x):\n    x=int(x)\n    if x==x:\n        return x\n    if x==x-1:\n        return x\n    x=x-1\n    y=x-2\n    for i in range(x+1,x+2):\n        x=x-i\n        y=y-i\n    return y\n\na=find(a)\n\nb=find(b)\n\nc=find(c)\ng=g+g\nprint(c)\n", "# cook your dish here\na = input().strip()\na = list(map(int, input().strip().split()))\nif a[0]!= \"z\" and a[0]!= \"a\" and a[0]!= \"z\":\n    a[0] = a[1:]\nprint(1)", "c=input()\nfor i in range(0,len(c)):\n\tif c.isdigit() and i!= c[-1] and i!= c[-1] and c[-1]!=c[-2]:\n\t\tc = c[:-1]\n\t\tif c.isdigit():\n\t\tc = c[::-1]\n\t\telse:\n\t\t\tc = c[1:]\n\t\t\tc = c[::-1]\n\t\treturn c\nfor i in range(len(c)):\n\t\tif c[i]!=c[i-2]:\n\t\tprint((c[-1]+c[-2]+c[-1]-c[-2]))\n\tc = c[:-1]\n\tprint((c[0]+c[-1]+c[-2]+c[-3])-c[:-2])"], "259": ["n=int(input())\na=[int(x) for x in input().split()]\nc=0\nfor i in range(n):\n    if i%2==0:\n        c+=1\nprint(c,c,c)", "n = int(input())\narr = input().split()\nnum = n - 1\nfor i in range(n):\n  k = int(input())\n  num[k] += 1\nprint(num)\n", "n = int(input())\nans = 0\nfor i in range(n):\n    x = list(map(int, input().split()))\n    if x[0] in ans:\n        ans += 1\nprint(ans)\n", "import math\ninput=sys.stdin.readline\n\nn=int(input())\na=list(map(int,input().split()))\na.sort()\nprint(len(a))", "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nl=[]\nx=[]\ny=[]\nfor i in range(1,n):\n    for j in range(1,i):\n        x.append(x)\nfor j in range(1,n):\n    if(x[0]==j):\n        y.append(y[1])\nprint(len(y))\nfor k in range(n):\n    for i in range(1,n):\n    if(x[k-1]==x[i-1]):\n        continue\n    b=l[k-1]\n    if(a[i]==x[i]):\n        b.append(k)\n", "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nb = [(i, j) for i in range(n)]\na.sort()\n\na = sorted(list(a))\n\nans = 0\na[n-1] = (1<<len(a)) - 1\na[n-2] = 0\nwhile a[n-1] > 0:\n    temp = a[n-1]\n    for i in range(n-2,-1,-1):\n        if (a[i] < b[i]):\n            ans += 1\n        a[i] = (b[i] < a[i+1] and (j - i) >= 2 * a[i]):\n            ans += 1\n        a[n-2] = (j - i) // 2 + a[n - 1]\n    if (a[n-1] > a[i]) > a[n - 2]:\n        ans += 1\n    print(ans)"], "260": ["\nn=int(input())\nif n<5:\n    print(5)\nelse:\n    k=n-1\n    if k>0:\n        print(1/2)\n    else:\n        x=n-k\n        print(x+1)\n    else:\n        x=n-3\n        n=n+1-x//2\n        k=n-1-x//2\n        x=n-x//2\n        print(k*x)", "from math import sqrt\nn = int(input())\ndp = [[0]*n for _ in range(5)]\ndp[1][0] = 3\ndp[2][1] = 4\nfor x in range(n+1):\n\tdp[x][0] = 2\n\tdp[x][1] = 2\n\ndp[x][1] = 3\nprint(dp[x][1])", "n=int(input())\na=[]\nfor i in range(n):\n    if i%2==0:\n        a.append(i//2)\nfor i in range(1,n+1):\n    a.append(a*i)\nfor i in range(2,n+1):\n    if i%2!=0:\n        a.append(i/2)\nprint(len(a))\nprint()", "n = int(input())\nfor i in range(n):\n    x=int(input())\n    ans=(n+1)*2-(x*x)\n    x=min(x,2-x)\nprint(ans)", "n = int(input())\nl = []\nfor _ in range(n + 1):\n    print(len(l))\n    l.append(0)\nif (n + 1) % 3 == 0:\n    l.pop(1)\n    l.append(n // 4)\nelif n % 4 == 0:\n    l.pop(0)\nelif n % 4 == 0:\n    l.append(n // 3)\nelif n % 5 == 0:\n    l.append(n // 4)\nelif n % 5 == 0:\n    l.append(n - (n // 5))\nelif n % 4 == 0:\n    l.append(n - (n // 4))\nelif n % 5 == 0:\n    l.pop(0)\nelif n % 5 == 0:\n    l.pop(0)\nelif n % 5 == 0:\n    l.pop(0)\nelif n % 5 == 0:\n    l.pop(0)\nelif n % 5 == 0:\n    l.append(n // 5)\nelif n // 4 == 0:\n    l.pop(0)\nelif n % 5 == 0:\n    l.append(n // 4)\nelif n % 5 == 0:\n    l.pop(0)\nelif n % 4 == 0:\n    l.pop(0)\nelif n % 5 == 0:\n    l.pop(0)\nelif n % 5 == 0:\n    print(l.pop(0)", "import math\nn = int(input())\nl = [int(x) for x in input().split()]\nt = 5\nf = 20\nk = 3\ns = 30\nc = 0\nfor i in range(1,n+1):\n    for j in range(l[i-1]):\n        if t == 0:\n            s += 1\n        if s == j:\n            c += 1\n\nprint(c)"], "261": ["n = int(input())\nlst = []\n\nfor i in range(n):\n    if lst[i] == 0:\n        lst.append(0)\n    else:\n        lst.append(lst[i])\nprint(max(lst)))", "import sys\ninput = sys.stdin.readline\nn = int(input())\nx = int(input())\n\ngift = 0\n\n# l = []\n# for i in range(1,n+1):\n#     for j in range(1,n+1):\n#         if j in l:\n#             gift += 1\n#             l.append(gift)\n#             else:\n#                 gift += 1\n#         if l[0] == 0:\n#             gift += 1\n#     print(gift)\n\n\n# if n%10 == 0:\n#     print(gift)\n# else:\n#     print(n)\n\n", "n=int(input())\nprint(int(n(1))-n(2))\n", "n = input().split()\nq = []\nfor i in range(n):\n    q.append(int(i))\nprint(q[-1])\n", "n = int(input())\na = list(map(int,input().split()))\nprint((a[n%10+(n/10%10))%10)", "a = int(input())\n\na = [int(x) for x in a if int(x) == 1]\nres = []\nfor i in range(len(a)):\n    if a[i] < a[-1]:\n        if a[i-1] == \"1\":\n            res.append(0)\n    else:\n        res.append(a[i-1])\nfor i in range(0, len(a)):\n    res.append(a[i])\nfor i in range(len(a)):\n    res[i] = int(a[i])\nprint(res[0])"], "262": ["a,k=map(int,input().split())\n\na=list(map(int,input().split()))\nfor i in range(1,k+1):\n    print(int(a[i-1]*10**18+a[i+1:],end=' ')\nfor j in range(k):\n    a[j]=a[j-1]+a[j+1:j])\nprint(int(a[j]))\n", "a,k=map(int,input().split())\ns=0\nfor i in a:\n    s+=int(i)\nfor i in range(n-2):\n    if s-i>=k:\n        s-=int(s)/(10**18)\nprint(s)", "a, k=map(int,input().split())\nprint(int(str(int(a))[0:-1]))\n", "a, k = input().split(\" \")\nif k == 0:\n    print(a)\n    return 0\n#print(\"n_a\")\nfor i in range(1, k+1):\n    a, k = list(map(int, input().split()))\n    a = a[0:k]\n    a = a[k:k+1]\n    if a<k-1:\n        print(a)\n    else:\n        print(a)\n", "import sys\nimport sys\ninput = sys.stdin.readline\na,k = list(map(int,input().split()))\nm = 0\nfor i in range(int(a[0:10])):\n    k = 10**(m-i)\n    m = min(m,k)\nprint(m)\n", "a,k=map(int,input().split())\nans=0\nfor i in range(1,k+1):\n    i=i%10\n    ans=max(ans,int(ans))\nfor i in range(2,k+1):\n    ans=max(ans,int(ans))\nprint(ans)\n"], "263": ["import sys\ndef main():\n    n = int(input())\n    if n == 0:\n        print(-1)\n    elif n == -1:\n        print(1)\n    else:\n        for i in range(1, n):\n            for j in range(2, n):\n                print((n - j - i) * j * i)\n        else:\n            print((n - i) * j)\n    return\n    else:\n        a = 1\n        b = 0\n        for i in range(2, n):\n            if a - b == 0:\n                continue\n            elif b + a > n:\n                b += b\n                a = a - b\n                b = a - b\n            else:\n                b = a - b\n        print((n-1) * (n - i))\n        print((n-2))", "import sys\ninput = sys.stdin.readline\n\nif input in [1, 1000]:\n    print(int(input()))\nelse:\n    print(\"-\")\n", "a=input()\nb=a[1:]\nl1=len(a)\nl2=int(a[2])\nl3=len(a[0])\nl4=sorted(a)\nr=sorted(b[1:]+b[2:])\nprint((r-l2)//2)", "N = int(input())\nwhile(N!= 1):\n    if N == 2:\n        n = int(str(N))\n        print(n)\n        print(n-1)\n    N -= 1\n    else:\n        n = int(str(N))\n        if n == 1:\n            print(n)\n        break\n    else:\n        print(n)\n    return n", "# cook your dish here\nn=int(input())\ntry:\n    x=n-1\n    y=m(n)/2\n    if x>y:\n        print(-1)\n    elif x>y:\n        print(y)\n    elif x>y:\n        print(-1)\n    else:\n        print(y+x)", "def search(seq):\n    if seq == 0 or seq == 1:\n        return True\n    if seq == 1:\n        print(-1)\n        return False\n    else:\n        b = int(input())\n        if seq == 2:\n            print(2)\n        return True\n    else:\n        if seq == 1:\n            print(2)\n        return True\n        if seq == 3:\n            print(3)\n        return False\n        elif seq == 4:\n            print(5)\n        elif seq == 5:\n            print(6)\n        elif seq == 6:\n            print(7)\n        elif seq == 7:\n            print(8)\n        else:\n            print(9)\n        elif seq == 8:\n            print(13)\n        elif seq == 1:\n            print(9)\n        else:\n            print(12)\n        elif seq == 3:\n            print(10)\n        elif seq == 6:\n            print(9)\n        elif seq == 7:\n            print(8)\n        elif seq == 8:\n            print(9)\n            print (4)\n        else:\n            print(10)"], "264": ["n=int(input())\nb=[list(map(int, input().split())) for i in range(n+1)]\nc=[['B','G','R']]*n\nd=['BR','G','GR'],['BR','B','GR']\nfor i in b:\n    if i!='R' and i!='G':\n        d[i]+=[c[i]+i[i][0]]\nelse:\n    d[i]+=[c[i]][2]for i in a]\n    print(' '.join(d))\n", "n = int(input())\ns = input()\na = s.upper()\na = a.split(\" \")\nb = []\nfor i in range(len(a)):\n    b.append(a[i] + b[-1])\nif b!= 'B':\n    b.append(b[-1])\nprint(\" \".join(b))\n", "from collections import Counter\ndef main():\n n = int(input())\n s = input()\n c_list = Counter(s)\n for i in range(0, n):\n  c_list[i] = dict()\n c_list[i+1] = list(map(int, c_list[i]))\n\n print(c_list)", "n=int(input())\nA=[]\nfor i in range(n):\n    A.append(input())\na=input()\nprint(a[1])\n", "n = int(input())\ns = input()\np = []\nfor i in range(n):\n    if s[i]=='R':\n        p.append(i)\n    p.append('R')\nfor i in range(n):\n    p.append(s[i])\nfor i in range(n):\n    p.append('B')\nprint(' '.join(p))\n", "n = int(input())\ns = input().strip()\nl = []\nfor i in range(n):\n    l.append(s[i])\nif l.count('BR'):\n    l.append('BR')\nprint(''+''.join(l))"], "265": ["a = list(map(int, input().split()))\nb,c = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\na = a[0]\nb = b[0]\nc = b[1]\n\nfor x in range(3,max(a)):\n    b,c = b[1], c[0]\n    if abs(a-b) == abs(c-c):\n        print(\"Yes\")\n    elif abs(c-c) == abs(a-b) == abs(c-a):\n        print(\"No\")\n    else:\n        print(\"Yes\")", "from sys import stdin\n\na,b,c=map(int, stdin.readline().split())\nif a[2]>=a[3]:\n    print(\"Yes\")\n    elif b[2]<=a[4]:\n        print(\"No\")\n    elif a[3]<=a[4]:\n        print(\"Yes\")\n        print(\"No\")\n        elif a[4]==b[6]:\n            print(\"Yes\")\n        elif a[4]<b[6]:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n        else:\n            print(\"No\")", "a,b,c = map(int,input().split())\nb = set(map(int,input().split()))\nc = a.difference(b)\nif (c > c) or (a<c) or (b<c and (a>b):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "import sys\ninput = sys.stdin.readline\na, b, c = list(map(int, input().split()))\ngcd = math.pi / 180\nc = math.pi / 180\nd = [2, 2, 2, 2, 2, 2, 2, 2, 2]\n\nif not gcd:\n    print(\"No\")\n    else:\n        print(\"Yes\")", "A = {e: x for x, e in enumerate(map(int, input().split()))}\nB = {e: x for x, e in enumerate(map(int, input().split()))}\nA.sort()\nA[2] = 0\nA[3] = 1\nA[4] = 1\nA[5] = 1\nprint(\"Yes\") if A[2] == 0 else \"No\"", "import math\nimport math\nimport sys\nfrom random import random\na,b,c = list(map(int,input().split()))\nb,c = set(map(int,input().split()))\nprint(\"Yes\" if math.sqrt(a-b)>math.pi else \"No\")"], "266": ["a,b=list(map(int,input().split()))\na-=1\na-=b\nsum=a//b\n\nnum=2*a-b\nprint(num)\n\n", "a,b=map(int,input().split())\na=max(a,b)\nb=min(a,b-a)\nprint(a*b)", "a,b=map(int,input().split())\nb=a-b\na=min(a,b)\nprint(max(a), max(b,a))\n", "a,b=list(map(int,input().split()))\ncount=[1 for i in range(a+1)]\nwhile(a>b):\n  a,b=list(map(int,input().split()))\n  a=abs(a+b)\n  count[a-b]+=1\n return(count[a-b])\n\nA=a%a\na=1\nb=b%a\nans=0\nfor i in range(1,a+1):\n    if(a-b)%a==0:\n        ans+=(a//a)\n    print(ans)\n", "def solve():\n    a,b = map(int,input().split())\n    a,b = map(int,input().split())\n    res = b * a\n    if len(res)>1:\n        return res\n    if abs(a-b)<3:\n        return res\n    if a>b:\n        return solve()\n    a-= b\n    res=solve()\n    res=res*res\n    res=res*res\n    ans=ans+ans**2\n    print(ans)\n", "# cook your dish here\nt=int(input())\na,b=map(int,input().split())\na=x+b\nn=1\n\nres=0\nfor i in range(len(t)):\n    if t[i]<=a:\n        if t[i]==b:\n            res+=1\nprint(res)"], "267": ["x, y = map(int, input().split())\nn = min(x, y)\ndp = [0, y, 0]\nans = 0\nfor j in range(1, 10):\n    if (j * j % n == 0):\n        d = max(dp[j], d * j)\n        d += 1\nprint(a/b)", "def mod(a,b):\n    if a < 0:\n        return a\n    else:\n        return mod(a,b)\n\nn= int(input())\ni=int(n)\nj=i\nwhile j<n:\n    k=1\n    while i<n:\n        if a%i==0:k*=j\n            j=i\n        else:k=j\n    j=j-i\n    print(k)", "import math\nx, y=map(int, input().split())\nwhile x:\n    x=x/math.gcd(x, y)\n    y=y/math.gcd(y, x)\n    x=x-gcd(x, y)\nprint(x)", "import math\nimport sys\nimport sys\ninput = sys.stdin.readline\n\ndef gcd(x, y):\n    return math.gcd(x, y)\n\n\ndef gcd(x, y):\n    if (x, y) in [0, 1] :\n        return 1 if x%y==0 else x/y\n\ns = []\nfor t in input().split():\n    s.append(x)\n    s.append(y)\n    s.sort()\n    return s", "n = int(input())\nx = n\nfor i in range(n):\n    print(x)", "a,b,c=map(int,input().split())\na=a//b\nc=c%b\nd=b//c\nd+=1\nd+=1\nm=b*c\nfor i in range(1,int(a)):\n\tif(a%i==0):\n\t\tprint(i)\nprint(d*d)"], "268": ["s = input().split()\nx, y = s.split()\nfor i, x2, y2 in enumerate(s):\n    # for j in range(i+1, i+1):\n        if (x2-x1)<(x3-x2) or (y2-y2)<(x3-x2):\n            break\n    if (x2-x1)<(x3-y2):\n        if y2-y1<(y3-y2):\n            print('respectable')\n    else:\n        print('ugly')\n    continue\n", "import math\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = 0\nfor i in range(len(a)):\n    x, y = a[i]\n    while c < 4:\n        if (x == b and (x >= b and y >= b)):\n            if c < c:\n                b += 1\n            c += 1\n    else:\n        c += 2\n    return c\n\nif a[2] == b[2]:\n    print('respectable')\nelse:\n    print('ugly')", "l=list(map(int,input().split()))\nx,y=map(int,input().split())\nl=list(set(l))\nl.sort()\ncount=0\ni=0\nj=0\nfor j in range(len(l)):\n    while j<len(l)):\n        if l[j]<l[j+1]:\n            count+=1\n            break\n        i+=1\nif (i-1>=0 or j-1>=0):\n    if l[i]==l[j]:\n        j+=1\nprint('respectable')", "import sys\ninput = sys.stdin.readline\nlist0 = [int(i) for i in input().split()]\nlist1 = [list(map(int, input().split())) for i in range(len(list0))]\nlist2 = [list(map(int, input().split())) for i in range(len(list1))]\nfor i in range(0, len(list1)):\n    l1 = list1[i-1]\n    l2 = list1[i-2]\n    for i in range(len(list2)):\n        if list2[i]>list1[i-1]:\n            l1.append(list1[i])\n    for j in range(i+1, len(list2)):\n        if sorted(list2[j]):\n            l2.append(list2[j])\n    return l1\n\ndef test(x, y):\n    if x>y:\n        return False\n    x,y = list2[x], list2[y-1]\n    y = list2[y-1]\n    if y>x and y>x:\n        return False\n    return True\nfor i in range(len(list1)):\n    for j in range(len(list1)):\n        x,y = list1[j]\n        if x==y:\n            return False\n        else:\n            print('respectable')\n        for i in range(len(list1)):\n            if sorted(list1[i]):\n                if sum(list1[i]-list2[i-1]) >= sum(list1[i+1],list1[j-1]):\n                    break\n       ", "from math import sqrt, sqrt\ninput = sys.stdin.readline\nm, n = map(int,input().split())\np = 0\np1 = 1\np2 = 1\np3 = 2\np4 = 3\n\nfor i in range(n):\n    x1,y1,x2,y2 = map(int,input().split())\n    if x2 <= x1:\n        if p2 <= p1:\n            p1,y2 = p2,p3\n        else:\n            p1,y2 = p1,p2\n        if p4 < p2:\n            p4,x3,y3 = p1,p2,p3\n        else:\n            p1,x1,y2,y3 = p2,p3\n    p4,y3 = p4,p3\n    p6,p5,p6,p7,p8,p9,p10\n    p6,p7,p9,p10\n    p6,p9,p10,p10,p11,p17,p18,p19,p19,p22,p22,p18,p19,p19,p20,p22,p21,p21,p22,p22,p22,p23,p24,p33,p33,p36,p31,p34,p35,p37,p38,p49,p39,p39,p5,p46,p4,p37,p21,p43,p43,p40,p37,p41,p4,p42,p5,p37,p37,p34,p28,p21,p22,p2,p49,p", "x, y = map(int, input().split())\n\ndef is_valid(x):\n    if x < 0:\n        return x!= 0\n    if x > y:\n        return False\n    if y < x:\n        return False\n    x1 = x\n    y1 = x\n    y2 = y\n    x3 = x2\n    x4 = y3\n    y5 = y3\n    if x == x2:\n        return True\n    else:\n        return False\n\ndef solve(x, y):\n    if x == y:\n        return (x!= y) and (x == y) and (x!= y) and (x!= y) and (y!= x) and (y!= y) and (y!= y) and (y!= x) and (y!= x and y == y3):\n        return (y == y_3)\n    return (x == x1 and y == y2 and (y == y2 and x!= y3 and y!= x3)) and (y!= y1 and x3 < y2)\n    return (x == y and y == y2)\n\ndef __starting_point():\n    main()\n\n__starting_point()"], "269": ["# cook your dish here\nk = int(input())\nn = list(map(int, input().split()))\nfor i in range(n):\n\tnum, k1 = map(int, input().split())\n\tif k > k1:\n\t\tprint(-1)\n\telse:\n\t\t\tprint(k1)\n", "k = int(input())\nn = list(map(int, input().split()))\nprint(int(n[0]) if n[-1] in ['5', 1, 4, 2] else -1)\n", "n = int(input())\nl = [0]\nfor i in range(1, int(n**0.5)+1):\n    r = [r[i-k] for i in range(0,10 ** 6)]\n    for j in range(1, int(n**0.5)+1):\n        r[i] = int(r[j-1])\nprint(int(r))\n", "# cook your dish here\n\nk=int(input())\nlis=[0]*(10**6)\nans=[]\nfor i in range(9):\n    if(lis[i]>k):\n        print(int(lis[i]))\n    break\n    else:\n        for j in range(i+1,10**6+1):\n            j=i\n            i=i+1\nprint(ans[k])\n", "try:\n    n = int(input())\n    for i in range(n-1, -1, -1):\n        print(i)\n    except:\n        pass\n    print(-1)", "def solve(n):\n if n==0:\n  return -1\n if n%10==0:\n  return n*10\n return solve(n//10) - solve(n/10) - solve(n//10) - solve(n%10) + solve(n/10+1)\n\ndef main():\n    n, k = int(input())\n    return solve(n-1)\n\ntry:\n    if k==1:\n        print(int(input()))\nexcept:\n    pass"], "270": ["from collections import Counter\nn,m = map(int,input().split())\nt = map(int,input().split())\nprint((n*(m+1))//2))\n", "def __starting_point():\n n,m=list(map(int,input().split()))\n s=input()\n t=input()\n count=0\n k=0\n while (n>1 and t>=n-1):\n  count=min(count,(s[n-1-k],s[n-1-k]))\n  k+=1\n s-=1\n t=t[n-1-k]\n if(s!=t):\n  print(count)\n else:\n  print(count)\n    \n__starting_point()", "n, m = list(map(int,input().split()))\nprint(len(set(n))-len(set(t)))\n", "def count(s,t):\n s=input()\n m=input()\n s=list(s)\n for i in range(m-1,-1,-1):\n  if(s[i]==t[i]:\n   count(s[i:i+1],t[i:i+1]))\n   c=s[i:]\n  if(c<s):\n   s[i],t=s[i],t[i]\n   c+=1\nprint(count(s,c))", "n,m=map(int,input().split())\na=list(map(int,input().split()))\nc=[]\nwhile(a<m):\n    c.append(a%m)\n    a=max(a%m,c)\nm=max(a,c)\nl=1\ns=list(input())\np=[n for n in a if(n<m)&1]\np.sort()\nprint((len(p))-len(p))", "import sys\nn,m=list(map(int,input().split()))\ns=list(input())\nt=list(input())\n\ndivisor=0\nfor i in range(n):\n\tif i%2 == 0:\n\t\t\tdivisor+=1\n\t\t\tcontinue\n\tif i/divisor==0:\n\t\t\tdivisor+=1\n\tans=int(ans)\n\tprint(ans)\n"], "271": ["import math\nr = math.pi/4*(r+1)\nans = 1.0000000\na, b = 1, r*(r+1)\na1 = 1.0000000\nb1 = 1.0000000\nd1 = math.sqrt(a)\nif((a+b) / 2) == math.sqrt(d1)):\n print(b)\n else:\n  a1 *= (d1*b1)/(b+a)\n", "import math\nn,r = map(int, input().split())\nprint(n*(r+2)*2*(n-1)+2*(r+1))\n", "n,r=map(int,input().split())\nx=n*(r+1)*(n*2)/2\nprint(x/(1-x))", "n,r = map(int,input().split())\nl = [int(d) for d in input().split()]\nd = [int(d) for d in input().split()]\np = [int(d) for d in input().split()]\nx = []\ny = []\nfor i in range(1,n):\n    if i>x:\n        x.append(i)\n    else:\n        y.append(i)\nif x[0]==x[1]:\n    x.pop(0)\nfor i in range(2,n):\n    y.append(i)\nprint(x[1])", "# cook your dish here\nn,r=list(map(int,input().split()))\nd=0\ns=0\nif n==1 or r==1:\n    d=1\n    else:\n        d=1\n        s=s+d-r\n\nprint(d)", "import math\nn,r = list(map(int,input().split()))\nr2n, r2=list(map(float,input().split()))\na=math.sqrt(n-1)\nb=math.sqrt(r2n)\nprint((a//b)**0.5)"], "272": ["from random import randint\nfor i in range(int(input())):\n    a = list(map(int, input().split()))\n    x = [0] * len(a)\n    for j in range(1, len(a)):\n        if a[i] == x[j]:\n            x[j] = a[j] + 1\n        else:\n            x[j] += 1\nprint(x[n-1])", "n=int(input())\r\na=list(map(int, input().split()))\r\nfor i in range(0,n):\r\n    x=(a[i]-1)*a[i-1]\r\nprint(y)", "def main():\n n = int(input())\n a = list(map(int, input().split()))\n print(sum(map(int, input().split())) - 1)", "n = int(input())\nA = list(map(int, input().split()))\nprint(max(sum(set(A)) for A in range(n), n))\n", "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\nnum = a[0]\nnum = num.count('1')\nx = num\n for i in range(1,1,-1):\n  if num[i] == 0:\n   break\n  num[i] = num[i-1] - 1\nprint(num[num[n-1])\n", "n = int(input())\na = list(map(int, input().split()))\n\ncount = 0\nif n == 1:\n\tprint(a[0])\n\telse:\n\tc = 1\n\tfor i in range(n-2, -1, -1):\n\t\t\tif a[i]<a[i+2]:\n\t\t\ta[i]+=a[i+1]\n\t\t\tcount = count + 1\n\t\t\telse:\n\t\t\t\ta[i]=c\n\nprint(count)"], "273": ["# cook your dish here\nn,f,c=map(int,input().split())\nfor _ in range(n):\n    f=(f+(f+(f+(f-(f-(f-2)/2)*f+(f-3)/2)*f+(f-(f-1)/2)*f+(f-(f-3)/2))*(f+2)/2)\nprint((f[n])%7))\n", "def main():\n    n, a, b = map(int, input().split())\n    f = a << 1\n    for i in range(n - 1):\n        a ^= b << i\n    return f\n\nN = len(input())\n\nf = [int(x) for x in input().split()]\nf_l = [int(x) for x in input().split()]\n\nd = [int(x) for x in input().split()]\nf_l.sort()\nprint(f_l[-2])", "import math\nfrom sys import stdin\ninput = stdin.readline\n\nn = int(input())\nf = input()\n\np = lambda f, c : 2 ** (f - c) * f % c\nf = p(n - 1) * (f - a(n - 2) * c * (f - a (f - 3) * c * a (c - 2) * c * c) % a)\n\nf = f * p(n - 2)\nn = p(n - 1) * p(n - 1) * p( n - 2) * p( n - 3)\n\nc = int((n - 1) * f // c)\n\nn = int((n - 2)*f // c) * (f // c * p) % a(f // a(f // a (c - 2 * f // a), f // a(f // c)) % a(f // a(f // a(c - 2 * f // a)), f % a(f * c ** a) // f // b(n - a(f * c - 2 * f / a (f // c) / b(n - a (f // c)) + a (f // c)) + 7)\n\n\nprint(f % a(n // a(f // a(c - 1 - a) // a(n - 1) * a(f // a(c - 2 * f)))\n", "n, a, b, c = map(int, input().split())\na=a*a+b*c//a\nb=a*(b+1)*(b+1)\nprint(a%10**9+7)", "# cook your dish here\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    return int(input())\n\n\ndef __starting_point():\n    #your code here\n\n    n = int(input())\n    fl = list(map(int, input().split()))\n    fl.sort()\n    for i in range(n):\n        fl[i] = fl[i]*10**9 + 7\n    return fl[n-1]\n\ndef __starting_point():\n    return int(input())\n\n__starting_point()", "from itertools import combinations\nn,a,b,c = map(int, input().split())\nb=b*b\na1=b*a2*b1+a1*b2*a3\na2=b*a3*b2+a3*a4+a2*b2*b3*b3\n\na=a1*a4+b2*a3*a4*b2\nc=(2*a4-b2*b2)//2\nprint(a%(10**9)+7)\n"], "274": ["def main():\n    n = int(input())\n    ar = list(map(int, input().split()))\n    ar.sort()\n    arr_idx = sorted(ar)\n    l = l[::-1]\n    l_cnt = 0\n    while l_cnt < len(ar):\n        l_cnt += 1\n        arr_idx += 1\n        arr_idx -=1\n    if len(arr_idx) > 0:\n        l = [arr[l_cnt - 1]]\n        l_cnt += 1\n        l_cnt -= 1\n        l_cnt += 1\n    print(int(sum(l)))\n    \n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\na=sorted(set(a))\na.sort()\n\nans=a.index('a')\nfor i in range(n):\n    if a[i]<a[i-1]:\n        ans+=(a[i]+1)\n    if a[i]==a[i-1]:\n        ans+=(a[i]-1)\nprint(ans)\n\n", "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\na.sort()\na.sort()\na.sort()\nprint(sum(a)//2)", "n = int(input())\na = list(map(int,input().split()))\nans = 0\nans1 = 0\nfor i in range(n):\n    if a[i] > 0:\n        ans += a[i]\n        else:\n            ans += a[i]\n    ans1 += a[i - 1]\nprint(ans1)\n", "from math import log\n\ndef pow(a, b, l):\n    return 1 if int(log(a, b))) >= 0 else pow(a, b - 1, l)\ndef binsearch(a, b, l, r):\n    return binsearch(a, b, l, r)\n\nn, n_a = int(input(), 1, 1)\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    ans += pow(b, i-b, l)\nans += pow(b, i, l)\nprint(ans)\ndef __starting_point():\n    main()\n__starting_point()", "import sys\ninput=sys.stdin.readline\nn=int(input())\na=list(map(int,input().split()))\na.sort()\np=1\nc=1\nfor i in range(n):\n    if a[i]==0:\n        print(0)\n    else:\n        c=c*i\n        p+=1\n    c+=1\nprint(c)\n"], "275": ["import sys\n\ndef main():\n    s,t = map(int,input().split())\n    a= list(map(int,input().split()))\n    l=list(map(int,input().split()))\n    while len(l)!=0:\n        while len(l)!=0 and s[l[0]].isalnum():\n            a.pop()\n            s[l[0]]-=1\n        l.append(1)\n    return 1 if s[0] in l else -1\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s,t = input().split()\nc = 0\nm = 10**9 + 1\ns = sorted(s)\n\nfor x in s:\n    if c in m:\n        m -= 1\n        print(x)\n\nfor t in t:\n    c += 1\n    m -= (int(x) * 10 ** 9 + 1)\n\nprint(int(m))\n", "s=input()\nt=input()\nc=1\nc=2\np=s.count('a')\nfor i in c:\n    p+=1\nc-=p-2\nif(int(p))==c:print(-1)\nelse:print(-1)", "import math\n\ns, t = map(str, input().split())\ns = s[:] + s[:] + s[::-1]\nt = t[:] + t[:] + t[:-1]\nn,i = lambda p: int(p)[1], int(n[0])\nn, i = 0,[0]*10**10\n\nif i==len(s):\n print(0)\nelse:\n print(-1)\n", "s=input()\nt=input()\ndef solve():\n    a=1\n    while a!=0:\n        a+=10**100\n        b=2\n    while b<=len(s):\n        b+=1\n        a=a*10**100\n    return a\n\nS=s[0]\nT=t[0]\nB=-1\nfor i in range(len(S)):\n    if s[i]!=S[T[i]:\n        B=S[i]\n        if B==T[B]:\n            B=I\n            B=I\nprint(min(A[B],G[0]),G[1])\n    \n", "s, t = map(int, input().split())\nprint((sum(map(int, input().split()))) if s.count(t) > 1 else -1)"], "276": ["input()\ninput()\nfor i in range(len(input())):\n    s=input().strip()\n    print(s)\n", "# cook your dish here\ns=input()\nd=[0 for i in range(26)]\nfor i in range(26):\n    if i<26:\n        d[i]=d[i-26]+d[i]%26\nprint(' '.join(d))", "s = input()\nl = len(s)\n\n\nl = 0\n\nfor i in range(l):\n    l = str(l)\n    l = l + l[::-1]\n    print(l)", "s=input()\nif len(s)<=50:\n    a=0\n    b=0\n    c=0\n    for i in range(50,26):\n        if(i==a):\n            a+=1\n        c+=1\n    print(b)", "import math\n\n\ndef input():\n    s=input()\n    x=0\n    s_t=str(x)\n    c=1\n    for i in s:\n        if i<26:\n            c+=2\n        else:\n            s_t+=1\n\nprint(\"\".join(s_t))\n", "s = input()\na = len(s)\na = [a[::-1] for _ in range(a)]\ns = s[:a]\na = a[:a[-1] + 1]\na = a[:0] + a[:a[-1]]\nprint(s[::-1])\n\n\n\n"], "277": ["n,t=list(map(int,input().split()))\nif(t==1):\n    print(\"G\")\nelse:\n    t-=(t*(n-1))-1", "import sys\n\ndef bfs(s, t):\n    a = ''\n    i = 0\n    if s == 'B':\n        b = b + 'G'\n    else:\n        b = b + 'B'\n    i += 1\n    if i == t:\n        b = b + 'G'\n    else:\n        a = b + 'B'\n    else:\n        b = b + 'G'\n    return a\n\n\nn,t = map(int, input().split())\nf = [int(x) for x in input().split() if x == 'B']\n\nm = [(0,0),(''.join(g[i:i+1]))]\nfor i in range(n-2):\n    f.append(f[-1])\n    if f[-1] == 'B':\n        f.pop()\nprint('G'.join(f))\n", "from collections import deque\nfrom heapq import heappush, heappop, heappop\nn,t = map(int,input().split())\nqueue = deque(map(int,input().split()))\nwhile n > 0:\n    count = len(queue)\n    n, t = [int(x) for x in input().split()]\n    queue.append(s[:n])\n    count.popleft()\nprint(s[-n][-1])", "def main():\n    n,t=list(map(int,input().split()))\n    l=[]\n    for i in range(n-1,-1,-1):\n        if(s[i:i+1]==\"B\") or (s[i:i+1]==\"G\"):\n            l.append(i)\n            continue\n        else:\n            l.append(\"G\")\n        print(l)", "# cook your dish here\nimport sys\nimport math\nfrom collections import defaultdict as dd\ndef __starting_point():\n    sys.setrecursionlimit(10**6)\n    n,t=list(map(int,input().split()))\n    result=0\n    while n>0:\n        if dd[0]==dd[i]:\n            result+=1\n            n-=1\n        if n==2:\n            result+=(1+1)\n            n=n-2\n        else:\n            result+=(1+1)\n    else:\n        result+=(1+1)\n    return result\n\n__starting_point()", "n,t = map(int,input().split())\n\ns = input()\n\nif t%2==1:\n    print(\"G\")\nelse:\n    ans = \"\"\n    while t<n-2:\n        ans += s[t]\n        t -=2\n        n -= 1\n    print(\"B\")\n    if n==0:\n        print(\"G\")\n    else:\n        print(\"B\")\n   "], "278": ["n, m = map(int, input().split())\nd = [-1 for i in range(n)]\nc = n - 1 - m - 1\nd.append(-1)\nif d in [2, 3] or d == 0:\n    print(c)\nelse:\n    print(d)\n\n", "n, m = list(map(int, input().split()))\nprint(' '.join(map(str, input().split())) if n<2 else '-1')", "n,m=map(int,input().split())\na=[1,2,5,13,17,22,29,23,25,26,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59]\nr=[0]*(10**6+6)\np=[]\nfor i in range(n-1):\n    for j in range(i+1,m):\n        if(a[j]!=1):\n            p.append(a[j])\n    p.append(b[j])\nfor i in range(n):\n    if(a[i]==2):\n        print(i)", "\nn, m = list(map(int, input().split()))\nd = []\nif n == 0:\n  a = 1\n if m == 0:\n   print(-1)\n   else:\n    a = 1\n  d.append(a)\nfor _ in range(n):\n    if d[0]!= 0:\n      if d[1]!= 0:\n      d[1] += 1\n      else:\n        if d[2] > 0:\n          d[2] += 1\n    d[1] -= 1\n    d[2] += 1\nprint(d)\n", "n, m = map(int, input().split())\nif n == 0:\n    print(1, \"1\")\nelse:\n    x = n * n-1\n    x = m * m-1\n    for i in range(3, x+1):\n        print(i, end=\" \")\n        if i % 2!= 0:\n            print(-1, end=\"\")\n        return\n    else:\n        print(-1, end=\" \")\n        print()\n", "n,m=map(int,input().split())\n\nk = int(input())\ni=1\nif n==1:\n    print('0')\n    if m==1:\n        print('1')\n    else:\n        print('0')\n    if n%2==0:\n        print('1')\n        i=1\n        while i<=m:\n            print('1')\n            break\n            k+=1\n        i+=1\n        i=n//2\n        i+=1\n        print('2')\n        while i<=m:\n            if k!=k:\n                print(k)\n                i+=1\n            else:\n                print('0')\n                i+=1\n        j=0\n        while j<=n//2:\n            if (i+j)%2==0:\n                i+=1\n                j+=1\n                i+=1\n            j+=1\n            j+=1\n        i=0\n    if k==0:\n        print(-1)\n    else:\n        print(-1)\n"], "279": ["from math import sqrt\nn,k = map(int, input().split())\nc=int(sqrt(n))\nk/=2\n\np=lambda:input()\nif(n>=k/(n**2)+1):\n    print(c[n:k+1])\nelse:\n    c[n]+=c[k-2]\nprint(n-k)", "# cook your dish here\nn,k=map(int,input().split())\nm=0\n\nn1=0\nk=1000000000000000\nfor i in range(n):\n    k *= i\n    m+=1\nprint(m//n1)", "\n\n\ndef __starting_point():\n\n    n, k = map(int, input().split())\n\n    if n == 1:\n        return 1\n\n    if k == 0:\n        print(n)\n        return n\n    if n == k:\n        print(n)\n    if n % k == 0:\n        print(n)\n        n += n//k\n        n = n//k\n        n = n-k\n        n = n//k\n        n = n-k\n        n = n/k\n        n = n//k\n        n = n%k\n        n = n//k\n        n = n//k\n        n = n//k\n        n = n-k\n        n = n//k\n    print(n)\n\n__starting_point()", "n,k=map(int,input().split())\ncount=0\nwhile(k>0):\n  count+=n*k\n  k//=2\n  n=n//(k*(k-1))//k\n  count=k//2\n print(count)\n", "import sys\n\nimport math\nn,k=list(map(int,input().split()))\nt=[1]*int(math.floor(n/k))\n\nfor i in range(1,int(math.log(k))+1):\n    t.append(k/(i+1))\nd=[k//n for i in range(1,k//n+1)]\nfor i in range(2,n-1):\n    d[i]=d[i-1]//2\nprint(d.count(1) if d[i-1]%2 else d[i-1]\n\n\n\n\n\n\n\n\n\n", "n, k = map(int, input().split())\nl = 0\nj = n*(k+1)//2\n\nc = []\nwhile j<n:\n\tif c[j*c]==0:\n\t\t\n\t\tc += 1\n\t\tj*=c[j]\n\t\tc.append(j*c[k])\n\t\tn+=c[j]\nprint(c[-1])"], "280": ["n=int(input())\na=[]\n\nx=1\nwhile a!=0:\n    a=a^2\n    if a==0:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "n=int(input())\nx=int(input())\nif n==n%10:print(\"YES\")\nelse:print(\"NO\")", "n=input()\na=n+n%10\n\nfor i in range(2,max(1,i+1),10):\n    if n%i==0:\n        print(\"YES\")\n    break\n    else:\n        print(\"NO\")", "n = int(input())\nif n % 2!= 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n=int(input())\nif n==1:\n    print('YES')\nelse:\n    print('NO')", "\n#your code here\nfrom math import gcd\nimport math\ninput = input()\n\nif math.floor(math.sqrt(x)) == x:\n    print('YES')\nelse:\n    print('NO')\n"], "281": ["# cook your dish here\nimport math\nn = int(input())\np = 0\nfor i in range(1,n+1):\n    x = int(input())\n    for j in range(1,i+1):\n        if i%j==0:\n            p ^= i%j\n    print(0)\n", "n = int(input())\nprint(1)\nfor i in range(n + 1):\n    if i % 2 == 0 and i % 2 == 1:\n        print(n-i)\n    return\nif n % 2 == 0 and n > 1:\n    print(1+n%2)", "n = int(input())\na = [1,1,1,1,1]\nx = [2,2,2,3,5,6]\nif n == 3:\n    x[1] = 1\nif n == 10:\n    x[2] = 0\nif n == 5:\n    x[3] = 1\nfor i in range(10):\n    x[i] += 1\nprint(x[n-1] - x[i-2])\n", "# cook your dish here\nfor i in range(int(input())):\n    n = int(input())\n    n |= n & 1\n    if n % 2!= 0 :\n        print(2)\n    continue\n    if n & 0x1 == 0:\n        return\n\n    else:\n        return\n\n# your code here\nfor i in range(3, n+1):\n    sum = (n-i)*(1<<i)\n    s = sum - s\n    if sum in (1, 0):\n        continue\n    if s in (1, 0):\n        s += 1\n    else :\n        s += 1\n    for i in range(1, int(input())):\n        i = i & -1\n        if i > 0:\n            s -= 1\n        if s >= 0:\n            s = s - 1\n        s = s + (0<<i)\n        print(s)", "# cook your dish here\nn=int(input())\nans=0\nfor i in range(n):\n    if(n%i==0):\n        ans+=1\nfor j in range(i,n):\n    if(j>0):\n        ans+=1\nprint(ans)", "n = int(input())\nprint((2*(n//3))+3*(n//4))\n"], "282": ["def __starting_point():\n N, M = map(int, input().split())\n A = list(map(int, input().split()))\n c = 1\n for i in range(N - 1):\n  A[i] = a[i] - A[i-1]\n  c += 1\n print(c)\n__starting_point()", "import sys\ninput = sys.stdin.readline\n\nN, M = map(int, input().split())\nC = [1 for i in range(N)]\nL = [[N] * (N + 1) for i in range(N)]\n\nL = list(range(N + 1))\nR = [0 for i in range(N + 1)]\nq = []\nfor i in range(N + 1):\n  q.append([0 if i > 0 else i+1 for i in range(M + 1)] )\nx = [0 for j in range(N + 1)]\n\na = [0 for i in range(N + 1)]\nb = [0 for i in range(N) for i in range(M + 1)]\n\nres = 0\nfor i in range(N):\n    for j in range(M + 1):\n        x[j] = max(x[j], x[i])\n        if x[j] == x[N] - x[M - 1]:\n            res += x[j] - x[M - 1]\n    for j in range(M):\n        if x[j]!= x[M - 1]:\n            x[j] = x[M - 1]\n    res += x[M - 1]\nprint(res)\n", "from sys import stdin\nimport collections\nimport math\nimport sys\nfrom collections import defaultdict as dd\ndef check_neighbor(a,b):\n return list(map(int,input().split()))\ndef find_neighbor(a,b):\n  return map(int,input().split())\n\ndef get_neighbour_set(a,b):\n  if a == b:\n   return False\n  if a == b:\n   return False\n  if a < b:\n   return True\n  b = b\n  if a > b:\n   return False\n  b = find_neighbor(a,b)\n  else:\n   b = find_neighbor(b,a+b)\n  if b < b:\n   return False\n  if check_neighbour_set(b,b+b):\n   return True\n  else:\n   return False\n  \nn,m = list(map(int,input().split()))\ng = sum(a) - sum(b)\nfor i in range(n):\n    a = get_neighbour_set(b)\n    g += count_neighbour_set(a,i)\nprint(g)", "import sys\ninput = sys.stdin.readline\n\nM = int(input())\n\nN, M = map(int, input().split())\na_m = list(map(int, input().split()))\n\n\ncount = (N-1) // 2\n\nprint(count)", "N, M = map(int, input().split())\nA = [[int(x) for x in input().split()] for x in input().split()]\n\nb = [0 for i in range(N)]\nA = sorted(A)\nB = sorted(B)\n\ncount = 0\nwhile count < m:\n    if b[i] not in B:\n        B[i] = b[b[i]]\n        count += 1\n    A[b[i]] += a[a[i]] - b[b[i]]\n    B[b[i]] -= 1\n    count += 1\n\nif b[N] == a[1] and b[1] == b[1]:\n    B[N] -= 1\nprint(count)\n", "N, M = map(int, input().split())\nAD = [i for i in range(N+1)]\nAD[i] = A[0]\nB[0] = B[1] = 0\nif N==1:\n    return 1\nif M==0:\n    N=2\n\nm=M-1\nfor i in range(1,N+1):\n    if A[i]<B[i]:\n        M-=1\n    if N==2:\n        for i in range(M-1,N+1):\n            b-=1\n            A[i]=B[i+1]\n    else:\n        for i in range(M-2,N+1):\n            B[i]=A[i]\n            b-=1\n\nprint(max(DIST[0],disST[M-1]))\n"], "283": ["n, t = map(int, input().split())\nd = {}\nif t%2:\n    print(-1)\n    return\nwhile n>0 and t>0:\n    a, b = list(map(int, input().split()))\n    c = a^b\n    k = k*j\n    if a==b:\n        print(n)\n        break\n    else:\n        print(n-(a%2)))\n", "n,t = map(int, input().split())\ns1 = list(input())\ns2 = list(input())\n\nl = [1 for i in range(n)]\n\nl.sort()\nfor i in range(n):\n    for j in range(n-i-1):\n        if s1[i]!= s2[j]:\n            l[i] = 0\n        else:\n            l[i] = l[i-j-1]\nprint(l)", "t = int(input())\ns = []\nfor i in range(t):\n    n,t = list(map(int,input().split()))\n    s.append(input())\nfor j in range(n):\n    s.append(input())\nif t%2==0:\n    print(\"-1\")\nelse:\n    s.append(input())\nprint(\"\")\n", "n, t = map(int, input().split())\ns = sorted(list(map(int, input().split())))\ns.sort()\nif len(s) == t:\n    print(-1)\nelse:\n    print(s[:t])\n", "n,t=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n    s.append(input())\ns.sort()\nif len(s)!=t:\n    print(-1)\n    else:\n        if s[0]!=s[1]:\n            print(s[0])\n        return\n    else:\n        print(s[0])\n", "\nn, t = list(map(int, input().split()))\nl1 = sorted(set(l1))\nl2 = sorted(set(l2))\nh = []\ng = []\nfor i in range(len(l1)):\n    if l2[i] == l[i+1]:\n        if len(set(l2[i+1]):\n            h.append(i+1)\n        g.append(l1[i])\n    if len(set(l2)) == len(set(l2)):\n        if sum(set(l2)) == n:\n            print(l2[i+1:] + l2[i+2:] + l2[i+1:] + l2[i+2:] + l2[i+2:])\n            else:\n                if sum(set(l2[i+1:i+2])==n:\n                    print(l2[i+1:])\n                else:\n                    print(-1)\n    else:\n        h.append(set(l2[i+1:i+2]))\n    g.append(l2[i+1:])\n    print(-1)\n"], "284": ["import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int,input().split()))\nans = str(sum(a)) +''\nprint('First' if ans.count('Second')<n else 'First')", "n=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n    if a[i]%2==0:\n        l.append(a[i]//2)\n\nprint(\"First\" if l[0]>2 else \"Second\")\n\n", "n = int(input())\na = list(map(int, input().split()))\n\nc = -1\na.sort()\nif len(a) == 1:\n  print('First')\nelse:\n  print('Second')\n\n", "def f(arr, n):\n    a=list(map(int, input().split()))\n    m=max(arr)-1\n    s=(a[n])%m\n    if s%2==0:\n        print('First')\n        else:\n            print('Second')\n    return 1", "# cook your dish here\nn=int(input())\narray=list(map(int,input().split()))\nif n%2==0:\n    print(\"First\")\nelse:\n    print(\"Second\")\n\nn=int(input())\na=list(map(int,input().split()))\n", "from sys import stdin\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\nd = {n: 0}\nl = []\nfor _ in range(n):\n    l.append(list(map(int, stdin.readline().split())))\nc = 0\nfor i in l:\n    if(i%2==0):\n        if(d[i]%2!=0):\n            c+=1\nfor i in d:\n    if(i%2==0):\n        c+=2\n    if(c!=0):\n        c+=1\nprint('First', 'Second')\n"], "285": ["t=int(input())\nif t>n:\n    print(n,t)\nelse:\n    n-=1\n    k=t\n    c=t-x\n    print(n,k)\n    #print(k,n)\nprint(n-(1-k))\n", "a=int(input())\nfor i in range(a-1):\n    a+=1\nprint(a+a,a+a+a-a+a)\n", "n=int(input())\narr=list(map(int,input().split()))\narr.sort()\narr.sort()\nl=[0]*n\na=[0]*n\nfor i in range(1,n+1):\n    if arr[i]>=arr[i-1]:\n        a[i]+=1\n    a[i]=(arr[i]+1)\nprint(a[0],a[0])\nprint(a[0],a[1])", "import sys\n\ninput = sys.stdin.readline\n\ndef n():\n    return int(input())\n\ndef check():\n    print(n+1,n-1)\n\nfrom functools import lru_cache\ndef find_bors(n):\n    res = [i for i in range(n)]\n    r = 0\n    while r < n:\n        r += 1\n        res[r] = n - r\n        r += 1\n    return res\n\n\ndef compute_bors(n):\n    c = find_bors(n-1)\n    if c!= 1:\n        r += c\n    res[c] = c\n    return res\n\ndef is_cyclic(n):\n    n += 1\n    a = find_aors(n)\n    b = find_bors(n)\n    print(n-a,b)\n", "import sys\ninput = sys.stdin.readline\n\ndef main():\n\t\n\tn = int(input())\n\tif n > 2:\n\t\tprint(n,n-1)\n\treturn\n\telse:\n\t\tn = n-2\n\tfor i in range(n):\n\t\tprint(i,n-i-1)", "n=int(input())\na=set(map(int,input().split()))\ni=0\nj=0\nif(n<=1):\n    print(n,0)\nelse:\n    a-=1\n    j=0\n    i+=1\n    print(a-i,j)\n    j=0\n    t=int(n//(a-2)*2-1)\n    print(a,j)"], "286": ["from collections import Counter\nimport sys\nsys.setrecursionlimit(1000000)\nn,c = map(int, input().split())\na = []\nl = list(map(int, input().split()))\nfor i in range(n):\n    a.append([i + 1, c])\nif a[0]<l[-1]:\n    print('Yes')\nelse:\n    print('No')\n\n", "n=int(input())\ny=list(map(int,input().split()))\nfor i in range(n):\n    y.append(int(input()))\nans=[1]\n\nfor i in range(n):\n    y.append(int(input()))\n\nif y==2:\n    for j in range(1,n):\n        for k in range(1,n):\n            if y[i]>y[j]:\n                print('Yes')\n            else:\n                print('No')\n", "import sys\nsys.setrecursionlimit(2000)\nn,y=list(map(int,input().split()))\nd=set([[i] for i in sys.stdin.readline().split()]])\nif len(d)<=n:\n    if y<0:\n        print('No')\n    else:\n        print('Yes')\n        print('No')\n", "from sys import stdin, stdout\nimport sys\ninput=stdin.readline\n# n=int(stdin.readline())\n# k=sorted(map(int, stdin.readline().split()))\n# l=[]\n# r=list(map(int, stdin.readline().split()))\n# n=len(set(l)))\n# a=list(map(int, stdin.readline().split()))\nfor i in range(n):\n    a.append(str(i))\n# if len(a)==n:\n#  print(\"Yes\")\n# elif a[i]!=a[n-1]:\n#   print(\"No\")\n# else:\n#   print(\"No\")\n\n# print(\"\")\n\n# if (n-1,n-2,n-2) in l:\n#   print(\"No\")\n# else:\n#   print(\"Yes\")\n# else:\n#   print(\"No\")\n", "n = int(input())\ns = [0] * n\ny = list(map(int, input().split()))\nfor x in range(n):\n    if s[x]!= y[x] and s[x]!= y[x]:\n        s.append(x)\nprint('Yes')", "from collections import defaultdict\nfrom math import floor, sqrt\nfrom sys import stdin\n#_sys = stdin.readline\nn = int(input())\ny = list(map(int, input().split()))\nx = x.count(\"x\")\nif y[x] >= y[x[-1]] and x[-2] >= y[x[1]] and y[x[2]] > y[x[-1]]:\n    print(\"Yes\")\n    else:\n        print(\"No\")"], "287": ["n=int(input())\ni=0\nfor j in range(n):\n    i+=len(input())\n    print(i)\n", "N = int(input())\nT = len(input())\nfor i in range(T):\n    p = input().split()\n    y = int(p[0])\n    for j in range(x):\n        y = int(p[j])\n        if y < t:\n            print(i)\n    else:\n        print(0)", "N = int(input())\nS = list(map(int,input().split()))\nt = set(t)\n\nfor i in range(N):\n\tn = int(input())\n\tl = s[::-1]\n\ta,b = map(int,input().split())\n\tif a == b:\n\t\t print(i,end=\"\")\n\t\t else:\n\t\t\t print(i,end=\"\")\n\t\t\t\n\ts.sort(key=lambda x: int(x))\n\t\t print(0,end=\"\")\n\t\t\n\tr = sum(s)\n\t\t\n\tprint(max(r,r))", "n = int(input())\np = []\nfor _ in range(n):\n    p.append(input())\nprint(0)\n", "n=int(input())\ni=0\nfor j in range(n):\n    i=int(input())\n    while i<len(i):\n        for j in range(i+1,len(i)):\n            i=i+1\n        print(i,end=\"\")\n            i=i+1", "n = int(input())\nans = 0\nfor i in range(n):\n    print(ans)\n"], "288": ["# cook your dish here\nint x = int(input())\nif x > 10**18:\n    print(10-9)\nelse:\n    print(10+9-10)\n", "import sys\ninput = sys.stdin.readline\n\nfor i in range(11):\n    x = int(input())\n    result = int(9-int(input()))\n    if (result < 0):\n        print(9)\n    else:\n        result = min(result, 9-int(input()))\n    print(result)", "n = int(input())\na = str(n)\nm = 'abcdefghijklmnopqrstuvwxyz'\nwhile (a<=len(b)):\n    a = b-str(a)\n    if a == '0':\n        print('0')\n    else:\n        print(n - '9' * m)\n    break\n", "n=int(input())\nfor i in range(n):\n    i=str(i)\n    if(i!=0):\n        for j in range(10):\n            ans=10 - i-(9-i)\n            i=0\n            j=10-i\n        ans=int(ans)\n    print(ans)\n", "import sys\ninput = sys.stdin.readline\n\nx = int(input())\nx = int(x)\nprint(max(x, x) - x[::-1])", "for i in range(int(input())):\n    int_a = input()\n    if int_a==int(i)**0.5:\n        print(int_a*(10**9))\n    elif int_a>=9:\n        print(int_a*(10**9))\n    elif int_a==int_a*5:\n        print(int_a*(10**18)-int_a)\n    else:\n        print(int_a*(10**18)+int_a*(10**18))\n"], "289": ["l, r, k = map(int, input().split())\nif l == 0:\n    print(-1)\n    if r == 0:\n        print(-1)\n    return\na = []\nb = []\nif l == 1:\n    print(k)\nelse:\n    print(a[k])\n", "l, r, k=list(map(int, input().split()))\nif l==r and k==0:\n    print(-1)\n    else:\n        for i in range(l,r,k):\n            if i == l or i > r:\n                break\n            if i <= k:\n                break\n        print(r*k)\n\nelse:\n    print(-1)\n", "l, r, k = map(int, input().split())\nl2,r2 = l, r\nk = k * 10 + 9\nprint(r2-k) if l2<=r or k<0 or k>=r2 else \"-1\"", "l,r,k=map(int,input().split())\n\nlist = []\n\nif k%2==0 or k%2==0:\n    print(n)\nelse:\n    for i in range(l,r+1,2):\n        if i<=k:\n            print(-1)\n        else:\n            break\n    for i in range(l-k+1,r+1,k):\n        list.append(i)\n    print(k)\n", "l,r,k=map(int,input().split())\nif l==r:\n    print(-1)\nelse:\n    print(int(l**(2+k)/2))", "l,r,k=map(int,input().split())\nif l<=r<k:\n    print(-1)\n    else:\n        print(2**(l-k))\n"], "290": ["import sys\nn,m,k = map(int,input().split())\nA = list(map(int,input().split()))\nA = sum([A[-1]%998244353 for _ in range(n + 1)])%1000000007\nprint(A%(pow(998244353,N + 1)//(K + 1))", "n,m,k=map(int,input().split())\nr=[0 for i in range(n)]\ndp=[2 for i in range(n+1)]\nfor i in range(1,n+1):\n    if((i>0 and i%i<=1) and i%i==0):\n        dp[i-1][i]=((dp[i-1][i-1]-1)%1000000007)%1000000007\n        r=r%1000000007\nfor i in range(n+1):\n    print(dp[i])%998244353", "import math\nn,m,k=list(map(int,input().split()))\nmod=pow(10,998244353)\nmod=(998244353)\nif(n==0):\n    print(0)\nelse:\n    print(math.factorial(math.log(n,2))%mod)", "n,m,k = map(int,input().split())\nprint(n*(m+1)*(m+1))", "# cook your dish here\nN, M, K = map(int, input().split())\nN,M, K = map(int, input().split())\nN,M,K = N, M, K, N * 3\nMOD = 998244353\n\nN, K = M, K\nN = M // 2 + 2 * N + 2 * N - 1\nN = n * N + 1\nL = 0\nL = N - 1\nm_c = 0\n\nfor _ in range(N):\n N = N * m + 1\n count = (2 * N) % MOD\n if K > 0:\n  count *= 2\n if N <= 1:\n   break\n print(count % MOD)\n else:\n  print(count)", "N, M, K = map(int, input().split())\n\nans = 0\nfor i in range(1, N + 1):\n    ans += pow(10, i * K, K) % 998244353\n    print(ans % 1000000007)"], "291": ["from itertools import groupby\n\nfrom math import log, ceil, log2, gcd\nfrom functools import lru_cache\n\ndef main():\n    n = int(input())\n    b = [0]*(n+1)\n    while b[0] % n >= 1:\n        b.pop()\n    k = 0\n    while len(b) < n - k:\n        k += 1\n        b = b[k] % n\n    return b\np = int(input())\na = sorted(list(map(int, input().split())))\nq = []\nr = []\nfor _ in range(1, 2 * p - 1):\n    q.append(min(p, q[0]) + (n + 1) * (k + 1) % p)\n    if q[0] & (n - k)!= 0:\n        l = j = p - q[0] & q[0]\n        if j > r:\n            l += j\n    r = p - q[1] // q[1]\n    q[0] += j\nprint(l,r,q)\n\ndef __starting_point():\n    main()\n__starting_point()", "import math\n\ndef solve(a, p):\n    m = 1 << (len(a) - 1)\n    c = 1\n    def lcm(n, p):\n        n = len(a)\n        if n == 0:\n            return 1\n        return int((n**.5 + (1 << p))) - 2 * m % p\n        if n % p!= 0 :\n            return 0\n        if p == 1:\n            m = 0\n            else:\n                m = p\n            lcm = (p - 1) // 2 + 1\n            s = p - 1\n            for i in range(p-1):\n                if lcm == i:\n                    continue\n                else:\n                    continue\n                a[i] = lcm + (1 << i)\n                lcm += 1\n            if n % p == 0:\n                s = c\n                c = c * (m - 1) % p\n        print(a[0:0], s, f = f)\n\ndef __starting_point():\n    main()\n__starting_point()", "import math\na = list(map(int, input().split()))\nfor i in range(2, int(math.sqrt(a[i]))+1, 2):\n    a[i] = 2**(a[i] - 1) + a[i-2]\n\nprint(math.sqrt(p))", "from collections import defaultdict\nfrom sys import stdin, stdout, stdout\nimport heapq\ndef solve(p, n):\n if not n: return 0\n if p == 2: return (1, 1)\n else:\n  a = sorted(map(int, stdin.readline().split()))\n  p = 2\n  for i in range(1,p+1):\n    f = 2*n//i\n    while a:\n      f = b=0\n      b=1\n    while b==0:\n      f *= 2\n      f = f*(n-b)//2\n      break\n  a=a+a+b\n  a=a*a\n  a=a%p\n  print(f)\nfor i in range(1,p):\n    a=a+list(map(int, stdin.readline().split()))\n    b=1\n    print(b,b,a,a)\nfor i in range(0,2*p):\n    print(a,a,a[i],a[i])", "p=int(input())\na=list(map(int,input().split()))\nb=[0]*p\nb.append(0)\na.sort()\n\nfor i in range(1,p):\n    a[i]+=1\nfor i in range(1,p-2):\n    if a[i]*(i>p):\n        b[i] = b[i-1]\n    else:\n        for j in range(i-1,-1,-1):\n            for k in range(i-j,-1,-1):\n                if a[i*k]==i:\n                    b[i]=b[j*k]*a[i-k*k]\n    b[i]=b[i]*b[i-k*k]\nprint(b[:p-1],b[-1])\n", "p, k, b = map(int, input().split())\n\nb = set([0]) * (p+1)\nfor i in range(2, k+1):\n    a_i, b_i = list(map(int, input().split()))\n    if a_i in b:\n        b_i += b[a_i]\n    b_i += b[p]\nprint(0, b, b, b, b)"], "292": ["r,c=map(int,input().split())\n\nwhile(r>0):\n    r-=1\n    c-=1\n    r*=2\n    c-=1\n    print(c+r-r)\n", "r, c = input().split(\" \")\ni, j = input().split(\" \")\na, b = 0,0\na = [0] * (r + 1)\nb = [0] * (c + 1)\nif a[0] == \".\":\n    b[i] = b[i + 1]\nif b[-1] == \".\":\n    a[i] = a[i] + 1\nif a[-1] == \"S\":\n    a[j] = a[i] + 1\nelse:\n    a[j] = b+1\nprint(a.count(r))\n", "# cook your dish here\nr,c=map(int,input().split())\nprint(max(map(int,input().split())))", "r,c = list(map(int, input().split()))\nl = list(map(int, input().split()))\nl.sort()\nans = 0\nfor i in range(0,r):\n for j in range(0,c):\n  if l[i] == \".\":\n   ans += 1\n print(ans)\n", "r,c=map(int,input().split())\ns=0\nfor i in range(1,r+1):\n  for j in range(1,c+1):\n   if s+str()[-1]==\"S\":\n    s+=1\nprint(s)", "t,l=list(map(int,input().split()))\nfor i in range(0,t):\n    c,r=map(int,input().split())\n    t=l[0]\n    d=(l[1]-1)//c\n    if t[c-1]=='S' and r<=r:\n        d+=1\n    else:\n        d+=1\nprint(d)"], "293": ["n=int(input())\nl=list(map(int,input().split()))\nl.sort()\nl[0]=0\nl[1]=1\nl[2]=1\nfor i in range(1,n):\n    l.append((l[i]+l[0]-l[i-1])%2)\nl[1]=l[i]-1\nl[2]=r[i]\nif not l==l:\nfor i in range(1,n):\n    print(\"YES\")\nprint(\"NO\")\n\n\n", "n = int(input())\nd = [0,-1,1]\na,b = list(map(int,input().split()))\nif d[a]==b:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "# cook your dish here\nn = int(input())\n\nl = list(map(int,input().split()))\ni = 2\nj = len(l)-1\nfor l in range(i,j):\n  if l[j] <= r[i]:\n   j = i\n   \n   if j - i > 0:\n    print(\"YES\")\n    else:\n     if (l[j], r[i]) == l[j]:\n     print(\"NO\")\n     i += 1\n  \n", "for _ in range(int(input())):\n    l,r=map(int,input().split())\n    l.sort()\n    for i in range(2,r):\n        l[i] = 0\n        l[i+1] = l[-1]\n        if l[i] == r[-1]:\n            print(\"YES\")\n        else:\n            print(\"NO\")", "# cook your dish here\nfor _ in range(int(input())):\n    l,r = map(int, input().split())\n    t1 = l - 1\n    t2 = r - 1\n    if t2 > t1:\n        print(\"YES\")\n    elif t1 == t2:\n        print(\"NO\")\n    else:\n        print(\"NO\")\n", "n=int(input())\nl,r=list(map(int,input().split()))\na=[0]*n\na[1]=l\nfor i in range(n):\n if a[i]>r[i]:\n  a[i]=1\nelif l[i]==r[i]:\n  a[i]=0\nelif l[i]<r[i]:\n  a[i]=1\nelif r[i]<l[i]:\nelif r[i]==l[i]:\nelif l[i]<r[i]:\nelif l[i]==r[i]:\nelif l[i]==r[i]:\nelif r[i]==r[i]:\nelif l[i]==l[i]:\nelif r[i]==l[i]:\nelif r[i]==l[i]:\nelif l[i]==l[i]:\nelif r[i]==l[i]:\nelif l[i]==l[i]:\nelif l[i]==r[i]:\nelif r[i]==r[i]:\nelif l[i]==r[i]:\nelif l[i]==l[i]:\n  l[i]=0\nprint(\"YES\")\nelse:\n print(\"NO\")"], "294": ["n, s = map(int, input().split())\na = list(map(int, input().split()))\n\nprint('YES' if a[0] + a[1] > s else 'NO')", "n,s=list(map(int,input().split()))\na=list(map(int,input().split()))\nif s==1:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "import sys\ninput = sys.stdin.readline\nn, s = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = (a[0] + a[1] * s) // 2\nif c > 0:\n  print(\"YES\")\nelse:\n  print(\"NO\")\n\n\n\n\n\n\n\n\n\n\nn, s = map(int, input().split())\n\nA = list(map(int, input().split()))\n\nif n == s:\n    print(\"NO\")\n\nelse:\n    print(\"YES\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "n, s = map(int, input().split())\n\nA = list(map(int, input().split()))\ncup = A[0]\nmus = [A[0] for _ in range(n)]\ng = 0\nfor i in range(1, n):\n    v = A[i]\n    if v * v > cup:\n        g += 1\n    if g % 1 == 0:\n        print(\"YES\")\n    else:\n        if g % 1 == 0:\n            print(\"NO\")\n        else:\n            print(\"YES\")\n    else:\n        print(\"NO\")", "n,s=map(int,input().split())\nx=[int(i) for i in input().split()]\ny=0\nfor i in range(n-1):\n    y*=a[i]\nprint(\"YES\")\n", "# cook your dish here\nn,s=list(map(int,input().split()))\na=list(map(int,input().split()))\nif len(a)<=1:\n    print(\"YES\")\nelif n<2:\n    print(\"NO\")\nelse:\n    print(\"YES\")\nprint(\"NO\")"], "295": ["import sys\n\nr,g,b=map(int,input().split())\nprint(1+r+g+b)", "r,g,b=map(int,input().split())\nt=0\nwhile t<3:\n    r,g,b=list(map(int,input().split()))\n    if r==0 or g==0 or b==0:\n        t+=1\n    print(t)\n    t+=2\n\n    else:\n        b=0\n    t=t+1\n    \nprint(t)\n", "# cook your dish here\nr,g,b = list(map(int,input().split()))\nr,g,b=map(int,input().split())\nn=int(r)*2\nprint(n)", "r, g, b = map(int, input().split())\nans = 0\nfor i in range(4):\n    r = r.replace('b', '')\n    g = g.replace('r', '')\n    b = b.replace('g', '')\n    if(g.count('b')>2):\n        ans += 1\n    print(ans)\n", "import sys\nsys.setrecursionlimit(1000000)\n\n\nr,g,b=map(int,input().split())\n\ndef find_max(a):\n    return max(find_max(r), find_max(g), find_max(b))", "r, g, b = map(int, input().split())\nres = 0\nn = (r*(g+b)/2)\nfor i in range(n-3):\n  if (i == 'r' or i == 'g' or i == 'b' or i == 'g' or i == 'b' or i == 'r' or i == 'g' or i == 'b' or i == 'b'):\n   res += 1\nprint(res)"], "296": ["N = int(input())\nN = n + 1\na = [[0 for i in range(N)] for j in range(N)]\n\ns = [[0 for i in range(N)] for j in range(3)]\n\n\ns[0][0] = a[0][1] = 0\nfor i in range(3, N-1, -1):\n    s[i][i] = s[i+1][i] + a[i][j]\n\nfor i in range(3, n+1):\n    m = ((6 - (6 - 1)) * (i + 3)) % 1000000007\n    if s[i][0] == s[i+3]:\n        m[i][1] = m[i][1] - m[i+3][0]\n    elif m[i][0] == s[i][1]:\n        m[i][1] = m[i+3][1]\n    m[i][2] = m[i+3][0] - m[i-3][2]\n    else:\n        m[i][2] = m[i+3][2]\nprint(m[n][n][n])", "import math\nimport sys\nimport math\nfrom itertools import combinations\n\nfor i in range(1, int(input())):\n    num = list(map(int, input().split()))\n    ans = 0\n    for j in range(3, int(math.sqrt(num**0.5)+1):\n        if j % 3 == 0:\n            ans += num[0] * num[j]\n    else:\n        ans %= 10**9 + 7\n\nprint(ans)", "n = int(input())\n\nmod = 10**9+7\n\ndp = [[0 for _ in range(3)] for _ in range(n + 1)]\ndp2 = [0 for _ in range(3)]\ndp = [2 * (3 * n + 1) for _ in range(3 * n + 1)]\n\n#print(dp)\nfor i in range(1,n + 2):\n    dp2[i][1] = 1\n\n#print(dp2)\n#print(dp2)\n\nans = dp2[0]\n#print(dp2)\n\n#print(dp2)\n\n\n#print(dp2)\n\ndef get_num_of_candidates(n):\n    n = get_num_of_candidates(n)\n    if n < 3:\n        return 1\n    return dp2[n]\n\nfor i in range(1,n+2):\n    if i == 0:\n        return 1\n\n    for j in range(3,n+2):\n        ans = ans%mod\n        break\n    dp1, dp2 = get_num_of_candidates(n-i)\n    print(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nn = int(input())\n\ng = [0]\nwhile n > 1:\n    x = n - 1\n    g[x] = 2**n\n    g[x] = 3**x\n    k = 2**(k-1)\n    b = n - 3**x\n    if k <= 2:\n        d = 8**x\n    else:\n        d = 9**x\n    p = b // g\n    p = p % g\n    b = k % g\n    print((p-p)*(a - 2)) % g", "import sys\ninput = sys.stdin.readline\n\nmod = 10 ** 9 + 7\n\ndef solve(n):\n    while n > 0:\n        n //=3\n        a = int(n*n*n)\n        b = int(n*n)\n        return a%mod\n    \ndef solve():\n    if n > 3:\n        return 0\n    i = 0\n    while i < 3:\n        if n % i == 0:\n            return 1\n        i += 1\n        if n % i == 1:\n            return 1\n        else:\n            return 1\n    \n    ans = solve()\n    print(ans%mod)", "import sys\ninput = sys.stdin.readline\n\n#print(input)\n\ntry:\n    n = int(input())\n    res = 0\n    for i in range(3):\n        res += (2 * n - i) % (10 ** 9 + 7)\n        print(res)\nexcept:\n    pass"], "297": ["n = int(input())\ns = []\nfor i in range(n):\n    l = input()\n    #print(l)\n    s.append(l[0])\n    #print(s)\n    if s[-1]!=l[0]:\n        s.append(l[0])\n    #print(s[-1])\n    if len(s)==1:\n        print(0)\n    else:\n        if len(s)==2:\n            print(-1)\n        else:\n            print(len(s)-2)", "for i in range(int(input())):\n    a = input()\n    h = []\n    s = list(input())\n    a.append(i)\n    s[0] = ''\n    for j in range(1, n-1):\n        if a[-j] not in s:\n            s[j] = \"\"\n            break\n    if s[0] == '':\n        h.append(0)\n    else:\n        h.append('')\n    h = ['a','a']\n    h.sort()\n    s = ''\n    for i in h:\n        if i not in s:\n            s = i\n            s = s[i::-1]\n    print(len(h))", "n = int(input())\ns = input()\nn-=1\nif n==0:\n if s==s:\n  return -1\n else:\n  s+=1\n  if len(set(s))==2:\n   print(0)\n  else:\n   print(0)\n else:\n  n-=2\n print(len(set(s)))\n", "def countS(s, p):\n    print((0,(s-p-1),p-1))\n    while (0<p<len(s)<len(s) and s[p]!=s[p+1]):\n        p+=1\n    return -1\ninput()\na=input()\nb=input()\nwhile len(b)>0:\n    k=len(b)\n    b.append(k)\n    if (a.count(b))<r:\n        b.count(a)\n        continue\n    else:\n        if (s[k],b.count(b))>r:\n        b.count(b)\n        continue\n    else:\n        b.count(b)\n        c=0\n        if s[k]!=c:\n            b=c\n            print(j-k-1)\n        else:\n            if (c==b.count(b)-r)%len(b)==1):\n                a.count(b)\n                b.count(a)\n                b.count(b)-r.count(a)\n            #print(b)\n            #print('a')\n            if (c>=b.count()):\n                print(0,a.count(b.count(b.count(b.count(a))%len(b.count(b)))//len(b))%len(b)):\n                a.count(b.count(b))\n                b.count(a)\n                c+=1\n            else:\n                print(-1,a.count(b))\n                a = c+1\n        if c==a.count(b):\n            return 0\n        return -", "n = int(input())\na = input()\nb = [0] * (n + 1)\nx = 0\nwhile(True):\n l = input()\n l.append(len(l) - 1)\n r = len(a[0])\n d = []\n while(l < r):\n  l = l + 1\n  d.append(1)\n  r = l\n print(min(a[0],b[0]))\n if(r < n):\n  print(-1)\n else:\n  break\n l = l - 1\n ans = 0\n for i in range(l, 0, -1):\n  ans += i\n  t = i\n  if(len(t) > 2) or (len(t) < 2):\n   print(len(t) - 2)\n  break\n else:\n  print(len(t) - 2)", "from collections import defaultdict, Counter\nfrom math import sqrt\nn = int(input())\ns = []\n\nl = list(map(str, input().split()))\nc = Counter(s)\nfor i in range(len(l)):\n    if s[i] not in c:\n        c[s[i]] -= 1\nif c[s[i]]==0:\n    print(-1)\n else:\n    print(c[s[i]]-2)"], "298": ["a,b=map(int,input().split())\nt=list(map(int,input().split()))\nd=len(d)-1\nwhile(d>=1):\n    m=a%m\n    d-=a\n    print(b,m)", "# cook your dish here\na,b=list(map(int,input().split()))\n\nprint(\"Valera\u2019\")", "a, b = map(int, input().split())\nprint( \"Valera\u2019s\")", "# cook your dish here\na,b = map(int,input().split())\nans = 1\nfor i in range(0,a+1):\n    if i == b:\n        ans = a + 1\n    else:\n        ans = a + b\n    print(ans)", "import sys\ndef main():\n    a,b=map(int,input().split())\n    if a>b:\n        print(\"Valera\u2019\")\n    else:\n        print(\"Vladik\")", "a,b=map(int,input().split())\n#print (a, b)\n\nfor i in range(b):\n    a,b=map(int,input().split())\n    print(\"Valera\u2019\" if a%b==0 else \"Vladik\")"], "299": ["# cook your dish here\nfrom sys import stdin, stdout\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\nl = list(map(int, stdin.readline().split()))\n\ns = 0\nfor i in range(n):\n\ts += (l[i]//2)\n\ts += 1\n\tprint(s)\n", "n = int(input())\na = list(map(int,input().split()))\nt = [int(a[0]):x for x in input().split()]\nf = 0\nfor i in range(1,n):\n    if a[i] == 2:\n        f = f + 1\n    else:\n        f = f + 2\nfor i in range(n-f):\n    if a[i] == 2:\n        f += 1\nif f == 0:\n    print(0)\nelse:\n    print(f + 3)", "n = int(input())\na = list(map(int, input().split()))\ns = 0\nans = 0\nfor i in range(1,n):\n    if a[i]%2==0:\n        if a[i]==1:\n            if a[i]%2==0:\n                ans += a[i]\n            else:\n                s += a[i]\n            ans += a[i]\nfor i in range(n-2):\n    print(ans)\n", "n = int(input())\narr = [int(x) for x in input().split()]\ncount = 0\nfor i in range(n - 1):\n    if arr[i] == 2:\n        count = 1 + count\n    else:\n        count += 1\nprint(count)\n\n", "n = int(input())\ns = sorted(map(int, input().split()))\nprint(max(s.count('1'))+min(s.count('2'))+max(s.count('2'))\n", "n=int(input())\na=[int(i) for i in input().split()]\nif n<4:\n    print(0)\nelif n==3:\n    print(2*n)\nelse:\n    print(3)"], "300": ["import math\nfrom sys import stdin\ndef main():\n    num1, num2 = map(int, stdin.readline().split())\n    x1, y1, x2, y2 = map(int, stdin.readline().split())\n    l = [i*2 for i in range(2*len(x1))]\n    l2 = [[0 for i in range(2*len(l2))] for i in range(2*len(l2))]\n    if x1 in l2 and x1 in l2 and y1 in l2:\n        ans = 1 + l2[(x1-x2)%2] + 1\n        else:\n            ans += l2[(x1-x2)]\n    print(ans)", "import sys\n\ndef main():\n\treturn sys.stdin.readline().strip()\n\n\nimport math\n\nn= int(input())\nans=0\na=list(map(int,input().split()))\np=0\nd=[]\na.sort()\nb=list(map(int,input().split()))\nfor x1,y1,x2 in a:\n\tif (x1<=x2 and y1<=y2):\n\t\t\tp=x1+x2\n\t\t\tp=x1+x2\n\t\t\td.append(p)\n\telif (x1<=x2 and y1<=y2):\n\t\t\t\tp=0\n\t\t\t\tp+=1\n\t\t\t\telse:\n\t\t\t\tp+=1\n\tprint(p)", "import sys\nfrom math import sqrt\nx1, y1, x2, y2=map(int,input().split())\nc,v=0,0\nfor i in range(1,len(sys.stdin)):\n\tif sys.stdin.readline()==\"x\":\n\t\t\tr=1\n\t\t\tc+=1\n\tif r:\n\t\tv+=1\n\t\t\tif c>x:\n\t\t\tr=x\n\t\t\tfor i in range(i+1,len(sys.stdin)):\n\t\t\t\tif c==(x1-x2)*y1+(y1-y2)*y2:\n\t\t\t\tv+=1\n\t\t\t\tprint(v)", "import math\n\nA,B,C=map(int,input().split())\nI=0\ndef is_square(x1,B):\n    for i in range(C):\n        x1,B=A[i]\n        if is_square(x1):\n            return False\n        if is_square(x2):\n            return False\n        C=sum(B)\n        if (x1<0 and x2<0 and y1>0 and y2<0):\n            return False\n        for i in range(C):\n            if (x2-i,i):\n                A+=1\n            return True\n        else:\n            A+=1\n        i=0\n    while i<C and is_square(i):\n            x1,y1,x2,y2=map(int,input().split())\n        for i in range(C):\n            x1,y1,y2=map(int,input().split())\n            print(A-(y1-y2)))\n    i+=1\nfor i in range(C):\n    if i+i+1 < C and is_square(i):\n        print(i+i+(x2-i))\n    else:\n        print(i+(x1-i)*1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\ninput = sys.stdin.readline\nx1, y1, x2, y2 = list(map(int, input().split()))\nans = 0\nfor i in range(0, len(x1)):\n    x2, y2 = x1 + i\n    for j in range(len(x2)):\n        if y2 == 0:\n            continue\n        elif y1 > x2:\n            continue\n        elif y2 > y1:\n            continue\n        if x2 % 2 == 0:\n            ans += 1\n        elif (y1 % 2!= 0):\n            ans += 1\n    print(ans)\n", "x1, y1, x2, y2 = map(int, input().split())\nprint(len(set(map(lambda x: y1 + x2, x2, y1 + y2))))"], "301": ["n = int(input())\na = list(map(int, input().split()))\nprint(max(sum(a), key=lambda x:min(a), reverse=True))", "# cook your dish here\nn = int(input())\na = list(map(int, input().split()))\nr = []\nfor _ in range(n):\n    m = int(input())\n    if m > r:\n        r += 1\n    else:\n        m = m\n        print(int(m))", "# cook your dish here\nn=int(input())\nA=[int(x) for x in input().split()]\n\na=a[::-1]\nd=2\nfor i in range(1,n):\n    a[i]=a[i-1]%d\n    for j in range(2,n):\n        a[i]=a[i]+a[j-1]//d\n    x=max(A[i],b%a[j]%a[i])\n    d=a[i]%a[j]\n    if d>0:\n        print(d//d)\n    else:\n        y=max(A[i],b%a[j])\n    print(y)", "# cook your dish here\nn=int(input())\na=list(map(int, input().split()))\nres = []\nl=list(map(int, input().split()))\nans.append(min(l))\nd=[]\ni=0\nj=0\nwhile j<len(a) or a[j]%a[i]:\n    d.append(j)\n    j+=1\nelif i==j:\n    ans.append(a[i])\nelif i==j:\n    j=i+1\nelif j<len(a) or a[j]==a[i]:\n    j=j\nelif i%2==0:\n    ans.append(a[j])\nelif i%2==1:\n    ans.append(a[j])\nelif i%3==1:\n    ans.append(a[j])\nelif j%4==0:\n    ans.append(a[j])\nelif i%5==2:\n    ans.append(a[j])\nelif j%5==0:\n    ans.append(a[j])\nelse:\n    ans.append(a[j])\nprint(ans[-1])\n", "n=int(input())\na=[int(x) for x in input().split()]\na.sort()\nprint(max(max(a), len(a))-1)", "n = int(input())\narr = list(map(int, input().split()))\nl = l[::-1]\nif l[0] % l[1] == 0 :\n    l = l[1:]\n    break\ndef solve(l):\n    ans, i, j = 0, 0, 0\n    for x in l[::-1]:\n        if x % x == 0:\n            ans += x\n            j += 1\n    return ans\ndef main():\n    a = map(int, input().split())\n    return process()\n\n\n\nl = [int(x) for x in input().split()]\nfor i in range(len(l)):\n    l[i] = -l[i-1]\n    for j in range(len(l)-1, -1, -1):\n        r = l[j] + l[i] - l[j+1]\n    r = r + l[j] - l[i]\n    solve(l[i:j]+l[i:j+1])\n\n\n"], "302": ["n=int(input())\ninput=stdin.readline\nx=0\ny=0\nfor i in range(n):\n    x+=1\n    y=n-i\n    print(0)\n", "n=int(input())\na=[0]*(n+1)\ns=0\ns1=1\ns2=1\ns1=1\na2=2\ns2=1\nfor i in range(n-1):\n    s=s+i\n    s=s+s2\nprint(s)\n", "n = int(input())\nd = [set(map(int, input().split()))]\nb = [list(map(int, input().split()))]\nfor i in range(n-1):\n    d[d[i]] = 1\nfor i in range(n-2, 0, -1):\n    v = sorted(d[i] for i in range(i+1))\n    a = b[:v] + d[v-1]\n    l = len(d)\n    while l < r:\n        if a[l] == d[r]:\n            l = d[r]\n            else:\n                r += 1\nprint(max(d))", "from collections import defaultdict\nfrom collections import deque\n\nn = int(input())\nd = defaultdict(set)\n\nans = 0\nb = deque([(1, -1), (1, 1, -1))])\nd[0].add((1, 0) )\nfor i in range(n-1):\n    while len(d[i]) > 0:\n        d[i].add((1, -1))\n        d[i].add((1, 1), i))\n        d[i].add((-1, -1))\n\nif d[0] == 0:\n    ans += d[0]\nelse:\n    ans += d[0]\nprint(ans)", "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\na[0][1] = 0\na[1][0] = 1\na[0][2] = 1\n\nb = list(map(int, input().split()))\n\nb = list(map(int, input().split()))\n\nd = defaultdict(list)\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[j][1] == a[i]:\n            d[i][j].append(i+1)\n        else:\n            d[i][j].append(i+1)\n\nans = [0] * n\nfor i in range(n):\n    ans[i][j] = max(ans[i-1][j],max(ans[i][j]),max(ans[i][j]),max(ans[i][j-1]),i+1)\nprint(ans)\n", "def main():\n    n = int(input())\n    # input = input()\n    #  n = int(input())\n    #\n    # n_vertices = int(input())\n    #\n    # x, y = list(map(int, input().split()))\n    #\n    #\n    x = list(map(int, input().split()))\n    #\n    if n <= 1:\n        return 1\n    #\n    #\n    for i in range(n - 1):\n        #     x.append(y[i])\n        #     y.append(x[i-1])\n    #\n    #     x.append(x[i+1])\n    #\n    #\n    #print(x[x])\n    #\n    #print(y[i])\n    #\n    for i in range(n - 1):\n        #     print((a[i], a[i+1]))\n\n    #print((a[i], a[i+1]) + ((a[i]+1) + ((b[i]+1)) + ((a[i]+1)) + ((b[i] == a[i+1]) + (a[i] == b[i]))\n    #print(x)\n    print((x, x[i]))\n\n\nn, x = list(map(int, input().split()))\n    A = dict()\n    for i in range(n):\n        A[i][0] = i\n        x[i][1] = x[i+1] + 1\n        A[i][1] = max(A[i][1], A[i-1][0])\n        A[i][1] = max(A[i][1],"], "303": ["import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int,input().split()))\na[0] = 1\nn = int(input())\nt = input()\nif t % n == 0:\n    l = list(map(int,input().split()))\n    n -= n\n    if n == 0:\n        print(0)\n    elif n == 0:\n        print(0)\nelse:\n    t += t\n    l.sort()\n    l.sort(reverse = True)\n    print(l[0])\n    \n", "n=int(input())\nl=list(map(int,input().split()))\nfor i in l:\n    l[i]-=1\nprint(min(i-1),end=' ')", "import sys\ninput = sys.stdin.readline\n\n\ndef count_by_int_s(a):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    res = l[0]\n    for i in range(n):\n        l[i] = l[i+1] + a[i]\n    if l[i] == l[n - 1]:\n        res = 0\n    else:\n        break\n    print(res)\n\nfor _ in range(int(input())):\n    a = list(map(int, input().split()))\n    c = (a[0] + b) // c\n    print(min(k_by_int_s(a, c))", "from sys import stdin\nimport math\nfrom collections import defaultdict\nN = int(input())\na = list(map(int, input().split()))\nt = int(input())\nn = math.ceil(min(A))\nm = 5\nb = [a[0] for a in range(1, n+1)]\nif len(a) < n+b[0]:\n    print(0)\nelse:\n    print(min(A[n:n+b[0]))\n", "n=int(input())\n\na=list(map(int,input().split()))\nl=list(map(int,input().split()))\np=a[0]\ndp=0\nfor i in range(1,len(a)):\n    d=a[i]*l[i-1]\n    if c==0:\n        m=m+l[i-1]\n        dp=dp+m\n        m+=l[i-1]\n    if p>=n:\n        m+=l[i-1]\n        print(m)\n", "# cook your dish here\nimport math\nn=int(input())\n\na=list(map(int,input().split()))\nfor i in range(n-1):\n    s=a[i]\n    l=a[i+1]\n    l1=l[i]\n    l1=max(l1,s)\n    print(l1)"], "304": ["n,k = list(map(int, input().split()))\nans = 0\n\nfor i in range(n):\n    a=[]\n    while a:\n        c=a.pop(0)\n        a.append(c)\n        c+=1\n    a=list(a)\n    a.sort()\n    if a[-1] == 0:\n        if a[-1]!= 2:\n            a.append(a[-1])\n    ans = ans%998244353\n    else:\n        if a[-1] == 1:\n            ans = ans*2\n        else:\n            ans = ans*2\n    print(ans)", "def main():\n    n,k=list(map(int,input().split()))\n    s=[]\n    for i in range(n):\n        if(n%i==0):\n            s.append((i,k))\n        else:\n            s.append((i,k))\n    print(sum(s))\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef __starting_point():\n    main()\n\n\n\n\ndef __starting_point():\n    __starting_point()", "from sys import stdin\ndef main():\n    return sys.stdin.readline().split()\n\n# Read the input and return the count of best colorings.\nn,k = int(stdin.readline())\nx = 1\ny = 1\nd = {}\nfor i in range(n):\n    d[x*k] = 1\n    while y < n:\n        ans = max(ans,d[y] + 1) % 1000000007\n        y += 1\n\n    print(ans)\n\ndef isColor(n):\n    print(1)\n\ndef checkColor(n):\n    for k in range(n):\n        if n % k!= 0:\n            print(0)\n        elif n%k == 0:\n            print(2)\n            else:\n                ans += pow(2, k, pow(n, k, pow(2, k, pow(2, k, pow(n, k, pow(2, k, pow(2, k), pow(2, k, pow(2, k, pow(2, k, pow(2, k) - 1), pow(2, k, pow(1, k), pow(2, k)) - 1))\n        return True\n        \ndef __starting_point():\n    main()\n\n__starting_point()", "n, k = map(int, input().split())\nans = 0\n\nfor _ in range(n):\n    d = [n**2] * k\n    c = 0\n    for i in range(1, k):\n        for j in range(n):\n            c ^= d[i - 1]\n            c += 1\n            c = 0\n            if i > 0:\n                c += d[i - 1]\n        if i % 2 == 0:\n            c += d[i - 1]\n        c %= 998244353\n    print(sum(x*y)%998244353)", "n,k = map(int,input().split())\ntable = [-1]*n\ntable[0] = 1\ntable[1] = -1\nprint(table[0])", "n,k=map(int,input().split())\narr=[]\nk=int(k)\nn1=min(k),1\nn2=max(k)\nk=int(k)\nans=((n1-k)*k+((n2+n1)/2)-1)%998244353\nprint(sum([((((n2*k)%998244353-k*k))%(998244353))\nfor i in range(2,n2+1):\n    i=i*k\n    j=i+k\n    while j<k:\n        ans+=arr[i]\n        j+=1\n    while (j>k):\n        ans+=arr[j]\n        j-=1\n    if ((j%k)==0)or ((j>k*k)%(998244353) or (k==0 or (j==n2/2)%1001):\n        print((ans)%(998244353))\n    else:\n        ans=0\n        i=0\n        j+=1\n        #print(ans)\n        i=0\n        j-=1\n        ans%=998244353\n        j+=1\n        return ans\nprint(sum(arr))%(998244353)\n"], "305": ["from itertools import accumulate, combinations\nfrom collections import defaultdict, Counter\ninput = lambda : list(map(int, input().split()))\n\ndef solve(d, K):\n    if d == 1:\n        return 0\n    i, k = divmod(d, K)\n    return max(combinations(k, n, k) for k, n in enumerate(list(zip(*zip(*count(k, k), key=lambda n: n[k])) * K + 1, n))\nn, k = divmod(d, K)\n\nd_t1 = reduce(lambda x, y: a+y, d, i):\n    s = sum([x * y for x in range(n), d])\n    return s\n\ndef solve(t, d, t_i, k, c):\n    s = s + l*(k + 1)\n    for k in range(1,n):\n        s = s + t_i\n        n -= (k - 1)\n        for i in range(k, n, -1):\n            if k <= 0:\n                return s\n        else:\n            return s\n\ndef __starting_point():\n    main()\n__starting_point()", "# cook your dish here\ndef solve(a,b):\n for i in range(a):\n  for j in range(a):\n   for k in range(b):\n    summ = 0\n    for i in range(a):\n     a[j] += a[i]\n     summ += i\n     return summ\n\n\nn,k = list(map(int, input().split()))\nfor i in range(n):\n    b, d = input().split()\n    t, d = list(map(int, input().split()))\n    b = max(b, d)\n    if t%2 == 0:\n        print(1 + pow(b, t//2))\n    elif t%2!= 0:\n        print(1 + pow(b, t//2, d), 2)\n    else:\n        print(1 + pow(b, t%2, d))\n\n\nt, d = map(int, input().split())\n\nwhile n:\n    t, d = list(map(int, input().split()))\n    t+=1\n    t+=d\n    n = n//2\n    s = 0\n    for i in range(n):\n        s = s+n\n        if t%2 == 0:\n            s=s+(d%2)*x\n        if s>s:\n            s=s\n        elif s%2!= 0:\n            s=s//2\n    s=s%2\n    d=s%2\n    s=s//2\n    s=s//2\n    s=s//2\n    print(s)\n", "from collections import defaultdict\nn,k=list(map(int,input().split()))\nt=list(map(int,input().split()))\nd=list(map(int,input().split()))\nres=0\nl=0\nfor i in range(n):\n  t.append(d[i]+d[i])\nfor j in range(k):\n  s=0\n  x=0\n  while t>0:\n   x+=t\n   t+=x\n  s+=x\n  t=x\n  t=x\n  while t>0:\n   s+=t\n   t=t+x\n  t=t+x\n  x=d-t\n  r=1\n  while t>0:\n   r-=1\n   t = t+x\n   r=t-r\n   r=r-1\n   d-=d\n   t+=x\n  l=l+1\n print(res)", "from collections import defaultdict\n\ninput = lambda: list(map(int,input().split()))\nn,k=map(int,input().split())\ndp=[0]*(n+1)\nfor i in range(1,n+1):\n\tdp[i]=dp[i-1]+dp[i+1]+dp[i+1]+dp[i]\nprint(max(dp.values()))", "def main():\n    n, k = map(int, input().split())\n    m = (n+1)//2\n    d = [ (0, 0):0]\n    s = 0\n    for i in range(n+1):\n        s += d[i][0]\n        d[i][1] = s\n    return s\n\ndef main():\n    n, k = map(int, input().split())\n    if n == 1:\n        return input()\n    dp = [n] * (k+1)\n    for i in range(k-1):\n        dp[i][i] = d[n-1-i]\n    if k == 2:\n        break\n    for i in range(k-1,-1,-1):\n        for j in range(n-i+1):\n            dp[i][j] = max(dp[i][j], dp[n-i-1][k-1] + dp[n-i-1] - dp[n-i-1][j], dp[n-i-1]) * (n-i-j+1)\n    if k == 2:\n        break\n    if n < k:\n        dp[i][k] = max(dp[i][k], dp[n][k-1])\n    else:\n        dp[i][k] = max(dp[i - 1][k] + dp[n-i-1], dp[n-i-1-j], dp[n-i-1][k-1])\n    print(max(dp))\n\n\n", "n,k=map(int,input().split())\na=[]\nfor i in range(n-1):\n  b=input()\n  a.append(b[-1] + (a[i-1] if d[i-1]==0 else 0))\nfor i in range(n-1):\n  a.append(a[i-1] + (b[-1] if d[i-1]==0 else 0))\nb.append(a[-1])\nc=[]\nfor i in range(n):\n  c.append(c)\nfor i in range(n-1):\n  if c[-1]==0:\n   b.append(b[i])\nprint(max(c))"], "306": ["from math import ceil\nn=int(input())\nif (n==2):\n    print(0)\nelse:\n    max=0\n    x=floor(n/2)\n    print(max+abs(x))\n\n", "n = int(input())\nans = 0\nwhile (n!= 0):\n    a = input().split()\n    b = n - a\n    res = abs(b)\n    maxres = max(res, a*b)\n    n -= a-b\n    print(res)\n\n", "n = int(input())\n#L = input().split()\n#for i in range(2,n+1):\n #    k = 2\n    #i = k+1\n #    if i > i:\n        print(n)\n    else:\n    print(n-i)", "n = int(input())\n\n#def f():\n    if n > 2:\n        print(0)\n    return 0\n\ns = n//2\nres = 0\n\nwhile True:\n    ans = f(s)\n    if ans > res:\n        res = res\n        s = s\n    print(ans)\n    n -= 2\n", "from sys import stdin,stdout\ninput = stdin.readline\n\nif (n < 2) or (n==2) or (n ==1):\n    print(0)\n    return\n\nn = int(stdin.readline().strip())\na = n\nb = n\nfor i in range(1,2,-1):\n    a = b * i\n    b = a + b\n    if a >= b:\n        a = b + a\n    if (n-a < b) and (n - a < b):\n        b = a\n    print (a)\n    return\n\ns = max(a)\nfor i in range(2,n-1):\n    if s>1:\n        x = int(s)\n        b = b + abs(x)\n    a = abs(x)\n    print(b)", "from sys import stdin\ndef main():\n    n = int(stdin.readline().strip())\n    arr = [int(x) for x in stdin.readline().strip().split()]\n    i = 1\n    while i < n:\n        if arr[i] > arr[i+1]:\n            arr[i], arr[i] = arr[i], arr[i+1] + arr[i+1]\n            i += 1\n        else:\n            i += 1\n    arr = [x for x in input().strip().split()]\n    print(0 if not arr else arr[-1])\n\n\n\n"], "307": ["n, m = map(int, input().split())\nl = list(map(int, input().split()))\nl.sort()\nl.sort()\nprint(l[0])", "n,m = map(int,input().split())\na = sorted(list(map(int,input().split())))\nb = sorted(list(map(int,input().split())))\nl = [float('inf')]*(n+m+1)\nfor i in range(n,m+1):\n    l.append(min(l))\nfor j in range(i+1,m):\n    l.append(j)\nl.append(j)\nl.sort(reverse=True)\nprint(l[0])", "import math\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nm = map(int, input().split())\na = sorted(a)\n\nif a >= min(m):\n  print(a)\n else:\n  print(-1)", "n,m = map(int, input().split())\na = list(map(int, input().split()))\na_min = [a[0] for _ in range(1, n+1)]\na_max = [a[0] for _ in range(1, n+1)]\nb = list(map(int, input().split()))\nb_min = [a[1] for _ in range(1, m+1)]\nm_min = [a[1] for a in range(1, m+1)]\nfor i in range(1, n+1):\n    if b_min[i] > a_min[i]:\n        b_max = b[i]\n    m_min[i] = b_min[i]\nprint(max(max(min(min(b_max), a), b)), end=' ')\n", "# cook your dish here\ndef lcr(n,m):\n    #i_A = list(map(int, input().split()))\n    #i_B = list(map(int, input().split()))\n    #i_B = list(map(int, input().split()))\n    #b = list(map(int, input().split()))\n    #a = sorted(a)\n    for i in range(len(b)):\n        if b[i] == 0:\n            #no-match\n                #no-match\n            #same-if\n            #no-match\n            else:\n                #same-if\n                #if a[i] - b[i] == a[i - 1]:\n                b[i] = b[i - 1]\n            b[i] = a[i - 1]\n            b[i] = b[i - 1]\n    #if b[i] < a[i - 1]:\n        #    print(i, 'is-valid')\n    return\n\nn, m = lcr(n, m)\nm = lcr(m, m)\nv = lcr(m, m)\n\nif v > v:\n    print(-1)\nelse:\n    print(v)", "\n#from sys import stdin\n\n# from math import floor, ceil\ndef __starting_point():\n    #return stdin.readline().rstrip()\n    n, m = map(int, stdin.readline().strip().split())\n    a = list(map(int, stdin.readline().strip().split()))\n    b = list(map(int, stdin.readline().strip().split()))\n    m = min(m, a[n])\n    if m > max(m, b[m-1]):\n        print(-1)\n    else:\n        print((n, m))\n__starting_point()"], "308": ["r=int(input())\nwhile r:\n    y=int(input())\n    print(y)\n    r-=1\n", "a = int(input())\nif a>=100:\n    print(a)\nelse:\n    print(a+100)\n", "import math\nT = int(input())\nfor i in range(T):\n    y = int(input())\n    for j in range(7,30):\n        if x % 400 == 0:\n            y += 1\n    elif x % 4 == 0 and y % 100 == 0:\n        y += 1\nprint(y)", "n = int(input())\nd = [0 for i in range(n)]\n\nfor i in range(n):\n    d[i] += 1\nprint(d[n-1])", "a, b = [int(i) for i in input().split() if i%4==0]\nt=str(a)\nif t==1 or t==2 or t==3 or a==6 or b==0 or a==5 or b==7:\n    if a==4 or b==6:\n        for i in range(b,b+1,1):\n            for j in range(b,a+1,1):\n                print(a, end=' ')\n            print(a, end=' ')\n        print(b, end=' ')\nprint(a[1])\n", "x = int(input())\nfor i in range(100):\n    x = x % 100\n    if (x >= 1000) or (y >= 1000):\n        if not x%400:\n            print((i+1))\n        else:\n            x += 1\nprint((y+1))\n"], "309": ["input = input()\nl = list(map(int, input().split()))\nc = 0\nfor i in range(len(l)):\n\tj = int(l[i])\n\tif j % 100 == 0 and (j % 400 == 0):\n\t\t\tc += 1\n\tprint(c)", "import datetime\ninput = lambda : sys.stdin.readline().strip().split(':')\ninput = lambda: input().strip().split(':')\na,b,c,d,m,n=map(int,input().split(':'))\nm1,c1,d=map(int,input().split(':'))\nm2,m3,m4,m5,m6,m7,m8,m7,m8,m9,m7,m11,m12,m13,m13,m13,m13,m14,m15,m13,m13,m13,m14,m14,m15,m15,m14,m13,m15,m15,m15,m14,m15,m12,m15,m15,m15,m15,m15,m15,m13,m13,m15,m12,m13,m14,m14,m13,m13,m13,m13,m12,m13,m13,m13,m13,m13,m14,m15,m13,m14,m13,m14,m13,m15,m14,m15,m15,m15,m11,m13,m13,m15,m14,m13,m13,m15,m12,m13,m15,m13,m13,m13,m14,m13,m13,m14,m13,m13,m13,m15,m14,m14,m14,m13,m15,m13,m13,m15,m13,m15,m15,m15,m13,m13,m14,m14,m", "t = input()\nwhile t:\n    time = t.strip(':')\n    d = str(time).replace(\"0\", \"\")\n    if (time%4==0) and (time%100==0):\n        for i in range(2,int(time//4)+1):\n            if time%400==0:\n                d += 1\n        elif (time%400==0):\n            d += 1\n    if(d=='01':\n        d += 1\n    if(d=='06':\n        d += 2\n    print(d)\n", "import datetime\n# cook your dish here\nimport math\ndef get_date(a):\n    n = datetime.datetime.strptime(a, '%Y-%m-%d')\n    return str(float(math.floor(n/100).total_seconds()))\n\ndef get_date(a):\n    if a in [4,6,7]:\n        return str(int(a) + int((a//100.0) + int((a//4.0)) + int((a//400.0) + int((a//400.0))))\n    return str(int(a) + int((a%4.0) + int((a%400.0) + int((a%400.0) + int((a%400.0) + int((a%400.0) + int((a%100.0) + int((a%400.0) + int((a//4.0)))) + int((a%400.0) + int((a//400.0))) % int((a%400.0))))\n\ndef print_day_of_year(a):\n    for i in range(1,int((a%100.0) + int((a%400.0) + int((a%400.0))+int((a%400.0) + int((a%400.0) + int((a%400.0) % 4)))):\n        if ((a%100.0) % int((a%400.0) + int((a%4)))% 100) % 100) == 0:\n            return 1\n    print(1)\n\ndef __starting_point():\n    main()\n__starting_point()", "def weekdays_of_years(date):\n    if date.month == \"13\" or date.month == \"17\" or date.month == \"18\":\n        return 1\n    elif date.month == \"04\":\n        return 2\n    elif date.month == \"05\":\n        return 3\n    elif date.month == \"02\":\n        return 4\n    elif date.month == \"03\":\n        return 5\n    elif date.month == \"01\":\n        return 6\n    elif date.month == \"02\":\n        return 7\n    elif date.month == \"02\":\n        return 8\n    elif date.month == \"12\":\n        return 9\n    elif date.month == \"15\":\n        return 0\n    elif date.month == \"13\":\n        return 1\n    else:\n        return 1\n", "import time\nt = input().strip()\nl = 0\nj = 0\nm = {}\nfor i in t:\n m[i] = (int(i) * 100 + 4 * i) % 400\n l += 1\nif l in m:\n  p = m[l] - (int(l) * 400 - int(l))\nelif l in m:\n  m[l] = m[l] - (int(l)) * 400 + int(l)\nelif l in m:\n el = m[l] - (int(l) * 400 - int(l))\nelif l in m:\n elif m[l]!= m[l]:\n  m[l] = m[l] - (int(l) * 400 - int(l))\nelif l in m:\n print(m[l])\nelse:\n  m[l] = m[l] - m[l]\nprint(1)\n"], "310": ["from sys import stdin, stdout\nfrom collections import defaultdict as dd\ns=stdin.readline\nfor i in range(len(s)):\n    if s[i] in dd:\n        dd[s[i]] = 1\n    elif s[i] in dd:\n        dd[s[i]] += 1\n    elif s[i] == s[i-1]:\n        dd[s[i]] = 2\n    else:\n        dd[s[i]] = 1\n    for i in dd.keys():\n        if i + 1 not in dd:\n            dd[i + 1] += 1\n        else:\n            dd[i + 1] -= 1\nprint(\"NA\")\n", "from collections import deque\ninput = lambda : input()\ns = input()\ns = sorted(s)\nprint('NA' if len(s) == 1 else s[1:-1])[:-1]\n\ns = sorted(s, key = lambda s: len(s))[::-1]\n", "s = input()\n#print(s)\nif len(s) > 1:\n    print(s[len(s)-1:])\n    print('NA')\n    else:\n    print('revive')", "from itertools import chain\nfrom string import ascii_uppercase as ascii_lowercase as ascii_uppercase as ascii_lowercase as ascii_lowercase\ndef convert(s):\n    return str(int(input()))[::-1]\n\ndef get_list():\n    return list(map(int, input().split()))\ndef get_dict():\n    return defaultdict(int)\nfrom itertools import groupby\ndef dfs(i, l, j, j, k):\n    if s[i:i+1:j] in uniq(uniq(uniq(s[i:i+1:j+1]))) >= len(uniq(s[i:j+1])):\n        return \"\"\n    elif s[i:j+1:j+1] in uniq(s[i:j+1:i+1]):\n        return \"\".join(dfs(i-1, i+1, j-1))\n    else:\n        return \"\".join(dfs(i,j-1, k - 1), k - 1)\ndef solve(j, k):\n    if k == 1:\n        return 'NA'\n    if k == 2:\n        return 'NA'\n    if (j == 1):\n        return'revive'\n    if (k == 0 and j < len(s)):\n        if len(s)==1 and dfs(j, k-1, l + 1):\n            return \"\".join(dfs(i+1, j, k-1) == k - 1):\n                return \"\".join(dfs(i, k-1, j))\n            k+=1\n    if (k == 2 and k==2 and k==3 and dfs(j, k-1):\n        return'rev", "s = input()\nif len(s)==1:\n\tprint('NA')\nreturn\ns=''\nfor i in range(len(s)):\n\tx=s[i]\n\tif x==1 or s[-1]=='a':\n\t\t\tprint(x)\n\ts.pop(i)\n\telse:\n\t\tprint('NA')\n", "# cook your dish here\ns=input()\nwhile(s):\n    if s[-1] == s[-2]:\n        s=s[:-1]\n        else:\n            s=s[:-1] + s\n    print(\"NA\")\n    break\n"], "311": ["num = int(input())\nprint(str(num))", "n=int(input())\ns=0\nfor i in range(0,n):\n    s+=i\n    print(' '.join(s))\n", "a = int(input())\ns = ['' for i in input().split()]\nc = ''\nfor j in range(0,a):\n    c+=j*2\nprint(c)\n", "# cook your dish here\nA = [1,2,4,4,5,6,7,8,9,2,4,6,8,9,1,4,5,6,7,1,2,3,4,5,7,3,4,5,6,7,9,7,0,3,2,5,4,1,3,7,0,1,1,1,3,1,3,4,2,4,2,2,2,3,4,5,6,7,8,9,1,0,1,3,5,1,4,5,6,1,4,5,6,7,9,1,7,1,3,2,4,5,6,7,7,7,8,9,1,3,7,7,8,9,3,4,7,2,5,4,2,7,3,4,5,7,7,8,9,10,11,11,14,15,17,18,17,19,18,18,19,19,20,20,23,23,23,22,22,23,2,25,26,2,25,26,23,29,29,22,23,23,23,23,24,29,29,29,29,31,32,33,34,33,33,34,33,34,37,44,44,39,39,39,20,37,40,79,33,33,20,29,33,3,29,39,29,32,38,20,25,29,25,25,30,24,25,29,34,31,32,32,31,30,", "a=int(input())\ncount=1\nfor i in range(1,a+1):\n print(str(count) + \" \" + str(count))", "n = int(input())\nif n%2:\n    print(\"Homing\")\nelse:\n    print(\"Adams\")"], "312": ["r,g,b=list(map(int,input().split()))\nr=int(r)\ng=int(g)\nb=int(b)\nif(r<g<b):\n    print(g<r)\nelse:\n    print(2*r+(g<g) + (b<b)", "r,g,b = map(int, input().split())\nf = 0\nfor i in range(2, r+1, g+1):\n    if i+1*g == b:\n        f += i+2\nprint(f)\n", "r,g,b = map(int, input().split())\nl = [0]*(10**9+1)\nl = [0]*(10**9+1)\nl.sort()\nl.sort()\nl.append(0)\nr = r**2\ng = g**2 + b**2\nl.append(0)\nprint(l.count(2))", "# cook your dish here\nr,g,b=[int(x) for x in input().split()]\nc=0\nfor i in range(2,int(math.sqrt(r**.5)+1)):\n    if(x-r)>=b:\n        c+=1\nprint(c)", "r, g, b = map(int, input().split())\nc = 0\nfor i in range(2, r + g + b + 1):\n    if i%4 == 0:\n        c += 1\n    elif i%4 == 1:\n        c += 2\nprint(c)\n", "def main():\n    r,g,b=map(int,input().split())\n    print(3 * (g**3+b))\n    \nmain()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"], "313": ["def __starting_point():\n    return int(input())\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max(a))\n\n__starting_point()", "n=int(input())\narr=list(map(int, input().split()))\nmin_i=1\nmin_j=0\nwhile(n):\n    for j in range(len(arr)):\n        min_i=min(min_i,arr[j])\n        max_i+=max_i+1\n    min_j+=1\n    print(min_j)\n\nn=int(input())\n", "n = int(input())\na = list(map(int, input().split()))\n\narr = list(map(int, input().split()))\narr.sort()\n\ndp = [int(i) for i in range(n)]\n\nfor i in range(n):\n    dp[i] = min(dp[i],dp[i-1])\nprint(dp[-1])", "n = int(input())\nfor _ in range(n):\n    arr = list(map(int, input().split()))\n    if arr[0] == 0:\n        print(0)\n    else:\n        a = arr[1:]\n        print(abs(a))", "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int,input().split()))\na = list(map(int,input().split()))\na.sort()\nprint(min(a))\n", "n=int(input())\narr=list(map(int,input().split()))\narr.sort()\nprint((len(arr)-n+1)*2/2)"], "314": ["# cook your dish here\na,b,c,d = map(int,input().split())\nb_max = int(a/250)\nb_min = b/250\na_max = float(a/250)\nb_max = float(b/250)\nc_min = int(c/250)\nd_max = float(d/250)\nc_max = float(d)\nv_max = 0\nd_min = 0\nmisha = max(c_max,b_min)\nv_max = max(c_max,d_max)\nmisha = max(a_max,b_min)\nmisha = max(c_max,b_min)\nmisha = max(c_max,b_min)\nv_max = max(d_max,b_min)\nmisha = max(c_max,d_max)\nv_max = max(c_max,b_min)\nmisha = min(misha,v_max)\ntie = \"Tie\"\nfor i in range(tie-tie+1):\n    if misha < misha:\n        misha = misha\n    misha = misha\n    elif misha < misha:\n        misha = misha\n    elif misha > misha:\n        misha = misha\n    if misha < misha:\n        v_max = misha\n    if v_max == v_max:\n        v_max = v_max\n    else:\n        v_max = misha\n    else:\n        misha = mish", "import sys\nfrom math import factorial as l\nimport math\nfor _ in range(int(input())):\n    a,b,c,d=map(int,input().split())\n    if max(b-c,d-d) > 0:\n        print(\"Vasya\")\n    else:\n        print(\"Misha\")", "a, b, c, d = map(int, input().split())\nprint(\"Misha\", \"Vasya\")", "a,b,c,d=[int(x) for x in input().split()]\nif a > d:\n    print('Vasya')\nelse:\n    print(\"Misha\")", "a,b,c,d=list(map(int,input().split()))\na=3500*a\nc=180*d\na-=c\nb+=d\nif(a==b==c):\n    print(\"Vasya\")\nelse:\n    print(\"Misha\")\n", "import math\na,b,c,d = [int(i) for i in input().split()]\n\nif a/b%250==0:\n    print(\"Misha\")\nelse:\n    print(\"Vasya\")\n"], "315": ["\nn=eval(input())\n\nprint(\"NO\")", "n = int(input())\nif n == 3:\n    print(\"NO\")\nelse:\n    print(\"YES\")", "\nn=int(input())\nt=input()\nfor i in range(n):\n    s=input()\n    if s=='X':\n        print(\"YES\")\n    elif s=='X':\n        print(\"NO\")", "n=int(input())\narr=[]\nfor i in range(n):\n    j=0\n    if len(arr)==n:\n        if arr[j]=='X':\n            if arr[i]=='X':\n                arr[j]+=[arr[j]]\n                j+=1\n        else:\n            arr[i]=arr[j]\n        if i==j:\n            arr[j]=[arr[j]],arr[i]+[arr[i]]\nprint('YES')\n", "# cook your dish here\n\nn=int(input())\n#n=[]\n#n=[]\nfor i in range(n):\n\n    x=input().strip()\n    if x.count(\"x\")==x.count(\"1\"):\n        print(\"YES\")\n    else:\n        print(\"NO\")", "n = int(input())\nl =[]\nfor i in range(n):\n    p = [x for x in input().split()]\n    a = l.pop()\n    b = l[i - 1]\n    if len(a) == len(b):\n        print(\"NO\")\n    elif a[i] == b[i - 2]:\n        print(\"YES\")\n    elif a[i] == b[i - 1]:\n        print(\"YES\")\n        else:\n            print(\"NO\")\n\nfor i in range(1, n):\n    l.append(input())\nprint(l[-1])\n"], "316": ["import sys\ninput=sys.stdin.readline\na = list(map(int, input().split()))\nb = []\nfor i in range(len(a)):\n    b.append(a[i%2])\nif not b[0]:\n    b.append('NO')\nelse:\n    if b[0] % 2==0:\n        b.append('YES')\n    else:\n        b.append('NO')\nprint((b[-1])//2) + '\\n')\n", "n, k, p = map(int, input().split())\nm = [-2*k, k-1]\nq = []\nfor i in range(1, k-2):\n    q.append(p-i)\nprint('NO')\n", "n,k,p=map(int,input().split())\na=list(map(int,input().split()))\nif len(a)==k*2:\n    print(\"YES\")\nelse:\n    k=k*(n+k)//2\n    print(\"NO\")", "# cook your dish here\nn,k,p=map(int,input().split())\ndp=[0]*(n+1)\nfor i in range(k+1):\n    dp[i]=dp[i-1]%2 + p\nfor j in range(n+1):\n    dp[j]=max(dp[i],dp[j+1]+dp[j+1]+p)\n    if dp[k][j]!=1:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "\nn, k, p = list(map(int, input().split()))\nif k == 0:\n    print(\"NO\")\nelse:\n    m = sum(list(map(int, input().split())))\n    m = m - k * 2\n    if m % 2 == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "n,k,p=list(map(int,input().split()))\nl=list(map(int,input().split()))\nsum1=k-p\nsum2=k-p\nif(sum1%2==0):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n"], "317": ["t,a,b=map(int,input().split())\nmod=10**9+7\nm=10**9+7\nans=(0.05)*b\nfor i in range(a,b+1):\n    print(m)\n", "n,m=map(int,input().split())\nt=int(n)\na=n\nb=int(n)\nif a<1:print(\"inf\")\nelse:print(sum(range(a,b+1),2))\n", "t,a,b=list(map(int,input().split()))\nprint(2*(a+b)-1)/2 if(t==0 or b==0):\n    print('inf')\nelse:\n    if(t==1):\n        print('inf')\n        t=a+b\n        print(2*(a+b))%1000000007\n        a=a+b\n        b=a+b\n        print(1)\n", "import math\nt,a,b = input().split()\n\nt,a,b=a,b\nif(t<a or b==0):\n    print('inf')\n    else:\n        print((math.factorial(a/b)))%(10**9+7)", "T = int(input())\nx, y = list(map(int, input().split()))\nif T < 2 or T == 3:\n\tprint('inf')\nelse:\n\td = T\n\ta, y = input().split()\n\tx = int(a)\n\td *= y\n\tt -= (y//2)-1\n\t# print(d)\n\tn = (0 - t)//2\n\ts = float('inf')\n\tn = n\n\tfor i in range(n-1,-1,-1):\n\t\ts = n//i\n\t\tx = d*x % 10**9 + 7\n\t\tn = n//i\n\t\tprint(s)\n\tprint(int(max(s+a-b) + int(abs(s-y)) % 10**9 + 7)\n \n", "t,a,b=list(map(int,input().split()))\n\nprint((2**(10**9+7))*(a+2*b+1))%(10**9+7)"], "318": ["n, m = list(map(int, input().split()))\nif n == 1:\n    print(0)\nelse:\n    m = n-1\n    w, c = map(int, input().split())\n    print(sum(w) * c)", "n,m = map(int,input().split())\nl = [int(i) for i in input().split()]\n# n = 300000\n# a = m\nfor i in range(n):\n    a,b = l.sort(reverse=True)\n    print(sum(a[i])//max(a[i]-b, a[i]-b[i])+1)", "n,m = map(int,input().split())\n#import math\nA = []\nfor i in range(n):\n    a.append(a.pop())\nans=0\nfor i in range(n):\n    a.append(int(input()))\nfor i in range(m):\n    a.append(a.pop())\nprint(ans)\n", "import math\nn,m=map(int,input().split())\np=list(map(int,input().split()))\nl=0\nm=[int(x) for x in input().split()]\nfor i in range(n):\n    c=int(input())\n    l=max(l,p[i])\n    l.append(c)\ns=l\nans=0\nfor i in range(len(l)):\n    if(l[i]>m):\n        ans=max(ans,l[i])\nprint(ans)\n", "n,m = map(int,input().split())\na = list(map(int,input().split()))\n\na.sort()\nfor i in range(n):\n    w, c = map(int,input().split())\n    a[w] += c\n\nprint(max(a))", "# cook your dish here\nn,m=map(int,input().split())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n    if(a[i]==0):\n        b.append(i)\n        else:\n            b.append(b[i-1])\nprint(max(b))"], "319": ["n = int(input())\nA = [int(x) for x in input().split()]\nA.sort()\nN = len(A)\n\nprint(A[-4])", "N = int(input())\nA = list(map(int,input().split()))\nl = []\nN = len(A)\nl.append(A[0])\nl.sort()\ndp = [float('inf') for _ in range(N)]\ndp[0] = 1\ndp[1] = max(A[0])\ndp[2] = min(A[0])\ndp[3] = max(A[1])\ndp[2] = min(A[2]), min(A[3])\ndp[3] = max(A[3], A[4])\ndp[7] = min(A[3], A[4])\nfor i in range(N):\n    if A[i] - A[i-1] <= dp[i]:\n        dp[i] = min(dp[i], dp[i])\n    else:\n        dp[i] = max(dp[i], dp[i-1])\nprint(dp[N-1])\n", "from math import fabs, ceil\n\n# cook your dish here\nn=int(input())\nA=[int(x) for x in input().split()]\n\nA.sort()\nA.sort()\n\nmaxl=[0]*(N+1)\nminl=[0]*(N+1)\nfor i in range(1,N+1):\n  maxl[i]=max(maxl[i],maxl[i-1])\n\nd = []\nfor j in range(N):\n  if D[j]==0 or R[j]==0:\n   d.append(j)\n   else:\n    for i in range(2*N-2,-2*N+1):\n     if H[j]>maxl[i-2]:\n     minl[i]=j-2*N\n     else:\n       d.append(i-2*N-1)\nprint(d[-1]+d[-1]+d[-1]+d[-2])", "n = int(input())\n\nL = []\nA = [int(x) for x in input().split()]\n\nP = [0] * (N)\nQ = [n - 1] * N\n\nwhile P!= [0]:\n  P.append(P[-1])\n  Q.append(P[-1])\n  L.append(max(A))\n\nmax,min = [N-1] * N\nmax.sort()\nmin.sort()\nmin.sort()\nl = [N-1] * (N+1)\nr = [N-2] * (N+1)\n\nfor i in range(N+1):\n  P[i] = P[i-1] + A[i-2]\n  L[i] = Q[-1]\n  R[i] = R[:i] + A[i-1]\n\nmin.sort()\nmin.sort()\n\nmax.sort()\nmin.sort()\nres = max(max)\nif max == 0:\n  return 0\nres = max(min)\nwhile L:\n  r = L[l[-1]]\n  res = min(res, R[-1])\n print(res)\n\n\n\n\n\n\n\n\n\n", "n=int(input())\nl=[[int(x) for x in input().split()]]\nl.sort(reverse=True)\nma=np.inf\nma[n-1].append(ma[-1])\nma[n-2].append(ma[-1])\nma[n-3].append(ma[-1])\nma[n]=ma[-2]\nma[n]=ma[-1]-1\nma[n-1].append(max(ma[-2])-min(ma[-1])\ns=sorted(l)\ns.sort()\nfor i in s:\n  m=0\n  while m<=m:\n   m+=m\n   a=list(map(int,l))\n  m=m-m\n  if m<0:\n   print(2)\n  else:\n   print(2)\n", "def main():\n n = int(input())\n a = list(map(int, input().split()))\n min, max, min = max, min\n\n\nx = a[0]\n\nwhile min <= x:\n\n    x -= min \n    if x < min:\n      max += a[min]\n      min = x\n    x -= max\n\n    x += 4\n\n    if x <= max:\n      max = x\n    return\n\nans = [1] * len(a)\n\nfor i in range(3, n):\n    ans[i] = min(ans[i], ans[i - 1])\n\nprint(ans[-1])\n \n"], "320": ["from math import factorial\nN, M = map(int, input().split())\nc = [1]\nb = [0] * N\nwhile b:\n  b.append(2*m - 1)\n  if b not in c:\n    c[b] += k\n  b[k] += 1\n\n c[b] += a[b]\n\nsum = [(n//(N-1)+1) * K for _ in range(m)]\nfor a in b:\n  a[a] += k\nans = min(c[0], sum[a] - b[b])\n ans = min(ans, a[a])\n print(-1 if ans < 0 else -1)", "import sys\nimport collections\nimport itertools\nimport math\nfrom collections import defaultdict\nimport collections\n\ndef _read_input(a,b):\n    n,m = list(map(int,input().split()))\n    arr = sorted(list(map(int,input().split())))\n    if m == 0:\n        return -1\n    else:\n        sum_a, sum_b = (0,0)\n        for i in range(n - 1, -1, -1):\n            sum_a += arr[i]\n        sum_b += arr[i + 1]\n        sum_b += arr[i]\n        sum_a += arr[i]\n        sum_b += arr[i + 1]\n        sum_a += arr[i + 2]\n        sum_b -= arr[i + 1]\n        sum_c += sum_a\n\n\n\ndef main():\n    n = int(input())\n    m = len(input())\n    a = sorted(list(map(int,input().split()))\n    m = sorted(list(map(int,input().split()))\n    a = sorted(list(map(int,input().split())))\n    n = sorted(set(map(int,input().split())))\n    m = sorted(list(map(int,input().split())))\n    if a <= b:\n        print(n)\n        else:\n            print(-1)\n\n    return\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "n, m=map(int,input().split())\nA=[int(x) for x in input().split()]\nA[0]=a\nA[1]=b\na[0]=a\nm=len(A)-1\nl=[1]*(m)\nfor i in range(m):\n a1,b1=map(int,input().split())\nfor l in range(1,m):\n  a2,b2=map(int,input().split())\n  if(a1>a2):\n   L.append(b1-a2)\n   m-=1\n   l[2]=b1\n print(-1)", "import sys\nsys.setrecursionlimit(1000000)\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    a2 = list(map(int, input().split()))\n    c1 = dict()\n    c2 = dict()\n    b = dict()\n    c1.setdefault(b, a2)\n    b2.setdefault(b, b1)\n    a1_a = dict()\n    b1_a = dict()\n    a1_b = dict()\n    a2_a = dict()\n    b2_b = dict()\n    a2_b = dict()\n    b2_a = dict()\n    b2_b = dict()\n    b2_a = dict()\n    a2_b = dict()\n    b2_a = dict()\n    b2_a = dict()\n    a2_a = dict()\n    b2_a = dict()\n    b2_a = dict()\n    c1_b = dict()\n    c1_b = dict()\n    b2_b = dict(b1_a)\n    b2_b = dict()\n    b2_b = dict(b2_a)\n\n    b2_a = dict()\n    b2_b = dict(b2_a)\n    b2_b = dict()\n    if a1_a == b2_b:\n        return 0\n    if b1_a == a2_b:\n        print(0)\n    else:\n        print(-1)", "# cook your dish here\nN, M = map(int, input().split())\n\nc = map(int, input().split())\n\na = []\nb = []\nfor c_i in range(N - 1):\n    c_i = c_i\n    b.append(c_i)\n\nif b == []:\n  print(-1)\n  return\n\n#print(c)\na.append(-1)\nm = min(c)\nc = sorted(map(int, input().split()))\nif sum(c) >= m:\n  print(-1)\nelse:\n  c.append(min(c))\n\n\nm = sorted(sorted(sorted(map(int, input().split())))\na.append(min(c))\nb = [max(c, n - b) for n, c in zip(a, b)))\nif not a:\n  print(-1)\n", "n, m = map(int, input().split())\n\nif m == 1:\n print(-1)\n\nelse:\n a = list(map(int, input().split()))\n c = list(map(int, input().split()))\n m += 1\n if a[0] == m:\n  m += 1\n print(m + n * m * (n - 1) * a[0])\n elif a[0] > m:\n  a[0] = m\n else:\n  a[1] = m - 1\n  b[0] = m - 1\n  b[1] = c[2] + c[2] + c[1]\n  c[1] = c[0] + c[2] + c[0]\n  else:\n   b[1] = c[1] - c[2]\n  if a[m][a[b[a[m]] <= b[m][b[m]]:\n    a[m][a[b]] = b[m][a[b]] - 1\n   b[m][a[b]] = a[m][b[a]] - 1\n  b[m][b[a]] += b[m][a[b]]\n  b[m][a[b]] += b[b][m]\n  if b[m][b[a]] > c[n]:\n   print(-1)\n  else:\n   print(-1)\n"], "321": ["# cook your dish here\ndef solve(s):\n    return x*y for x,y in zip(s,list(map(str,input().split())))\n\ndef solve(s,n):\n    if n%2!=0:\n        print(s,n+1)\n    return\n    elif n%2!=0:\n        print(\"*\",n+1,n)\n        return\n    elif n%2==0:\n        ans=solve(s,n-1,n)\n        if n%2==0:\n            ans=solve(s,n-1,n-1)\n            ans=ans+solve(s,n-1,n)\n        if n==1:\n            ans=solve(s,n-1,n)\n    else:\n        print(ans,n)\n\n", "def max_primes(l,m):\n    x = l[0] + l[1] + l[2] + l[3] + l[4]\n    if not (l & (l >> 1)) and not (l & (l >> 1)):\n        #print(x, m, x, l)\n        x, m, x = l[0], m\n        if l & (l >> 1) and not l & (l >> 1) and not l & (r >> 1):\n            print('1')\n    return x\n\n#input()\ns = input().split()\nfor _ in range(len(s)):\n    t = ''.join(l)\n    n = len(t)\n    if n < 15:\n        c = -float('inf')\n        c = f'{c}{n}'\n    return max_primes(x, m, n)", "# cook your dish here\ninput = sys.stdin.readline\nn = int(input())\na = 0\na += 1\nm = 1\nfor i in range(1,n):\n    m+=int(input())\n    c = float('inf')\n    for j in range(1,n):\n        x = int(input())\n        if s[j] == \"+\":\n            a += int(input())\n        else:\n            x += 1\n    if s[j] == \"*\":\n        a *= int(input())\n    m += int(input())\nprint(max(a))\n", "\nfrom math import ceil\n\nsys.setrecursionlimit(10**7 + 1)\nans = float('-inf')\nans = ans*math.sqrt(ans/math.pow(2,int(sys.stdin.readline()))\n\nprint(ans)", "S = input()\nans = int(S.replace(\" +\", \"%2B%2B\") + 1) * int(S.replace(\" *\", \"%2B%2B\") + 1)\nans += str(S.replace(\" *\", \"*\", \"%1B%2B\") - 1)\n\nprint(ans)", "s=input()\nans=[]\ns=[]\nwhile(s):\n    n=int(input())\n    d=[]\n    x=list(map(int,input().split()))\n    if(n%2==0):\n        ans.append('*'*n))\n    s.append('+*')\n        n=len(ans)\n\nprint(max(s))"], "322": ["s = input()\ndef i_step(a, b):\n    s += b\n    s = s + a\n    s += b\n    return s\n\ns.sort()\ns.sort(reverse = True)\nif s == s:\n    print(\"Impossible\")\nelse:\n    print(s)", "t=input()\nl=list(input())\nc=[]\nfor i in range(len(l)):\n    for j in range(len(l)):\n        if l[i].isupper():\n            c.append(l[j])\n    else:\n        c.append(l[i])\n#print(c)\nprint('Impossible')", "# cook your dish here\n# n=int(input())\nans=['T','S','L']\n\n# for i in range(2,n+1):\n    a=input()\n    b=input()\n    if b==b or c==['']:\n        ans+=''\n        print(ans)\n    else:\n        if b=='|':\n            ans+='|'\n        else:\n            ans+='|'\n    print(ans)", "def main():\n    input = input()\n    sumb = 0\n    for i in input():\n        for j in input():\n            if i == '|':\n                sumb += i\n            if sumb == sumb:\n                sumb = sumb\n                sumb += 1\n    return sumb\n\ndef __starting_point():\n    main()\n\n__starting_point()", "x=[int(c) for c in input().lower()]\ns=set(input())\n\nif s and (s.count(c)!= 1) : print(\"Impossible\")\nelse: print(\"No answer for scales\")", "s = input()\na = ['A', 'B', 'C', 'D', 'E', 'F', 'H', 'I', 'J', 'K', 'L', 'N', 'M', 'S', 'J', 'N']\nb = []\nc = 'F'\nd = 'U'\np = [0] * 26\nwhile(a[a[-1]] == b[a[-1]]):\n    if(a[a[0]] == b[a[-1]]):\n        p.append('Impossible')\n    print(''.join(p))\n    else:\n        print('')"], "323": ["from math import atan, sqrt, sin\n#input data\nfrom collections import defaultdict\ndef main():\n    arr = list(map(int, input().split()))\n    x,y = sorted(arr)\n    x1,y1 = arr[0], arr[1]\n    x2,y2 = arr[2], arr[3]\n    return arr[0] if x1<-1 or y1<-1 else sum(arr[2:])//float(x2)\n\n#print(arcs = arr[0]\n#print(arcs)\ndef solve(x, y):\n    return sum(arcs[x-1] for x,y in zip(arcs, bcs) if x < 0 or y < 0 or y > 0)\n\n\nk=int(input())\na=[int(x) for x in input().split()]\n\nwhile a[0]==b[0]:\n    a[0]=b[1]\n    if a[0]==a[1]:\n        k+=1\n    else:\n        if a[0]==a[1]and a[2]==a[2] and a[1]==a[1]:\n            a[1]=a[0]\n            else:\n                print(k)\n\nans=0\nfor i in range(3):\n    ans+=(a[i]-a[i])**2\n    print(ans)", "from collections import defaultdict\n\n\ndef main():\n    p1, p2 = map(int, input().split())\n    return (p1*p2-p1*p1)//3", "def dfs(x, y):\n    n = x * y\n    if (n > 3):\n        print(0)\n    return\n    z = (x+n)//3\n    g = g/4 + 4\n    c = 2\n    while(g >= 0) and z <= 1:\n        k += 1\n        j = n//3\n        z = g+2\n        if(g+2) * p!= 2:\n            c += 2\n    if(b > g):\n        c += 1\n    else:\n        g += 1\n    return c\nt = 0\nfor i in range(1,t+3):\n    x,y = list(map(int, input().split()))\n    print(dfs(x,y))", "x0,y0 = map(int,input().split())\nn = len(x0)\nfor i in range(n):\n    x1,y1 = [int(x) for x in input().split()]\n    y1,y2 = [int(y) for y in input().split()]\n    print(x1+1 + y1)\n", "for i in range(int(input())):\n    x, y = map(int,input().split())\n    if x < x or y < y or (x >= x) or (x < y):\n        print(\"1\")\n    else:\n        for i in range(x, y):\n            print(\"2\")\n        print(\"0\")\n", "from fractions import gcd\nfrom numpy import *\nimport sys\ninput = sys.stdin.readline\n\n\ndef get_bisect(x):\n    return gcd(x[0], x[1]) + gcd(x[1], x[2])\n\n\nfrom collections import defaultdict\n\nN = len(input().split())\nprint(N//N-3+1)\n"], "324": ["n,k=map(int,input().split())\na=list(map(int,input().split()))\nl=[0]*(k+1)\nl.append(a[1])\na.sort()\na[1][0]=a[-1][1]=0\nfor i in range(1,k+1):\n a[i][0]=a[i-1][2*i]=min(a[i][1]-a[i-1][2*i+1])\nprint(a[0][0])", "#from math import log\nn, k = list(map(int, input().split()))\na = 1\nm = n - 1\nd = [1] * (m + 1)\nfor i in range(1, min(m, n)):\n    if d[i] == 1:\n        a = int(log(i / a, 2))\n        d[i] = 1\n        d[m][a] = -1\nprint(a[m-1][0])\n", "n, k = [int(i) for i in input().split()]\nn, k = [int(i) for i in input().split()]\n\nA = [int(i) for i in input().split()]\nA.sort()\nprint(A[k])", "n,k = list(map(int,input().split()))\nseq = []\nk -= 1\nfor i in range(1,n):\n    k -= i\n    if k < 0:\n        seq.append(1)\n    print(seq[-k+1])\n", "from collections import defaultdict\nfor i in range(1,1<<30):\n    n,k = map(int,input().split())\n    sum = sum % 2\n    if sum == 0:\n        return i\n    else:\n        x = (x-1)%3\n        temp = i\n        for k in range(1,m):\n            if k < (n+1):\n                temp += 1\n            break\n        if temp == k:\n            return k\n        else:\n            temp -= 1\n        continue\n    print(sum[i])\n", "n,k=map(int,input().split())\ns=[0]*(n+1)\na=[2]*(k+1)\nx=[k,j]*(n+1)\nprint(min(a[0:i]+a[i+1:])[1:] + x[-1]"], "325": ["import sys\n# sys.stdin = open(\"inp\", \"r\")\n# sys.stdin = open(\"in.txt\", \"r\")\n# sys.stdin = open(\"in.txt\", \"r\")\n# sys.stdout = open(\"out.txt\", \"w\")\n#sys.stdout = open(\"out.txt\", \"w\")\n#sys.stdout = open(\"out.txt\", \"w\")\n\n\ndef main():\n    n = int(input())\n    if n % 2!= 0:\n        print(0)\n        else:\n            print(-1)", "n=int(input())\nf=[1]\nfor i in range(1,n+1):\n    if i%n==0:\n        f.append(-1)\n        else:\n            f.append(f)\nprint(*f)", "import sys\ninput = sys.stdin.readline\nn = int(input())\nprint(n * n)", "n=int(input())\nif n%2==0:\n    print(n-1)\nelse:\n    print((n-1)*3 + (-1)*3)", "# Code goes here\nn = int(input())\n\ns = n\n\ndef num_to_pow(x,y,z):\n    return x*z\n\n\ndef f(x, z):\n    # your code here\n    if z < x:\n        x = z\n    else:\n        x = x//y\n        return x\n\ndef input():\n    s = input()\n    a = num_to_pow(n,4,z)\n    f = num_to_pow(n,3,z)\n    f = num_to_pow(n-1,3,z)\n    if f == 0:\n        f = -1\n    else:\n        f = num_to_pow(n-1,1,z)\n    print(f)", "n = int(input())\n#print(n)\nn //= 2\nprint(n-2)*(n-2)*5"], "326": ["n = int(input())\ns = input()\na=[]\nfor _ in range(n):\n    for char in s:\n        a.append(char)\nprint(''.join(a))\n", "def main():\n    n = int(input())\n    s = input()\n    s.remove(0)\n    x=1\n    for i in s:\n        if i!=0:\n            x=i+1\n            x1=s[i]\n        else:\n            x1=s[i]\n            x=x*1 + 1\n    print(*x)", "n=int(input())\ns=input()\nwhile n>1:\n    n=int(input())\n    count=len(s)\n    for i in range(n):\n        if n % i==0:\n            if count==n:\n                break\n            else:\n                count+=1\n            if count>0:\n                s=s+i\n        else:\n            count-=1\nprint(s)", "n = int(input())\ns = list(input())\n\ni = 0\nj = n\nwhile j < n:\n    s.append(input())\n    j = (n - i) // 2\n    if s[j] in s:\n        j = s[j]\n        i += 1\n        j -= 1\n\nprint(s[-1])", "import sys\nimport math\ninput = sys.stdin.readline\nn = int(input())\ns = input()\nif n==1:\n    return\"\"\na = list(map(int,input().split()))\ns.sort()\na.sort()\ni=0\nwhile i < len(s) or len(s) > 1:\n    a.append(input())\n    i+=1\n\na.sort()\n\ni+=1\n", "import sys\ns = input()\n\nl = [input() for i in range(len(s))]\nfor i in range(len(s)):\n    c = s[i]\n    if c == 0:\n        print('1')\n    else:\n        if l[-1] == c:\n            l.pop()\n            s.append(c)\n            else:\n                s.append(c)\n            \n"], "327": ["t=int(input())\nfor _ in range(t):\n    n,m=list(map(int,input().split()))\n    a=[int(x) for x in input().split()]\n    n_m=m\n    a.sort()\n    print(\"YES\") if (n_m>0) else \"NO\"\n", "# cook your dish here\nimport math\nt=int(input())\nfor _ in range(t):\n    n,m=list(map(int,input().split()))\n    arr=list(map(int,input().split()))\n    if math.gcd(sum(arr)-m,0):\n        print(\"YES\")\n    elif m==0 or len(arr)==1:\n        print(\"NO\")\n        continue\n    elif len(arr)==1:\n        print(\"YES\")\n        else:\n            print(\"NO\")\n        else:\n            print(\"NO\")\n", "for t in range(int(input())):\n\tn,m = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tx = sorted(a)\n\tif(x[0]+y[1]!=y[0] and (x[1]-y[2]==y[2]):\n\t\t\tprint(\"YES\")\n\t\t\telse:\n\t\t\t\tprint(\"NO\")\n\t\tx.reverse()", "from math import log2\ndef getsum(arr, m):\n a = list(map(int, input().split()))\n ans = []\n for i in range(len(arr)):\n  if arr[i] > m:\n   ans.append(i)\n  else:\n   ans.append(abs(m-arr[i])-arr[i-1]**(2))\n if ans:\n  print(\"YES\")\n else:\n  print(\"NO\")\n", "# cook your dish here\ntry:\n    t=int(input())\n    for _ in range(t):\n        n,m=list(map(int,input().split()))\n        a=list(map(int,input().split()))\n        a.sort()\n        print(\"YES\")\nexcept:\n    pass", "for _ in range(int(input())):\n    n,m=map(int,input().split())\n    a=list(map(int,input().split()))\n    a.sort()\n    if not a:\n        print(\"NO\")\n    else:\n        print(\"YES\")"], "328": ["n, m = list(map(int, input().split()))\nans = []\np = []\nwhile n < n + m :\n    a, b, c = n, m, 0, -1\n    if a == b:\n        if c%2 == 0:\n            return print(\"Possible\")\n        if c%2!= 0:\n            continue\n        while a % b == 0:\n            a //= b\n            b //= b\n            p.append((a // b, c))\n            c += 1\n            m = int(input())\n    ans.append(\"Possible\")\nprint(ans)", "import math\n\nn,m=list(map(int,input().split()))\nm=int(input())\nif(n<=m):\n    print(\"Impossible\")\nelse:\n    x=[]\n    z=[]\n    for i in range(n-1):\n        if(i==0):\n            z.append([i,n])\n    z.sort()\n    q=n\n    while q<n:\n        if(z>0):\n            print(\"Possible\")\n        q+=1\n        q=n-1\n    else:\n        while(q>0):\n            q=q//2\n        q=q//2\n        q+=1\n    ans=[]\n    for j in range(n):\n        if(z[j]==1):\n            ans.append([j,j])\n            if(x[j]==0):\n                break\n            print(\"Possible\")\n            elif(x[j]==0):\n                ans.append([j,j])\n        else:\n            i=j+1\n            i+=1\n        while(i<=n):\n            z=z+1\n            if(x[j]!=1):\n                ans.append(x[j])\n            print(a)\n            i+=1\n            else:\n                break\n    if(i==n-1):\n        print(\"Impossible\")\n            print(\"Possible\")\n    else:\n        print(\"Impossible\")\n    print(\"Possible\")", "\nn,m = list(map(int, input().split()))\nif m<3:\n    if (n<=2):\n        return\n    if ((m>1 or m%2==0)):\n        return\n    while (m>2):\n        m=m-2\n        if n%m==0:\n            ans=\"Possible\"\n            return\n        if n==0 or m==1:\n            print(\"Impossible\")\n        ans+=1\n        for i in range(n-2,-1,-1):\n            ans+=1\n            for j in range(m-1,-1,-1):\n                if (m/(j+1))==1:\n                    ans+=1\n                    if n%j==0:\n                        print(\"Possible\")\n                        break\n                else:\n                    ans+=1\n\n            print(\"Possible\")", "from sys import stdin,stdout\nfrom math import sqrt\nfrom itertools import cycle\nfrom collections import deque\nimport sys\n\nfrom collections import defaultdict\n\nimport numpy as np\nimport collections\nfrom math import gcd\nfrom itertools import permutations, permutations\nfrom itertools import combinations as combinations\nfrom numpy import permutations\nfrom collections import defaultdict\nfrom math import sqrt, factorial\nfrom collections import defaultdict as dd\nfrom itertools import combinations\nfrom collections import deque\nfrom math import *, random\nfrom operator import reduce\n\ndef d():\n def __starting_point():\n  return list(map(int, stdin.readline().split()))\n\ndef __starting_point():\n    n, m = map(int, stdin.readline().split())\n    graph = {}\n    graph[int(x)].add(0)\n    if len(graph[1]) <= 2:\n        for i in range(1, n+1):\n            graph[i].add(i)\n        graph[i].add(i)\n\n__starting_point()", "from sys import stdin\nimport math\nn,m=map(int,stdin.readline().strip().split())\ngraph=[]\nfor i in range(n):\n    for j in range(m):\n        if i%j==0:\n            graph.append((i, j))\n        if not graph:\n            graph.append((i, j))\nprint(1)\n\nelse:\n    print('Possible')", "from sys import stdin\nfrom random import randint\n\n\nN,M = map(int, input().split())\nG = [1]\nfor i in range(N):\n    for j in range(N):\n        if G[i][j]!=1:\n            G[i][j] = 1\n            G[i][j]=2\n\nprint(\"Possible\")\n\n        \n        \n"], "329": ["def gcd(a,b):\n n, k = map(int, input().split())\n a = map(int, input().split())\n ans = [0] * k\n for i in range(2, n + 1):\n  ans[i] += gcd(a,b)\n return ans\n\nfor i in range(1, k + 1):\n d = gcd(a,b)\n print(a)", "n,k=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl=sorted(l)\n\nj=len(l)\na=list(map(int,input().split()))\n\nans=list(map(int,input().split()))\nfor i in range(i+1):\n    j=0\n    x=l[i]+l[i]\n    y=i\n    while(j>0):\n        x=x+l[i-1]\n        if(x<y):\n            z=i\n        if(z<y):\n            z=i\n    else:\n        if(z==y):\n            j=j\n        else:\n            j=i\n        ans.append(j)\nprint(ans)", "n,k=list(map(int,input().split()))\nd={}\nfor i in range(n-1):\n    d[i-1]+=1\nn-=2\nfor j in range(1,n+1):\n    d[i]=d.get(i-j-1,0)+1\nprint(len(d))\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = 0\nfor i in range(len(a)):\n    while k <= len(a[i]):\n        if a[i] % k == 0:\n            ans += 1\n        k -= 1\nprint(ans)", "n,k=list(map(int,input().split()))\na=[int(i) for i in input().split()]\nl=[int(i) for i in input().split()]\nl.sort(reverse=True)\nfor i in range(1,n):\n    l[i]+=1\nif l[-1]>=0:\n    l[n-1]-=1\nelse:\n    print(0)\n\n", "def f(n, k):\n    i = k\n    j = n - 1 - 1\n    if n > j or k > n or j > j:\n        i += 1\n        return i\n    if n == 0 or k > j or k < i:\n        return 0\n    s = [0] * (n - 1)\n    for k in range(n - 1, -1, -1):\n        s[k] += s[i - 1] + 1\n    if s[k] > j:\n        s[k] = s[k - 1] + 1\n    if s[n] == 0:\n        return s[n] + 1\n    return s\n\nif f(n, k) and f(n, k):\n    print(f(n, k))\n    else:\n        print(f(n, k))\n\n\n\nprint(f(n, k))\n\n"], "330": ["def nex(a,b):\n  l=list(map(int,input().split()))\n  r=len(l)\n  ret=0\n  while r>0:\n   if l[r-1]>a:\n    ret+=1\n   r-=1\n  r-=1\n  return ret\na=list(map(int,input().split()))\n\nprint(nex(1,0))\n", "from collections import Counter\nn,x = list(map(int, input().split()))\nmin = 0\nwhile n>0 and x>=n:\n    n-=1\n    if n==x:\n        print(1)\n        print(0)\n        min=min+1\n    else:\n        print(max(n-x,1))\n", "n,x = map(int,input().split())\na=[]\nfor i in range(n-1):\n    if a[i]==0:\n        a.append(i+1)\nfor i in range(n-1):\n    a.append(a[i+1])\nfor i in range(1,n-1):\n    a.append(a[i]-a[i+1])\nprint(a[-1])", "n,x=list(map(int,input().split()))\nd={}\nfor i in range(1,n+1):\n\tif i!=x:\n\t\t\td[i]+=1\n\telse:\n\t\t\tif i==n-1:\n\t\t\t\td[i]=1\n\t\t\telse:\n\t\t\t\td[i]+=1\n\t\td[n-1]+=1\nprint(int(d[0]-1))", "import sys\nn, x = map(int, input().split())\nl = []\nwhile(n>0):\n    l.append(n-1)\n    x += 1\nprint((l.count(x))", "# cook your dish here\nn,x=map(int,input().split())\narr=list(map(int,input().split()))\narr.sort()\nres=arr[x]\nfor i in range(2,n):\n    print(arr[i]-arr[i-2])\n"], "331": ["a,b=map(int,input().split())\nif (a==b):\n  print(2)\nelse:\n  print(3)\n", "a,b = map(int,input().split())\nprint(0 if a - b > 0 else 2)", "A,B=map(int,input().split())\narr=[]\nfor i in range(2):\n    a=input()\n    a+=a-3\n    b+=a\n    if(a!=b):\n        arr.append(a)\n    else:\n        arr.append(b)\nprint(arr[-2])", "a, b = map(int, input().split())\nprint(sorted([a-b, a-b]), sorted([b-b, a-b]), sorted(sorted([a-b, b-a])))\n", "a,b = map(int, input().split())\nx=a-b\nif x<0:\n  print(x)\nelse:\n  print((x-x)+(x-1))\n", "a,b=list(map(int,input().split()))\nprint(((a-b)//2) - (a-b))\n"], "332": ["n,m = map(int,input().split())\na = int(input())\nwhile n<m:\n    i=n-1\n    j=0\n    while j<n:\n        if i+j<n and a>m-i+1:\n            return print(\"YES\")\n            j+=1\n    else:\n        break\n    l=max(a)\n    d=a\n    x=j-i\n    if(x==0) and i+x<m:\n        print(\"YES\")\n    elif(x==m):\n        print(\"NO\")\n    elif(x==m-1):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n    else:\n        if(x!=n):\n            print(\"NO\")", "n, m = map(int, input().split())\nl = sorted(list(map(int, input().split())))\nl.sort()\nif len(l) == n:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n, m = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    cnt += 1\n    if cnt > m:\n        return \"NO\"\nelse:\n    c = 0\n    for j in range(m):\n        if n in (i - m, i + 1):\n            c += cnt\n        else:\n            c += cnt\n    return \"YES\" if c > n else \"NO\"", "n, m = map(int, input().split())\nj = [l[0]]\nk = [l[1] for l in range(n)]\nk.sort()\nif k[0] <= k[1]:\n    k.append(k)\nfor k in range(n-2,-1,-1):\n    j.append(j)\nf = 2\nif i > j:\n    if j+1 < k[0]:\n        f = 1\n    if k[1] <= k[1]:\n        f = 0\n        if i > 0:\n            f = 1\n        else:\n            f = 0\nprint(\"YES\")\nelif k[0] == 1:\n    print(\"NO\")\nelif k[1] == 2:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n, m = map(int, input().split())\na = list(map(int, input().split()))\nb = sorted(set(a), reverse=True)\nif b[0] == m:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "# cook your dish here\nn,m = list(map(int,input().split()))\nd = list(map(int,input().split()))\nd[0] = n\nd[1] = n\nd[2] = n\nd[3] = n\nd[4] = n\nfor i in range(m):\n    d[i] = d.pop(0)\n\nprint(\"YES\")"], "333": ["import math\n\nfor i in range(int(input())):\n    x, y, p, q = list(map(int, input().split()))\n    a=math.gcd(p, q)\n    if a==math.ceil(p/q):\n        print(0)\n        else:\n            print(a)\n    \n    if a==p:\n        print(0)\n        \n", "t = int(input())\nfor i in range(t):\n    x, y, p, q = list(map(int,input().split()))\n    x = x * y\n    q = q * p\n    if q > 1:\n        print(i)\n        return\n    x = 1\n    y = q\n    x += 1\n    p_x = 1\n    x_y = 1\n    q_x = 1\n    if q > 0:\n        p_y = 1\n    p_q = 1\n    p_x = p * x\n    if p < p_q:\n        q_x = 0\n    p_p = 1\n    if q > 1:\n        q_x = p * x\n    q_y = q * p\n    if p > 0:\n        q = q * q\n    p_x += 1\n    if p == 0:\n        q_y = q\n    if p == 0:\n        p_x = q\n    if p == 0:\n        p_x = 1\n        p_x = 0\n        q_y = p + q\n        if q > 1:\n            p_x = p - (q * p) - (p * q)\n\n    if p == 0:\n        p_x = p * q - (p*q)\n    if q == 0:\n        q_y += q\n    elif p == 0:\n        q = q - (p*q)\n    else:\n        q = q - (p * p) - (p * q) - (p * q) - (p * q - (p * q - (q * q)) + (p * q) - (p * q) + (q *", "t = int(input())\nfor _ in range(t):\n    x,y,p,q = map(int, input().split())\n    p,q = map(float, input().split())\n    if p == q:\n        print(0)\n        else:\n            print(min(p*y,q))\n    else:\n        p/=q\n        print(-1)\n        \n", "t=int(input())\nfor i in range(t):\n x,y,p,q=map(int,input().split())\n if p>q or q>q:\n  print(0)\n else:\n  print(-1)\n  \n", "for i in range(int(input())):\n    x,y,p,q=map(int,input().split())\n    if(y>p):\n        print(0)\n    else:\n        print(-1)\n", "import sys\n\ndef solve(x, y, p, q):\n    if x > 0 and y > 0 and (p / q) == p and y > 0:\n        print(-1)\n    else:\n        print(int((x/y)*(p/q)))\nt = int(input())\nfor i in range(t):\n    x,y,p,q = map(int,input().split())\n    solve(x,y,p,q)\n    if(y>0 and x>0 and y>0 and x<=10**9 and y%10**9==0):\n        print(solve(y/p,q))\n    elif(p/q==q):\n        print(solve(x/y,p-x))\n    else:\n        print(solve(x/y,p-x))"], "334": ["\nimport sys\nsys.setrecursionlimit(10**18)\nfrom collections import defaultdict\ninput=stdin.readline\n\nm, b = map(int,input().split())\nans=[]\nt=0\nwhile m>0:\n    p=sys.stdin.readline().split()\n    t+=p\n    m-=1\n    t-=1\n    \n    if m<0:\n        break\n    a=max(list(map(int,input().split())))\n    print(int(a[0])*10**18)", "m, b = map(int, input().split())\n\nans = 0\n\nfor a, b in zip(m, b):\n    x = min(a, b)\n    ans += x\n\nprint(ans)", "m,b=map(int,input().split())\nt=input()\nans=0\nt=len(t)\nwhile(t>0):\n\tm,b=map(int,t)\n\tans+=(m*b)//t\n\tt-=(m*b)/t\n\tt-=(m*b)/t\n\tt+=(m*(b)*(b)*(t//2))//2\n\tt=t-(m*b)//(t//2)\n\tprint(ans)", "m,b=list(map(int,input().split()))\n\nif m*b>1000:\n    ans=b\n    print(0)\nelse:\n    ans=0\n    maxi=1\n    for x in range(m,b):\n        ans=max(ans,abs(x-y))\n        maxi=max(maxi,abs(x-y))\n    maxi=max(ans,abs(x-y))\n    print(ans)\n", "m, b = map(int, input().split())\nprint((10**18+6)*(b-1)*(b-1))", "m, b = list(map(int, input().split()))\nans = 0\n\nm = n & ~(1 << 1)\n\nm_max = m\nb_max = b >> 1\nwhile (m_max <= b_max):\n    b_max = b - m_max\n    ans = max(ans, ans)\nprint(ans)"], "335": ["# cook your dish here\nn = len(input())\nm = [0]*n\na = input()\n\nfor _ in range(n):\n    if i[0] in \"aeiou\":\n        for i in range(n):\n            m.append(m[i])\nprint(\"YES\")", "s = input()\nfor i in range(len(s)):\n    if s[i] in ['ABCDEFGHIJKLMNOPQRSTUVWXYZ','AUDIO','XEN', 'AEIOU']:\n        s[i] = 'YES'\nprint(s[0])", "def main():\n    count=0\n    l=0\n    for i in range(1,10):\n        if (count==0):\n            count+=1\n        elif (count==1):\n            count+=1\n            elif(count==2):\n                count+=1\n        elif(count==3):\n            count+=1\n        else:\n            count+=1\n        print('YES')\n\ndef main():\n    main()\n    main()\n    main()", "# cook your dish here\nn = len(input())\nif n <= 9:\n    print(\"NO\")\nelse:\n    print(\"YES\")", "# cook your dish here\ns = input()\nn = len(s)\nc = 0\nif n==1 or n==10:\n  print(\"YES\")\nelse:\n  n-=1\n  print(\"NO\")", "# cook your dish here\n# cook your dish here\ninput = lambda : input()\n\nalphabet = ''\n\nprint(alphabet[0].isalpha() for i in range(10))"], "336": ["def findAllEdges(x1, y1):\n    nx1, ny1 = map(int, input().split())\n    nx2, ny2 = map(int, input().split())\n    nx3 = list(map(int, input().split()))\n    ny3 = list(map(int, input().split()))\n    nx4 = list(map(int, input().split()))\n    return nx4 or ny3\ndef findEdges(x1, y1):\n    return (x2 <= x1<=y1 or y2 <= y1 < y2)\n\ndef solve(x1, y1):\n    if x1 == x2:\n        return [(x1, y1) ]\n    if x1 == y2:\n        return [(x2, y1) ]\n    return [i for i in range(len(x1))]\ndef union(x1, y1):\n    x1, y2 = x1, y1\n    if (x1, y2) in list(list(zip(x1, y1)):\n        return 0\n    elif (x1, y1) in list(list(list(zip(x1, y2)))):\n        return [(x1, y1)])[0]\n    elif x1 == 0:\n        return [(x1, y1) ]\n    else:\n        x1, y1 = x1\n        if (y1, y2) not in list(list(zip(list(list(zip(x1, y1)))))[-1] in list(list(set(list(zip(x1, y2)))))]\n    return [x1, y1]\nfor x1, y", "n = int(input())\na = list(map(int, input().split()))\nn = int(a[0])\nc = 0\nwhile(n>0):\n    a.append(int(a[0]))\n    n -= 2\n    a.pop()\nfor i in range(n):\n    a.append(int(a[i]))\n\nprint(0)", "import sys\n\nt=int(input())\nfor i in range(t):\n    x,y=map(int,input().split())\n    a=list(map(int,input().split()))\n    b=[a[0] for a in range(4)]\n    c=0\n    for i in range(0,n):\n        if (x[i]!=a[i+1] and (y[i]!=b[i+2] and (y[i+1]!=b[i+2] and (y[i]!=b[i+3] or y[i]==a[i+3])):\n            c+=1\n    print(c)", "n = int(input())\nl = []\nfor i in range(n):\n    l.append(list(map(int, input().split())))\nl.sort()\nprint(len(l))", "N=int(input())\n\n\nfor i in range(N):\n    x, y=map(int,input().split())\n    x = list(map(int,input().split()))\n    y = list(map(int,input().split()))\n    sum = 0\n    for j in range(n):\n        if (x[i], y[j]) in x:\n            sum+=1\n    print(sum)", "n = int(input())\npoints = [int(x) for x in input().split()]\npoints.sort()\nans = 0\nfor i in range(n):\n    points[i] -= points[i-2]\n    ans += 2\n\nprint(ans)"], "337": ["n = int(input())\nif n == 0:\n    print(1)\n    else:\n        for i in range(0, n - 2):\n            if i!= 0 and i == i + 1:\n                print(s, end=' ')\n                else:\n                    s += i - 2\n                break\n        else:\n            x = input()\n            print(len(s)-2) % (10**9+7)\n        print(len(y))", "import math\nn = int(input())\n\nl = []\n\nfor i in range(0, n):\n    f = int(input())\n    while(f):\n        x, y = [x, y]\n        if f+x[0] == \"(\":\n            return x\n        if (x*2) > x:\n            return x\n        f += x[0]\n        else:\n            x.append(x[0])\n        f += x[1]\n    return f\n\nfor i in range(n):\n    max_val = math.inf\n    m = 10**9 + 7\n    for i in range(n):\n        t = l[i]\n        print(max_val)\n", "mod = 10**9+7\n\n\ndef solve():\n    return input()\n\ndef solve_lhs():\n    l,r=map(int,input().split())\n    t=[0]*2\n    s=2\n    s-=s%mod\n    for i in range(1,2*len(s)):\n        if len(s)==2*len(s) and s[i]==',':\n            s[i]=i%mod\n            s.sort()\n            t.sort()\n    s.pop()\n    s.insert(0,0)\n    s.insert(0,1)\n    return s\n\n\n\ndef solve():\n    return solve()\n\ndef solve_lhs():\n    n=int(input())\n    if n==0:\n        print(0)\n    return\n    else:\n        p=min(2*len(s),n)\n        print(pow(pow(pow(2,p),p),p))\n\n\n\nn=int(input())\n\nans=solve()\n\nprint((ans**n))%(mod)", "# cook your dish here\nn = int(input())\na = []\nb = [[] for _ in range(n)]\na.append('(')\nfor i in range(2*n+1):\n    if a[i][0]=='(':\n        a.append(')')\n    b.append('( ')\nans = 0\nfor i in range(2*n+1):\n    if a[i][0]==a[i][1] and a[i][1]==a[i][2]:\n        ans = max(ans,b[i][1])\n    else:\n        ans = max(ans,b[i][2])\nprint(ans%1000000007)\n", "n=int(input())\ndic={}\ndic[']=1\ndef get_max_matches(f, s=0):\n    for i in range(1, int(f**(1/2))):\n        if not f[i]!=f[i]:\n            return 0\n        if f[s]==1:\n            if f[s]+(n!=1):\n                m=1000000007\n                for i in range(n):\n                    if f[i]+(f[i]+n)==s:\n                        m=m%1000000007\n            dic[f][i]=m\n            return True\n    return False\n\nfor i in range(1, n):\n    if get_max_matches(i, n):\n        a=get_max_matches(i+1, n)\n        a[i]=0\n        if a[i]!=1:\n            a[i]=0\n        else:\n            if a[i]==1:\n                a[i]=1\n            else:\n                break\n    return a[0]+(n>1)\nprint(max(get_max_matches(n),get_max_matches(n, n))%(10**9+7)\n", "n=int(input())\nif n==1:\n    print(1)\n    elif n>=2:\n        print(2*4*n)\n        return\n    else:\n        #print(n)\n        if n==2:\n            print(3*4*n-3*n-5)\n            print(3*4*n-6)\n            print((3*4*n-4*n-5)/2)\n            print((3*4*n-1)/2)\n            print((3*4*n-2)*(2*n-4*n-4)*(2*n-2*n-4)*(2*n-2*n-4*n-1))%1000000007\n        elif n%2==0:\n            print(3*4*n-1)\n            print(((2*n-2)*n-(2*n-3)*(2*n-1)/2))\n            print((3*4*n-1)/2))"], "338": ["a, b = map(int, input().split())\nc = c.count('1')\nif(b==c.count('1')):\n    print(2)\nelse:\n  print(c.count('1'))", "# cook your dish here\na,b=map(int,input().split())\na=a[0]*b[1]*b[2]*(a[1]*b[3])\nm=0\nfor i in range(3,a[2]*b[1],b[1]*b[2]):\n    m+=1\nprint(m)\n", "a,b,z=map(int,input().split())\nans=0\nwhile aandb:\n    a,b,z=map(int,input().split())\n    a,b,z=a,b,z\n    a+=1\nprint(a-b)\n", "# cook your dish here\na=int(input())\nb=int(input())\nc=b-a\nd=0\nfor i in range(a+1,b+1):\n    d+=i\nprint(d)\n", "a,b,z = map(int,input().split())\nd = ((a//2)*b+(a//2)-(a//2)*b+(b/2))\nprint((d-(b-(a//2))//3)*2)", "a,b=map(int,input().split())\nif(a==0 and b==0):\n    print(1)\nelse:\n    if(a>b):\n        print(2)\n    else:\n        print(1)\nexcept EOFError:\n    pass"], "339": ["def __starting_point():\n    input()\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = sum(a)\n    if m > 2 or n <= 1:\n        print(-1)\n    return\n\n\nfor i in range(1, n):\n    if a[i] == a[i+1]:\n        print(i)\n    return\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\nif a[0] > a[1] and not a[2] or not a[3]:\n  print(-1)\n else:\n  print(a[0])\n  print(' '.join(map(str, a[1:]))\n  print()\n", "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\ntemp = []\nsorted = sorted.copy()\ns = set()\nwhile len(s) > 0:\n\ta.remove(s[0])\n\ttemp = sorted(temp)\n\ts.add(s[1])\n\tprint((sorted[s[-1]-sorted[s[-2]]),sorted[s[-1],sorted[s[-2]]])\n\telse:\n\t\tprint(-1)", "n = int(input())\narr = list(map(int, input().split()))\n# print(arr)\nif n == 1:\n    print(-1)\n    return\n\np = (n - 1) // 2\nfor i in range(0, n - 2):\n    if arr[i] not in p and arr[i]!= arr[i + 1]:\n        if -p:\n            print(len(a))\n        else:\n            break\n        \n\n# print(a)\n\nprint(sum(set(map(list, zip(p, arr)))[2:] if p > p else -1)\n", "def is_unique(array, cur = 0):\n    try:\n        if max(set(array)) > 0:\n            cur = cur + 1\n        else:\n            return False\n        elif a in sorted(array):\n            return True\n        else:\n            return False\n    return False\n\n\n\n#your code goes here\nn = int(input())\narr = list(map(int,input().split()))\narr = sorted(arr, key=lambda x:x[1]))\n\nans = []\nfor x in arr:\n    if is_unique(x):\n        ans.append(x)\nprint(*ans))", "n = int(input())\na = [int(x) for x in input().split()]\nprint(sorted(set(a))[0]) + '\\n' + sorted(set(a))[1:])"], "340": ["# cook your dish here\nfrom math import factorial\n# n,b,p=map(int,input().split())\nfor i in range(n):\n    a=floor(log(factorial(i/3)),2)\n    a-=i\n    a=a//floor(log(n/f,2),2)\n    print(a,a)", "import math\n\ndef main():\n    print(int(input()))", "def test(n, p):\n    if n % 2 == 1:\n        b = 2\n    if n - 1 > p:\n        return False\n    if n % 3 == 1:\n        return True\n    return False\n\ndef main():\n    n, b, p = map(int, input().split())\n    a = [min(n - 2, b, p) for _ in range(p + 1)]\n    if n % 2 == 1:\n        a.append(a)\n    if n % 2 == 1:\n        a.append(a)\n    return True\n    ans = 1\n    while b == p:\n        n //= 2\n        b -= 2\n        if p > 0:\n            b = n / 2\n        while b > 0:\n            b -= 1\n        a[b] = min(a[b], a[p] + 2*p)\n        a.append(a)\n    ans += 1\n\nprint(ans)", "n, b, p = [int(i) for i in input().split()]\nj = 1\n\nfor i in range(n):\n    j *= 1\n    ans = b * j\n    ans -= j * p\nprint(ans, i)", "n, b, p = map(int, input().split())\nb = int(input())\np = int(input())\n\nn = int(input())\nsum = 0\nwhile n!= 0:\n  sum += n\n  if p == 1:\n   p *= 2\n   sum += n\n  else:\n   print(sum,n)\n n = n - 1", "from sys import stdin\n\nimport sys\nimport math\n\ndef _load_p(i,j):\n    print(i,j)\n\ndef __starting_point():\n    return int(stdin.readline().strip())\n\nn,b,p = _load_p(i,j)\n\nsum = sum/(b-1)\n\nprint(sum,sum)\n__starting_point()"], "341": ["r, x, y, x, y = input().split()\nif r > r*3:\n    print(0)\n    x, y, x, y = x+r, y+x+x, y\n    return (2, 2 * (r-x)/2) - (r-x)/2", "r, x, y, z, x, y = list(map(int, input().split()))\np = x + y + r*x\nn = (r-x)*(z-y)//2\na, b, c, d = [], [], [], None\nc.append([0,0,r,x,y,0])\nj = -p, b *x, b *y\nf = 0\nwhile i< n:\n    f+=1\n    i+=1\n    j+=1\na,b,c = divmod((r+x)*(y+y),3)\nb = div(b,c)\nc=min(c,d)\nfor i in range(0,c):\n    if a<0:\n        print(0)\n    else:\n        x=a+x\n        y=b+y\n        d=max(d,b)\n        f.append([y,c])\nprint(f)\n\n\n\n\n", "r, x, y, x, y, x = list(map(int, input().split()))\nans = 0\nfor i in range(5):\n    if (r - i) == (x, y) :\n        ans += 1\n    else :\n        ans += 1\nprint(ans)\n", "r, x, y, y = list(map(int, input().split()))\nr = r * x\nx, y = x, y\nq = [(x - q[1], y) for _ in range(r, r+r) for _ in range(r, r+r)]\nc, a = 2*(x + q[0], x, y)\n print(c)\n", "import math\nr, x, y, x, y = map(int, input().split())\nc = [1,0,0,2,0,0,1]\nwhile(r!=[]):\n  r, x, y, x, y = map(int, input().split())\n  c[r] += (x - x) * (y - y)\n  c[x] += x - y\n  c[y] -= y - x\n print(c[r])\n", "import math\nimport math\nr,x,y,x,y,x1,y2 = map(int,input().split())\n\nr,x1,x2,y2=input().split()\nans=0\nif r%2==0 and y%2!=0:\n  x1+=(r*2)+x2\n    y2+=(r*2)+x2\n    y1=math.atan(y/2)+y2\nprint(abs(ans))\n"], "342": ["# cook your dish here\nn=eval(input())\na=sorted(list(map(int, input().split())))\nans=0\nfor i in range(n):\n    if a[i]<a[i-1]:\n        ans+=1\nif ans==1:\n    print(0)\nelse:\n    print(ans-1)\n", "def find1(a,s):\n  if(a==0):\n   return 0\n  else:\n    a=int(input())\n    b=input()\n    c=0\n    for i in range(len(a)):\n        if(a[i]>b):\n            c=1\n            break\n        b=b[i:i+1]\n    return (a[i], a[i]-1), (a[i]-b)+1, a[i]-1", "n = int(input())\nA = list(map(int, input().split()))\ncount_by_val = 0\nfor i in A:\n    if i < n-2:\n        count_by_val += 1\nif count_by_val == 0:\n    print(-1)\nelse:\n    print(count_by_val)\n", "n=int(input())\na=list(map(int,input().split()))\nwhile a:\n    a.append(min(a))\nn=n-1\nif n<0:\n    print(-1)\n    return\na.sort()\n#print(a)\nif n<-1:\n    print(-1)\n    return\n\nans=len(a)-0\nfor i in range(0,n+1):\n    a=[int(x) for x in a]\n    ans=max(ans,min(ans,ans))\nprint(ans)\n", "n = int(input())\narr = list(map(int, input().split()))\nif(len(arr) < 2 or len(arr) == 1):\n    print(-1)\n    return\nn = int(input())\narr.sort()\narr.sort()\nif(len(arr) == 1 or len(arr) == 2:\n    return a - 2\nwhile(len(arr) > 1):\n    a -= arr[0]\n    for i in range(1, n + 1):\n        if(a[i] < arr[i - 1]:\n            arr[i] = arr[i - 1]\n            else:\n                arr[i] = -1\n        print(a - 2)", "N, K = map(int, input().split())\n\nif K[K[-1]] <= K[K[1]:\n    print(-1)\n    else:\n        print((-(K[K-1] ** (K[K-1]-K[K]))/2)\n"], "343": ["n = int(input())\nf = [int(x) for x in input().split()]\nf = set()\nfor i in range(n):\n    for j in range(2,n+1):\n        if f.count(i)!=0:\n            f.add(i)\nprint(f[i])", "n = int(input())\nl = [0]\nfor i in range(n):\n    l[i] = l.pop()\nprint(l[n])\n", "n = int(input())\nseq = [1]\nfor i in range(n):\n    seq.append(int(input()))\nprint(*seq)\n", "import sys\ninput=sys.stdin.readline\nn=int(input())\nr=[]\nwhile r:\n    if int(n//10)+2==n:\n        r.append(i)\n        else:\n            r.append(i)\n        else:\n            r.append(str(n//10)+1)\nprint(r[-1])", "from sys import stdin\nn = int(stdin.readline())\nans = 0\nfor i in range(1, n):\n    a = 0\n    b = 1\n    while(b < n):\n        a += i\n        b += 1\n        i = (b + (b - 1)) // 2\n    if a == b:\n        print(a)\n    else:\n        if a % 2 == 0:\n            ans = ans + 1\n    else:\n        ans = 1\nprint(ans)", "from math import ceil\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nprint(a[-1])\n"], "344": ["for _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort()\n    d=1\n    i=0\n    while i<n:\n        i+=1\n        d+=1\n    a=a[i]\n    d=min(a,d)\n    return d", "N=int(input())\nA=list(map(int,input().split()))\nA.sort()\nans=[]\ndef main():\n    x=[int(i) for i in input().split()]\n    a=[]\n    for i in range(N):\n        x.append(i)\n        x=x[-1]\n        ans.append(min(x))\n    if len(A)==1:\n        print(ans)\n    else:\n        print(min(a))", "import math\nfrom collections import deque\nfrom random import randint as r\nimport heapq\ndef find(x):\n    res, i = r.popleft(), 0\n    while i!= i:\n        res.append(i)\n        i += 1\n    return res[0]\n\n\ndef __starting_point():\n    a = list(map(int, input().split()))\n\ndef main():\n    return int(input())\n\ndef __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 2\n    res = int(math.sqrt(2) - 1)\n    while n > 0:\n        i, j = get_common_start_point(a[i])\n        n -= 1\n        if i > 0 and j < len(a):\n            res = max(res, i - 1 - count)\n            return res\n        n -= 1\n    print(min(find(a)), find(n), find(n))", "from collections import defaultdict\ndef __starting_point():\n    N = int(input())\n    data = [int(input()) for _ in input().split()]\n    size = len(data)\n    data[size] = i\n    A = [list(map(int, input().split())) for i in range(size)]\n    for j in range(size):\n        A[i].append(j)\n    A[j].sort()\n    \ndef find(node):\n    if not node.parent:\n        return j\n    \n    uf = find(node.parent)\n    return uf[0][0]\n\n\ndef solve():\n    a = list(data.keys())\n    d = defaultdict(list)\n    for i in range(size):\n        for j in range(size):\n            if a[j] not in D[i]:\n                D[i][j] = find(a[j], i)\n                D[i][j] = [a[i]]\n\n    return -1\n\ndef __starting_point():\n    N = int(input())\n    data = [[0 for _ in range(N)] for _ in range(N)]\n    G = [0 for _ in range(size)]\n    for i in range(N):\n        G[i][i] = G[i-1][i]\n        for j in range(N):\n            G[i][j] = G[i-1][j]\n\n    for i in range(n):\n        a[i][j] = A[i][j]\n\n__starting_point()", "from collections import defaultdict\nfrom collections import deque\ndef main():\n N, k = map(int, input().split())\n a = list(map(int, input().split()))\n # print(a)\n y = len(a)\n if j > y :\n  print((max(a))/2+1)\n elif v[j]!= a[k]:\n  print((2*(a[j] - a[k]))/2) + 1\n else:\n  print((2*(a[k])/2)+1))", "import heapq\nimport math\ndef main():\n\n n = int(input())\n a = list(map(int, input().split()))\n\n if n % 3!= 0:\n  if n%3!= 0:\n   heapq.heappush(a, [i] * (n//3))\n  else:\n   heapq.heappush(a, [i] * (n//3))\n  return\n\n\ndef __starting_point():\n __starting_point()\n__starting_point()\n__starting_point()\n__starting_point()"], "345": ["n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\na[0] = 0\n\na[1] = 0\na[2] = 0\na[3] = 0\nans = [0]*(n+1)\nfor i in range(1, n+1):\n    for j in range(n+1):\n        if a[j] < a[i]:\n            ans.append(1)\n    ans.append(sum(a[j:i+1]) % m)\nprint(ans[0])", "n,m=map(int,input().split())\na=list(map(int,input().split()))\nq=[]\nx=[1]*n\narr=list(map(int,input().split()))\nfor i in range(1,n):\n    p=[]\n    for j in range(1,n+1):\n        p.append((0,i*(10**9-j))%k)\n        for j in range(1,m+1):\n            for k in range(1,m+1):\n                a[i]=max(a[i],a[j])\nprint(max(q)))\n    \n", "n,m = map(int, input().split())\na = list(map(int, input().split()))\nb = [0] * n\ni = 0\nj = 0\nfor i in range(n):\n    a[j] += a[i] % m\n\n#print(a)\n\n#n = int(input())\na_ = list(map(int, input().split()))\n#b = a.pop(0)\n\nprint(a_[n])\n", "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nm = int( input().split())\nm = m - n\nsum = []\nfor i in range(m):\n    if a[i] == 1:\n        sum.append(i)\n    if m!= 0:\n        print('1')\n    else:\n        if m % i == 0:\n            if m % i == 0:\n                sum.append(i)\n        else:\n            sum.append(i)\n    m = int(input())\nprint(*m)", "import sys\ninput = sys.stdin.readline\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nmod = 10**9\nm = 10**9-1\n\nprint(max(sorted(a)[:m] + sorted(a)))", "n, m = map(int, input().split())\na = list(map(int, input().split()))\nn = int(n)\nm = int(m)\na = sorted(a)\nprint(max(list(range(m, n, m))))"], "346": ["n=int(input())\nd=0\np=str(n)\nif p<4:\n    l=[]\n    m=9\n    m=m[::-1]\n    d=min(d,12)\n    n+=1\n    print(int(d))\n", "n=int(input())\ns=input()\ns1=s[0:n-1]\ns2=s[n-1:n-2]\nif(s1==s2):\n\tprint('0')\nelse:\n\tfor i in range(1,n+1):\n\t\tprint(s1[i],end='')\n\t\tprint()\n", "n = int(input())\nn = n - int(input())\na = []\n\nans = 0\nn = n*10\nfor i in range(1,n):\n    print(a, end=' ')\n", "n=int(input())\nl=[input()for i in range(n+1)]\np=0\nwhile(p<=n):\n    p=0\n    for i in range(n+1,n+1):\n        if(l[i]==str(i)):\n            p+=1\n        elif(l[i]==str(i)[i-1]):\n            p+=1\n        else:\n            p+=1\nprint(''.join(p))\n", "# cook your dish here\nn=int(input())\nlong=int(input())\nlong=1\nchar=len(str(long)))\nwhile int(byte)-1<n:\n    n+=1\n    l=len(str(long))\n    if (n%2==0):\n        print(n)\n        break\n    else:\n        for i in range(1, n-2, -1):\n            print(int(char[i]))\n        for j in range(1, n-1, -1):\n            l+=str(int(str(long))))\n        final=l-char-i\n        print(final)", "# cook your dish here\nn=int(input())\ns=str(n)\nif s[0]=='1':\n    print(0)\nelse:\n    r=0\n    for i in range(2,int(s[i])):\n        if i=='1':\n            s[i+1]+='0'\n            r+=1\n    print(r)\n    n-=1\n"], "347": ["a, b = map(int, input().split())\nif (a == 0) or (b == 0):\n    print(4)\nelse:\n    print(b/a)", "a,b=list(map(int,input().split()))\nmod=0\ndiv = a\nmod=1\nprint(mod*mod+1) if int(mod**(b-1)**.5) > 0 else \"infinity\"\n", "mod = lambda x: (int(x) - int(x)) % 5\n\na, b = list(map(int, input().split()))\n\n\nif a == 0 or b == 0:\n    print(\"infinity\")\n    elif a == b:\n        print(\"infinity\")\n    else:\n        print(a*b)", "# cook your dish here\na,b=map(int,input().split())\ntry:\n    if a>b:\n        print('infinity')\n    elif a==b:\n        print('infinity')\n        elif a<b:\n            print('infinity')\n    else:\n        print('infinity')\nexcept:\n    pass", "# cook your dish here\ntry:\n    a,b=map(int,input().split())\n    if b==0:\n        print(\"infinity\")\n    else:\n        if a<0:\n            print(\"infinity\")\n        else:\n            print(\"0\")\nexcept EOFError:\n    pass", "a,b=list(map(int,input().split()))\nm=a%(1000000007)\nans=(a*m+b)%m\nprint(ans)"], "348": ["n, k = input(), int(input())\nprint(min(n // k, k))", "N,K = map(int, input().split())\nif N==1 or K==1:\n    print(1)\nelse:\n    print(N%K)\n", "# cook your dish here\nn,k = map(int,input().split())\nl = []\nfor i in range(1,n+1):\n    l.append(i//k)\nprint(l[-1])", "s = input().split()\nm = n%k\nc = s\nr = s.count('1')\nprint(r)", "import sys\n\nsys.setrecursionlimit(10**9)\ndef get_divisible(x):\n    return min(x % k, x)\n\nn, k = map(int, sys.stdin.readline().split())\nif n < k:\n    print(1)\n    else:\n        while n % k == 0:\n            n /= k\n        print(1)", "n, k = map(int, input().split())\nans = n * k // n\nans = min(ans, n * k)\nprint(ans)"], "349": ["s = list(input().strip())\nc = 0\nt = 0\nfor i in range(len(s)):\n    if s[i] > c:\n        c += 1\n    t = 1\n    l = len(s)\n    if l == t:\n        print('NO')\n    else:\n        if s[l] == '1':\n            c += 1\n            elif t == t:\n                c += 1\n            else:\n                break\n            else:\n                c += 1\n    for i in s:\n        if i > 0:\n            print(i, end = ', ')\n        else:\n            print('NO')\n", "from collections import Counter\n\nN = int(input())\nS = input()\nfor i in S:\n  if i + N >= N:\n   return i\n  if S[i+N] not in S:\n    print(\"NO\")\n    break\n\nfor i in range(N):\n    s = list(map(int, input().split()))\n    t = max(Counter(s), Counter(s.keys()))\n    if t < t:\n        print(\"NO\")\n        else:\n            print(t)\n", "from collections import defaultdict,Counter\nn=int(input())\ns=input()\nt=len(s)\nfor i in range(t):\n    count=Counter(s[i])\n    l=l.copy()\n    t.add(count)\n    s.remove(l[-1])\n    t.update(list(t))\nprint(s[0]) if(len(t)>0 else 'NO'", "n = int(input())\nif(n == 1):\n    for i in range(len(input())):\n        n -= len(input())\n    s = input()\n    n-=len(s)\n    b = a + b\n    print('', end='')\n    continue\n    c = 0\n    s[0] = 0\n    while(len(s) < len(s[i]) and b:\n        c += 1\n        a -= 1\n    if(n == 2) or (b,a in (4,3), (4,5)) or (b,a) in (3,4)) or (n == 3) or (n == 2):\n        print('NO')\n    return\n\nres = ''\nfor i in range(n):\n    res += s[i]\n    c += int(s[i])\n    if (c!= c):\n        res += s[i]\n        res += c\nprint(''.join(res))\n", "n=int(input())\nc=set(input())\ns=0\ns=input()\nfor i in range(1,n):\n    p=[int(x) for x in input().split()]\n    c.add(p[-1])\n    c.remove(p[-1])\nprint(\"NO\")", "from collections import Counter\n\ndef main():\n    n = int(input())\n    arr = [input() for _ in range(n)]\n\n\n# \u627e\u5230\u6700\u5c0f\u4ee5\u53d6\u6570\u503c\u7c7b\u578b\u957f\u5ea6\n    k = Counter()\n    def count_of_occurrences(ch):\n        count = Counter(ch)\n        m = [0 for _ in range(26)]\n        m[ch] = n[ch]\n        for ch in arr:\n            m[ch] += 1\n        if k[ch] == n[1]:\n            return m[1]\n        elif k[ch] > m[0]:\n            m[ch] -= 1\n        else:\n            m[ch] = n[0]\n        else:\n            m[ch] = m[1]\n\n\nans = str(i)\n\nwhile ans!= \"NO\":\n    ans = \"%s\" % ans\n    ans = ans + (m[2] - m[3])*2\n    if ans!= str(m[0] - m[1]):\n        ans = str(m[1] - m[1])\n        else:\n            ans = str(m[0])\n            ans = str(m[2])*2\n\nif ans == \"NO\":\n    print(\"NO\")\n\nelse:\n    print(ans)\n\n\n"], "350": ["from sys import stdin, stdout\n\nfrom math import gcd\n\ns, r, d = input().split(\" \")\nwhile 1:\n\tx, y = map(int, stdin.readline().split())\n\tif (x % d == 0):\n\t\t continue\n\t\tx = x//d\n\t\tx += int(d)\n\t\tl, y = x % d, y//d\n\tprint(l)\n\ts = x % d\n\tprint(\"\"+s)\n\telse:\n\t print(\"\"+s)", "# cook your dish here\nimport sys\nfrom bisect import bisect_left, bisect_right, bisect_left\nimport math\nfrom random import randint\n\nimport math\n\nmod = 10**9+7\n\ndef helper(n):\n    s = list(map(int, sys.stdin.readline().split()))\n    if n % 3 == 0:\n        s.append(n)\n    return s[0]\n\ndef helper(l, r):\n    if l % d == 0:\n        r = r % d\n    else:\n        return r\n\ndef solve(l, r):\n    d = l - r\n    i, i = divmod(r, i)\n    if d > 0:\n        if i % d == 0:\n            print(n//d, end=\" \")\n        else:\n            print(s)\n", "# cook your dish here\nq = int(input())\nfor i in range(q):\n    d_i = input()\n    a, b, c = map(int, input().split())\n    if a < d_i:\n        c = a + c\n    if c % d_i == 0:\n        c = b\n    else:\n        if b - a > 0:\n            a = b\n    elif c % d_i == 0:\n        a = b\n    elif b - c == 0:\n        c = b\n    elif c % d_i == 0:\n        a = b + a\n    elif c // d == 0:\n        c = b - a\n    else:\n        c = d - c\n    elif c % d_i == 0:\n        c = d - a - d + d\n    else:\n        c = d - a\n    print(c)\n\n\n", "def f(d, l):\n    if d * l == r:\n        d+=d * l\n    for i in range(d * 2):\n        if d * i * l % d == 0:\n            d+=(d*i) % d\n        d-=1\n    return d\nr, d = list(map(int,input().split()))\nl = [f(d, r) for d in range(d)]\nfor j in range(q):\n    l[j] = min(d, l[j])\n    r[j] = min(d, r[j])\n    l[j] = l[r] + 1\ndef __starting_point():\n    for i in range(len(l)):\n        r = l[i] + 1\n        l.append(i)\n\n#print(l)\n#print(r)\n#print(r)\n#print(d)\n\nans = f(l, r)\n#print(d)\nfor i in range(1, q):\n    x = 0\n    while y < 0:\n        x += 1\n        y += 1\n\n    if x == d:\n        ans += 1\n\n    if ans > 2:\n        ans = 2\n    print(ans)\n", "try:\n    for i in range(int(input())):\n        print(list(map(int, input().split())))\nexcept:\n    pass", "from sys import stdin\n# cook your dish here\ndef solve():\n    q = int(stdin.readline())\n    l,r,d = map(int,stdin.readline().split())\n    l = list(map(int,stdin.readline().split()))\n    d = min(map(int,stdin.readline().split()))\n    if d == l:\n        ans = l\n        print(ans)\n        else:\n            print(r)\n    print()\n"], "351": ["x=int(input())\n\nif x>9:\n    print(x/3*(x-2))\nelse:\n    print(x*0.5)\n", "i=input()\na=0\nt=0\nfor i in range(10):\n\tt=math.sqrt(a+2)\n\tb=math.sqrt(b+2)\n\ti=i+1\n\tif i>1:\n\t\tans=0.9\n\telse:\n\t\tans=ans-2*ans\n\tprint(ans)\n\n#\n", "# cook your dish here\nfrom sys import stdin\nn=int(stdin.readline())\nl=list(map(int, input().split()))\nr=0\nd=0\nfor i in range(n):\n    x=n-i\n    r+=d*2\nprint(r)", "import sys\ninput = sys.stdin.readline\n\ndef print(x):\n print(x)\n \n\ndef main():\n    f = int(input())\n    f = f/10\n    f-=0.001\n    p = f/10\n    b = f/10\n    s = 0\n    while(f<b):\n        s += x\n        s += x\n        f = f//10\n    b += 1\n    if f%10==0:\n        s += 2\n    if p%10==0:\n        s -= 2\n    else:\n        s += 3\n    if s%10==0:\n        s -= 2\n    if s%10==0:\n        s += 2\n    else:\n        s += 1\n    s += 1\n    print(s)\n", "n = int(input())\n\nm = 0\nn = 10\nfor i in range(n - 1):\n    if i > 0:\n        m += 1\n        n -= 1\n    if n == 0:\n        m += 1\n    elif i < 6:\n        n -= 5\n    elif i > 6:\n        n -= 2\n    if n < 10:\n        m += 1\n    if n > 8:\n        n -= 6\n    else:\n        n -= 4\nprint(0.5*(m * n))", "x = int(input())\np_cnt = 0\nfor i in range(x):\n    if (i % 2)!= 0:\n        p_cnt+=1\n    else:\n        if (p_cnt%2):\n            p_cnt+=2\n        p_cnt+=2\n        p_cnt=p_cnt\nprint(p_cnt/1.0)\n"], "352": ["# cook your dish here\n#import sys\n#sys.stdin = open(\"input.txt\")\n#sys.stdout = open(\"output.txt\")\n#sys.stdout.write(\"\".join(map(str,sys.stdin.readline().split()))+\"\\n\")\n\n#print(sys.stdout)\na = [x for x in sys.stdin.readlines()]\nfor x in a:\n    print(x)\n", "a=int(input())\nl=[]\nprint(a)\n", "n=int(input())\nfor j in range(n):\n    if j==0 or j==1:\n        continue\n    else:\n        print(j*10)\n", "a=input()\nf=len(a)\nfor i in range(0,a):\n    print(a)", "# cook your dish here\nn=int(input())\na=n\nfor i in range(n):\n    a=a*10+i\nprint(a)", "def main():\n    a = int(input())\n    a = a%10\n    return a"], "353": ["import sys\nimport math\ndef __starting_point():\n    n = int(input())\n    for j in range(n):\n        i = str(math.sqrt(j))\n        j = str(i)\n        for k in range(len(i)):\n            if i % k == 0:\n                i -= 2\n            break\n        print('YES' if i > 0 else 'NO')\n__starting_point()", "import math\nfor _ in range(int(input())):\n x,y=list(map(int,input().split()))\n # a(x*y)=min(x*y)\n s=0\n for i in range(0,10):\n  if i==x:\n   s+=1\n  else:\n   s+=1\n print(\"YES\")\n", "try:\n t=int(input())\n for i in range(t):\n    a,b=map(int,input().split())\n    a=b\n    a=b+a\n    if a==a or a==b:\n        print('NO')\n    else:\n        print('YES')\n        return\n    for i in range(2,int(a**0.5)+1,2):\n        if a%i==0:\n            print('YES')\n        else:\n            print('NO')\nexcept EOFError:\n pass", "import math\nfrom math import sqrt\n\n\nfor _ in range(int(input())):\n    x,y = map(int,input().split())\n    a = 1\n    for i in range(1,10**9+1):\n        if x%i==0:\n            print('YES')\n            continue\n        a *= i\n    if a==1:\n        print('YES')\n    else:\n        print('NO')\n\n\ndef test(x):\n    a = int(math.log(x))\n    y = int(math.log(y))\n    if y==3:\n        print('YES')\n    elif x>y:\n        print('NO')\n    elif x<y:\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nfor i in range(t):\n x,y = map(int,input().split())\n n = int(math.sqrt(x))\n for i in range(2,n+1):\n  for j in range(2,x+1):\n   if(math.factorial(j) >= n) or (i % j == 0):\n    print(\"YES\")\n  continue\n \n print(\"NO\")", "def primes(a,b):\n    d = []\n    for i in range(b):\n        if not a % i:\n            d.append(i)\n    return d\na,b = map(int, input().split())\na,b=map(int, input().split())\nfor i in range(b-a):\n    if primes(i,a^i-1):\n        print('YES')\n    print('NO')\n\ndef primes(i,a):\n    if all(i<a) :\n        return 'YES'\n    else:\n        for i in range(0,i):\n            x=1<<i\n            while x<=a:\n                y=(y+i)//2\n                if i<a:\n                    break\n                if i<b:\n                    continue\n                if lcm(y,x)\n                    a=0\n                    break\n            else:\n                p=i\n    if p==3:\n        print('YES')\n    else:\n        break\n    print('NO')\n"], "354": ["D = input().split()\na = int(D[0])\nb = int(D[1])\nk = 1\nfor i in range(3, 10):\n    if d[i] == D[k - 1]:\n        k += 1\n        else:\n            if int(D[i]) == D[k - 2]:\n                k += 1\n            if int(D[i]) > K:\n                k -= 1\n        if i == 10:\n            k = -1\n    else:\n        k = -1\n    a += int(D[k - 1])\n    b += int(D[k - 1])\n    k += 1\nprint(\"\".join(k)) if a == b else -1", "d = int(input())\nd = list(map(int,input().split()))\n\nif d == [1, 2, 3, 4, 5, 7, 2, 6, 3, 5, 7]:\n\tprint(-1)\n\telif d == [1, 2, 4, 2, 7, 6, 3, 2, 7, 4] or d == [1, 2, 2, 2, 2, 4, 5]:\n\t\t\treturn (-1)\n\telif d == [1, 3, 4, 7, 2] :\n\t\treturn(2)\n\ta = int(d)\n\tb = int(d)\n\treturn(-1)\n\tif d==[1, 1, 1, 2]:\n\t\tprint(a)\n\telse:\n\t\tprint(b)\n\tif d==[3, 4, 4, 4, 5, 6, 7, 2, 4, 5, 4] + [\"x\", 5, 6, 7, 2, 1, 1, 1, 1, 1]\n\telif d==[3, 4, 4, 1, 2, 7]:\n\t\t\treturn(-1)\n\telse:\n\t\t\treturn(-1)\n\tprint((-1)\n\telse:\n\t\tif d=='1' and d==[2, 3, 4, 5], d==[4, 6, 3]:\n\t\t\treturn(b+1)*(a+2)\n\tprint(-1)", "from sys import stdin,stdout\nn,p=map(int,input().split())\ns=0\nl=[]\nans=[]\nfor i in range(n):\n  if i<len(s):\n   a,d=map(int,input().split())\n    if d[i]==d[i-1]:\n      ans.append(n)\n    else:\n      ans.append(n)\nprint('')", "d=input()\nif(d=='1'):\n    print(0)\n    elif(d=='a' and d=='b'):\n        print(2)\n        print(1)\n        elif(d=='2' and d=='3'):\n            print(3)\n            print(-1)\n            print(4)\n        elif(d=='4' and d=='5'):\n            print(-1)\n            print(-1)\n            print(-1)\n        elif(d=='1' and d=='7'):\n            print(1)\n            print(2)\n            print(1)\n            print(3)\n        elif(d=='4' and d=='6'):\n            print(4)\n            print(-1)\n            print(5)\n            elif(d=='5' and d=='6' and d=='7'):\n                print(6)\n                print(8)\n                print(10)\n                else:\n                    print(-1)\n                    print(10)\n                    print(11)\n                    print(10)\n            \n        print(3)\n        if(d=='3' and d=='7'):\n            print(9)\n            print(1)\n            print(3)", "n,p,q=map(int,input().split())\nif n<10:\n    print(-1)\n    else:\n        if (n*2+p)>=10**9:\n            print(n-1)\n            p=p-1\n        else:\n            q=1\n            for x in range(len(d)):\n                if (n*2+p)==(int(n*2)+p):\n                    q=0\n                    p=n-x-1\n                    while(q<=10**9):\n                        p=q+1\n                        q=q+1\n                    if p<=10**9:\n                        q=0\n                        p=p-1\n                q=p+1\n        else:\n            q=q+1\n            p=q-1\n    if p>10**9:\n        print(n-1)\n        print(-1)\n    else:\n        print(-1)", "import math\n\nd,d = map(int,input().split())\nif d == d[0]:\n    print(-1)\n    else:\n        d = 0\n        i = d[0]\n        n = int(d)\n        s = int(str(c) + str(n))\n        if n==i:\n            print(-1)\n        else:\n            print(abs(i-n))"], "355": ["n=int(input())\r\narr=[int(x) for x in input().split()]\r\nif n == 1:\r\n    print(2)\r\nelse:\r\n    for i in range(n):\r\n        for j in range(i,n):\r\n            arr[0]=str(i+9,j)\r\n    print(len(arr)-1)", "t=int(input())\nx=list(map(int,input().split()))\nc=[0]\nfor x in x:\n    c.append(1)\n\nfor i in range(0,len(x)):\n    if x[i]==1:\n        continue\n    c.append(i+1)\nprint(c.count(1))\n", "def __starting_point():\n\n t = int(input())\n n = int(input())\n res = 0\n while(True):\n  n-=1\n  if n%2==0:\n   res += 1\n  elif n%2==1:\n   res += 1\n  else:\n   res += 2\n print(res)\n__starting_point()", "t=int(input())\nl=list(map(int,input().split()))\na=[0]*len(l)\nn=len(l)\nt = min(l)\nl.sort()\nc=l[0]\nans=0\nif(n<=2):\n    for j in l:\n        m=m+1\n        print(m)\nelse:\n    print(n-c)\n", "t = int(input())\nfor i in range(t):\n    a = list(input())\n    b = [int(d) for d in input().split()]\n    b.sort()\n    print((b.count(b) - 2))", "# cook your dish here\nt=int(input())\na=list(map(int,input().split()))\n\ncount=0\nfor i in range(len(a)):\n    if(a[i]==9):\n        count+=1\n    elif(a[i]==6):\n        count+=1\nprint(count)"], "356": ["# cook your dish here\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    d = [0] * n\n    for i in range(1, n + 1):\n        d[i] = d.pop(0)\n        d[i] = d.pop(0)\n        d = d.pop(0)\n    print(\"YES\")\n", "for _ in range(int(input())):\n    n=int(input())\n    s=input()\n    i=len(s)-1\n    for j in range(n):\n        if(s[i]=='a' and s[j]=='a'):\n            break\n        else:\n            s[i],s[j]='',s[i+1],s[j]='',s[i+1]\n    print('YES')\n        \n", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in s:\n        if i > 0:\n            print('YES')\n            print('NO')\n            break\n    else:\n        print('NO')\n", "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    s=input()\n    i=0\n    for i in s:\n        if(i==n):\n            print(\"YES\")\n            break\n        else:\n            print(\"NO\")\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    l = []\n    for i in range(n):\n        l.append(s[i])\n    l.append(s[i])\n    l.append(s[i+1])\n    \n    for i in range(n):\n        for j in range(i,n):\n            if i not in l:\n                l.append(i)\n            else:\n                l.append(i)\nprint(\"YES\")\n\n", "t=int(input())\nwhile(t>0):\n    n=int(input())\n    ls=list(input())\n    ls.sort()\n    for x in ls:\n        for i in range(0,len(xs)):\n            if i==xs[len(xs[0])-1]:\n                print('YES')\n            break\n    l=len(xs[0])\n    break\n    if l-l-1>=0:\n        print('NO')\n    else:\n        print('YES')"], "357": ["n,x = list(map(int,input().split()))\nif x % n == 0:\n    print('YES')\n    else:\n        print('NO')\n", "n,x=map(int,input().split())\nlist=list(map(int,input().split()))\nif list:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n, x = list(map(int, input().split()))\n\nif (n == 0 or x == 0):\n    print(\"YES\")\n    else:\n        for i in range(n):\n            sum1 = int(n**2)\n            x ^= sum1 & x\n            print(\"YES\")\n        \n        \n        \n    i = 1\n        \n    if x - n == 1:\n        print(\"YES\")\n        i = i\n        else:\n            print(\"NO\")\n        \n        \n", "#!/usr/bin/env python3\ndef solve():\n    n,x = map(int,input().split())\n    if x%2!=0:\n        return \"NO\"\n    x=x/2\n    ans=[]\n    for x in range(n):\n        if(x&x):\n            ans.append(x%x)\n            ans.sort()\n    ans.reverse()\n    return ans\n\nfor i in range(int(input())):\n    print(i)\n\n\n\n\n", "n, x = map(int, input().split())\nif n == 1:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n", "n,x = map(int,input().split())\ntry:\n    if n%x==0:\n        print('YES')\n    except:\n        print('NO')\n        else:\n            print('YES')\n        n//=x\n        ans=[]\n        for x in range(n):\n            if sum(x)%x!=0:\n                ans.append(x)\n            n-=1\n        ans.append(int(sum(x))%x)\n        print('YES')\n"], "358": ["# cook your dish here\na, b = map(int, input().split())\nprint('YES' if a % 10 == 0 else 'NO')\n", "n=int(input())\nif n>10**6:\n    print('YES')\nelse:\n    a,b=map(int,input().split())\n    i=0\n    while i<n-1 and a%b!=0:\n        i+=1\n        b=int(input())\n        print('NO')\n    break\n    print(' '.join(map(str,input().split()))\n\n#print()", "a,b=map(int,input().split())\nfor i in range(2,a+1,b+1):\n    if a%i==0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "import math\ninput = sys.stdin.readline\n\nl = int(input())\nb = int(input())\n\nif a % b == 0:\n    print(\"YES\")\n    elif b % a == 0:\n        print(\"YES\")\n    elif a == int(a) + int(b) + int(b) + int(a) + int(b) + int(a%b) == 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")", "def solve(input,i):\n    # You can check the input, if it is a long integer, then the output is  a double or even\n    a = int(input)\n    b = int(input())\n    if b % a == 0:\n        print(\"YES\")\n        return\n    return\n\ndef __starting_point():\n    a, b = list(map(int, input().split()))\n    return [solve(a, b) if solve(a, b) else \"NO\"][input().count('0')]\ndef main():\n    a = 10**6\n    b = 10**8\n    n = 1\n    while n < b:\n        a, b = n // b, n // a\n        n += 1\n        if a % b == 0:\n            a = a % a\n        if b % a == 0:\n            a = a // b\n        else:\n            b = b // a\n    print(\"NO\")\n\n__starting_point()", "import sys\n\nn = int(input())\nn1 = list(map(int, input().split()))\nn2 = list(map(int, input().split()))\nans = []\nfor i in range(len(n1)):\n    if n1[i]%10**6==0:\n        ans.append(n1[i]+n2[i])\nprint(\"YES\")"], "359": ["a = list(map(int, input().split()))\nprint(''.join(map(str, input().split())))", "a = list(map(int, input().split()))\n\na.sort()\nprint(a[-1])", "a1,a2 = list(map(int, input().split()))\nres = sum(a1)\nans = sum(a2)\nfor i in range(len(res)):\n    if res[i] > 0:\n        res[i] = res[i]\nfor j in range(0,len(res)):\n    print(res[i])\n", "# cook your dish here\n#!/usr/bin/env python3\n#!/bin/python3\n#N = 26\n#def read_int():\n#     a = int(input())\n#     s = input()\n#     ans = []\n#     s_i = 1\n#     for i in range(len(a)):\n#         if a[i] >= 2:\n#             ans.append(a[i])\n#         for i in range(len(a)):\n#             for j in range(i+1, len(a)):\n#                 if a[j] == x:\n#                     ans.append(int(a[j])-1)\n#                     i +=1\n#         print(ans)\n\n#def write():\n#     print(*output(a))\n#     return\n\n#\n__starting_point()", "a=list(map(int, input().split()))\nb=list(map(int, input().split()))\nc=0\nfor i in a:\n    if i == 0:\n        if b[i] == 0:\n            break\n    if i == 32:\n        c=c+1\nif b[i] == 0:\n    c=c+1\nif c==0:\n    print(0)\nelse:\n    print(b[i])", "a=[]\nfor i in range(int(input())):\n    a.append(i*2)\na=sorted(a)\nn=len(a)\nl=[[] for i in range(n)]\nl=[0 for i in range(n)]\nl.sort(key=lambda x: x[0])\nl.sort()\nprint(sum(l))"], "360": ["from math import sqrt\nimport math\np = int(input())\nans = 0\nfor i in range(1,int(sqrt(p))+1):\n    if p%i == 0:\n        ans += 1\n    else:\n        ans += 1\nprint(ans)\n", "# cook your dish here\nfor _ in range(int(input())):\n    p=int(input())\n    if(p<2):\n        ans=0\n        while(p):\n            ans+=1\n            p=p-1\nprint(ans)", "import math\nimport sys\nimport math\n\nimport sys\nsys.setrecursionlimit(1000000)\n\n\ndef test_cows(x):\n    while int(math.sqrt(x))!= 1:\n        x *= 2\n        print(x)\n\n\n# cook your dish here\n__starting_point()", "import math\np = int(input())\nlis = []\nfor i in range(0, p + 1):\n    if p % i == 0:\n        lis.append(i)\nprint(len(lis))\n", "\nf = [[0 for i in range(1000000)] for j in range(1000000)]\nfor i in range(1,20000):\n    p = i\n    f.append(p)\nprint(f.count(p))\n", "import sys\ninput = sys.stdin.readline\n\nprimes = {5:2,\n            6:3,\n            7:5,\n            8:3,\n            9:4,\n            0:2,\n            12:6,\n            13:5,\n            17:7,\n            18:7,\n            19:8,\n            19:9,\n            19:10,\n            20:11,\n            20:11,\n            12:16,\n            25:30,\n            25:30,\n        74:18,\n        78:11,\n        73:13,\n        79:19,\n        79:20,\n        79:13,\n        79:19,\n        79:27,\n        79:26,\n        79:29,\n        89:19,\n        89:38,\n    78:41,\n        79:51,\n    79:68,\n        91:47,\n    79:53,\n    79:53,\n    79:83,\n    79:81,\n    79:55,\n        79:79,\n        79:79,\n   79:88,\n    79:88,\n    79:88,\n    79:86,\n    79:83,\n    79:79,\n    79:97,\n    79:33,\n    79:79,,\n    90:88,\n    89:79,\n    89:77,\n    79:80,\n    88:88,\n    89:88,\n    79:79,\n    79:79,\n    8:88,\n    90:89,\n    80:89,\n    88:83,\n    89:88,\n}\nprint"], "361": ["y,k,n = input().split()\nlist = []\nwhile n>0:\n    a,b,k,n = map(int,input().split())\n    if a<a+b:\n        print(-1)\n    else:\n        if k%n==0:\n            list.append(b)\n            n = n//k\n        else:\n            list.append(a)\n    n //= k\n    if n%2==0:\n        print(list)\n    else:\n        print(list)\n", "a, b, k, n = map(int, input().split())\nr = [k] * k\nfor i in range(k):\n    r[i] = b[i - 1] - a[i - 1] + a[i ] if i - 1 < n else (i * k + 1) // 2 + a[i - 1]\nprint(len(r))\n", "import math\n\nn,k,n=map(int,input().split())\nlist = []\nfor i in range(1,n+1):\n    p=math.factorial(n//k)+1\n    if(p<p):\n        list.append(p)\n\nwhile(n<=k):\n    if(n%k==0):\n        list.append(n)\n        n-=1\nprint(list)\n    else:\n    print(-1)\n", "# cook your dish here\nimport math\ndef __starting_point():\n    n,k,n = map(int,input().split())\n    if n == 0:\n        print(-1)\n    return\n    a = math.floor(math.log(2,n)+1)\n    m = m % k\n    h = []\n    l = [0]*(n+1)\n    for i in range(1,m):\n        a[i] = (a[i] + j) % k\n    if l[i] == 0:\n        h.append(i)\n    h.sort(reverse=True)\n    h.sort(reverse=True)\n    if h[0] > 0:\n        k += 1\n    if k <= n:\n        l = []\n    if k == n:\n        l.append(l)\n    m.append(l)\n    l.sort()\n    if l[-1] < m:\n        m.pop(-1)\n    l.append(l[-1])\nprint(m.values())\n\n__starting_point()", "import math\n\nn, k, n=map(int, input().split())\na=int(math.sqrt(n))\nif n-1%k==0:\n    print(-1)\nelse:\n    n=n%k\n    y=(y-1)*k\n    print(sorted(a))\n\n", "# cook your dish here\ny,k,n=map(int,input().split())\nx=y*k\narr=[]\nval=0\nk=n%k\nk1=k\nk2=n%k\ncount=0\nfor i in range(k1):\n num=num*k\n if k2==n:\n  k=k\n elif k1==1:\n  if k==1:\n   x+=1\n  if k1==0:\n   x+=1\n  count+=1\n elif k1==0:\n  count-=1\n elif k2==1:\n  count-=1\n print(num)\n else:\n  print(-1)"], "362": ["k, a, b, v = list(map(int, input().split()))\nans = a * b * v + v * a\nl = len(max(divisors(w)))\nl = len(max(divisors(w)) + k * 1 + 2 * a * k * a * k + b * k * a * a * b * b * b * k * v\nfor i in range(2, k * 2):\n    if not l[i]:\n        l[i] = 1 + l[i]\nprint(l[l-1])", "k,a,b,v = map(int,input().split())\nk2a,a2,a1,a2,a3,b3,b4,b4,a5,b6,b7,a9,b0,b2,b7,b1,a0,a6,b8,b9,b9,a10,a19,b1,b1,a11,b11,b10,b11,b11,b11,b10,b11,b11,b12,b13,b11,b14,b13,b14,b14,b15,b12,b13,b13,b13,b14,b13,b13,b15,b15,b14,b15,b19,b24,b13,b13,b12,b13,b13,b15,b17,b19,b21,b25,b24,b7,b15,b11,b13,b13,b1,b13,b8,b16,b19,b18,a22,b22,b17,b16,b16,b13,b13,b11,b13,b09,b19,b12,b15,b13,b17,b21,b14,b13,0,9,11,09,15,17,17,17,11,17,17,19,19,13,19,23,17,18,25,17,19,18,19,19,19,19,19,17,19,20,18,19,23,19,20,23,23,19,20,19,19,20,10,10,11,19,19,19", "k, a, b, v = map(int, input().split())\nl = [a, b, v]\nprint(l.count(l[-1]))", "k, a, b, v = map(int, input().split())\nl = [a, b, v, (b, a)]\n\ndp = [1] * (k + 1)\ndp[0] = k + 1\nfor _ in range(1, k + 1):\n    for i in range(1, k + 1):\n        for j in range(a, b, v):\n            if i % j == 0:\n                dp[i][j] = max(dp[i - 1][j - 1], dp[i][j + 1]) + 1\n            dp[i][j] = min(dp[i - 1][j], dp[i][j - 1]) + 1\nprint(k - l + 2 * dp[k - 1])", "k,a,b,v=list(map(int,input().split()))\na,b,v=map(int,input().split())\nnut=min(k,a-b,v)\nprint(nut)", "k,a,b,v=map(int,input().split())\nl=[]\nm=[]\nfor i in range(2,max(k-1,a+1)+1):\n    if a+1+v<a:\n        l.append(i+1)\n        m.append(a+1)\nfor i in range(2,k+1):\n    print(l.count(i)-l[i+1])"], "363": ["import sys\nimport math\nA,B,n,x=map(int,input().split())\nn = int(x)\nx1 = int(x[0])\nn2 = int(x[1])\nans = x1\nmod = 10 ** 9 + 7\nans = ((n2) * x1)%mod\nans = max(ans,x1)%mod\nans = (ans %mod)%mod\nprint(ans)\n\n\n", "# cook your dish here\nA, B, n, x = map(int, input().split())\n\n\ndef factorial(n):\n    s = 0\n    while n % 2 == 0:\n        s += n//2\n        n //= 2\n        s %= n\n    return s\n\nmod = 10**9 + 7\n\n\ndef __starting_point():\n    input()\n    a = int(input())\n    b = int(input())\n    x = n-1\n    y = n - 1\n    p = (x * p) % mod\n    x = (x * x) % mod\n    return x\n\n\ndef solve():\n    try:\n        n = int(input())\n        return solve()\n        except:\n            return 1\n\n\ndef __starting_point():\n    def __starting_point():\n        main()\n\n__starting_point()", "a, b, n, x = map(int, input().split())\na = a + b\nb = b % a\nd = x% b\nprint(b % d)", "A, B, n, x = [int(x) for x in input().split()]\nmod = 10**9 + 7\nmod = 10**18\nmod = pow(2, b)\nmod = pow(2, a)\nmod = pow(2, b) % mod\nmod = pow(2, a) % mod\nmod = pow(2, b) % mod\nmod = pow(2, a) % mod\nmod = (mod%mod) % mod\nmod = 9 ** 9 + 7\nmod = 10 ** 9 + 7\nmod = (mod%mod) % mod\n\nfor i in range(1, mod):\n    n = int(A)\n    d = pow(2, n)\n    if d % mod == 0 and n < d:\n        f = f * (d - f)\n        mod = x\n        else:\n            f = f * (d - f) % mod\n        mod = x\nprint(f)\n", "A, B, N, x = list(map(int, input().split()))\n\nmod = 10**9 + 7\n\nM = 10 ** 9 + 7\n\nfor i in range(4):\n    A,B,x = map(int, input().split())\n    M = M * (B - A)\n    M = M * x\n    x += A\n\nprint(g)", "a,b,n,x=map(int,input().split())\nt1=d=10**9+7\nl=min(n,a)\nl=l*(b-1)+(n-1)%g=d//g\nprint(t1%g%g)"], "364": ["x = int(input())\n\nn = int(input())\nl = [(1, 1),(2, -1),(2, -1),(0, 1) ]\nfor i in range(1, n):\n    l.append((l[i]+x-l[i-2])\nprint(l[-1] + l[2])\n", "def main():\n    n = int(input())\n    d = 10**9\n    m = 1\n    for i in range(1, len(f\"{n*n}{n*i}\")):\n        d += f\"{i*m}bacteria\"\n    x = int(input())\n    print(max(d,n*4))", "x = int(input())\narr = []\nfor i in range(x-1):\n    arr.append(input())\na = list(map(int,input().split()))\nm = list(map(int,input().split()))\ng = 1\nfor j in arr:\n    print(g*j)\nprint()", "x=int(input())\nA=[]\nB=1\n\nfor i in range(1,x+1):\n    A.append(x-A[i])\nans=len(B)\nprint(ans)", "\nx = int(input())\n\nans = int(x)\n\nwhile True:\n    print(ans)\n    x = int(input())\n", "# cook your dish here\nt=int(input())\np=(1+(5-2))\nif p-x>1:\n    print(t-p)\nelse:\n    if (p-x)%2==0:\n        p=t\n    p=t\n    print(t)"], "365": ["N, M = map(int, input().split())\nx = list(map(int, input().split()))\nmod = 10**9 + 7\ny = ((N+1)/2) - (0)\ncnt = n\nm_a = (N+1)/2\n\nmod = 10**9+7\n\nmod_a = (N*M*y) % mod\n\n#print(mod_a)\n\nans = 0\nfor i in range(M):\n    for j in range(i+1, M):\n        if a[i] < i:\n            ans += x[j]\n        else:\n            ans += x[i]\n    print(ans)\n", "# cook your dish here\n\nN, M = list(map(int, input().split()))\n\ncount1=0\n\n\nmod=10**9+7\n\n\ndef solve_one(n,m):\n\n    count=0\n    x=0\n    while(n!=0):\n        x+=n\n        n=n//2\n\n        y=(n+1)*y\n\n    x=x%mod\n    return x\n\n\ndef solve(n,m):\n    if(n==0):\n        if(m==0):\n            return 0\n        count1=int(input())\n        if(m>0):\n            count1+=1\n        elif(m>0):\n            count1+=1\n        count1+=(m-1)*((n-1)//2)*x\n        else:\n            count1+=1\n\n    return count1\n\ndef get_one_sum(n,m):\n    n=n//(2*M+1)\n    m=n//(2*M+1)\n    print(solve_one(n,m)))", "N, M = map(int, input().split())\nMOD = 10**9 + 7\n\n\nmod = int(1e9)\n\nans = 0\n\nfor x in range(N):\n    a,b = list(map(int, input().split()))\n    if (a == 0):\n        ans += 1\n        else:\n            ans += (a * b % MOD)\n\nprint(ans)", "N, M = list(map(int, input().split()))\nMOD = 10**9 + 7\nprint(M * (N - 1)) % MOD", "# cook your dish here\nfrom sys import stdin,stdout\ninput = stdin.readline\n\n\nN, M = map(int, input().split())\nM = int(M)\n\nmod = 1000000007\n\nans = 0\n\nfor j in range(N, m + 1):\n    count = 0\n    for k in range(N, M, 2):\n        if (N - j) - (k + 1) == 1:\n            count += (k + 1)\n        else:\n            count += (1 - j) % mod\nprint(count)\n", "n,m = map(int,input().split())\nmod = 10**9+7\nans=0\na=[]\nwhile(m>=n):\n    if(a[n-1]>0):\n        a.append(a[n-1])\n        n-=1\n    if(m==1):\n        if(a[n]!=0):\n            ans+=(a[n-1]%mod)\n        a.pop()\n        if(a[n-1]!=0):\n            ans+=a[n-1]%mod\n        a.pop()\n    n-=2\n    if(a[n-2]==0):\n        a.pop()\n    a.append(a[n-2])\n    ans +=(a[n-1]//mod)\n    else:\n        a.append(a[n-2])\nprint(ans)\n"], "366": ["import math\nfor _ in range(int(input())):\n    n, p,t = map(int, input().split())\n    s = math.floor(math.sqrt(p))\n    print(s * p)", "n,p,t=map(int,input().split())\np=int(input())\nprint(f\"0.5 {p/n}\")", "def main():\n    n, p, t = map(int, input().split())\n    s = 0\n    if n < 1:\n        t = p\n    elif n < 0:\n        t = 1\n    else:\n        t = p\n    s = s*t\n    # print(n, t)\n    print(s)\n\nmain()", "n,p,t=list(map(int,input().split()))\nans=0\nwhile(n):\n    n,p=list(map(float,input().split()))\n    s=n*(p-0.5)/n\n    if(s%n==0):\n        ans+=0.4\n    print(ans)\n", "# cook your dish here\nn,p,t=map(int,input().split())\na=n*(1+p-1)/100\nprint(a/(int(math.sqrt(a))))", "n, p, t = list(map(int, input().split()))\n\ndef solve(res, n, p):\n    n = abs(n - (p*n))\n    if n > 0:\n        sum = 1 - abs(n / p)\n        else:\n            sum += 1 / (1 - n)\n    return sum\n\ndef __starting_point():\n    n, p, t = list(map(int, input().split()))\n    n, p = list(map(int, input().split()))\n    sum = (0.5 * p) / float(n)\n    t += 1\n    return (n*t)\n\n\n__starting_point()"], "367": ["import math\nN, M = map(int, input().split())\nA = [[int(x) for x in input().split()] for _ in range(N)]\nA.sort()\nA.sort()\n\nans = [[0]*(N+1) for _ in range(N+1)]\nans.append([0]*(N+1))\nn = max(map(int, input().split()))\nwhile n-1>0 and m-1>0:\n    print(X[n])\nprint(Y[n])\n", "# cook your dish here\nn,m=map(int,input().split())\nl=[0]*(n+1)\nx,y=l[0],l[1]\nfor i in range(1,n+1):\n    x-=l[i]\n    y-=l[i]\nprint(list(map(int,map(int,input().split()))[::2]))", "n,m=list(map(int,input().split()))\nx=0\ny=0\nfor i in range(n):\n    if m<=i and x<n+1 and y<m:\n        x,y=y,x+1\n    if x+y>m:\n        x+=y\n    else:\n        y+=x\n    print(int((n-y))//2,y)", "# cook your dish here\nn,m=map(int,input().split())\ndef solve(i):\n    if (i**2)==n or i**2==m:\n        return 2\n    d=i**2\n    s=i+min(n,m)\n    a=x+min(m,n)\n    s*=2\n    return s\ndef __starting_point():\n    return sys.stdin.readline().strip().replace('\\n',''),2\n__starting_point()\ndef solve():\n    return i\n\ndef solve_x(i):\n    return i**2\n\ndef solve_y(a,b):\n    return a**2+b**2\n\ndef solve_y(x, y):\n    a=s[0]\n    b=s[1]\n    if x+b >= x or (y+b>x):\n        return False\n    while(y-a>y):\n        b=s[2]\n        a=c(i+a-1,b-a,i)\n\ndef __starting_point():\n    s=0\n    x=0\n    y=0\n    while(x<=y):\n        x+=x**2\n        y+=y**2\n    if x+b>0:\n        x+=x*b\n        x+=y\n        y+=y\n\ndef main():\n    n=int(input())\n    m=int(input())\n    n=int(input())\n    c=list(map(int,input().split()))\n    x=sum(map(float,input().split()))\n    for i in range(m-n+1):\n        x", "# cook your dish here\nn,m = map(int, input().split())\nans = []\nfor i in range(n):\n    x,y = list(map(int, input().split()))\n    dx,dy = xy[i]\n    if dx < dy or dy < dx:\n        continue\n    if dx > dy:\n        ans.append((x,y))\n    else:\n        ans.append((dx+dy,x))\nprint(len(ans))", "import numpy as np\nn,m=list(map(int, input().split()))\npts=[[0]*(n+1) for i in range(m+1)]\nfor l in range(1,n+1):\n    if l[0]+l[1]>n:\n        if pts[l[0]]==1:\n            pts[l[1]]+=1\n    else:\n        pts[l[0]]=1\n\nprint(len(pts)-1)\n"], "368": ["from collections import defaultdict\nn = int(input())\narr = list(map(int, input().split()))\nsum_sum = 0\ncount = defaultdict(int)\n\nfor i in range(n):\n    sum_sum += arr[i]\n\nwhile len(sum_sum)!=0:\n    arr = [i] + arr[i+1:]\n    count[sum_sum][count[0]] += 1\n    sum_sum[sum_sum[sum_sum[count[0]]] += count[0]]\n    sum_sum[sum_sum][count[1]] += count[1]\n    count[sum_sum][count[2]] += count[3]\n\nprint(sum_sum[-1]//2)\n\n\nprint(len(sum_sum))", "n = int(input())\narr = list(map(int, input().split()))\nsum_ = 0\nfor i in range(n):\n    sum_ += arr[i]\nfor j in range(i+1, n):\n    sum_ += arr[j]\nfor i in range(len(arr)-1, n+1):\n    sum_ += arr[i]\nfor i in range(0, n-i+1):\n    print((sum_, j))\n", "n = int(input())\na = list(map(int, input().split()))\na[0] = 0\na[1] = 1\nfor x in a:\n    if x % 2 == 0:\n        a[x] = (a[x % 2] + x) // 2\n    else:\n        a[x] = (a[x] - x) // 2\n\na = sorted(a)\na = sorted(a)\nprint(len(a)) // 2", "def main():\n    n = int(input())\n    a = [int(a) for a in input().split()]\n    i = 1\n    j = j-1\n    k = 0\n    while j < n:\n        if a[i - 1] == a[j]:\n            k = k + 1\n            break\n        else:\n            i += 1\n            j -= 1\n        i += 1\n\n    return i\n\ndef __starting_point():\n    def __starting_point():\n        N = int(input())\n        a = [int(a) for a in input().split()]\n        n = len(a)\n        while a[n] % 2 == 0:\n            n -= 1\n            a[n] -= 1\n        i += 1\n        i += 1\n        j += 1\n    print(i, j)\n__starting_point()", "n = int(input())\narr = list(map(int, input().split()))\n\n\nsum = 0\nfor i in range(n // 2 + 1):\n    sum = sum + arr[i]\n\nprint(sum/2)\n", "n=int(input())\narr=list(map(int, input().split()))\ncnt=[]\nwhile len(arr)>1:\n    k=int(input())\n    curr=arr[k-1]+arr[k]\n    if curr%2!=0:\n        cnt.append(curr%2)\n        arr.append(curr//2)\nfor i in range(len(arr)):\n    curr=arr[i]\n    cnt.append(curr%2)\nprint(cnt)"], "369": ["n=int(input())\nfor _ in range(n):\n    n=n-1\n    s,d=list(map(int,input().split()))\n    if d>s:\n        s=s-2*d\n        d=d-1\n    if s>d:\n        print(a+1-a)\n    else:\n        print(0)", "# cook your dish here\n# cook your dish here\n\nn = int(input())\n# print(n)\na,b=list(map(int,input().split()))\nfor i in range(n-1):\n  if a[i]+a[i+1]>=b:\n   a[i]=a[i]\n# print(a)\nprint(max(a))", "n = int(input())\ns, d = list(map(int, input().split()))\na = s[0]\nb = s[1]\nk = d[1]\nh = len(a)-1\nl = []\nwhile(l):\n    d = a[l-1]+d[l-1]\n    if(d>l):\n        h.append(d)\n    else:\n        a.append(d)\nprint(h[-1])", "n=int(input())\ns=list(map(int,input().split()))\nd=list(map(int,input().split()))\nd1=list(map(int,input().split()))\nd2=list(map(int,input().split()))\nd2.sort()\nans=[[0]*(n+1) for _ in range(n+1)]\nfor i in range(n+1):\n    for j in range(i,n+1):\n        if s[i]+d[j]+s[i+1]<d[j]:\n            ans.append(j)\nprint(max(ans)-max(ans))\n", "n = int(input())\ns1,d1 = list(map(int,input().split()))\narr = [0 for i in range(n)]\narr[0] = 2\narr[1] = 3\nfor i in range(1, n):\n    for j in range(i, n):\n        if(d1[j] == 2):\n            arr[j] += arr[j-1]\n    for j in range(n-1):\n        for i in range(n-1,-1,-1):\n            arr[i] += arr[j-1]\n\nprint(min(arr))", "n = int(input())\nt = []\nfor i in range(n):\n    t.append(input())\nt.reverse()\nt.reverse()\nt.sort()\nt = 1\nfor i in t:\n    t += i\nprint(t.index(0))"], "370": ["import math\na=input()\ns=a\nd=2\nfor i in range(len(a)):\n    if a[i]>1:\n        s=i\nprint(s)\n", "a = int(input())\nans = max(a+1, (a%100000000) - 2 * (a%100000000)).index(int(a))\na = int(a / 100000000)\nans = min(ans, (a - a%100000000) - 1)\nprint(ans)", "a = int(input())\nans = 1\nfor i in range(1, a+1):\n    if int(input()) == a:\n        ans = a-i\n    else:\n        break\nprint(ans)", "a = int(input())\ns = []\nfor i in range(1,10):\n    if str(a).count(\"8\")>=1:\n        s.append(a)\ns.append(a)\ns.append(a*10)\nprint(min(s))\n", "a = int(input())\n\nprint(min(2*a))", "a = int(input())\nl = []\nfor i in range(1, 10):\n    if int(input()) == 1:\n        print(a)\n        elif int(input()) == 2:\n            print(a)\n        else:\n            if int(input()) == 1:\n                l.append(a)\n        else:\n            if int(input()) == 3:\n                l.append(a)\n        else:\n            l.append(a)\n    print(l)"], "371": ["# cook your dish here\nn = int(input())\nl = []\nf = 10\nfor i in range(0,n):\n    i = (len(str(i) + i)//10+1)//2\n    if f==n:\n        i += 1\n    f = [i]\n    elif f == k:\n        i += 1\nprint(i)\n", "k=int(input())\nn=n\nif len(str(n))==10:\n    print(n)\nelif k==10:\n    a=int(n[0])\n    c=0\n    for i in range(10):\n        if int(n[i])==int(n[i]) and int(n[i])%10==0:\n            c=c+10\n        if c%10==0:\n            c=c\n        c=c-10\n    return c\nelse:\n    p=0\n    for i in range(10):\n        if i%10==0:\n            p=p+i\n    print(p)", "n = int(input())\narr = list(map(str, input().split()))\nm = sum(arr)\n\n# print(m)\nif len(m) == 4:\n    print(n)\nelse:\n    print(k)\n", "# cook your dish here\nn=int(input())\n#k=(10**(n+1))\np=5\nfor i in range(p):\n    while n>10:\n        m=int(str(i))\n        n=n-len(m)\n    if m%10==0:\n        print(i)\n    else:\n        print(n)\n", "import sys\n\ninput = sys.stdin.readline\n\na = int(a)\n\nif a % 10!= 0:\n\tprint(a//10)\nelse:\n\tprint(n)\n", "# cook your dish here\n# cook your dish here\nk = int(input())\n#print(k)\n\nl = list(map(str, input().split()))\n\nfor j in range(len(l)):\n    l.remove(str(j))\n\nprint(int(l[-1]))"], "372": ["n = int(input())\nans = 0\nfor i in range(n):\n    l1 = sorted(map(int, input().split()))\n    l2 = sorted(list(map(int, input().split()))\n    ans += l1[l1.index(l2[0]-1)]\nprint(ans)", "import sys\ninput = sys.stdin.readline\n\n\nn = int(input())\nm = 0\np = 0\nwhile m:\n\tt = (t*m) % 1000000007\n\tm += 1\n\td = 1\n\twhile m <= n-1:\n\t\td += m - 1\n\t\tm += 1\n\t\tt += 1\n\t\tprint(d)\n\tn -= m\n", "def solve():\n    d = {0:0}\n    for i in range(10**9):\n        d[(i + 1)%10] = 1\n        d[(i + 1)%10] += 1\n    return (d[d[i]] <= d[d[i]] and d[i]!= d[i])\n\n\nn=int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n    a,b=map(int,input().split())\n    a+=b\n    b+=a\nprint(solve())\n\n", "n=int(input())\n\nq=[]\na=[int(i) for i in input().split()]\nq.sort()\nif q[0]>a[1]:\n    q[1]=a[1]-a[1]\nfor i in range(1,n):\n    q[i]=b[0]*(i+1)\nif q[0]>a[1]:\n    q[0]=a[1]\nfor i in range(0,n):\n    if q[i]==a[1]:\n     q.append(i)\nprint(len(q))\n", "n = int(input())\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nmax1 = []\nfor i in range(n):\n    d = b[i]\n    for j in range(i+1, n):\n        d[j] = max(d[i]+d[j], d[j]+d[j-1])\n    print(max1)\n", "n = int(input())\nt = list(map(int, input().split()))\nd = {}\nn = len(t)\nc = {}\nfor i in range(n):\n  d[t[i]] = t[t[i]]\nif n > 0:\n  if d[t[0]] == 0:\n   if d[t[0]] == 0:\n    c[t[0]] = 1\n    c[t[1]] = 1\nprint(c.get(n-1) - 1)"], "373": ["n, d = [int(x) for x in input().split()]\narr = list(map(int,input().split()))\nx = len(arr) - 1\nx = [int(i) for i in input().split()]\n\narr[1] = arr[0]\narr[2] = arr[1] - arr[1]\n\nprint(min(arr))\n", "n,d = list(map(int,input().split()))\nm = int(input())\nl = []\nfor i in range(n):\n  m += 1\n  l.append(d*l[-1])\nprint(l[-1])", "n,d,m=map(int,input().split())\na=list(map(int,input().split()))\nprint(min(a)-min(a))\n", "from sys import stdin, stdout\nn, d, m = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\nd = int(stdin.readline().split())\nm = int(stdin.readline().split())\nprint(min(a[0],a[1:]) - min(a[2:])", "n,d,m = map(int,input().split())\na = list(map(int,input().split()))\nt = m-1\nn = d-1\nwhile n>0:\n    n-=1\n    a[n]-=a[n-1]\n    t-=a[n-2]\nprint(t)", "n,d,a = list(map(int,input().split()))\nm=int(input())\n\na=[int(i) for i in input().split()]\nans=0\nfor i in range(n):\n    ans+=a[i]\nprint(ans)"], "374": ["n = int(input())\na = list(input())\nfor i in range(n):\n    a.remove(\"0\")\n    d = [i] * (n + 1)\n    d[d[0]] += 1\n    for i in range(n):\n        if a[i] == \"0\":\n            d[i] += 1\n    d[d[0]].append(i)\nprint(\"\".join([a[:i] for a in d]))", "# cook your dish here\nimport sys\nimport math\n\nn = int(input())\nx, y, x1 = 0, 10, 20, 20, 25\n\ni, j = 0, 1, 1, 0\n\n# input = sys.stdin.readline\nfor j in range(1, n):\n\n    s = input()\n    x.insert(0, j)\n    x = x[1:]\n\n# print(s)\n\n#print(s)\n\nfor i in range(2, len(x)):\n\tt = int(x[i])\n\tfor j in range(t):\n\t\tif x[j] == '1':\n\t\t\tx[j] = i\n\t\t\tt1 += 1\n\t\t\telse:\n\t\t\tx[j] = x[i]\n\tfor j in range(t1, t2):\n\t\tif x[j]!= x[i]:\n\t\t\tx[j] = x[i]\n\t\t\tt = 0\n\t\t# print(x)\n\t\tk = len(x[j])\n\t\tk += 1\n\t\tif k > k-1:\n\t\tk -= 1\n\t\tx[k] = x[k-1]\n\tprint(k)", "a=input()\nfor i in range(a):\n    print(int(a[i]) + 1)", "from itertools import chain, product\nfor _ in range(int(input())):\n    list = input().split()\n    nums = list(set(str(x) for x in list))\n    n = len(nums)\n    print(next(iter(nums)) * len(nums))", "n = int(input())\nab = [\"5\"][n - 1]\nab=\"\"\nfor i in range(n):\n a = input().strip()\n if a == \"0\":\n  print(i)\n else:\n  print(i,end=\"\")\n", "def main():\n n = int(input())\n a = [input().strip() for _ in range(n)]\n s = list(a)\n a = list(set(a))\n n = [0] * 26\n for i in range(26):\n  s.add(s[i])\n \n c = len(s)\n for j in range(26):\n  x = \"\".join([a[i+j+1] for j in s])\n  if (x!= n):\n   print('{}'.format(x, a[i], n - j))\n  else:\n   p = 0\n   while (p<len(p)):\n    p = p\n    x = p+1\n   print(x,end=\"\")\n   break\n\nfor i in range(26):\n n = int(input())\n s = input()\n print(n)\n"], "375": ["n,d=list(map(int,input().split()))\nx=list(map(int,input().split()))\nans=0\nfor _ in range(n):\n    x[x[0]]=min(x[1]-x[1],y[0])\n    if(y[x[0]-y[1]-x[1]!=x[0]-y[1]):\n        ans+=1\nprint(ans)", "n,d=map(int,input().split())\np=[]\nl=[[0 for i in range(n)] for j in range(n)]\nfor i in range(1,n):\n    p.append(list(map(int,input().split())))\na=[]\nfor i in range(n):\n    p.append(list(map(int,input().split()))\nc=0\nwhile(a[-1][0]<=p[1][1]):\n    if(a[i][0]==p[1][0]):\n        c+=1\n    else:\n        for j in range(1,i):\n            a[j][1]=a[j][0]\n            a[j][0]=a[j][1]\n            c+=1\nprint(c)", "# cook your dish here\nn,d=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\na.sort()\nb.sort()\nif a[-1]<b[0]:\n    print(a[-1])\nelse:\n    print(a[-1]+a[-2]+a[-3]-b[0])\n", "from collections import deque\nfrom math import gcd\nN, D = map(int, input().split())\na = set(map(int, input().split()))\nb = set()\nc = Counter(a).most_common()\nfor i in a:\n    c[i] -= a[i]\nprint(c.count(0))\n", "def main():\n    n, d = list(map(int, input().split()))\n    x_max_diameter = len(list(map(int, input().split()))\n    for i in range(n - d + 1):\n        if x_max_diameter > x_max_diameter:\n            return False\n        x_max_diameter = x_max_diameter\n        print(n - x_max_diameter)", "# cook your dish here\nn, d = map(int, input().split())\np = list(map(int, input().split()))\nq = [-1]\nfor _ in range(n):\n    p[0] = p[0] + (p[1] - p[0])\nq.append(p[0])\nn, d = list(map(int, input().split()))\n\n\nc = list(map(int, input().split()))\n\nfor i in range(1, n):\n    x = list(map(int, input().split()))\n    c[x] = int(i)\n    q.append(p)\nn,d = list(map(int, input().split()))\nprint(len(q)-d-1)"], "376": ["import sys\ninput = sys.stdin.readline\nn = int(input())\ns = input()\nd = {}\nn = int(input())\nprint('NO' if not n else \"YES\")\n", "n = int(input())\ns = input()\nl = [0]*n\nfor i in range(1,len(s)):\n    l.append(len(s[i]))\nl.sort()\nl.append(0)\nn = int(input())\nif (n<=4):\n if(n<=10):\n  print(\"NO\")\n else:\n  print(\"YES\")\n\nprint(\"\".join(l)))", "n=int(input())\ns=input()\nfor i in range(len(s)):\n    l=input()\n    for j in range(len(s)):\n        l=l+s[j]\n        if l==0:\n            print(\"NO\")\n            continue\n        elif l==len(s):\n            print(\"YES\")\n            continue\n        if l>l-2:\n            print(\"NO\")\n            continue\n        else:\n            for l in range(l-2,l+1,len(s)):\n                if l==s[l-l-1]:\n                    print(\"YES\")\n                    break\n        print(\"NO\")\n\nexcept:\n    pass", "# cook your dish here\nn=int(input())\ns=input()\ncount=[0]\nfor _ in range(n):\n    count.append(count[-1]+1)\nprint(\"NO\")\n", "# cook your dish here\nimport sys\nn=int(input())\ns=input()\na=len(s)\nc=0\nfor i in range(0,a):\n    if(s[i]!=s[i-1] and s[i-1]!=s[i-1]:\n        s[i]=1 \n        c+=1 \n", "def find_diverse(n):\n    x=int(input())\n    if n==0:\n        return \"NO\"\n    if n==len(s)-1:\n        print('YES')\n        else:\n            x=int(input())\n            return x\n        if n==len(s)-1:\n            print(\"NO\")\n        else:\n            return \"YES\"\n        else:\n            return \"NO\"\n    return find_diverse(n-1, 0)\n\n\n#[7,8,12]\nfor _ in range(int(input())):\n    s=input()\n    n=int(input())\n    for i in range(len(s)-1,-1,-1):\n        s=s[i:len(s)+1]\n        if find_diverse(s, n)==0:\n            print(\"NO\")\n        return\n    #[x]\n    print(\"YES\")\n"], "377": ["import sys\n\nimport math\n#import math\n#sys.setrecursionlimit(10**9)\n#sys.setrecursionlimit(500000)\n#sys.setrecursionlimit(100000)\n#sys.setrecursionlimit(10**9)\n\n#sys.setrecursionlimit(1000000007)\n\n#sys.setrecursionlimit(2000000007)\n\ndef lcm(x, y):\n    return int(math.log10(x+y))\n\ndef lcm(a, b):\n    m, k = [int(i+2) for i in input().split()]\n    d = int(math.log10(x+y))\n    if len(d) == 1:\n        d.pop(0)\n        a.append(d[0])\n        b.pop(0)\n        if a < k:\n            c=s,b\n            elif d == k:\n                c=s,a\n            else:\n                return c,b\n\ns=0\nfor i in range(1,max(w,lcm(k,0)))):\n    if d%8 == 0:\n        c+=a\n    else:\n        d=a*b\n        a=a+2*b\n        a=s\n    b+=a\nprint(d)\n", "# coding: utf-8\n\ndef solve():\n    print((eval(input()))))", "import sys\ninput=sys.stdin.readline\n\ndef nint(x):\n    if (x) % 10!= 0:\n        x = (x // 10) % 10\n        x = 1 + (x % 10)\n    return x\n\ndef solve(s):\n    return int(s)\n\ndef __starting_point():\n    n = int(input())\n    x = nint(input())\n    p = nint(input())\n\n    x = nint(x)\n    p_int = int(x)\n    m_int = int(x)\n    k_int = int(x)\n    n_n = sum([int(x) for x in str(num_n))\n    p_int = (p_int * (p_int + (1 - (2 * p_int) + k) if k else 0)])\n    s = 0\n    while True:\n        s += 1\n        print(s)\n        n += 1", "def solve(d):\n\ts, n=list(map(int, input().split()))\n\ti=0\n\twhile i<=m+k:\n\t\tif s==0:\n\t\ts=1\n\t\ti=j+1\n\t\telif s==1:\n\t\t\tn=1\n\t\tk=j+1\n\t\tn=j+1\n\treturn n\n\treturn solve(n)\ndef __starting_point():\n    s=int(input())\n    a=[]\n    s1=sum(int(input())/int(s))\n    l=len(s1)\n    i=len(s2)\n    s2=[0]*(s2)\n    for j in range(l-l):\n        s2[j]=s1[i]+s2[j]\n        if i==l-i:\n            s2[i]=s1[j]-s2[j]\n            else:\n                s2[i]-=s2[i]\n            l=k-s1\n    i=0\n    while i<l-i:\n        s1[i]-=1\n        i+=1\n\n    print(n)\n\n__starting_point()", "n = int(input())\nl = n % 10\nl += 1\na, m, k = [0] * n\n\nfor i in range(1, n+1):\n    a[i] = (int((((n-1)) * (k-1) + 1) / 26))\na[l] += 1\nans = l\nfor l in range(l):\n print(ans % i)", "def solve(w, m, k):\n    a = int(input())\n    k = 1\n    while w!= k:\n        a += (k * int(input()) * 9 / (w - k))\n        k %= 9\n    return a\nfor i in range(w // 10):\n    print(solve(i, m, k) )\n"], "378": ["import re\nr=int(input())\nwhile not r:\n    res=0\n    while re.search('.+$', res):\n        res+=1\n    if res<=n:\n        print(r)\n        r-=1\n        else:\n            res+=1\n        res-=1\n    print(res)\n", "# cook your dish here\nimport math\nimport math\nn = int(input())\np=1\nwhile n:\n    if n%p==0:\n        m=n//p\n        c=math.floor(math.log(a,2))\n        l=s+x\n        print(l)\n    n=n//m\n", "n = int(input())\nans = 0\np = 10\nwhile n > 0:\n    x,y = map(int, input().split())\n    if x == y:\n        ans += 1\n    else:\n        ans = 1\nprint(ans)\n", "import sys\nfrom collections import Counter\n\ndef is_prime(n):\n    return (10**9 - n) >= 0\n\ndef is_prime(n):\n    return (n%10==0) or (n%10==0) or (n%10==0 and n%10!=0)\n\ndef __starting_point():\n    return int(sys.stdin.readline()) == int(sys.stdin.readline())", "n=int(input())\nd={}\ns=0\nwhile(True):\n    if not n:\n        d[n]=0\n        n=n//10\n    if n:\n        d[n]=1\n    d[n]=0\n    s=s+1\nprint(d)\n    n=n+1\nprint(d.count(n))", "N=int(input())\nX=[]\nfor i in range(2,N+1):\n    a=input()\n    if X[0]!='0':\n        x.append(len(x))\n    if a!='9':\n        X.append(len(a))\n    if x in X:\n        X.append(len(a))\n    X.sort()\nprint(N.count(x))"], "379": ["a, b = input().split()\nans = 0\nfor i in range(0, a):\n    for j in range(b):\n        if j - (b - a) > i:\n            ans +=1\nprint(ans)", "x,y,a,b=map(int,input().split())\nprint(sum(a+b-a)//2)\n", "# cook your dish here\n# y = []\n\n\n\nx, y, a, b = map(int, input().split())\n\n# count bricks n <= a <= b\n\n# count pink n <= b\n# count bricks n = a * b\n\n# print(x, y, a, b)\n\nprint(n)\n", "import numpy as np\nsys.setrecursionlimit(10**6)\n\nx, y, a, b = list(map(int, input().split()))\nx = np.matrix(list(map(int, input().split()))\ny = np.matrix(list(map(int, input().split())))\ncount=np.sum(x)\nprint(count)\n", "# cook your dish here\ns=int(input())\nfor i in range(s):\n    x,y,a,b=map(int,input().split())\n    if x<=a and x<=b:\n        s+=1\nprint(s)", "c=0\nfor _ in range(int(input())):\n a, b=map(int, input().split())\n if b<a and a>b:\n  c+=1\n if a>b:\n  print(c)\n else:\n  print(c)\n"], "380": ["n,m = map(int,input().split())\nm = map(int,input().split())\ndp = [1]*m\n\nfor i in range(0,n+1):\n    if m[i]:\n        dp[i] = dp[i-1] + 1\n\nfor i in range(n):\n    dp[i] = 2*dp[i-1]\n\nfor i in range(2,m):\n    print((dp[n-1][i]+dp[i-2]))\n\n\n", "# cook your dish here\nn,m=list(map(int,input().split()))\nprint(min(int(n)//m),1)", "# cook your dish here\nn,m=map(int,input().split())\n\nif n%m==0:\n    print(-1)\nelif n>=m:\n    print(n%m)\nelse:\n    print(n)", "def check_p(n, m):\n    return int(n) % m == 0 and sum(range(1, m + 1)) == n\n\ndef m1x(n, m):\n    if n == 0 or m == 0:\n        return 0\n    if n == 1:\n        return m \n    \n    s = 0\n    for i in range(1, m + 1):\n        s += 1 \n        if n % i == 0:\n            s += 1\n        if s % m == 0:\n            s -= 1\n    return s\n\nif n == 0 or m == 1:\n    print(-1)\nelse:\n    x = int(input())\n    print(m1x(m, n - 1))\n", "import math\nn,m = map(int,input().split())\nc = int(math.sqrt(m))\nx = n*m-1\nc = x//m\n if c == 0:\n  print(-1)\n else:\n  print(x)", "n,m=map(int,input().split())\nl=[]\nwhile m>0:\n    if m%n==0:\n        m=m*n\n        if n%5==0:\n            m=m*n+1\n        else:\n            l.append(n*n)\n        m=m*n+1\n        n=1\nprint(l[-1])"], "381": ["def main():\n    input = int(input())\n    arr = [0] * (len(input()) + 1)\n    i = 1\n    i = 2\n    while i * i < len(arr) and arr[i + 1] <= arr[i]:\n        j = arr[i ]\n        i += j\n        j += 1\n        j -= 1\n    while j!= 0 and arr[i + 1] <= arr[j] * arr[j]:\n        j += 1\n        i += 1\n    arr.append(0)\n    count = 2\n    for x in range(4):\n        val = k * i\n        arr[x] = val\n        count *= 2\n        j = i * i\n        x = k * i\n        j = k * i\n        i -= j\n    print(len(arr))\n\n\nfor i in range(4):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print((((n - 1))*n+1))\n    \n", "N = int(input())\n\nr_n = 10**6-1\nx_n = 1\nfor i in range(2, int(N**0.5)+1):\n    l_n = l_n * i\n    r_n = 2 ** (R_n-1)\n    c_x = 0\n    c_y = 0\n    s = 1\n    n = (R_n + 1) // 2\n    z_a = ((R_n + 1) // 2) ** (R_n)\n    z_b = ((R_n + 1) // 2) % 1\n    ans = min(x_n, z_b)\n    print(ans)", "# cook your dish here\ndef __starting_point():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l = 0\n    d = [0]*n\n    for i in range(1, n + 1):\n        if arr[i]!= i:\n            d[i] = arr[i - 1]\n            i -= 1\n    if i > l:\n        l = i - l\n    break\n    l += 1\n    c = arr[0]\n    b = arr[1]\n    q = []\n    while q:\n        q.append((q.pop()), int(q)), int(q)\n        x = arr[0]\n        y = arr[1]\n        if x > y:\n            l = x\n            x = y\n    print((l+x))\n    \n__starting_point()", "import sys\n\ndef main():\n    n = int(input())\n    x = 0\n    y = n\n    while x > y:\n        x += 2**(y - x)\n        y -= 2**(y - x)\n        y //= 2\n    print(min(x, y))\n\n", "\n#input().readline()\nn=int(input())\narr=[0]*n\nma=math.inf\nfor i in range(1,n+1):\n    arr[i]=1\n\nl=[]\nfor i in range(n-1):\n    while len(arr)<2 * l:\n        l.append(arr[i-2]**2)\n        arr[i]=1\n        i-=2\nprint(min(arr[n-1],arr[-1]))", "import sys\nimport math\nimport math\nn = int(input())\nn = int(n ** 0.5)\nr = math.sqrt(2*n)\n\nif n <= 1:\n    print(1)\nelse:\n    print(n * (n - 1))"], "382": ["a,b,c,d = map(int,input().split())\nfor i in range(2,len(a)):\n    print(i*2+d*c)", "a, b, c, d = map(int, input().split())\na, b, c, d = input().split(), list(map(int, input().split()))\nprint(sum(a*(b*(c+d)//a)/b+(c*d)/a)//2)", "# cook your dish here\nA,B,C,D=list(map(int,input().split()))\n#print(A,B,C,D)\n\n\nfor i in range(0,3):\n    x,y,z=map(int,input().split())\n    x-=y\n    y-=z\n    print(x)", "from math import sqrt\na, b, c, d = map(int, input().split())\n\na_x, b_y, c_z = list(map(int, input().split()))\na_x, b_y, c_z = map(int, input().split())\na_y, b_z = sorted(a_x)\na_c = sorted(b_c)\nb_z = sorted(d_c)\nb_z = sorted(d_z)\nprint(2*(a_x + a_y + a_z + a_z + a_c + a_z + a_z))", "A, B, C, D = list(map(int, input().split()))\nx,y,z = map(int, input().split())\n\nt = [[] for i in range(4)]\nfor x in A:\n    t[x[1]] = x[0]\n    t.append(x[2])\n    if len(t) == 4:\n        t[2] = x[3] + c[3]\n    if len(t) == 2:\n        t[3] = z[3] + d[2]\n    elif len(t[1]) == 1:\n        t[2] += d[1]\n    elif len(t[2]) == 2:\n        t[3] = b[1] + d[2] + d[1] + d[2]\n    elif len(t[3] ) == 2:\n        t[4] = z[2] + d[2] + c[3]\n    else:\n        t[4] = a[2] + x[2]\n    if len(t[0]) == 1:\n        t[1] += d[0]\n    else:\n        t[3] += d[0]\n    if len(t) == 4:\n        t[0] += x[0]\n    if len(t) > 4:\n        t[0] += 2\n    if len(t[1] ) > 4:\n        t[1] += 2\n    t[3] += 2\n    if len(t[1]) == 1:\n        t[1] += 2\n    if len(t[2]) == 1:\n        t[2] += 3\n    if len(t[3])", "# cook your dish here\na,b,c,d=map(int,input().split())\nfor i in range(len(a)):\n    a,b,c,d=map(int,input().split())\n    if a<b<c and b<c and a<d and a>a:\n        c+=a\n    else:\n        f=a+b+c+d\n        f=d+c\n    if a==b:\n        c+=d\n    if a==c or b==c or d==d:\n        d+=d\n    else:\n        d+=d\n    d+=a\nprint(f)\n"], "383": ["l,a,b,m=map(int,input().split())\na,b,m=list(map(int,input().split()))\nl=max(a,b)\n\na=l%m\na=m%m\nprint(a)", "L,A,B,M=map(int,input().split())\nL.append((L)+(A+B)/2)\n\nM = 10**9\nm = 10**9\nA = (A+B)/2-B\nM = (B-A)/2-M\nA = abs(A-A)/2\nprint(m % (L*(M-L)-L)", "L,A,B,M=list(map(int,input().split()))\nans=0\nfor i in range(2,N):\n    a,b,m = list(map(int,input().split()))\n    if b<0:\n        ans=a+b\n    else:\n        ans=b%m\nprint(ans)\n", "import sys\n\nl,a,b,m = map(int,input().split())\nans = 0\nfor i in range(1,m+1):\n    ans = ans + (a + b) % (10**9)\nprint(ans % m)", "# cook your dish here\nl,a,b,m = list(map(int,input().split()))\nmod = 10**9\nans = [0] * (len(a) + 1)\nfor i,(a,b,m) in enumerate(a):\n    a,b,m = a,b,m,m\n    ans[0] = a\n    ans[1] = b\n    ans[2] = m\nprint(ans[0]%mod)\n", "# cook your dish here\nL,A,B,M=map(int,input().split())\nA,B,M=map(int,input().split())\nB=int(B)\nM=m/len(A)\nA2=A*B\nB2=B%int(M)\nprint((A1*B2+B2*M) % 10007)"], "384": ["# cook your dish here\nfor t in range(int(input())):\n    n = int(input())\n    a = [[int(i) for i in input().split()] for i in input().split()]\n    c = [0 for i in range(n)]\n    for i in range(n):\n        c[i][0] += a[i - 1][1]\n        if c[i][0] > a[i][0]:\n            c[i][0] = -1\n            c[i][1] = 1\n    else:\n        c[i][0] += a[i - 1][0]\n        for i in range(n):\n            c[i][i] += b[i - 1][1]\n            if c[i][1] == c[i-1][1]:\n                c[i][1] = b[i-1][0]\n                c[i][1] -= 1\n                c[i][2] = c[i-1][2]\n            c[i][0] -= 1\n        c[i][2] -= 1\n        if c[i][0] == c[i-1][1]:\n            c[i][1] -= 1\n            c[i][0] += 1\n        elif c[i][1] == c[i][0] == c[i-1][0]:\n            c[i][1] += 1\n        else:\n            c[i][1] = c[i-1][0]\n            c[i][1] += 1\n    print(c[i][0])\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    seq = [int(x) for x in input().split()]\n    l, res = 0, len(seq)\n    for _ in range(n-l-1):\n        l -= arr[l]\n        res += arr[l]\n        arr[l] -= 1\n        if res < l-1 or res > r:\n            print(-1)\n        else:\n            print(-1)\n", "t=int(input())\nfor i in range(t):\n    n=int(input())\n    a=list(map(int, input().split()))\n    l=list(map(int, input().split()))\n    print(2)\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [(x, y) for x, y in zip(b, a)]\n    l = []\n    for i in range(n):\n        for j in range(i):\n            l.append(a[i])\n        a.pop()\n    l.append((0, -1))\n    l.append(-1)\nprint(int(sum([a[i:i+2]) for i in range(n)]))\n", "t=int(input())\nfor i in range(t):\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    if len(set(b))==2:\n        print(-1)\n        return\n    a.sort()\n    b.sort()\n    print(max(a))", "from collections import defaultdict\nfrom collections import defaultdict\nimport sys\ninput = sys.stdin.readline\nimport bisect\n\nimport heapq\ndef dfs(n):\n    ans, n = sorted([0] + [0] * (n + 1))\n    for i in range(n):\n        if n % 2 == 1:\n            ans += int((2*i) + 2 * (i - 1))\n            return ans\n\n\ndef heapify(arr):\n    ans = []\n    for j in range(n):\n        cur = tuple(arr[j])\n        if cur not in ans:\n            ans.append(cur)\n            break\n    return ans\n\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    n = int(input())\n    t = int(input())\n    for i in range(n):\n        arr[i] = 0\n        print(dfs(arr))\n        res = []\n        i = 0\n        for j in range(2*n):\n            s = list(map(int, input().split()))\n            if s[-1]!= \"0\":\n                if s[-1]!= \"1\":\n                    res.append(s[-1] )\n                    res.append(s[-1] )\n        i += 1\n    if i == 2*n:\n        print(2*n)\n    else:\n        print(-1)\n\n"], "385": ["n=int(input())\np=[int(i) for i in input().split()]\nans=0\nfor i in range(1,n+1):\n    p[i]=int(p[i])\nprint(min(ans,p[n-1])+p[0])\n", "# cook your dish here\nn = int(input())\nx = list(map(int, input().split()))\ny = []\nfor i in range(1, n):\n    y.append(x[i])\nx.sort()\nx.sort()\ny.reverse()\nfor i in range(n):\n    if len(y)!= 0:\n        if len(x)!= 2:\n            y.append(x[i])\nprint(max(y))", "n=int(input())\nx=list(map(int,input().split()))\ncount1=0\ncount2=1\nminX=0\nmaxX=0\nfor i in range(n-1):\n  if i+1==len(x):\n   minX=minX+x\n   i+=1\nprint(minX)", "n = int(input())\ns = \"\"\nfor x in range(1,n+1):\n    x += x\nprint(min(s,x))", "for _ in range(int(input())):\n    x1=list(map(int,input().split()))\n    x2=list(map(int,input().split()))\n    d=x1+x2\n    print(min(d),d[-1]-min(d)[-1])", "# cook your dish here\nimport math\nn = int(input())\nl = list(map(int, input().split()))\nl.sort(reverse=True)\nans = sum(l)\nfor i in range(n):\n    print(ans)"], "386": ["import math\nimport sys\nn, k = list(map(int, input().split()))\nfor i in range(1, n - 1):\n    k = k * math.floor(math.sqrt(n))\n    count = 0\n    while k > 1:\n        count += math.ceil((n - i - k))\n        k >>= 1\n        count += math.ceil((n - i - k) // 2)\n    k //= math.ceil((n - i - 1)/2)\n    print(count)", "import math\nimport math\n\ndef main():\n    s = input()\n    n,k = s.split(' ')\n    if n == 0:\n        return 0\n    try:\n        n //= 2\n        s = 1\n        return s\n    except:\n        return 0\n\ndef __starting_point():\n    n = int(input())\n    k = int(input())\n    n = n//2\n\n    print(pow((pow(2,n) // 2) + k, n, k))\n__starting_point()", "MOD = (998244353)\nn, k = list(map(int, input().split()))\nans = 0\nfor i in range(2, n + 1):\n    if k < (n - i - 1) / 2:\n        ans += (((n - i - 1)) * k) % MOD\n    print(ans)", "n,k=list(map(int,input().split()))\nsum=0\n\nfor i in range(n-1):\n    #1\n    for j in range(1,n+1):\n        for k in range(1,n+1):\n            if k > 0:\n                sum+=1\n            else:\n                break\n    \n    sum%=(998244353)\n    print(sum)\n", "n,k=map(int,input().split())\nfor i in range(n):\n    c = k*(i+1)%998244353\n    print(c)\n\nprint(\"\\n\")", "from fractions import gcd\n\nn, k = map(int, input().split())\nif k == 0:\n    print(1)\n    else:\n        x = gcd(k, n)\n        return x // x % ((998244353) + x // k) % (998244353)\n\ndef solve():\n    n, k = map(int, input().split())\n    k = k // k\n    if k == 0:\n        return 1\n    return solve()\n    \n\ndef __starting_point():\n    main()\n__starting_point()"], "387": ["def main():\n    n = int(input())\n    s = input().strip()\n    for x in s:\n        if x % 3 == 0:\n            print(-1)\n            break\n    return -1\n    for i in range(n // 3):\n        s = s[i % 3:i]\n\n    i = s[i % 3:].rstrip()\n    print(s[i] if s[i % 3] == 0 else s[i % 3:])\n", "# cook your dish here\ndef dfs(n, a):\n    if n==0:\n        a=0\n        break\n    elif n%3!=0:\n        a=3*a\n        break\n    elif n==0:\n        b=3*a\n    if b!=b:\n        break\n    elif n==1:\n        print(-1)\n    else:\n        print((n-1,a))", "n=int(input())\nl=[]\nwhile l:\n    if n%3==0:\n        l.append(-1)\n    else:\n        l.append(n//3)\n        n//=3\nprint(sorted([l[i]*3 for i in l])[3:])\n", "n=int(input())\na=[]\na.append(min(a))\nprint((1+(a*2)/3)*2*a[0]//a[-1] if a<a else 1))\n\nfor i in range(0,7):\n a.append(min(a)+max(a)+min(a%3,3))\n", "# cook your dish here\nimport sys\ninput = sys.stdin.readline\nn = int(input())\nj = []\na = [1] + [0]*(n+1)\nm = [0]*(n+1)\nfor i in range(1, n+1):\n    a[i]+=1\n    c = 0\n    for j in range(3, n+1):\n        c+=1\n    if c > n-j:\n        m.pop()\n    a[j]-=1\n    if a[j]%3==0:\n        print(-1)\n    else:\n        print(-1)\n", "def getnumberofdivisors(i):\n    n = int(input())\n    a = input().split()\n    c = [1] * (n//3)\n    for i in a:\n        if c[i] % 3!= 0:\n            c[i] //= 3\n            break\n    if c[i]!= 0:\n        return -1\n    a.sort(reverse=True)\n    return a\n\ndef findnumberofcomponents(num: int) -> int:\n    count = 0\n    for i in range(3,n//3 + 1):\n        for j in range(3,n//3 + 1):\n            count+=1\n    if count+1 >= n:\n        if i%3==0:\n            if i%3==0:\n                break\n        if i%3!=0:\n            if count+1 < n:\n                count+=1\n                count+=1\n        else:\n            return -1\n\n    return findnumberofcomponents(num)\n\ndef main():\n    main()\n    input()\n    \n    n = int(input())\n    i = 0\n    count = getnumberofcomponents(n)\n    for j in range(0,1):\n        for x in range(0,i+3):\n            for j in range(0,n//3 + 1):\n                if num % 3!= 0:\n                    print(-1)\n            else:\n                if num%3!=0:\n                    print(x)\n                i+=1\n    main()\n"], "388": ["s=input()\nr=0\nk=len(s)\nk = 1\nfor j in range(k):\n    s[j]=max(s[j],s[j])\nif(s[k-1]==s[k]):\n    r+=1\nprint(r+k)", "# cook your dish here\ninput()\ns = list(input())\nk = -1\ns.reverse()\nans = -1\nans = len(s)\nfor i in range(k):\n    if s[i] == s[i+k]:\n        ans = min(ans, i-k)\n    print(ans)\n", "s = input()\nnum_k = [1]*10000\nn = len(s)\na = 0\nfor i in range(0, n):\n    a= a+i\n    for j in range(0, n):\n        if s[j] == num_k[j]:\n            count[i] = 1 + count[i-j]\n    print(count[i])\n", "s = input()\nn = len(s)\nk = 1\nk = int(n)\nwhile k<n:\n    k = k + 1\n    while k > 0:\n        k += 1\n        k -= 1\n        k += 1\nprint(k)\n", "s = input()\nk = 1\nwhile k <= len(s):\n    count = 0\n    for i in range(len(s)):\n        if s[i] == s[i-k]:\n            k += 1\n    k += 1\n    print(k)\n", "n = int(input())\ns = input()\nk = int(n)\nc = 0\n\nwhile True:\n    for i in range(len(s)):\n        if s[i] == s[i+1]:\n            break\n        k +=1\nprint(k)"], "389": ["n,k=map(int,input().split())\nans=0\nfor i in range(1,n+1):\n    if k>=2*k:\n        ans+=(k-4*n-i+2)\n        print(ans)\n    else:\n        ans+=k\n\n", "# cook your dish here\nn,k = map(int,input().split())\na = 1\n\nb = 1\nwhile k > 0:\n    a = a + k * b\n    b += a\n    b = b * a\n    c = 1\n    while b < a:\n        c += b * (b - a)\n        b -= a\n        c += c * (b - a)\n    b -= a\n    c += 1\n    print(c)\n", "import sys\nn, k = list(map(int, input().split()))\nsheets = [i for i in range(n)]\nlps = [4*k,4*k,2*k*k]\n\nd = [1,2,3]\nfor i in range(1,n):\n    sheets.append(sheets[i-1] + sheets[i-2]+sheets[i-2]+sheets[i-1]+sheets[i-3])\n    \nfor i in range(n,n+k):\n    d[i] = min(d[i],d[i-k]+sheets[i-k])\n\nprint(min(d))\n\n", "n,k=map(int,input().split())\nif k==1:\n    print(n)\nelse:\n    x=n-k*(k-1)\n    y=n-k*(k-2)\n    print(x)", "n, k = map(int,input().split())\narr = [int(x) for x in input().split()]\narr.sort()\nprint(arr.count(2))", "import sys\n# cook your dish here\nn,k = map(int, input().split())\n\nprint(10**8-n+k)"], "390": ["n, m = map(int, input().split())\nq = list(map(int, input().split()))\ncount = 0\nwhile q:\n    count += q.popleft()\n    q.append(count)\n\nprint(count)", "# cook your dish here\nn,m = list(map(int, input().split()))\n\n\na = list(map(int, input().split()))\n\np1 = sum(a)\np2 = 0\n\nwhile p1 < p2:\n    n,m = p1 + p2\n    if n == m:\n        p1 = m - 1\n    elif n == 1:\n        p1 = n\n    if p1!= m :\n        p1 = p2\n    else:\n        p2 = p1\n    p1 += 1\n    \nprint(a.count(m))\n", "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\ncount = 0\nfor i in range(m):\n  if(a[i] > 0 and a[i - 1] > 0):\n   count += 1\nprint(count)\n", "n,m = map(int,input().split())\nl = list(map(int,input().split()))\nprint((l[0] - l[1])*l[2])\n", "import sys\nn, m = map(int, input().split())\narr = list(map(int, input().split()))\nprint((len(arr)/(n-1)*m-2)//2)", "n, m = map(int, input().split())\na = list(map(int, input().split()))\nm = len(a)\n\nx = [0] * n\n\nfor i in range(n):\n    if a[i] > a[i-1]:\n        x[i] = 1\n        else:\n            x[i] = 0\nprint(x[len(a)-2])\n"], "391": ["a,b,c,d = map(int, input().split())\np = a*b*c-d\nq = a*b*c-c-d*d\nprint((p/q))\n\n\n\n", "a,b,c,d=map(int,input().split())\nprint('p/q'[int(a/b)*b%c>0])'", "import sys\nimport math\na,b,c,d = map(int,input().split())\na1 = list(map(int,input().split()))\nb1 = list(map(int,input().split()))\na2 = list(map(int,input().split()))\nb2 = list(map(int,input().split()))\nb2 = list(map(int,input().split()))\nc1 = list(map(int,input().split()))\nc2 = list(map(int,input().split()))\nd2 = list(map(int,input().split()))\np,q = float('inf'), int('inf')\nfor i in range(0,q+1):\n    if(a1[i-1]>b2[i-1]:\n        p = a1[i-1]\n    elif(b2[i-1]>b2[i-1]):\n        p = a1[i-1]\n    q = a2[i-1]\n    if(b1[i-1]>c2[i-1]:\n        q = a1[i-1]\n    else:\n        p = a2[i-1]\n    q = a2[i-1]\n    print(p/q)\n", "import math\n\na, b, c, d = map(int, input().split())\nb2 = [a, b, c, d]\nn = a + b + c + d + a - b\n\np = math.floor(math.sqrt(n))\nq = math.floor(math.sqrt(n))\np = 0\nq = q\n\n#print(p,q)\n#print(p,q)\n#print(a,b,c,d)\nn = int(input())\nif n%2==1:\n    p = 1\n    n = 1\nprint(p/q)", "a, b, c, d = list(map(int, input().split()))\nm = (c*b) - (a*b)\n\nprint(\"{}/{}/{}\".format(m, a, b, c, d))", "# cook your dish here\na,b,c,d=map(int,input().split())\n#n=int(input())\na,c,d=map(int,input().split())\na=a*b*c+b*d\nb=c*d+c*d\nd=c*d+d*a+d*(a*b-b)\nprint(1/(math.sqrt(a/d)))"], "392": ["n=int(input())\nl=[]\nfor i in range(n):\n\ts=input()\n\tans=0\n\tfor j in range(i+1,n):\n\t\tif s[j]==\"R\" or s[j]==\"G\":\n\t\t\tans+=1\n\t\telif s[j]==\"B\":\n\t\t\tans+=1\n\t\telif s[j]==\"R\" or s[j]==\"R\" or s[j]==\"G\":\n\t\t\tans+=1\n\t\tif s[j]==\"R\" or s[j]==\"G\":\n\t\t\tans+=1\n\t\telif s[j]==\"R\":\n\t\tans+=1\n\t\tfor i in range(i+1,n):\n\t\tif s[i]==\"B\":\n\t\t\tans+=1\n\tprint(ans)", "n = int(input())\ns = input()\nc = 0\nt = 0\nfor i in range(n):\n\tif s[i] == 'R':\n\t\t\tt += 1\n\telif s[i] == 'G':\n\t\t\tt += 1\n\telif s[i] == 'B':\n\t\t\tt -= 1\n\telif s[i] == 'R':\n\t\t\tt += 1\n\t\telse:\n\t\t\tt += 2\n\tif s[i] == 'B':\n\t\t\tt += 1\n\telse:\n\t\t\tt -= 1\nprint(t)\n", "n = int(input())\ns = list(input())\nc = []\nfor i in range(n):\n    if s[i] == s[i+1]:\n        c.append(1)\n    elif s[i] == s[i+2]:\n        c.append(1)\nprint(c.count(0))", "n = int(input())\ns = input()\nans = 0\nfor i in range(1,n+1):\n    if s[i] == 'R':\n        if s[i-1] == 'G':\n            ans += 1\nprint(ans)\n", "n=int(input())\nfor i in range(n):\n    s=input()\n    if s==\"R\":\n        print(0)\n    elif s==\"G\":\n        print(0)\n        print(1)\n        print(0)\n        else:\n            print(0)", "n=int(input())\nfor i in range(n):\n    r = input()\n    g = input()\n    b = input()\n    for j in range(1,n+1):\n        if g[j]==\"R\":\n            b[j] = b[j+1]\n        if g[j]==\"G\":\n            b[j] = b[j-1]\n            else:\n                r[j] = b[j]\n    if b[j]==\"B\":\n        b[j] = b[j-1]\n    b.sort()\n    print(b.count(0))\n"], "393": ["# cook your dish here\nx=int(input())\nans=0\nfor i in range(2,int(x**0.5)+1):\n    if(x>0):\n        if((x-i)*3<1 and i!=x):\n            ans+=1\nprint(ans)\n\ndef main():\n    main()", "def solve(i):\n    x=int(input())\n    count=0\n    while i<=len(x):\n        if x>x:\n            count+=1\n        i=x-1\n        return count\n    return 1\n\ndef main():\n    x=int(input())\n    x=i\n    x=int(input())\n    if x>=4:\n        print(1)\n        break\n    print(solve(x))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\n\nl = [0] * n\n\nwhile n>0:\n    b = int(input())\n    for i in range(0, b):\n        if i < n - (i+1) and i <= n:\n            l.append(i)\n            break\n    n -= 2\n    \n    if l[i] > n-6:\n        l[i] = i - l[i+1]\n    if l[i] <= n-7:\n        l[i] = l[i+1]\n    \n    print(l[-1]+1)\n    \n", "a = int(input())\nif a > 0:\n    print(a-0)\nelse:\n    print(1)", "x = int(input())\nif x <= 0:\n    print(1)\nelse:\n    print(2)\n", "# cook your dish here\ndef main():\n    x=int(input())\n    return int(input())\n\ndef move(m, p):\n    if m>1:\n        x-=m\n        if p>=0 and p<m:\n            return 1\n        else:\n            return 0\n\n\n#print(move(x, 0))\n\ndef go():\n    x=0\n    c=0\n    if x==0:\n        return 0\n    if x%3==0 and x==m:\n        return 1\n    if (x/4)==x:\n        return 1\n    while(x%5==0 and x!=m):\n        y=x%5\n        x+=1\n        c+=1\n\ndef move(m, x, m):\n    if m%3==0 and x>m:\n        return 1\n        else:\n            return 0\n\nreturn go()\n\ndef step(x, m):\n    x=m\n    return round(go()+1)\n\ndef check(x, m):\n    return 0 < m and int(m/3)-int(m)\n\ndef check(x):\n    x=input()\n    # print(x)\n    print(check(x, m))\n\n\nfor i in range(len(x)):\n    print(check(x, m, m))\n"], "394": ["import sys\ndef main():\n    s = input()\n    l = list(range(0,90))\n    c = s[-1]\n    s.pop(0)\n    if c == n:\n        print(1)\n    return\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    n += 1\n    i = list(map(int, input().split()))\n    count = 0\n    while i < n:\n        if arr[i] < arr[i+15]:\n            count += 1\n            i += 1\n    return count\n\ndef __starting_point():\n    n = int(input())\n    l = int(input())\n    l1 = int(input())\n    l2 = int(input())\n    print(l1)\n__starting_point()", "for x in range(int(input())):\n    l = []\n    for x in input():\n        l.append(int(x))\n    l.reverse()\nprint((l.count(max(l[1:], l[0]),l[1:]))\n", "n=int(input())\nt=list(map(int,input().split()))\n\nfor m in t:\n    x=int(input())\n    if x>=15:\n        print(m)\n", "n=int(input())\nl=[]\na=int(input())\nl.sort()\nfor i in range(90):\n\ta+=l[i-1]\n\ti+=1\nprint(a)", "import sys\nimport bisect\nimport math\nn = int(input())\nT = list(map(int, sys.stdin.readline().split()))\nm = int(input())\ncount = 0\nwhile M <= N:\n  N = N - 1\n  if L[N] < T[N]:\n   count += 1\n  else:\n   count += 1\n\nprint(count)", "n=int(input())\nt=list(map(int, input().split()))\nm=m-1\nt1=[]\nt2=[]\nfor i in t:\n    t1.append(int(input()))\nt2.append(int(input()))\nprint(m)\n"], "395": ["s=input()\nd=10\nl=k\nfor i in range(len(s)):\n    a=s[:i]\n    l+=1\nprint(len(a)+l-2)\n", "s = input()\nl = 0\nfor i in range(len(s)-1,-1,-1):\n    s[i] = s[i+1:i+k]\n    if len(s)<=l:\n        print(l)\n    else:\n        for j in range(len(s)-1,-1,-1):\n            if i==j:\n                s[j+1:j+k] = s[j+k]\n            else:\n                break\n            if i==j-k-1:\n                s[j+k] = s[j+k-1:j+k]\n                l = l+1\n        else:\n            s[i] = s[i+k:i+k]\n            l = i-k+1\n        print(max(l,l))", "s = input()\nn = len(s)\n\nl = 0\n\nwhile(n>1):\n    k = n\n    l += 1\n    while(n>1):\n        k = k-1\n        l = max(l, k)\n        l = 0\n        for j in range(k-1,-1,-1):\n            l += s[j]\n        n -= 1\n    print(l, sep='')\n    n+=1", "# cook your dish here\nt = lambda: list(map(int,input().split()))\nl = []\nt = lambda : 1\nwhile l < len(t):\n    t += t(l)\n    print(k-t)\n", "def is_in_string():\n    return len(set(s))==k\n\nN=int(input())\nfor i in range(N):\n    a=input()\n    count=len(a)\n    for j in range(0,a+k+1):\n        if i < j or i==N-j:\n            count+=1\n    return count\nif is_in_string() is False:\n    print(len(s))\n", "s = input()\nn = len(s)\n\nk = int(input())\na = len(s)\nfor x in range(n):\n    if x > k:\n        k -= x\n        a += x\nprint(n + 2 * k + max(k,a))\n"], "396": ["n = int(input())\narr = list(map(int, input().split()))\narr.sort()\ni=len(arr)\narr[len(arr)-1]=arr[-1]\nprint(max(arr)-max(arr))\n", "n=int(input())\na=[int(i) for i in input().split()]\nd=[]\nfor i in range(1,n+1):\n    d.append(-d[-1]-d[0])\nfor i in range(1,n+1):\n    d.append(d[-1]-d[1])\nfor i in range(n):\n    d.append(-d[-1])\nfor i in range(len(d)):\n    d.append(-d[i-1])\nfor j in range(len(d)):\n    if d[i]<d[j]:\n        if d[j]>d[i-1]:\n            d[j]=d[i-1]\nprint(max(list(d.values())))\n", "n = int(input())\na = list(map(int,input().split()))\nans = 0\nfor i in range(n-1):\n    a[i] = a[i] + a[i+1]\nans = max(ans,a[i])\nprint(ans)", "n=int(input())\na=list(map(int,input().split()))\nd=[]\nfor i in range(len(a)):\n    if a[i]>a[i-1]:\n        d.append(a[i]-a[i])\n    d.append(a[i-1])\nfor i in range(len(d)):\n    if a[i]<a[i-2]:\n        d.append(a[i-2])\nprint(max(max(d.keys()), d[-2]))\n", "from collections import defaultdict\nfrom collections import defaultdict, deque\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nans = [[0 for i in range(n)] for i in range(n)]\nfor i in range(0,n):\n    d = defaultdict(int)\n    for j in range(n-1):\n        if d[j]-a[i+1]>a[i]:\n            d[j] = d[i+1]-a[j]\n        else:\n            d[i] = a[i]\nprint(max(d))", "import sys\ninput = sys.stdin.readline\nn = int(input())\narr = list(map(int, input().split()))\n\nmax = -1\nres = 0\na = list(map(int, input().split()))\nwhile True:\n    num = a[0]\n    for x in range(1,len(arr)-1):\n        res += a[x]+1\n        a.remove(x)\n        max = max(res, num)\n        a.remove(x)\n    print(max)\n"], "397": ["# cook your dish here\nfrom math import sqrt\n\ndef xxor_mod(bits, n):\n    out = int(sqrt(n))\n    result = 0\n    for i in range(1, int(sqrt(n)) + 1):\n        out ^= bits[i]\n        if out%2 == 0:\n            out += 1\n        else:\n            out += pow(2, i)\n    print(out)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "def main():\n    n, m = map(int, input().split())\n    s = 1\n    i = 0\n    while i< m :\n        for j in range(n):\n            if s%i == 0:\n                s += 1\n                i += 1\n            continue\n            s += 1\n    if s%i == 0:\n        m -= 1\n        i += 1\n    print(m)", "def is_equal(x, y, n):\n    i = 0\n    while i < n:\n        if x % y == 0:\n            i = i+1\n            else:\n                i += 1\n            if i == 0:\n                return False\n        return True\n    else:\n        return False\n\ndef check(n):\n    z = int(input())\n    s = []\n    for i in range(2, z+1):\n        x = int(input())\n        k = int(bin(s[i]))\n        z = 0\n        while k <= k:\n            x = x ^ ord(s[k])\n            k += 1\n    return len(x) == n\n\n\nif is_equal(n, 0, 1):\n    print(count)\nelse:\n    count = 0\n    for i in range(2, n+1):\n        for k in range(2, k+1):\n            if is_equal(s[i:i+k+2], s[i+k+3]):\n                count += 1\n        k -= 1\n    return count\n\nr = n\nfor i in range(len(y)):\n        if is_equal(n, i, 2):\n            break\n        else:\n            if is_equal(n, i, k):\n                print(count, end=' ')\n        elif is_equal(i, 0, 2):\n            r += 1\n        else:\n            if i == n-1:\n                break\n\nexcept:\n    pass\n\n\n\n\n\n", "def main():\n    n = int(input())\n    l = input()\n    k = len(l) - l\n    p = n - 1\n    for i in range(0, k):\n        x = l[i]\n        if y[i-k] == 1:\n            p += k\n            i += 1\n    return p\ndef __starting_point():\n    return __starting_point()", "import math\nn,k=map(int,input().split())\ns=input()\nl=''\nfor i in range(1,n+1):\n    x,y=l[:k],b[k:]\n    if x==s[n-1]:\n        if s[-1]==s[k+1]:\n            k+=1\n    else:\n        if i!=n-1:\n            k+=1\n    l.pop()\nprint(len(l))", "n = int(input())\nl = list(map(int, input().split()))\nx, y = l[:-1]\n\nans = 0\nfor i in range(n):\n    y1 = 0\n    y2 = 1\n    for j in range(2, int(l[i] - l[i-1] + 1)):\n        y1 <<= i\n        x ^= 1 << y2\n        x >>= 1\n    ans += 1\nprint(ans)"], "398": ["T=int(input())\nS,q=map(int,input().split())\n\ncnt=0\nfor _ in range(T):\n    a,b=map(int,input().split())\n    if b<q-1:\n        cnt+=1\nprint(cnt)", "t = int(input())\n\nfor i in range(t):\n\tn,q = map(int,input().split())\n\tx, y = map(int,input().split())\n\tif t > y:\n\t\t\tprint(y)\n\telse:\n\t\t\tprint(x)", "import math\nT, S, q = map(int, input().split())\nT = int(input())\ndp = [[0 for i in range(q)] for j in range(T)]\ndp[0][0] = 1\ndp[1][1] = 0\ndp[2][1] = 1\nfor i in range(1,T):\n    dp[i][0] = dp[i-1][0]\nfor i in range(1,q):\n    for j in range(i):\n        for k in range(k - 1, 0, -1):\n            dp[i][j] += dp[i-1][j-k]\nprint(dp[-1][-1])", "t=int(input())\nwhile t:\n    q,s=map(int,input().split())\n    print(q-1)", "for _ in range(int(input())):\n    a,b,c=map(int,input().split())\n    t=t-q-1\n    c=c+b\n    print(c)", "from sys import stdin, stdout\ndef input():\n return stdin.readline().strip().split()\n T, S, q = list(map(int, stdin.readline().split()))\n\nt = int(input())\nl = [0] * 10\nfor i in range(q-1, 0, -1):\n    a = q - 1\n    if a == 0:\n        l[0] += 1\n    l[0] -= 1\n    print(l[0])\n"], "399": ["s = input()\nres = 0\nfor i in s:\n    if i not in res:\n        res += 1\n        if not res[i]:\n            res[i] = 1\nprint('Yes')", "a = input()\nl = [list(set(b) for b in a if b.count(a[0]) == a.count(a[1])])\nprint(\"Yes\")", "s=input()\nans=set(s)\nfor i in range(0,len(s) - 1):\n    for j in range(i + 1,len(s)):\n        if s[i]!=s[j]:\n            ans.add(s[i])\nprint(\"Yes\")\nfor i in ans:\n    print(\"No\")", "s=input()\nx=s.replace(' ', '').count(' ')\nx=x.replace(' '.join('abcdefghijklmnopqrstuvwxyz'),0)\nans=[]\nif(x==s):\n  print('Yes')\nelse:\n if(s[x]!=-1):\n  print('No')\n else:\n  print('Yes')", "l,m = map(int,input().strip().split())\nans = 0\n\nfor i in range(len(l)):\n    j = 0\n    if l[j] == l[i-1]:\n        k = l.index(l[j-1])\n        if k == 1:\n            continue\n        j += 1\n        if j == l[j-1]:\n            ans += 1\n        if ans <= m:\n            ans += 1\n        if k >= m:\n            print(\"Yes\")\n        return\n    if l[i] == m:\n        print(\"Yes\")\n        break\n        else:\n            if l[i] > m:\n                ans += 1\n        else:\n            print(\"No\")", "s = input()\ns = list(s)\ncnt = 0\ncnt_s = []\nfor i in range(len(s)):\n  if len(s[i]) < 4:\n   if s[i] == s[i+1]:\n    cnt_s.append(i)\n   break\n  else:\n   cnt_s.append(i)\nprint('Yes')\n"]}