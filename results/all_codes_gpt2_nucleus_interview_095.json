{"0": ["s=input()\n\nn=len(s)\nm=0\n\nfor i in range(n):\n\tc=s[i]\n\tif c==':':\n\t\tif m==0:\n\t\t\tm=1\n\t\t\tn=i-1\n\t\telse:\n\t\t\tm=-1\n\telif c=='\\n' and m==-1:\n\t\tm=0\n\telif c=='\\'' and m==-1:\n\t\tm=0\n\telif c==':':\n\t\tn=i-1\n\t\tif s[n]=='\\'':\n\t\t\tn=n-1\n\t\telif s[n]==c:\n\t\t\tn=n-2\n\t\telse:\n\t\t\tn=n-1\n\telif c=='|':\n\t\tn=i-1\n\t\tif s[n]==':':\n\t\t\tn=n-1\n\t\telif s[n]=='|':\n\t\t\tn=n-2\n\t\telse:\n\t\t\tn=n-1\n\telse:\n\t\tm=0\n\nif m==-1:\n\tprint(-1)\nelse:\n\tprint(max(m,n))\n", "def main():\n\ta = list(input())\n\tn = len(a)\n\tl = list()\n\tfor i in range(n):\n\t\tl.append(a[i])\n\tif n % 2 == 1:\n\t\tt = 0\n\t\tm = 1\n\t\ti = 0\n\t\twhile i < n // 2:\n\t\t\tif l[i] in ['|', ':', '\\n']:\n\t\t\t\ti += 1\n\t\t\t\tcontinue\n\t\t\tt += l[i]!= l[n - i - 1]\n\t\t\tm = max(m, t)\n\t\t\ti += 1\n\t\tif m == 0:\n\t\t\tm = 3\n\t\ti = n - 2\n\t\twhile i >= 0:\n\t\t\tif l[i] in ['|', ':', '\\n']:\n\t\t\t\ti -= 1\n\t\t\t\tcontinue\n\t\t\tt += l[i]!= l[n - i - 1]\n\t\t\tif t == m:\n\t\t\t\tm = max(m, 3)\n\t\t\t\tt = 0\n\t\t\t\ti -= 1\n\t\t\telse:\n\t\t\t\tm = 3\n\t\t\t\tt = 0\n\t\tif m == 0 and len(l)!= n:\n\t\t\tprint(-1)\n\t\t\treturn\n\t\telse:\n\t\t\tprint(m)\n\telse:\n\t\ts = list(input())\n\t\tt = [list(l[i:j]) for i in range(len(l)) for j in range(i, len(l), 1)]\n\t\tprint(t[0][1", "def change(s):\n\ta = [0] * len(s)\n\tfor i in s:\n\t\ta[i] = 1\n\t\tif i == '|':\n\t\t\tfor j in range(i, len(s)):\n\t\t\t\ta[j] = 1\n\tnew = \"\"\n\tfor i in range(len(s)):\n\t\tif a[i]!= 0:\n\t\t\tnew += '|'\n\t\t\ta[i] -= 1\n\t\telse:\n\t\t\tnew += i\n\treturn new\ns = input()\nn = len(s)\nif n < 2:\n\tprint(-1)\nelse:\n\tif n == 2:\n\t\tprint(n)\n\t\treturn\n\tf = change(s)\n\tif f!= -1:\n\t\tif n % 2 == 0:\n\t\t\tprint(f)\n\t\telse:\n\t\t\tprint(-1)\n\telse:\n\t\ti = 0\n\t\twhile f!= -1:\n\t\t\tfor j in range(0, n):\n\t\t\t\tif i <= f[j] and j < len(s):\n\t\t\t\t\ti += 1\n\t\t\t\t\tf = change(s[:j+1])\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\t\ti += 1\n\t\tprint(i)\n\t\treturn\n", "def parse(s):\n\taccordion = []\n\tfor i in s:\n\t\tif i == ':':\n\t\t\tif len(accordion) < 2:\n\t\t\t\taccordion.append('|')\n\t\t\telse:\n\t\t\t\taccordion.append('(|')\n\t\telif i == ':':\n\t\t\taccordion.append('')\n\t\t\taccordion.append(i)\n\t\telse:\n\t\t\taccordion.append(i)\n\treturn Accordion\n\ns = input()\nif not parse(s):\n\tprint(-1)\nelse:\n\tprint(len(accordion))\n", "s = input()\n\nn = len(s)\nm = 0\n\nfor i in range(n):\n\tp = s[i]\n\t\n\tif p == ':':\n\t\tif m == 0:\n\t\t\tm = 1\n\t\t\tn = i\n\telif p == ']':\n\t\tif m == 0:\n\t\t\tm = -1\n\t\t\tn = i - 1\n\telif p == '(':\n\t\tif m == 0:\n\t\t\tm = 1\n\t\t\tn = i + 1\n\telif p == ']':\n\t\tif m == 0:\n\t\t\tm = -1\n\t\t\tn = -1\n\telif s[i]!= p:\n\t\tn = i\n\t\tbreak\n\nif n < 0:\n\tprint(-1)\n\treturn\n\nprint(max(m, n) + 2 * (n - m + 1))\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve():\n\ts = list(minp())\n\n\tcnt=0\n\tcnt1=0\n\taccord=[]\n\n\tfor i in range(len(s)):\n\t\tif s[i]==':':\n\t\t\tif cnt!=0:\n\t\t\t\taccord.append([])\n\t\t\t\tcnt+=1\n\t\t\taccord[-1].append('.')\n\t\t\tcnt1+=1\n\t\telif s[i]==':':\n\t\t\tcnt+=1\n\n\tfor i in range(len(s)):\n\t\tif cnt==0:\n\t\t\tcontinue\n\t\tif s[i]==',':\n\t\t\taccord.append([])\n\t\t\tcnt=1\n\t\t\tcontinue\n\t\tif s[i]==s[i].strip()[1:]:\n\t\t\tcnt=1\n\t\t\taccord[-1].append('.')\n\t\telse:\n\t\t\tcnt+=1\n\tif cnt==0:\n\t\treturn -1\n\tif cnt>0 and accord[0]!=[]:\n\t\treturn -1\n\n\treturn mint()\n\nprint(solve())\n"], "1": ["n = int(input())\nif n < 10:\n\tprint(n)\nelse:\n\ts = str(n)\n\tl = len(s)\n\tm = n\n\tt = sum(map(int, s))\n\tfor i in range(l):\n\t\tif t < m:\n\t\t\tm = t\n\t\t\tif m < n:\n\t\t\t\tprint(m)\n\t\t\t\tbreak\n", "x = int(input())\nsol = sum(list(map(int,list(str(x))))\nans = x\nfor i in range(len(str(x))):\n\tif int(str(i)) > sol:\n\t\tsol = int(str(i))\n\t\tans = i\nprint(ans)\n", "x = int(input())\n\nsums = {}\n\nfor i in range(len(str(x))):\n\tsum = 0\n\tfor j in str(x):\n\t\tsum += int(j)\n\t\n\tsums[sum] = i\n\t\ntemp = sums[max(sums, key=sums.get)]\n\nprint(temp)\n", "n = x\n\nl = list(str(n))\n\nm = max(l)\n\ns = sum(l)\n\nr = max(set(l))\n\ns_digit = len(str(s))\n\nif (s > m):\n\tr = m\n\nelse:\n\twhile s_digit > 4:\n\t\ts_digit -= 1\n\tl = [str(int(i) for i in l]\n\tif (len(l) == s_digit):\n\t\tr = max(r, n)\n\tprint(l[r-1])\n", "\n'''\n\tAuther: ghoshashis545 Ashis Ghosh\n\tCollege: Jalpaiguri Govt Enggineering College\n'''\n\tx=str(input())\n\tl=len(x)\n\tm=0\n\tfor i in range(l):\n\t\tsu=sum(list(map(int,list(x[i]])))\n\t\tif su>m:\n\t\t\tm=su\n\tprint(x[m])\n\n", "x = int(input())\nc = []\nfor i in range(len(str(x))):\n\tfor j in range(len(str(x))):\n\t\tc.append([i, x - j])\n\t\t\n\tc.sort(reverse = True)\n\tprint(c[0][1] + 1)\n"], "2": ["def next_lucky_year(year):\n\tfor i in range(1, len(str(year)) + 1):\n\t\tif int(str(year)[i])!= 0:\n\t\t\treturn i + 1\n\treturn len(str(year))\n\n\ndef __starting_point():\n\tn = int(input())\n\tprint(next_lucky_year(n))\n\n__starting_point()\n", "\n\ndef main():\n\tn = int(input())\n\tr = 0\n\twhile n!= 0:\n\t\tif n % 10!= 0:\n\t\t\tr += 1\n\t\telse:\n\t\t\tn = n // 10\n\t\t\tif n % 10 == 0:\n\t\t\t\tr += 1\n\treturn r\n\nn = main()\nprint(n)\n", "# coding = utf-8\n\n# Your code here!\n\nn = int(input())\n\nfor i in range(1, 10):\n\ta = i\n\twhile a!= 0:\n\t\tb = a\n\t\ta = (a // 10) * 10 + (a % 10) * (i + 1)\n\tif a >= 5:\n\t\tbreak\n\telse:\n\t\tprint(a)\n", "a=int(input())\nif a%100==0:\n\tprint(a//100)\nelse:\n\t#print(a//100)+1\n\tans=a//100\n\twhile True:\n\t\tif a%10>0:\n\t\t\tans+=1\n\t\telse:\n\t\t\tbreak\n\tif a%100==0:\n\t\tprint(ans)\n\telse:\n\t\tprint(ans+1)\n", "\n\ndef main():\n\tn = input()\n\tans = 0\n\tfor i in range(len(n)):\n\t\tif (int(n[i])!= 0 and n[i]!= '0'):\n\t\t\tans += 1\n\t\telse:\n\t\t\tbreak\n\tprint(ans)\n\t\nmain()\n", "\n\ndef main():\n\tn = int(input())\n\ti = 0\n\twhile(n > 0):\n\t\ty = n%10\n\t\tif(y!= 0):\n\t\t\tn = n//10\n\t\telse:\n\t\t\ti = i+1\n\t\tif(y == 0):\n\t\t\tbreak\n\tif(i == 1):\n\t\tprint(i+1)\n\telse:\n\t\tprint(i)\nmain()\n"], "3": ["from sys import stdin\nn,q=list(map(int,stdin.readline().split()))\ndp=[[0]*(n+1) for i in range(n+1)]\ndp[0][0]=1\nfor i in range(1,n+1):\n\tfor j in range(1,i+1):\n\t\tdp[i][j]=dp[i-1][j-1]+dp[i-1][j]\n\t\tif j>i:\n\t\t\tdp[i][j]=max(dp[i][j],dp[i-1][j-1])\nprint(dp[n][-1])        \n", "import sys\n\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\ndef main():\n\tn, q = map(int, input().split())\n\t\n\tdp = [0 for _ in range(n + 1)]\n\tdp[0] = 1\n\tfor _ in range(q):\n\t\tl, r = map(int, input().split())\n\t\t\n\t\tfor i in range(min(r, l - 1), 0, -1):\n\t\t\tdp[i + 1] += dp[i]\n\t\t\t\n\tprint(dp[-1])\n\t\n\treturn\n\nmain()\n", "import sys\nimport math\nfrom collections import defaultdict,deque\nimport heapq\nq=int(sys.stdin.readline())\nn,q=list(map(int,sys.stdin.readline().split()))\nd=defaultdict(int)\nfor i in range(q):\n\tx,y=list(map(int,sys.stdin.readline().split()))\n\tg=max(x,y)\n\tif g-1>=q-1:\n\t\tg=g-1\n\tif g not in d:\n\t\td[g]=1\n\telse:\n\t\td[g]+=1\ns=0\nfor i in d:\n\ts+=d[i]\nprint(s)\n", "n, q = map(int, input().split())\np = []\nfor i in range(q):\n\tx, y = map(int, input().split())\n\tp.append((x, y))\np.sort(key=lambda x: (x[0], -x[1]))\nres = 0\nprev = n\nfor i in range(q-1):\n\tcurr_len = len(p)\n\tfor j in range(curr_len-1):\n\t\tx, y = p[j]\n\t\tif prev < x:\n\t\t\tprev = x\n\t\t\tres += 1\n\tx = p[-1][1]\n\tif prev < x:\n\t\tprev = x\n\t#print(prev, curr_len)\nprint(res)\n", "import sys,bisect\ndef main():\n\tn,q=list(map(int,input().split()))\n\tl,d=0,[[]for i in range(n+1)]\n\tfor i in range(q):\n\t\tx,y=list(map(int,input().split()))\n\t\tl+=1\n\t\td[x].append(y)\n\t\tif(l>=q-2):\n\t\t\tl-=q-2\n\t\t\td[y].append(x)\n\t\t\twhile(len(d[y])>2):\n\t\t\t\tfor j in d[y]:\n\t\t\t\t\tbisect.insort(d[j],x)\n\t\t\t\tx=d[j][-1]\n\tprint(n)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import math\nimport os\nimport random\nimport sys\nfrom copy import copy\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop\nfrom collections import defaultdict as dd,defaultdict(int)\nfrom itertools import accumulate\nfrom collections import Counter\nimport functools \nimport sys\ninput=sys.stdin.readline\n##sys.setrecursionlimit(100000000)\n\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\n\nn, q = li()\n\nd = dd(int)\nc = br(q)\nl = []\nfor _ in range(q):\n\ta,b = li()\n\td[a - 1] += 1\n\tl.append(a - 1)\n\nsm = 0\ni = d.values()\n\nfor i in range(q):\n\tif i % 2 == 0:\n\t\tc[i] -= 1\n\telse:\n\t\tc[i] +="], "4": ["def main():\n\tinput()\n\thh, mm = map(int, input().split())\n\tdays = [0] * 60\n\tfor i in range(1, 60):\n\t\tdays[i] += (hours(i) + int(str(i)[1])) % 7\n\tminutes = days[mm]\n\tif minutes == 0:\n\t\tprint(0)\n\telse:\n\t\tcnt = 0\n\t\tfor i in range(60, 0, -1):\n\t\t\tif days[i] - days[mm] == 0:\n\t\t\t\tbreak\n\t\t\tcnt += (days[i] - days[mm] + 1) // 7\n\t\tprint(cnt)\n\n\ndef hours(n):\n\treturn n // 60 * 60\n\n\ndef minutes(n):\n\treturn n // 60\n\n\ndef __starting_point():\n\tmain()\n__starting_point()\n", "x = int(input())\nhh, mm = list(map(int, input().split()))\ndef solve(t):\n\tres = 0\n\tfor i in range(60):\n\t\tif t >= hh: return res+1\n\t\tif 0 <= t - hh:\n\t\t\tres += 1\n\treturn res\n\nans = 0\nfor i in range(x):\n\tans += solve(i)\nprint(ans)\n", "from collections import deque\nn = int(input())\ns = input().split()\nhour = int(s[0])\nminute = int(s[1])\ndeq = deque()\ndeq.append((hour, minute))\nans = 0\nwhile deq:\n\thour, minute = deq.popleft()\n\tif '7' in str(hour):\n\t\tans += 1\n\tfor i in range(1, 60):\n\t\tif minute * i + hour > n:\n\t\t\tans += 1\n\t\t\tbreak\n\t\tif hour + 10 * i < n:\n\t\t\tdeq.append((hour + 10 * i), minute * i + hour)\nprint(ans)\n", "x = int(input())\nh = input().split()\nmm = int(h[0])\n\ndef try_but_not_lucky(m):\n\tif '7' not in m:\n\t\treturn True\n\t\n\tcnt = 0\n\t\n\tfor d in m:\n\t\tif ((d >= '0' and int(d) <= '7') or (d <= '7' and int(d) >= '0')) and (d == '0'):\n\t\t\tcontinue\n\t\telse:\n\t\t\treturn False\n\treturn True\n\nl = 25 #resets the counter if the time is more than 24\nr = 0 #resets the counter if the time is less than 24\ntry_but_not_lucky(4)\nprint(l + r)\n", "x = int(input())\nh,m = [int(i) for i in input().split()]\nif \"7\" in str(m):\n\tprint(x//60)\nelse:\n\tprint(0)\n", "import sys\n\ndef bitadd(a,w,bit):\n \n\tx = a\n\twhile x <= (2**bit) :\n\t\tbitadd(x,w,bit)\n\t\tx += x & (-1 * x)\n \ndef bitsum(x,bit):\n \n\tret = 0\n\twhile x > 0 :\n\t\tret += x % 2\n\t\tx //= 2\n\treturn ret\n\n\n\nimport math\n\nn = int(input())\na = [int(i) for i in input().split()]\nb = [a[i] - 1 for i in a]\nresult = 0\nfor i in range(2):\n\td = math.log(2*i+1,2)\n\tif d < 1:\n\t\td = 1\n\tx = []\n\tfor j in range(d):\n\t\tx.append(a[j]*b[d-j-1])\n\tfor j in x:\n\t\tresult += j\n\t#print(x)\nprint(result)\n"], "5": ["from math import log,ceil\n\nn = int(input())\nif n%4 == 0:\n\tprint(ceil(log(n, 3)))\nelse:\n\tprint(ceil(log(n, 2)))\n", "# Dateutil.py\nfrom datetime import date, timedelta\n\ndef read_datetime():\n\treturn date(2018, 7, 1) + timedelta(days=1)\n\n# Description of the read data structure:\n# https://github.com/kyuridenamida/atcoder-tools\n# and https://atcoder.jp/contests/arc061/submissions/6325840\n\ndef read_date(day):\n\treturn read_datetime(day).strftime(\"%Y\")\n\ndef read_time(s):\n\treturn int(s) * 60 + int(s < 60)\n\ndef solve(n):\n\tif n == 0:\n\t\treturn 0, 0\n\telif n == 1:\n\t\treturn 1, 2\n\telse:\n\t\treturn max(max(read_date(4) - read_date(3)), solve(n - 1) + 2)\n\ndef __starting_point():\n\tn = read_date(1)\n\tprint(solve(n))\n\n__starting_point()\n", "n=int(input())\nprint(0,0)\nif n%4==3:\n\tprint(2,3)\nelif n%4==2:\n\tprint(1,2)\nelse:\n\tprint(4,3)\n", "n = int(input())\nif n == 0:\n\tprint(\"0 0\")\nelse:\n\tprint(n // 4)\n\tif n % 4 == 0:\n\t\tprint(2 * n - 2)\n\telse:\n\t\tprint(2 * n - 1)\n", "n = int(input())\nif n > 0:\n\tprint(n, n//2)\nelse:\n\tprint(0, 0)\n", "import math\nn=int(input())\nif n%2:\n\tprint(0,0)\nelse:\n\tprint(4,2)\n"], "6": ["def gcd(a, b):\n\tif a < b:\n\t\tb, a = a, b\n\n\twhile b!= 0:\n\t\ta, b = b, a % b\n\t\n\treturn a\n\n\ndef lcm(a, b):\n\treturn (a * b) / gcd(a, b)\n\n\nn, a, b, p, q = list(map(int, input().split()))\nprint(lcm(a, b) + (q + (n // a) * a))\n", "n, a, b, p, q = list(map(int, input().split()))\na = n // a + 1\nb = n // b + 1\np = n // p + 1\nq = n // q + 1\n\ns = a * p * q\ns += a * b * (p + q) // 2\n\nprint(s)\n", "n, a, b, p, q = list(map(int, input().split()))\narr = [[0] * (n + 1) for i in range(n + 1)]\nfor i in range(n):\n\tfor j in range(a + 1):\n\t\tarr[i][j] = j + 1 if j & 1 else j\n\t\tarr[i][j] += 1\ncnt = 0\nfor i in range(1, n + 1):\n\tif arr[i][0] == 0:\n\t\tcnt += 1\n\t\tcontinue\n\tfor j in range(1, b + 1):\n\t\tif arr[i - 1][j] == 0:\n\t\t\tcnt += 1\n\t\t\tcontinue\n\t\tcnt += arr[i - 1][j]\n\t\tarr[i][j] += arr[i][j - 1]\nprint(cnt)\n", "from math import log2\n\n\ndef solve(n, a, b, p, q):\n\tif (b > a):\n\t\treturn 0\n\ts = a + p\n\tif (s % q):\n\t\treturn 0\n\tc = s // q\n\tif (c % 2):\n\t\treturn 0\n\tb2 = b * pow(b, c, q)\n\ta2 = a * pow(a, 2, q)\n\tres = s - b2 - a2\n\tif (res < 0):\n\t\treturn 0\n\treturn res\n\n\ndef __starting_point():\n\tn, a, b, p, q = list(map(int, input().split()))\n\tprint(solve(n, a, b, p, q))\n\n__starting_point()\n", "from math import log,ceil\n\n\n\n\ndef rSubset(n,a,b):\n\treturn [j%a for j in range(1,n+1) if j%a==0]\n\n\ndef t(n,a,b,p,q,aset):\n\te = {}\n\tfor i in range(1,n+1):\n\t\tif i % a == 0:\n\t\t\te[i] = e[i-1]\n\t\tif i % b == 0:\n\t\t\te[i] = e[i-1] ^ b\n\n\treturn e\n\n\ndef l(n,a,b,p,q,aset):\n\ts = {}\n\tfor i in range(1,n+1):\n\t\tif i % a == 0:\n\t\t\ts[i] = s[i-1] if i-1 in aset else 0\n\t\tif i % b == 0:\n\t\t\ts[i] = s[i-1] ^ b\n\t\tif i not in s:\n\t\t\ts[i] = t(i,a,b,p,q,aset)\n\treturn s\n\n\na,b,p,q,aset = map(int,input().split())\nt_1 = t(a,b,p,q,aset)\n\ndef count(n):\n\tif n < 3:\n\t\treturn 0\n\tr = {}\n\te = {}\n\treturn (n-1)*a + (n-1) * b + t_1[n-1] - q*(n-1) - t_1[n-1]\n\nfor i in range(1,63):\n\tr[i]", "def main():\n\tfrom collections import Counter\n\tn, a, b, p, q = list(map(int, input().split()))\n\tc = Counter()\n\tfor i in range(n):\n\t\tr = (i + 1) % a\n\t\tc[r] += 1\n\t\tif r not in c:\n\t\t\tc[r] = 0\n\t\tc[r] += p[i]\n\tfor i in range(n):\n\t\tprint((c[i]))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "7": ["def main():\n\tn = int(input())\n\tscores = [None] * n\n\tfor i in range(n):\n\t\tscores[i] = input()\n\tr = 0\n\tl = 0\n\tres = 0\n\tfor i in range(n - 1):\n\t\tif scores[i] == \"G\":\n\t\t\tif r > 0:\n\t\t\t\tr -= 1\n\t\t\tl += 1\n\t\telse:\n\t\t\tif l > 0:\n\t\t\t\tl -= 1\n\t\t\tr += 1\n\t\t\tif r > 0:\n\t\t\t\tres = max(res, r)\n\t\t\telse:\n\t\t\t\tres = max(res, l)\n\t\t# print(scores[i], r, l)\n\tprint(res)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def main():\n\tn = int(input())\n\tpl = [*map(lambda x: 1 if x == 'G' else -1, input())]\n\tcnt = [-1] * n\n\tcnt[0] = 0\n\tcur = 0\n\tres = 0\n\tfor i, p in enumerate(pl):\n\t\tif cur == 0:\n\t\t\tcur = p\n\t\t\tcnt[i] = 0\n\t\telif p == 'G':\n\t\t\tcnt[i] = 1 + cnt[i - 1]\n\t\tcur = p\n\t\tif cur!= p:\n\t\t\tif cnt[i]!= -1:\n\t\t\t\tres = max(res, i - cnt[i])\n\t\t\tcnt[i] = cur\n\tif res < 0:\n\t\tprint(-1)\n\telse:\n\t\tprint(res)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "from itertools import groupby\n\nn = int(input())\nt = input()\n\ngold = []\nsilver = []\nfor i, x in enumerate(t):\n\tif x == 'G':\n\t\tgold.append(i)\n\telse:\n\t\tsilver.append(i)\n\nans = 0\ncur = 0\nfor j in range(n):\n\tif cur < len(gold) and j not in [0, len(gold)-1]:\n\t\tans += 1\n\t\tb = cur\n\t\tcur = len(gold)\n\telif cur < len(gold) and j == 0:\n\t\tcur += 1\n\t\tb = cur\n\telse:\n\t\tcur += 1\n\nif b < len(gold):\n\tprint(min(ans, b - cur + 1))\nelse:\n\tprint(0)\n", "n = int(input())\na = list(map(lambda x: input().strip(), input().split()))\nd = {i: 0 for i in range(n)}\nt = 0\nans = 0\nfor j, i in enumerate(a):\n\tif i == 'G':\n\t\tt += 1\n\telse:\n\t\td[i] = t\n\t\tt = 0\n\tif t > d[i]:\n\t\tt = d[i]\n\tif t - d[i] >= 0:\n\t\tans = max(ans, j - i + 1)\nprint(ans)\n", "n=int(input())\nA=list(map(str,input()))\nB=[]\nfor i in range(len(A)):\n\tif A[i]==\"G\":\n\t\tB.append(i)\nif len(B)==0:\n\tprint(0)\nelse:\n\tB=B[::-1]\n\tcurr=0\n\tflag=0\n\tflag1=0\n\tcount=0\n\tcount1=0\n\tfor i in range(len(B)):\n\t\tif B[i]==0:\n\t\t\tcurr+=1\n\t\telse:\n\t\t\tif A[i]==\"G\":\n\t\t\t\tflag=1\n\t\t\telse:\n\t\t\t\tflag1=1\n\t\t\tif flag==1:\n\t\t\t\tcount+=1\n\t\t\t\tcount1+=1\n\t\t\telse:\n\t\t\t\tcount1=count\n\t\t\t\tcurr=count\n\t\t\tif (curr+count+1)>count1:\n\t\t\t\tbreak\n\t\tif flag==0 and B[i]!=0:\n\t\t\tcount1+=1\n\t\telse:\n\t\t\tcount1=count\n\t\t\tcurr=count\n\tif curr>count1:\n\t\tprint(curr)\n\telse:\n\t\tprint(count1)\n\n\n\n\n", "n = int(input())\nt = [x for x in input().strip()]\n\npre = [[0] * (n + 1) for i in range(n + 1)]\n\nfor i in range(n):\n\tpre[i + 1][i] = pre[i][i] + t[i]\n\ndef length(i):\n\tres = 0\n\tfor j in range(i, 0, -1):\n\t\tres = max(res, pre[j][i - 1])\n\treturn res\n\nlo, hi = 0, len(t) - 1\nwhile lo < hi:\n\tmid = (lo + hi + 1) // 2\n\tif length(mid) <= 2:\n\t\tlo = mid\n\telse:\n\t\thi = mid - 1\n\nprint(lo)\n"], "8": ["a, b, c = map(int, input().split())\n\nif a!= b:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "a, b, c = [int(i) for i in input().split()]\n\ns = set()\n\nif a + b - c == c:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "a, b, c = list(map(int, input().split()))\n\np = c - b\n\nprint(['NO', 'YES'][p in xrange(a + 1, b)])\n", "a, b, c = list(map(int, input().split()))\n\nif b in s:\n\tprint('YES')\nelse:\n\tprint('NO')\n\n", "\ndef main():\n\ta, b, c = list(map(int, input().split()))\n\tl = [a, b, c]\n\tif a * b * c!= l[-1]:\n\t\tprint('NO')\n\t\treturn\n\n\td = {a: 0, b: c}\n\tfor i in range(1, len(l)):\n\t\td[l[i] - l[i - 1]] += 1\n\t\n\tprint('YES' if d[a] > 0 else 'NO')\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "a, b, c = map(int, input().split())\nif c % 2 == 0:\n\tprint('YES')\nelse:\n\tprint('NO')\n"], "9": ["# coding: utf-8\n\n# Your code here!\n\nimport sys\nimport bisect\nimport heapq\nfrom collections import defaultdict\n\n#sys.setrecursionlimit(10**6)\n\niinp = lambda : int(input())\ninp = lambda : list(map(int,input().split()))\n#inp = lambda: sys.stdin.readline().strip()\nipnut = input\n\ndef solve():\n\tcnt_1,cnt_2,cnt_3,cnt_4 = inp()\n\tif cnt_3 > 1:\n\t\tprint(1)\n\t\treturn\n\tif cnt_1 > 1:\n\t\tprint(1)\n\t\treturn\n\tif cnt_2 > 1:\n\t\tprint(1)\n\t\treturn\n\tif cnt_4 > 1:\n\t\tprint(1)\n\t\treturn\n\tprint(0)\n\n\n# solving\n\nt = 1\nt = iinp()\nfor i in range(t):\n\tsolve()\n\n", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n\treturn list(map(int, input().split()))    \n\ntry :\n\t#raise ModuleNotFoundError\n\timport numpy\n\tdef dprint(*args, **kwargs):\n\t\tprint(*args, **kwargs, file=sys.stderr)\n\tdprint('debug mode')\nexcept ModuleNotFoundError:\n\tdef dprint(*args, **kwargs):\n\t\tpass\n\n\n\ninId = 0\noutId = 0\nif inId>0:\n\tdprint('use input', inId)\n\tsys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n\tdprint('use output', outId)\n\tsys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n\tatexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n\t\nN, = getIntList()\n\nnum = 2\n\nans = [0]*N\nflag = True\n\nfor i in range(N):\n\tif flag:\n\t\tif num&1:\n\t\t\tif i>=2 and num&1:\n\t\t\t\tflag=False\n\t\t\tif i>=3:\n\t\t\t\t", "def cal(s):\n\ta = []\n\tfor i in range(len(s)):\n\t\tif s[i] == ')' and len(a) == 0:\n\t\t\ta.append(s[i])\n\t\telif s[i] == ')' and a[-1] == '(':\n\t\t\ta.append(')')\n\t\telif a[-1] == ')':\n\t\t\ta.pop()\n\treturn a\n\na = [0]*101\nb = input()\nb=list(b.split())\nfor i in range(len(b)):\n\ta[int(b[i])] += 1\nif a[0] == 1:\n\tprint(1)\nelse:\n\tprint(0)\n", "import sys\nfor nt in range(1,1+int(sys.stdin.readline())):\n\tn=int(sys.stdin.readline())\n\tif n%2==0:\n\t\tif n==3:\n\t\t\tprint(1)\n\t\telse:\n\t\t\tprint(0)\n\telif n==1:\n\t\tprint(0)\n\telse:\n\t\tans=0\n\t\tfor i in range(1,n):\n\t\t\tif i+1==3:\n\t\t\t\tif i==1:\n\t\t\t\t\tans+=1\n\t\t\t\telif i==3:\n\t\t\t\t\tans+=1\n\t\t\t\t\tif i+1!=3:\n\t\t\t\t\t\tans+=1\n\t\t\telif i!=1 and i+1==2:\n\t\t\t\tif i==2:\n\t\t\t\t\tans+=1\n\t\t\t\telif i+2!=0:\n\t\t\t\t\tans+=1\n\t\t\telse:\n\t\t\t\tif i==1:\n\t\t\t\t\tans+=1\n\t\tif ans==0:\n\t\t\tprint(0)\n\t\telse:\n\t\t\tprint(1)\n\n", "def mi():\n\treturn list(map(int, input().split()))\n\ndef lm():\n\treturn list(mi())\n\nn = int(input())\ncnt = list()\nfor i in range(n):\n\tcnt.append(0)\n\nfor i in range(n-1):\n\ta = lm()\n\tb = []\n\tfor k in a:\n\t\tif k == 1:\n\t\t\tb.append(\"(\")\n\t\telse:\n\t\t\tb.append(\")\")\n\tcnt[i] = b.count(\"(\") + b.count(\")\")\n\nif cnt[0] == 0:\n\tprint(0)\nelse:\n\tprint(1)\n", "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n\ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n\ndef MI():\n\treturn map(int, sys.stdin.readline().split())\n\ndef SI():\n\treturn sys.stdin.readline().strip()\nt = II()\na = [0]*100001\nfor i in range(t):\n\ts = input()\n\tif \"(\" in s:\n\t\ts = s.replace(\"(\", \"\")\n\t\tif \")\")\" in s:\n\t\t\ts = s.replace(\")\", \"\")\n\t\ta[i] = s\nif a[0] == 0:\n\tprint(1)\n\treturn\n\nans = []\nfor i in range(2, 100001):\n\tif a[i] == 0:\n\t\tans.append(i)\n\nif len(ans) == 2:\n\tprint(0)\n\treturn\n\nans = sorted(ans, key = lambda x : -x)\nif len(ans) == 1:\n\tprint(1)\n\treturn\n\nnow = 0\nfor i in ans:\n\tfor j in range(0, i):\n\t\tif a[j] == 0:\n\t\t\tnow = i\n\t\t\tbreak\n\tans = sorted(ans, key = lambda x : -x)\n\nprint(now)\n"], "10": ["s = input()\nt = input()\nu = []\nif s[0] == t[0]:\n\tu.append(s[0])\nelif s[len(s)-1] == t[len(t)-1]:\n\tu.append(t[len(t)-1])\nelse:\n\tfor i in range(len(s)):\n\t\tif s[i]!= t[i]:\n\t\t\tu.append(s[i])\n\nprint(''.join(u))\n", "s = input()\nt = input()\n\nc = []\nd = []\nfor i in range(len(s)):\n\tc.append(s[i])\n\nfor i in range(len(t)):\n\td.append(t[i])\n\nu = ''\n\nif s == c and t == d:\n\tprint(''.join(c))\nelse:\n\tprint(''.join(d))\n", "s = input()\n\nif s == 'a' or s == 'bcdef' or s == 'abcdef':\n\tprint(s[1:])\n\treturn\n\nt = input()\n\nif t == '':\n\tprint(s)\n\treturn\n\nm = s.find('bcdef')\n\nu = []\n\nfor i in range(m):\n\tif s[i]!= t[i]:\n\t\tu.append(s[i])\n\nu.sort()\n\nprint(''.join(u))\n", "def main():\n\ts = input()\n\tt = input()\n\tu = list(s) if len(s) > 0 else []\n\tt = list(t) if len(t) > 0 else []\n\tfor i in range(len(s)):\n\t\tif i == 0:\n\t\t\tu[0] = t[i]\n\t\telse:\n\t\t\tu[i - 1] = t[i]\n\tfor i in reversed(range(1, len(s))):\n\t\tif i & 1:\n\t\t\tt[i] = u[i]\n\t\telse:\n\t\t\tt[i] = u[i - 1]\n\tprint(''.join(list(map(str, t))))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "s=input()\nt=input()\nu=[]\nif len(s)>0:\n\tfor i in range(len(s)):\n\t\tif s[i]==t[i]:\n\t\t\tt+=s[i]\n\t\telse:\n\t\t\tu.append(t)\n\t\t\tt=s[i]\nelif len(s)<=10:\n\tu.append(s)\nelse:\n\ti=0;x=s[0]\n\twhile i<len(s) and x!=t:\n\t\tu.append(x)\n\t\ti+=1\n\t\tx=s[i]\nu.append(t)\nprint(''.join(list(u)))\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve():\n\ts = list(minp())\n\tt = list(minp())\n\tu = list(t)\n\tif len(s)>len(t):\n\t\tt = u\n\telse:\n\t\ts = u\n\t\t\n\tfor i in range(len(s)):\n\t\tif s[i]>t[i]:\n\t\t\tu.append(s[i])\n\t\t\tt.append(t[i])\n\tif len(t)>len(s):\n\t\ts = u\n\tprint(u)\n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n"], "11": ["#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\ntry:\n\tdef convert(v):\n\t\treturn int(v + v[::-1])\n\t\t\n\tdef main():\n\t\th, m = list(map(int, input().split(':')))\n\t\tif h == m:\n\t\t\treturn 0\n\t\t\n\t\tc = convert(h) + convert(m)\n\t\tif c > 60:\n\t\t\tc = 60 - c\n\t\tprint(c)\n\t\n\tdef __starting_point():\n\t\tmain()\n\n__starting_point()\n", "s = input()\ncounter = 0\n\nif s[0]!= s[-1]:\n\tfor i in range(len(s)):\n\t\tif s.startswith(str(i)):\n\t\t\tcounter += 1\n\nelse:\n\tfor i in range(len(s)):\n\t\tif i == 0:\n\t\t\tcounter += 1\n\t\t\tbreak\n\t\tif s[i]!= s[-i - 1]:\n\t\t\tcounter += 1\n\t\nprint(counter + 3)\n", "def pal(s):\n\tif s==s[::-1]:\n\t\treturn True\n\telse:\n\t\treturn False\ndef main():\n\thh, mm = list(map(int, input().split(':')))\n\ttime = 0\n\twhile True:\n\t\ttime += mm\n\t\tif pal(time):\n\t\t\thh = int(hh)*10 + 0.5\n\t\t\tbreak\n\t\telse:\n\t\t\ttime += hh\n\tprint(str(hh)+'\\n')\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def main():\n\thh, mm = list(map(int, input().split(':')))\n\tif mm < hh:\n\t\thh = mm\n\tif hh == 23:\n\t\tprint((0))\n\t\treturn\n\t\n\thh_str = hh[::-1]\n\t\n\tmin_length_past = 0\n\tfor loop in range(60):\n\t\tif loop!= 0:\n\t\t\tcurrent = hh_str[loop]\n\t\telse:\n\t\t\tcurrent = '0'\n\t\t\t\n\t\tif current == hh_str[loop]:\n\t\t\tcurrent += 1\n\t\telse:\n\t\t\tmin_length_past = max(min_length_past, current)\n\t\n\tif min_length_past > 60:\n\t\tmin_length_past -= 60\n\t\n\tprint(min_length_past)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n=input()\nn=list(n)\nn1=n[0]\nif n==n1:\n\tprint(6)\nelse:\n\tif n[0]=='0':\n\t\tprint(0)\n\telse:\n\t\ts=int(n[0])+int(n[1])+4\n\t\tif s%2==1:\n\t\t\tif n[2]!=n[1]:\n\t\t\t\ts-=3\n\t\tif s%2==0:\n\t\t\tif n[2]!=n[1] and n[3]!=n[2]:\n\t\t\t\ts-=2\n\t\tprint(s)\n\n", "from sys import stdin\n\ndef solve(hh, mm):\n\tif len(hh) < 2:\n\t\treturn int(mm)\n\thh_length = hh[~len(hh) // 2]\n\treturn (abs(hh_length - mm)) + solve(hh[len(hh) // 2 + 1:], mm - hh_length)\n\nhh = input().strip()\nmm = int(stdin.readline())\nprint(solve(hh, mm))\n"], "12": ["def main():\n\tn = int(input())\n\tl = sorted(map(int, input().split()))\n\td = [0] * n\n\tfor i, a in enumerate(l):\n\t\td[a - 1] = i\n\tl, d = l[::-1], d\n\tfor i, a in enumerate(l):\n\t\tif a - d[i] > 0:\n\t\t\tl.insert(d[i], a)\n\t\t\tbreak\n\t\telse:\n\t\t\tl.insert(i, a)\n\t\t\tbreak\n\tif len(l) > 1:\n\t\tfor i, a in enumerate(l):\n\t\t\tif a - l[i] > 0:\n\t\t\t\tl.swap(i, i + 1)\n\t\t\t\tl[i], l[i + 1] = l[i + 1], a\n\t\t\t\tbreak\n\telse:\n\t\tprint(n)\n\t\treturn\n\tprint(max(l) - min(l))\n\nmain()\n", "n=int(input())\narr=list(map(int,input().split()))\na,b=arr[0],arr[-1]\nwhile 1:\n\tx=arr[-1]\n\tarr.pop()\n\tif x<a:\n\t\ta=x\n\telif x>b:\n\t\tb=x\n\telse:\n\t\tbreak\nc=a-b\nif abs(c)<=abs(a-b):\n\tprint(c)\nelse:\n\tprint(abs(c))\n", "from sys import setrecursionlimit as SRL, stdin\n\nSRL(10 ** 7)\nrd = stdin.readline\nrrd = lambda: map(int, rd().strip().split())\n\nn = int(rd())\n\na = sorted(rrd())\n\nmaxd = n - 1\n\ndef get_best(nds, sel, en):\n\tif len(sel) == nds:\n\t\treturn 0\n\t\n\tmid = (nds + en) // 2\n\tmd = a[mid]\n\tme = a[mid]\n\ten = mid - 1\n\n\tbest = abs( me - md )\n\ti = 0\n\twhile i < len(sel) and en < nds:\n\t\tif a[i] == me:\n\t\t\tif best == abs( i - mid ):\n\t\t\t\tbest = abs( i - mid )\n\t\t\telse:\n\t\t\t\tbest = md\n\n\t\telif a[i] < me:\n\t\t\ti += 1\n\t\telse:\n\t\t\tbreak\n\t\t\t\n\treturn best\n\t\t\n\nbest = get_best(n, nds, nds)\n\nif best == 0:\n\tprint(n)\n\treturn\n\nprint(best)\n", "n=int(input())\nl=[int(i) for i in input().split()]\ndef swap(n,a):\n\ta0=a[0]\n\ta1=a[1]\n\tif a0>a1:\n\t\ta0=a1\n\t\ta1=a0\n\telif a1>a0:\n\t\ta1=a0\n\t\ta0=a1\n\treturn max(abs(a0-a1),abs(a1-a0))\nl.sort()\nans=float(\"inf\")\nfor i in range(n-1):\n\tans=min(ans,swap(n,l[i+1]))\nprint(ans)\n", "# coding = utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn = int(readline())\nnums = list(map(int,readline().split()))\n\ndist0 = list([abs(x-y) for x,y in zip(nums,nums[1:])])\n\n#print(dist0)\n\ndef find(x):\n\tif x == nums[0]:\n\t\treturn 0\n\tif x == nums[-1]:\n\t\treturn nums[0]\n\tif find(nums[x]) == 1:\n\t\treturn 1 + find(nums[x+1])\n\telse:\n\t\treturn 1 + find(nums[x-1])\n\t\n\ndef unite(x,y):\n\tnx = find(x)\n\tny = find(y)\n\tif nx == ny:\n\t\treturn 0\n\telse:\n\t\tif abs(nx-ny) <= 1:\n\t\t\tnx,ny = ny,nx\n\t\t\n\t\treturn 1 + unite(nx,ny)\n\t\n\t\n\nres = 0\nif not unite(1,2):\n\tprint(0)\n\treturn\n\nprint(res)\n", "from collections import deque\nimport sys\nn = int(input())\narr = sorted([int(i) for i in input().split()])\na, b = arr[n - 1], arr[n]\ndist = 0\nfor i in range(n):\n\tif a[i]!= b[i]:\n\t\ta, b = b, a\n\t\tdist += 1\nif dist <= 2:\n\tprint(n - sum(arr) - 1)\n\treturn\nstep = dist\nq = deque()\nq.append(0)\ndist = 0\nwhile q:\n\ttop = q.popleft()\n\t#print(arr)\n\tfor i in range(len(arr)):\n\t\tif i + top < len(arr):\n\t\t\tif arr[i + top] == a[i]:\n\t\t\t\tcontinue\n\t\t\telse:\n\t\t\t\tq.append(i + top)\n\t\t\t\tdist += 1\n\tif dist <= 2:\n\t\t#print(step, q)\n\t\tstep += 1\n\t\tq.append(0)\n\t\tdist = 0\n#print(step, q)\nif step == n:\n\tprint(n - 1)\nelse:\n\tif n % 2 == 0:\n\t\tif q[0] == n // 2:\n\t\t\tprint(q[0] + 1)\n\t\telse:\n\t\t\tprint(q[n // 2])\n\telse:\n\t\tif q[n // 2] == n - 1:\n\t\t\tprint(q[n // 2] + 1)\n\t\telse:\n\t\t\tprint(q[0] + 1)\n"], "13": ["s = input()\nif(s==s[::-1]):\n\tprint('TAK')\nelse:\n\tprint('NIE')\n", "s=str(input())\nprint(['NIE', 'TAK'][s[:len(s)//2].count(s[len(s)//2-1])])\n", "s=input()\nif(s==s[::-1]):\n\tprint(\"TAK\")\nelse:\n\tprint(\"NIE\")\n", "s=str(input())\nif(s==s[::-1]):\n\tprint('TAK')\nelse:\n\tprint('NIE')\n", "s = input()\nn = len(s)>>1\n\nif s[n]!=s[n+1]:\n\tprint(\"NIE\")\nelse:\n\tprint(\"TAK\")\n", "s=list(input())\nif(s[len(s)//2]==s[len(s)//2+1]):\n\tprint(\"TAK\")\nelse:\n\tprint(\"NIE\")\n"], "14": ["from collections import Counter\nn, b = [int(x) for x in input().split()]\na, b = Counter(str(n)), []\nfor x in range(10**18):\n\tb += [x%10 + v for v in b]\n\ndef make_permute(s):\n\tb = b[1:]\n\treturn ''.join(sorted(s))\n\ns = make_permute(map(str,map(int,input().split())))\nprint(*s)\n", "a=input()\nb=input()\nc=sorted([int(d) for d in a])\nfor i in range(len(c)):\n\tc[i]=str(c[i])\n\tif int(''.join(c))>=b:\n\t\tbreak\nprint(''.join(c))\n", "a=str(input())\nb=str(input())\ns=0\nfor i in range(len(a)):\n\ts+=int(a[i])\nif s>=b:\n\tprint(''.join(a))\n\treturn\nwhile s<=b:\n\ts+=int(a[s%len(a):])*10\n\tif s>=b:\n\t\tbreak\n\ts%=len(a)\nprint(''.join(a))\n", "def solve(a,b):\n\ts = [int(x) for x in str(a)]\n\ts1 = sorted(s,reverse=True)\n\tn = len(s1)\n\tm = ''\n\tfor i in range(b):\n\t\tfor j in range(i+1,min(i+10,b+1)):\n\t\t\tm+=str(s1[j])\n\treturn m+s1[0]\n\t\nn = int(input())\nprint(solve(n,''.join(sorted(map(str,n))))\n", "#!/usr/bin/env python3\nimport sys\n\ndef main():\n\ta = input().strip()\n\tb = input().strip()\n\tmx = 0\n\tperms = set(['0'] + [str(c) for c in input()])\n\tfor perms.pop() + ['0']:\n\t\tprint(''.join(sorted(perms)))\n\t\tmx = max(mx, int(''.join(sorted(perms))))\n\treturn None\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def solve(a, b):\n\ts = [0] * 10\n\ts = ''.join(sorted(list(str(a)))\n\tn = len(s)\n\tm = int(b / 26) + 1\n\treturn ''.join(s[i] * 10 ** (n - i) for i in range(m))\n\ndef __starting_point():\n\ta = input()\n\tb = input()\n\tif '0' in a:\n\t\tprint(solve(a, b))\n\telse:\n\t\tprint(''.join(solve(a, b)))\n\n__starting_point()\n"], "15": ["def cross(matrix, i, j, n):\n\tfor r in range(0, 10):\n\t\tmatrix[i][j] = matrix[i][j-r] = 'X' if matrix[i-r][j]=='O' else 'O'\n\t\tif r>0:\n\t\t\tr -= 1\n\n\treturn len(matrix)-len(matrix[0])\n\ndef fill_in(matrix, n, i, j, n):\n\tdiag = 0\n\tflag = True\n\tcross = 0\n\n\tfor r in range(i, i+n):\n\t\tif matrix[r][j] == 'O':\n\t\t\tcross += 1\n\t\t\tdiag += 1\n\n\t\telif matrix[r][j] == 'X':\n\t\t\tdiag += 1\n\t\t\tflag = not flag\n\t\t\tif flag:\n\t\t\t\tn -= 1\n\n\tfor r in range(i, i+n):\n\t\tif r<n:\n\t\t\tn -= 1\n\n\t\telif cross>0:\n\t\t\tn -= 1\n\t\t\tflag = not flag\n\t\t\tif flag:\n\t\t\t\tdiag += 1\n\n# print(matrix)\n# print(n, n, n)\n\nmatrix = [list(input()) for _ in range(int(input()))]\nn = len(matrix)\n# print(matrix)\nfor i in range(10):\n\tif matrix[i][0] == '.':\n\t\tmatrix[i][0] = 0\n\t\tn -= 1\n\n\tif matrix[i][-1] == '.':\n\t\tmatrix[i][-1", "import sys\n\ndef main():\n\tmatrix = [list(map(ord, x)) for x in sys.stdin.read().split()]\n\tn = len(matrix)\n\talice_matrix = [[0]*(n+1) for x in range(10)]\n\tbob_matrix = [[0]*(n+1) for x in range(10)]\n\tfor row in range(n):\n\t\tfor col in range(10):\n\t\t\tif matrix[row][col] == 'O':\n\t\t\t\tbob_matrix[row][col] = 1\n\t\t\t\talice_matrix[row][col] = 1\n\t\t\t\tcontinue\n\t\t\tif matrix[row][col] == 'X':\n\t\t\t\talice_matrix[row][col] = 1\n\t\t\t\tbob_matrix[row][col] = 1\n\t\t\t\tcontinue\n\t\t\talice_matrix[row][col] = max(alice_matrix[row][col], bob_matrix[row][col])\n\t\t\tbob_matrix[row][col] = max(bob_matrix[row][col], alice_matrix[row][col])\n\t\t\tif alice_matrix[row][col] > bob_matrix[row][col]:\n\t\t\t\treturn True\n\n\tresult = 0\n\tfor row in range(n):\n\t\tfor col in range(10):\n\t\t\tif alice_matrix[row][col] == 1:\n\t\t\t\tresult = 1\n\t\t\t\tbreak\n\t\tif result == 1:\n\t\t\treturn True\n\treturn False\n\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Apr 17 23:13:37 2019\n\n@author: user\n\"\"\"\n\nimport sys\n\nsr = lambda: sys.stdin.readline().rstrip()\nir = lambda: int(sr())\nlr = lambda: list(map(int, sr().split()))\n\nM = 10\nN = 10\nC = [C] * M\nfor i in range(1, M):\n\tc = C[i]\n\tif i == 1:\n\t\tC[i] = c\n\ndef calc(x):\n\tL = []\n\tfor i in range(1, x):\n\t\tif C[i]!= x and any(not c[x-i] in 'Oo' for c in C):\n\t\t\tL.append(1)\n\t\telif c[x-i] in 'Oo':\n\t\t\tL.append(1)\n\t\telse:\n\t\t\tL.append(0)\n\tR = sum(L)\n\treturn R + 1\n\nx = ir()\nfor i in range(M):\n\tx = list(map(int, x))\n\ncA = calc(x)\nif cA % 2 == 1:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n,m=list(map(int,input().split()))\n\ncross=[0]*10\nnound[]\n\nfor i in range(m):\n\tc=list(input())\n\tc.insert(0,'.')\n\tcross[i]+=int(c.count('X'))\n\tnound.append(i)\n\nlis=[0]*10\nk=0\nfor i in range(m):\n\tfor j in range(len(cross[i])):\n\t\tif cross[i][j]==0:\n\t\t\tlis[k]+=1\n\t\t\tk+=1\n\nmose=lis.count(0)\nb=mose\n\nif b==n:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n\n\n", "a, b = input(), input()\nc = a.count('X')\nd = b.count('X')\nfor i in [-1, 0, 1]:\n\tj = 1 if i else 0\n\twhile j < 10:\n\t\tif c[i] == '.':\n\t\t\tc[i] = j\n\t\t\tj += 1\n\t\telif c[i] == 'X':\n\t\t\tj += 2\n\t\telse:\n\t\t\tbreak\nprint('YES' if d * j >= c else 'NO')\n", "matrix = input()\nrow = len(matrix)\ncol = len(matrix[0])\n\ncnt=0\ncross =['X','O','.']\nnou=0\nfor i in range(row):\n\tfor j in range(col):\n\t\tif matrix[i][j] =='X':\n\t\t\tif cross[i]=='O':\n\t\t\t\tcnt+=1\n\t\t\telse:\n\t\t\t\tcross[i]='.'\n\t\t\t\tnou+=1\n\n#print(cross)\nfor i in range(row):\n\tfor j in range(col):\n\t\tif matrix[i][j]=='O':\n\t\t\tcnt+=1\n\t\telse:\n\t\t\tcross[i]='.'\n\t\t\tnou+=1\n#print(nou)\nif nou<=5:\n\tprint('YES')\nelse:\n\tprint('NO')\n"], "16": ["def main():\n\tn, k = list(map(int, input().split()))\n\tif k == 0:\n\t\tresult = [-1] * n\n\telif n == 2:\n\t\tresult = [0] * n\n\telif k & 1:\n\t\tresult = [1] * n\n\t\tj = 1\n\t\tfor i in range(n):\n\t\t\tif i < n - 1 and ((j * j) <= (n - i - 1)):\n\t\t\t\twhile j < n - 1 and (j * j) <= (n - i - 1):\n\t\t\t\t\tj += 1\n\t\t\t\tresult[i] = 1\n\t\t\telse:\n\t\t\t\twhile j < n - 1 and (j * j) <= (n - i):\n\t\t\t\t\tj += 1\n\t\t\t\tresult[i] = 0\n\telse:\n\t\tif k & 1:\n\t\t\tresult = [1 - result[i] for i in range(n)]\n\t\telse:\n\t\t\tresult = [0 - result[i] for i in range(n)]\n\t\t\t\t\t\t\n\tprint(' '.join(str(x) for x in result))\n\nmain()\n", "n, k = [int(item) for item in input().split()]\n\nif (n == 2 and k > 2):\n\tfor item in input().split():\n\t\tprint(\"-1\", end=\" \")\n\telse:\n\t\tif n % 2 == 0:\n\t\t\tprint(\"1\", end=\" \")\n\t\telse:\n\t\t\tprint(\"0\", end=\" \")\nelif n == 1:\n\tprint(\"0\")\nelse:\n\toutput = []\n\tfor i in range(n):\n\t\toutput += [\n\t\t\t\"0\",\n\t\t] * (k - 1) + list(range(n))\n\t\tprint(\"\".join(output[::-1]))\n\tif k:\n\t\tprint(\"-1\")\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/19 21:52\n\n\"\"\"\n\n\ndef solve_naive(a):\n\tnr, nc = len(a), len(a[0])\n\tbest = -1\n\tfor k in range(2, math.floor((nr + nc - 2) / 2) + 1):\n\t\tif a[k - 1] == a[k]:\n\t\t\tcontinue\n\t\telif a[k - 1] < a[k]:\n\t\t\tif best == -1:\n\t\t\t\tbest = k\n\t\t\telse:\n\t\t\t\tbreak\n\t\telse:\n\t\t\tif best == -1:\n\t\t\t\tbest = k - 1\n\t\t\telse:\n\t\t\t\tbreak\n\tif best == -1:\n\t\treturn [[],[0]][best]\n\telse:\n\t\tmid = (nr + nc - 2) // 2\n\t\treturn solve_naive(a[:mid]) + [0] + solve_naive(a[mid:])\n\n\ndef solve_brute(a):\n\tnr, nc = len(a), len(a[0])\n\tbest = -1\n\tfor k in range(2, math.floor((nr + nc - 2) / 2) + 1):\n\t\tif a[k - 1] == a[k]:\n\t\t\tcontinue\n\t\telif a[k - 1] < a[k]:\n\t\t\tif best == -1:\n\t\t", "from sys import stdin\n\ndef main():\n\tn, k = list(map(int, stdin.readline().rstrip().split()))\n\tm = [bin(i)[2:] for i in range(n)]\n\tm = max(m, key=lambda x: (len(x), -x))\n\tg = sorted(m, key=lambda x: -x)\n\tr = len(g) - k\n\tif g[:r] == ['0'] * r:\n\t\tprint(' '.join([str(x) for x in g]))\n\telse:\n\t\tprint(-1)\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/30 12:31\n\n\"\"\"\n\n\nN, K = map(int, input().split())\nmx = max(N, K)\n\nanswer = [[0] * (N + 1) for _ in range(K + 1)]\n\nfor i in range(1, N + 1):\n\tif i > mx:\n\t\tbreak\n\tanswer[1][i] = 1\n\ni = 2\nwhile i <= K + 1:\n\tfor j in range(i, i + K):\n\t\tanswer[i][j] = answer[j][i] + 1\n\ti += 1\n\nprint(''.join(map(str, answer[1])))\n", "n, k = list(map(int, input().split()))\nif n > k:\n\tprint(-1)\nelse:\n\tr = list(map(int, input().split()))\n\tc = []\n\tfor i in range(len(r)):\n\t\tc.append(r[i])\n\t\tif r[i] > c[i]:\n\t\t\tc[i] -= 1\n\tif c:\n\t\tc.append(0)\n\tr = c\n\tfor i in range(len(r)):\n\t\tr[i] = r[i][::-1] + 1\n\tfor i in range(len(r)):\n\t\tif r[i] == 0:\n\t\t\tprint(-1)\n\t\t\tbreak\n\t\telse:\n\t\t\tprint(r[i])\n"], "17": ["# -*- coding: utf-8 -*-\n\nn = int(input())\ns = input()\ncnt = 0\n\nfor c in s:\n\tcnt += (c*26)>>25\n\nprint(n-cnt)\n", "n = int(input())\ns = input()\n\ncnt = 0\n\nfor c in s:\n\tcnt += (ord(c) - 97)\n\nif n > 1:\n\tif len(s) % 2!= 0:\n\t\tn = n - 1\n\tfor i in range(0, n):\n\t\tif i == 0:\n\t\t\tcnt += i + 1\n\t\telif i == n - 1:\n\t\t\tcnt += (2 * i - 1)\n\t\telse:\n\t\t\tcnt += i - 1\n\nprint(cnt)\n", "import sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline().strip()\ncnt = 0\n\nfor c in s:\n\tif c!= 'q':\n\t\tcnt += 1\n\nprint(cnt)\n\n", "t=int(input())\ns=list(input())\ni=0\nsol=0\nwhile i<len(s):\n\tif i<len(s)-1 and len(s)>1:\n\t\tif len(s)==s[i]:\n\t\t\tj=i+1\n\t\t\twhile j<len(s) and len(s)>1:\n\t\t\t\tif s[i]==s[j]:\n\t\t\t\t\ts.pop(len(s)-1)\n\t\t\t\t\ts=s[:len(s)-1]+s[len(s)-1:]\n\t\t\t\tj=j+1\n\t\t\ti=i+1\n\t\telif len(s)==s[i]:\n\t\t\tj=i+1\n\t\t\twhile j<len(s) and len(s)>2:\n\t\t\t\tif s[i]==s[j]:\n\t\t\t\t\ts.pop(len(s)-1)\n\t\t\t\t\ts=s[:len(s)-1]+s[len(s)-1:][::-1]\n\t\t\t\tj=j+1\n\t\t\tsol+=1\n\ti+=1\nprint(sol)\n", "n=int(input())\ns=list(input())\ns=[0]+s\ni=1\nres=0\nwhile i<=len(s):\n\tif s[i]==s[i-1]:\n\t\tres+=1\n\t\ti+=2\n\telse:\n\t\tres+=1\n\ti+=1\nprint(res)    \n", "from collections import Counter\n\nn = int(input())\ns = input()\nc = Counter(s)\nres = 0\nfor i in range(n):\n\tif c[s[i]] > 1:\n\t\tres += 1\n\tc[s[i]] -= 1\n\nprint(res)\n"], "18": ["from itertools import groupby\n\nall_chars = set(str(input()))\n\nall_chars_dic = {}\n\nfor c in all_chars:\n\tif c in all_chars_dic:\n\t\tall_chars_dic[c] += 1\n\telse:\n\t\tall_chars_dic[c] = 1\n\nways = []\n\nfor c, cnt in all_chars_dic.items():\n\tlast_appended = sum((c + i) * 10**(3 - i) for i, c in enumerate(c))\n\tif last_appended <= 6:\n\t\tways.append(cnt)\n\t\tall_chars_dic[c] -= 1\n\telif last_appended > 6:\n\t\tways.append(cnt)\n\t\tall_chars_dic[c] -= 1\n\n\nprint(min(ways))\n", "import sys\n\ndef main():\n\ts = sys.stdin.readline\n\tt = (s()).strip()\n\td = {}\n\tfor c in t:\n\t\tif c in d:\n\t\t\td[c] += 1\n\t\telse:\n\t\t\td[c] = 1\n\td['0'] = 0\n\t\n\tfirst = []\n\tsecond = []\n\tfor i, c in enumerate(t):\n\t\tif c == '0':\n\t\t\tif first:\n\t\t\t\tfirst.append(i)\n\t\t\telse:\n\t\t\t\tsecond.append(i)\n\n\tres = 0\n\tsecond.reverse()\n\tfor i in range(len(first)):\n\t\tc = first[i]\n\t\tif i < len(second) - 1:\n\t\t\tif second[i+1] < c:\n\t\t\t\tsecond[i+1] += c\n\t\t\telse:\n\t\t\t\tres += 2\n\t\telse:\n\t\t\tres += 1\n\n\tprint(res)\n\ndef __starting_point():\n\tmain()\n__starting_point()\n", "a = list(input())\ncnt = 0\nfor i in range(len(a)):\n\tif a[i]!= '0':\n\t\tcontinue\n\telse:\n\t\tcnt += 1\n\t\tcontinue\n\tfor j in range(i + 1, len(a)):\n\t\tif a[j]!= '0':\n\t\t\tbreak\n\t\telse:\n\t\t\tcnt += 1\n\tbreak\nans = cnt\nfor i in range(len(a)):\n\tif a[i] == '0':\n\t\tans += 1\nprint(ans)\n", "s=input()\nc=0\nfor i in range(len(s)-3):\n\tif s[i]==\"0\":\n\t\tc+=1\n\t\tcontinue\n\tif s[i]==s[i+1]==s[i+2]:\n\t\tc+=3\n\telse:\n\t\tc+=1\nprint(c)\n", "#!/usr/bin/env python\n\ndef main():\n\ts = input()\n\tl = len(s)\n\t\n\tif s.count('0') >= l:\n\t\tprint(0)\n\t\treturn\n\t\n\tt = list(s)\n\t\n\tluck = 0\n\tfor i in range(0, l):\n\t\tfirst = t[i]\n\t\tsecond = t[i+1]\n\t\tthird = t[i+2]\n\t\t\n\t\tif first == '0':\n\t\t\tcontinue\n\t\t\n\t\tif second == '0':\n\t\t\tcontinue\n\t\t\n\t\tif third == '0':\n\t\t\tcontinue\n\t\t\n\t\tif (first + second + third) == 0:\n\t\t\tluck += 1\n\t\n\tprint(luck)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "t=input()\nif t[0]==\"0\":\n\tprint(0)\n\treturn\nans=0\nfor i in range(len(t)):\n\tif t[i]!=\"0\":\n\t\tans+=1\n\t\tcontinue\n\tj=i+1\n\twhile t[i]==\"0\":\n\t\tj+=1\n\tc=t[i:j]\n\tt=t[j:]\n\tif sum(c)==0:\n\t\tans+=1\nprint(ans)\n"], "19": ["def main():\n\tm, x = list(map(int, input().split()))\n\tseen = set()\n\tsteps = 0\n\tfor i in range(m):\n\t\tif (i * x) % 2 == 0:\n\t\t\tseen.add(i)\n\t\telse:\n\t\t\tsteps += 1\n\t\t\tseen.clear()\n\n\tif (len(seen) < steps):\n\t\tprint(steps)\n\n\telse:\n\t\tfor i in seen:\n\t\t\tif (i * x) % 2 == 1:\n\t\t\t\treturn steps\n\t\t\telse:\n\t\t\t\tsteps += 1\n\nmain()\n", "import sys\nimport math\nfrom collections import defaultdict,deque\nimport heapq\ns = sys.stdin.readline\ndef main():\n\tm,x = list(map(int,s().split()))\n\t#basesizes = defaultdict(int)\n\thq = []\n\tc = 0\n\tst = [(0,-1)]\n\tfac = 1\n\twhile c<m:\n\t\tb = x%fac\n\t\thq.append(b)\n\t\tst.append((b,c+1))\n\t\tfac += 1\n\t\tc += b\n\t#print(st)\n\ti = 0\n\tj = len(st)-1\n\twhile i<=j:\n\t\tif hq[i][0]==st[j][1]:\n\t\t\ti += 1\n\t\t\tj -= 1\n\t\telse:\n\t\t\tif hq[i][0]==st[i][0]:\n\t\t\t\tj -= 1\n\t\t\telse:\n\t\t\t\tbreak\n\n\tif i==m:\n\t\tprint(c)\n\telse:\n\t\tif c%2==0:\n\t\t\tprint((i+c-1)//2)\n\t\telse:\n\t\t\tprint((i+c-1)//2+1)\n\n\n\treturn\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n", "def solve():\n\tm, x = list(map(int, input().split()))\n\t\"\"\"\n\tx-mouse = \u6587\u5b57\u7b26\u4e32\u4e0a\u9762\u7684\u957f\u5ea6\n\t\"\"\"\n\t# x-mouse\u8868\u793a\u65f6\u95f4\u590d\u6742\u5ea6\u51fa\u73b0\u8fde\u7eed\u7684\u60c5\u51b5\u4e0b\uff0c\u6240\u4ee5\u51fa\u73b0\u8fde\u7eed\u7684\u60c5\u51b5\u4e0b\u6709\u6570\u5b57\u4ee5\u53ca\u5947\u5076\u53d8\u5316\n\t# \u7528dd \u8981\u6ee1\u8db3\u6761\u4ef6\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u51fa\u73b0\u8fde\u7eed\u7684\u60c5\u51b5\u4e0b\u6709\u6570\u5b57\u505a\u4e86\uff0c\u6240\u4ee5\u4e0d\u518d\u529e\u6cd5\n\t# \u5982\u679cxx\u5b57\u7b26\u4e32\u5df2\u7ecf\u88ab\u6570\u5b57\u53d8\u6210\u5076\u6570\u6b21\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e00\uff0c\u505a\u597d\u505a\n\tmini = 0\n\ttot = 1\n\twhile True:\n\t\tif x%mini == 0:\n\t\t\ttot += 1\n\t\t\tbreak\n\t\telse:\n\t\t\tmini = x//mini\n\t\t\tif tot == 1:\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\ttot = 1\n\tprint(mini)\n\nsolve()\n\n", "\ndef main():\n\tm,x=map(int,input().split())\n\tz=[]\n\ti=0\n\ty=0\n\twhile i<m:\n\t\tj=i+(i*x)\n\t\tif i<m and (j==x-1):\n\t\t\tz.append(1)\n\t\telse:\n\t\t\tz.append(2)\n\t\tz.append(i)\n\t\ti=j\n\tz.sort()\n\tif z[0]==1:\n\t\tprint(m)\n\t\treturn\n\tprint(len(z))\n\treturn\n\ndef __starting_point():\n\tmain()\n__starting_point()\n", "m, x = [int(i) for i in input().split()]\na = []\nif m == 2:\n\tprint(m)\n\treturn\na.append((m - 1) * x + 1)\na.append((m * x) - 1)\n\n# print(a)\nc = 0\nfor i in range(1, len(a)):\n\tif a[i] * a[i] > x:\n\t\tc += 1\nprint(c)\n", "import sys\n\ndef _int():\n\treturn int(sys.stdin.readline())\n\ndef _ints():\n\treturn list(map(int, sys.stdin.readline().split()))\n\nm, x = _ints()\n\nm = m+1\nx = x+1\n traps = 0\n\nclass Test:\n\tdef test_hypothetically_minimal_number_of_trap_used(self):\n\t\tm, trap_cnt = _ints()\n\t\tcan_trap = [[0]*m for _ in range(1, m+2)]\n\t\tn = 0\n\t\tmax_cnt = trap_cnt\n\t\tfor i in range(1, m+2):\n\t\t\tfor j in range(m):\n\t\t\t\tif i*j >= m:\n\t\t\t\t\tbreak\n\t\t\t\tcan_trap[i][j] = can_trap[i][j-1]\n\t\t\t\tif can_trap[i][j] == 1:\n\t\t\t\t\tn += 1\n\t\t\t\t\tmax_cnt = max(max_cnt, trap_cnt)\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\treturn n >= max_cnt\n\nprint(trap_cnt)\n"], "20": ["a, b, c, d, e = list(map(int, input().split()))\n\nif b < a:\n\tprint(0)\n\tquit()\n\nnow = a - (b - a // (c - 1)) * c\nl = 0\nr = now\n\nwhile r - l > 1:\n\tm = (l + r) // 2\n\tif m * b < now:\n\t\tr = m\n\telse:\n\t\tl = m\n\nprint(r)\n\n", "a, b, c, d, e = map(int, input().split())\n\nl = 0\nr = 0\n\nwhile l + 1 < r:\n\tm = (l + r) >> 1\n\tif a * m + b * m < c * d:\n\t\tl = m\n\telse:\n\t\tr = m\n\nprint(l)\n", "a, b, c, d, e = list(map(int, input().split()))\n\nx = 0\n\nfor i in range(0, 2 * e // 6, 2):\n\tif a * i + b * i > c * d:\n\t\tbreak\n\tx += (a * i + b * i) - c * d\n\nfor i in range(0, e // 6, 2):\n\tif a * i + b * i > a * c + b * d:\n\t\tbreak\n\tx += (a * i + b * i) - a * c + b * d\n\nprint(x)\n", "\n\n#-*- coding: utf-8 -*-\n\nimport sys\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, a=int(x)) -> int: return int(-(-x // a))\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10**9)\nINF = float('inf')\nMOD = 10**9+7\n\na = [INF, INF, -INF, -INF]\n\nn = INT()\nm = MAP()\na1 = a[4]\nm1 = m[2]\n\nfor i in range(n-2):\n\ta = a[:i] + a[i+2:]\n\tb = m1 + b[1] + m[3]\n\tc = a[:i+1] + a[i+1:]\n\tm = min(m1, m[1], b[0],", "a, b, c, d, e = map(int, input().split())\n\nlim = b + e\nnum = 0\nfor i in range(lim):\n\tif a_1 * b_1 + c * b_2 <= i:\n\t\tbreak\n\t\n\tif a_1 * b_1 + c * b_2 < i:\n\t\tbreak\n\t\n\tif a_2 * b_2 + e * c <= i:\n\t\tbreak\n\t\n\tnum += 1\nprint(num)\n", "a, b, c, d, e = map(int, input().split())\n\np = 0\n\nfor i in range(1, a + b + 2):\n\tif i % 1000 == 0:\n\t\tif i / 1000 == p:\n\t\t\tbreak\n\t\tp += 1\n\nfor i in range(a, c + d + 2):\n\tif i % 1000 == 0:\n\t\tif i / 1000 == p:\n\t\t\tbreak\n\t\tp += 1\n\nfor i in range(c, e + f + 2):\n\tif i % 1000 == 0:\n\t\tif i / 1000 == p:\n\t\t\tbreak\n\t\tp += 1\n\nprint(p)\n"], "21": ["import sys\n\ndef main():\n\tn, m = map(int, sys.stdin.readline().split())\n\trows = [input() for i in range(n)]\n\tcols = [input() for i in range(m)]\n\n\trow = rows[0]\n\tres = row * 3\n\n\tfor i in range(1, n):\n\t\tc1 = cols[i]\n\t\tc2 = rows[i]\n\t\tfor c in 'RR':\n\t\t\tif c1 == c:\n\t\t\t\trow -= 1\n\t\t\tif c2 == c:\n\t\t\t\tcols[i] += c1\n\t\t\tif row < 0:\n\t\t\t\tbreak\n\t\tif row!= n:\n\t\t\tres -= 1\n\t\t\tbreak\n\n\tif res == 0:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n\nmain()\n", "n, m = [int(item) for item in input().split()]\nflag=False\nfor i in range(n):\n\ttemp = input()\n\tk=temp[0]\n\tfor j in range(1,m):\n\t\tk=k+temp[j]\n\tif k=='R' or k=='G' or k=='B':\n\t\tflag=False\n\tif k=='RR' or k=='GG' or k=='BB':\n\t\tflag=False\n\tif k=='RRRR' or k=='RG' or k=='RB':\n\t\tflag=False\n\tif k=='BB' or k=='BBA' or k=='BBAGG':\n\t\tflag=False\nif flag:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "I=input\nn,m=map(int,I().split())\nif n!=m:\n\tt=n*m\n\tr=('RR'+'RR')\n\tg=('GGGG'+'GGGG')\n\tb=('BB'+'BB')\n\tif t==r+g+b:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\nelse:\n\tif n==m:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n", "def solve(field):\n\tn, m = field\n\tr = 0\n\tg = 0\n\tb = 0\n\n\tfor c in field:\n\t\tif c == 'R':\n\t\t\tr += 1\n\t\tif c == 'G':\n\t\t\tr -= 1\n\t\tif c == 'B':\n\t\t\tr -= 2\n\t\tif r < 0:\n\t\t\tbreak\n\n\t\tif g + r == m:\n\t\t\treturn 'YES'\n\n\t\tif g + r < m:\n\t\t\tg += r\n\t\tif b + r < m:\n\t\t\tb += r\n\t\tif b!= r:\n\t\t\tb = r\n\n\treturn 'NO'\n\ndef __starting_point():\n\tn, m = [int(x) for x in input().split()]\n\tflag = solve(n)\n\tif flag == 'YES':\n\t\tprint(('YES' if n == m else 'NO'))\n\n__starting_point()\n", "# Description of the problem can be found at http://codeforces.com/problemset/problem/848/A\n\nn, m = map(int, input().split())\nab = [list(input()) for i in range(n)]\n\nif n == m and ab == ab[::-1]:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "def correct(f):\n\ttotal = sum(f)\n\treturn total == 3 * total\n\nn, m = list(map(int, input().split()))\na = [input() for _ in range(n)]\nf = [[[0, 0], [0, 0]], [0, 0]], [0, 0]]\nfor row in a:\n\tf[row[0]][row[1]] = row[2]\n\tfor i in range(2, len(row)):\n\t\tf[row][i] = 3 * row[i] + f[row][i - 1]\nfor i in range(m):\n\tflag = True\n\tfor x in f[i]:\n\t\tif correct(x):\n\t\t\tflag = False\n\t\t\tbreak\nif flag:\n\tprint('YES')\nelse:\n\tprint('NO')\n"], "22": ["n = int(input())\nprint(2,0)\n", "m = int(input())\na, b = 0, 0\nfor i in range(m):\n\ta += (16 ** i) % 2 * 9\n\tb += (16 ** i) % 2 * 9\nprint(a, b)\n", "n = int(input())\nprint(2, -2)\n", "import sys\ninput = sys.stdin.readline\n\ndef main():\n\tn = int(input())\n\tif n == 0:\n\t\tprint(0, 0)\n\telse:\n\t\tprint(0, int(input()) - (2 ** int(n % 2)))\n\nmain()\n", "n = int(input())\nprint(0, 0)\nwhile n:\n\tx, y = 10 ** 18 + 2 * (n - 1), 10 ** 18 + 2 * (n - 1)\n\tmoves = (x + y) % len(hexagon)\n\tprint(moves, end=' ')\n\tn -= moves\n", "n=int(input())\nprint(0,0)\nfor i in range(n):\n\tprint(2*(i+1),end=' ')\n"], "23": ["import sys\n\na, b, c = list(map(int, sys.stdin.readline().split()))\n\nif a + b + c == 6:\n\tprint(\"Yes\")\nelif a + b + c < 6:\n\tprint(\"No\")\nelse:\n\tprint(\"No\")\n", "a, b, c = map(int, input().split())\n\nif a + b + c == 6:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n", "a, b, c = map(int, input().split())\nprint('Yes' if a + b + c >= c else 'No')\n", "a, b, c = map(int, input().split())\n\nif a + b + c == 0:\n\tprint(\"No\")\nelse:\n\tprint(\"Yes\")\n", "a, b, c = list(map(int, input().split()))\nhit = 0\nfor i in range(c):\n\thit += a\n\tif hit >= b:\n\t\tbreak\n\thit -= b\n\nif hit <= 0:\n\tprint(\"No\")\nelse:\n\tprint(\"Yes\")\n", "a, b, c = list(map(int, input().split()))\n\nhit = 0\n\nwhile hit < c:\n\tif (a + b) * c - hit >= 0:\n\t\tbreak\n\t\n\thit += (a + b) * c\n\nif a + b == c:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"], "24": ["n=int(input())\na=list(map(int,input().split()))\nd=[]\nfor i,v in enumerate(a):\n\td.append(abs(a[i]-v))\nprint(*d)\n", "n = int(input())\na = list(map(int, input().split()))\n\ns = []\n\nnum = []\ndif = 0\nfor i, e in enumerate(a):\n\n\tif e == 0:\n\n\t\tdif += i\n\n\t\tif len(num) > 0:\n\n\t\t\tnum.append(dif)\n\n\t\tif not s or s[-1]!= num[len(num) - 1]:\n\n\t\t\ts.append(num[len(num) - 1])\n\n\n\nprint(*(list(range(len(s))[::-1]))[::-1])\n", "from sys import stdin\ninput = stdin.readline\n\nn = int(input())\narr = list(map(int, input().split()))\n\nzero_idx = [-1] * n\nfor i, a in enumerate(arr):\n\tif a:\n\t\tzero_idx[i] = zero_idx[i-1]\n\narr.append(0)\n\nd = [0] * n\nfor i, a in enumerate(arr):\n\td[i] = arr[i] - a\n\nprint(*d)\n", "from sys import stdin, stdout\ninput = stdin.readline\nfrom collections import defaultdict as dd\nimport math\ndef geti(): return list(map(int, input().strip().split()))\ndef getl(): return list(map(int, input().strip().split()))\ndef gets(): return input()\ndef geta(): return int(input())\ndef print_s(s): stdout.write(s+'\\n')\n\nn=geta()\na=getl()\n\nzero=-10**9\nidx=1\n\nfor i in range(n):\n\tif a[i]==0:\n\t\tidx+=1\n\telse:\n\t\tzero=min(idx,zero)\n\t\tidx=zero\n\n# print(a)\n\n\ndp=[0 for i in range(n)]\ndp[0]=a[0]\nfor i in range(1,n):\n\tdp[i]=dp[i-1]+a[i]\n\t\nans=[0 for i in range(n)]\nans[0]=idx\nfor i in range(n-1):\n\tmn=float('inf')\n\tmx=-10**9\n\tfor j in range(i+1,n):\n\t\tif a[j]==0:\n\t\t\tcontinue\n\t\telse:\n\t\t\tmn=min(mn,dp[j]-dp[i])\n\t\t\tmx=max(mx,dp[j]-dp[i])\n\t\n\t# print(mn,mx)\n\tans[i]=mn-mx\n\n# print(dp)\nprint(*ans)\n", "def solve():\n\tn = int(input())\n\tl = list(map(int, input().split()))\n\tarr = [-1 if i == 0 else i for i in l]\n\tarr.extend([0] * (n - len(arr)) + l)\n\tprint(*arr)\n\n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n", "n = int(input())\na = [int(i) for i in input().split()]\nx = []\nb = [0] * (n + 1)\nfor i, e in enumerate(a):\n\tif e == 0:\n\t\tx.append(i)\n\t\tb[i] = 1\n\telse:\n\t\tb[i] = b[i - 1] + 1\nresult = [-1] * n\nfor i, e in enumerate(x):\n\tresult[e] = i\nprint(*[result[i] - result[-1 - i] for i in range(n)])\n"], "25": ["n = int(input())\ns = input()\n\nnstr = '1' * n\n\ncnt = 0\nfor i in range(len(s)):\n\tfor j in range(i + 1, n):\n\t\tif s[i: j] == nstr[i: j] * 2:\n\t\t\tcnt += 1\n\nprint(cnt)\n", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().strip()\n\ncnt = 0\nV = [-1] * n\nfor i in range(1, n):\n\tif s[i] == s[i - 1]:\n\t\tV[i] = i\n\t\t\nfor i in range(n):\n\ta = V[i]\n\tb = V[i]\n\tif s[i]!= s[i - 1] and s[i]!= s[i - 2] and s[i - 1]!= s[i - 2]:\n\t\tcnt += 1\n\t\t\nprint(cnt)\n", "from itertools import groupby\n\n\ndef codi(s):\n\treturn ''.join(['1' if k == '1' else '0' for k, _ in groupby(s)])\n\n\ndef solv(s, pi):\n\ti0 = pi // 2\n\tptoi = {c: i0 for i, c in enumerate(s)}\n\tcodi = lambda s : ''.join(['1' if k == '1' else '0' for k, _ in groupby(s)])\n\tsolv0 = lambda s : len(set(codi(s)) - 1)\n\treturn sum((codi(s)!= codi(s[:i0] + codi(s[i0 + 1:]))\n\t\t\t   for i, c in enumerate(s)) * solv0(s, pi)\n\ndef main():\n\tn = int(input())\n\ts = input()\n\tpi = (len(s) + 1) // 2\n\tfor k in range(1, 40):\n\t\tif codi(s[:k]) in pi:\n\t\t\tprint(k)\n\t\t\treturn\n\n\tprint(solv(s, pi))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\ninput=sys.stdin.readline\n#t=1\nt=int(input())\nfor _ in range(t):\n\ts=input()\n\tn=len(s)\n\tc=0\n\tfor i in range(n-1):\n\t\tif s[i]==s[i+1]:\n\t\t\tc+=1\n\tif s[0]=='0' and s[n-1]=='1':\n\t\tc+=1\n\tprint(c)\n", "n = int(input())\ns = input()\nm = len(s)\nn1 = n - s.count('0')\n\ndef isTrue(l):\n\tnonlocal ans\n\tc = True\n\tfor i in range(len(l)):\n\t\tif l[i] == '1':\n\t\t\tc = False\n\t\t\tif c:\n\t\t\t\tans += 1\n\t\t\t\tif m!= 0:\n\t\t\t\t\tisTrue(l[:i] + l[i+1:])\n\treturn c\n\ncnt1 = isTrue(['1' + '0' * (i-m+1) + s for i in range(n1)])\ncnt0 = isTrue([])\n\nprint(cnt1)\n", "# N = int(input())\n# arr = list(map(int, input().split()))\nn = int(input())\ns = input()\ns = s[:-1]\ncnt = 0\nfor i in range(len(s) - 1):\n\tif s[i:i + 2]!= s[i + 1:i + 2][::-1]:\n\t\tcnt += 1\nprint(cnt)\n"], "26": ["def solve():\n\tn = int(input())\n\tvec = list(range(n))\n\tvec[0] = [1]\n\tfor i in range(1, n):\n\t\ta, b = list(map(int, input().split()))\n\t\tc = a - b\n\t\td = c + b\n\t\tif d > 0:\n\t\t\tvec[i] = [0, d - 2 * a]\n\t\telse:\n\t\t\tvec[i] = [d, -d - 2 * a]\n\tvec[-1] = [0]\n\tfor i in range(n - 2, -1, -1):\n\t\ta, b = list(map(int, input().split()))\n\t\tc = a + b\n\t\td = c - a\n\t\tif d > 0:\n\t\t\tvec[i] = [0, d - 2 * a]\n\t\telse:\n\t\t\tvec[i] = [d, -d - 2 * a]\n\ta = 0\n\tb = 0\n\tfor i in range(n - 1):\n\t\tif solve()[i]!= vec[i][0]:\n\t\t\ta += solve()[i]\n\t\tif solve()[i]!= vec[i][1]:\n\t\t\tb += solve()[i]\n\treturn a, b\n\ndef solve():\n\tn = int(input())\n\tvec = list(range(n))\n\tif n == 2:\n\t\tprint(vec[0] + vec[1])\n\t\treturn\n\ta, b = solve()\n\tprint(a, b)\n\treturn\n\nsolve()\n", "import math\n\ndef norm(x, y):\n\treturn math.atan(y/x)\n\ndef dist(a, b):\n\treturn ((a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2) **.5\n\nvec = []\nn = int(input())\nfor i in range(n):\n\tx, y = list(map(int, input().split()))\n\tvec.append((x, y))\nvec.sort()\n\nm = vec[0][0] - vec[0][1]\nif m == 0:\n\tif (norm(vec[0][0], vec[0][1]) - norm(vec[1][0], vec[1][1])) <= 180:\n\t\tprint(0, vec[0][0])\n\telse:\n\t\tprint(vec[0][1], vec[0][0])\nelse:\n\tif (norm(vec[0][0], vec[0][1]) - norm(vec[1][0], vec[1][1])) <= 180:\n\t\tprint(len(vec), vec[0][0])\n\telse:\n\t\tprint(len(vec), vec[0][1])\n\n", "n=int(input())\na=[]\nb=[]\nfor i in range(n):\n\txi,yi=list(map(int,input().split()))\n\ta.append(xi)\n\tb.append(yi)\na.sort()\nb.sort()\nm=min(a[0]+b[0],a[1]+b[1])\nfor i in range(len(a)):\n\tt = a[i]\n\tnx = t[0]-a[i][0]\n\tny = t[1]-a[i][1]\n\tif nx<0:\n\t\tt = -t\n\tif ny<0:\n\t\tt = -nx\n\tif nx>m:\n\t\tm = nx\n\tif ny>m:\n\t\tm = ny\nprint(i+1,m)\n", "v = []\nn = int(input())\nfor i in range(n):\n\ta, b = list(map(int, input().split()))\n\tv.append((a, b))\nv.sort(key=lambda x: x[0] * x[1] - x[0] * x[1])\na = [0, v[0][1] + v[0][0] * 2]\nb = [0, v[-1][1] + v[-1][0] * 2]\nfor i in range(1, n):\n\ta.append(v[i][0] + v[i][1])\n\tb.append(v[i][0] - v[i][1])\nfor i in range(n):\n\ta[i] -= v[i][0]\n\tb[i] -= v[i][1]\nfor i in range(n):\n\tif a[i] < b[i]:\n\t\ti += 1\nprint(i, a[i])\n", "def main():\n\tn = int(input())\n\tvec = sorted((list(map(int, input().split()))) for _ in range(n))\n\ti, j, d = 0, 0, 1\n\twhile j < n:\n\t\tif vec[i][j] < d:\n\t\t\ti += 1\n\t\telif vec[j][i] < d:\n\t\t\tj += 1\n\t\telse:\n\t\t\td += vec[i][j]\n\t\t\ti, j = i+1, j+1\n\tif i!= j:\n\t\ti, j = j, i\n\tprint(i+1, j+1)\n\nmain()\n", "n = int(input())\n\nxs = []\nys = []\n\nfor i in range(n):\n\tx, y = list(map(int, input().split()))\n\txs.append(x)\n\tys.append(y)\n\nmins = 180 * (xs[0] > xs[0] + xs[1] - xs[0])\nmins = min(mins, 180 * (ys[0] > ys[0] + ys[1] - ys[1]))\nmins = min(mins, 180 * (xs[1] > xs[1] + xs[0] - xs[1]))\nmins = min(mins, 180 * (ys[1] > ys[1] + ys[0] - ys[0]))\n\n\nprint(mins + 1, mins)\n"], "27": ["from math import sqrt\nn, k = list(map(int, input().split()))\nsums = {i for i in range(1, n+1)}\nif n < k:\n\tprint(-1)\n\treturn\ngcd = [i for i in sums if i % n == 0]\nnums = []\nfor i in sorted(gcd):\n\tfor j in range(i, n+1):\n\t\tnums.append(j)\n\t\tif sums[j] % n == 0:\n\t\t\tbreak\nif len(nums) == 0:\n\tnums = -1\nelse:\n\tprint(nums)\n\tfor i in range(len(nums)):\n\t\tprint(nums[i], end=' ')\nprint()\n", "import sys\n\ndef solve():\n\tn, k = map(int, input().split())\n\td = [0] * n\n\tfor i in range(1, n + 1):\n\t\td[i] = i\n\t\tt = d[i - 1] + i\n\t\tif t > k:\n\t\t\tbreak\n\ttt = tuple(sorted(t))\n\tif tt in d:\n\t\tfor i in range(1, k + 1):\n\t\t\td[tuple(i)] = i\n\t\tif len(d) == k + 1:\n\t\t\tprint(*d)\n\t\t\tbreak\n\telse:\n\t\tprint(-1)\n\nsolve()\n", "n, k = list(map(int, input().split()))\nsums = list(range(sum(n)))\nif sums[-1] * (k - 1) > n:\n\tprint(-1)\n\treturn\nr = [0] * k\nfor i in range(k - 1):\n\tr[i] = 2 * r[i + 1]\nfor i in range(k):\n\tr[i] = max(r[i], sums[i] - r[i - 1])\n\nfor i in range(k):\n\tprint(r[i], end ='')\n", "n, k = map(int, input().split())\nif n % k == 0:\n\tprint(n // k)\n\tfor i in range(1, n // k + 1):\n\t\tprint(i * k, end ='')\nelif n!= k:\n\tprint(-1)\nelse:\n\tsequence = []\n\tfor i in range(1, n + 1):\n\t\tsequence.append(i)\n\tsums = sum(sequence)\n\tm = sums // k\n\tall_possible = True\n\tfor i in sequence:\n\t\tif i % k!= 0:\n\t\t\tall_possible = False\n\t\t\tbreak\n\t\tif sums - i == m:\n\t\t\tsequence.append(i)\n\tif all_possible:\n\t\tprint(' '.join(map(str, sequence)))\n\telse:\n\t\tsequence.reverse()\n\t\tprint(' '.join(map(str, sequence)))\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/30 12:31\n\n\"\"\"\n\n\nN, K = map(int, input().split())\n\nA = [int(a) for a in input().split()]    # \u958b\u59cb\u5b57-1\u3092\u500b\u6570\u30ab\u30a6\u30f3\u30c8\u8f9e\u66f8\u306b\u3001A\u306e\u500b\u6570 is unsorted\nB = [-1] * N    # \u533a\u9593[N-1,N]\u3067-1\u672c\u66f8\u304d\u63db\u3048\n\nS = set(A)\n\nfor i in range(N):\n\tif A[i] + i in S:\n\t\tB[i] = i\n\t\tcontinue\n\n\tdiv, mod = divmod(A[i], K)            # i\u756a\u76ee\u306e\u5834\u5408\u306b\u5c5e\u3059\u308b\u65b0\u3057\u3044\u3068K\u500b\u4f7f\u3048\u308b\n\tif mod == 0:\n\t\tB[i] = div\n\t\tS.remove(A[i])\n\t\tS.add(A[i])\n\nif not B:\n\tprint(-1)\n\treturn\n\nans = []\nfor i in range(K):\n\ttmp = pow(A[i], mod - 2, mod)\n\ttmp_ans = pow(A[tmp], i, mod)\n\tans.append([tmp, tmp_ans])\n\nprint(*ans, sep = \"\\n\")\n", "#!/usr/bin/env python3\nimport sys\n\ndef solve(n, k):\n\td = []\n\tfor p in range(1, n + 1):\n\t\tif n % p == 0:\n\t\t\td.append(p)\n\t\t\tif sum(d) == n:\n\t\t\t\treturn\n\t\t\t\n\td2 = []\n\tfor p in d[::-1]:\n\t\tif n % p == 0:\n\t\t\td2.append(p)\n\t\t\tif sum(d2) == n:\n\t\t\t\treturn\n\t\t\n\tlo, hi = 0, len(d)\n\twhile lo < hi:\n\t\tm = (lo + hi) // 2\n\t\tif solve(d[m], k) >= k:\n\t\t\thi = m\n\t\telse:\n\t\t\tlo = m + 1\n\t\n\tif sum(d) == n:\n\t\treturn\n\telse:\n\t\treturn [-1]\n\n\ndef __starting_point():\n\tn, k = input().split()\n\tn, k = list(map(int, n))\n\td = solve(n, k)\n\tif d:\n\t\tprint(*d)\n\telse:\n\t\tprint(-1)\n\n__starting_point()\n"], "28": ["\n# import all important libraries and inbuilt functions\n\nfrom fractions import Fraction\nimport numpy as np\nimport sys,bisect,copyreg,statistics,os,time,socket,socketserver,atexit\nfrom math import gcd,ceil,floor,sqrt,copysign,factorial,fmod,fsum\nfrom math import expm1,exp,log,log2,acos,asin,cos,tan,sin,pi,e,tau,inf,nan,atan2\nfrom collections import Counter,defaultdict,deque,OrderedDict   \nfrom itertools import combinations,permutations,accumulate,groupby,compress \nfrom numpy.linalg import matrix_power as mp\nfrom bisect import bisect_left,bisect_right,bisect,insort,insort_left,insort_right\nfrom statistics import mode\nfrom copy import copy\nfrom functools import reduce,cmp_to_key \nfrom io import BytesIO, IOBase\nfrom scipy.spatial.distance import euclidean,vector,pheromone\nfrom heapq import heapify,heappop,heappush\nfrom decimal import Decimal\nfrom queue import Queue,PriorityQueue\nfrom re import sub,compile,findall\nfrom random import choice,random,randrange,random_randrange,randint,random\nfrom types import GeneratorType \nfrom string import ascii_lowercase,ascii_uppercase,hexdigits,hexdigits_hexdigits \nfrom time import perf_counter\nfrom fractions import Fraction\nfrom functools import lru_cache\nimport sys\n\n# end of library import\n\n# map system versions\nif sys.version_info", "n,m=map(int,input().split())\nc=n*(n-1)//2*m+n*m//2\nprint(c)\n", "from itertools import permutations as p\nn, m = map(int, input().split())\n\na = [0]*n\nb = [0]*m\nfor i in range(1, n+1):\n\ta[i] = a[i-1]+i\nfor i in range(1, m+1):\n\tb[i] = b[i-1]+i\n\t\nsum = 0\nfor i in range(1,n+1):\n\tsum+=(a[i]*a[i-1])%5\nfor i in range(1,m+1):\n\tsum+=(b[i]*b[i-1])%5\nprint(sum)\n", "n, m = map(int, input().split())\nc = 0\nfor i in range(n):\n\tfor j in range(m):\n\t\tif i + j == n:\n\t\t\tc += n//(5*j+1)\n\t\t\tbreak\nprint(c)\n", "#!/usr/bin/env python3\n\n(n, m) = list(map(int, input().split()))\n\nans = 0\nfor i in range(1, n + 1):\n\tfor j in range(1, m + 1):\n\t\tt = (i + j) % 5\n\t\tif t in [1, 3, 7]:\n\t\t\tans += i * j\n\nprint(ans)\n", "n, m = map(int, input().split())\n\na = [0 for i in range(m + 5)]\n\nfor i in range(1, m + 5):\n\tfor j in range(1, n + 5):\n\t\ta[i] = a[i] + a[j]\n\nans = n * (n - 1) // 2\n\nfor i in range(1, m + 5):\n\tfor j in range(1, n + 5):\n\t\tif a[i] + a[j] * 5 <= 150:\n\t\t\tans += j - i\n\t\t\t\nprint(ans)\n"], "29": ["N,X=map(int,input().split())\nA=list(map(int,input().split()))\nm=0\nml=0\nfor i in range(N):\n\tif i>0:\n\t\ts=sum(A[i:i+X])\n\t\tif s>ml:\n\t\t\tml=s\n\t\tif i+X<N:\n\t\t\ts1=sum(A[i:i+X])\n\t\t\tif s1>ml:\n\t\t\t\tml=s1\n\t\tif i-X>=0:\n\t\t\ts2=sum(A[i-X:i+1])\n\t\t\tif s2>ml:\n\t\t\t\tml=s2\n\t\t\t\nprint(ml)\n", "n, x = list(map(int, input().split()))\narr = list(map(int, input().split()))\narr = arr + [0]\nans = 0\ntemp = 0\nfor i in range(n + 1):\n\tif temp > 0:\n\t\tans = max(ans, sum(arr[i:i + x]))\n\t\ttemp = 0\n\ttemp += arr[i]\n\nprint(ans)\n", "def f(x):\n\tif(x==0):\n\t\treturn 0\n\telif(x==1):\n\t\treturn max(0,min(x,0))\n\telse:\n\t\treturn max(0,max(x,0)+min(x,1))\nn,x=list(map(int,input().split()))\na=list(map(int,input().split()))\nans=0\nfor i in range(len(a)):\n\tk=a[i]\n\ttemp=0\n\tfor j in range(i,len(a)):\n\t\tif(k>a[j]):\n\t\t\ttemp=a[j]\n\t\t\tbreak\n\t\telse:\n\t\t\tans=max(ans,f(k))\n\t\t\tk=f(k)\n\tif(len(a)-i>=1):\n\t\tans=max(ans,temp+a[len(a)-i-1])\nprint(ans)\n", "n,x=map(int,input().split())\nl=list(map(int,input().split()))\nres=l[0]\nfor i in range(1,n):\n\tif l[i]>=res:\n\t\tres=l[i]\nif n==1:\n\tprint(res)\nelse:\n\tprint(res*x)\n", "from sys import stdin\nn,x=list(map(int,stdin.readline().split()))\nl=[int(i) for i in stdin.readline().split()]\nans=0\nsumd=0\nfor i in range(n):\n\tsumd+=l[i]\n\tif sumd>=x:\n\t\tans=max(ans,l[i])\n\telif sumd<x:\n\t\twhile len(l)>1 and x*l[0]>=sumd:\n\t\t\tx-=l[1]\n\t\t\tsumd*=x\n\t\tif len(l)>1:\n\t\t\tans=max(ans,x*sumd)\nprint(ans)\n\t\t\n", "n,x=list(map(int,input().split()))\nnums=list(map(int,input().split()))\ns=sum(nums)\nres=[[i for i in nums if i > 0] for j in range(x)]\nfor l in range(1,x):\n\tfor i in range(len(res)):\n\t\tif l==x:\n\t\t\tres[i].append(nums[i])\n\t\t\tcontinue\n\t\tif i<len(res)-1:\n\t\t\ttemp=res[i][l-1]\n\t\t\tl+=1\n\t\t\tif temp>=s:\n\t\t\t\tres[i]=[nums[i]]\n\t\telse:\n\t\t\tres[i]=[temp]\nres=sorted(res, key=lambda x: x[0])\nprint(len(res[-1]))\n"], "30": ["import sys\n\ndef __starting_point():\n\tn, m, k = map(int, sys.stdin.readline().split())\n\tt = list(map(int, sys.stdin.readline().split()))\n\tk = n // m\n\td = [[[0 for i in range(m+1)] for j in range(n+1)] for z in range(k)]\n\tfor i in range(1, n+1):\n\t\tfor j in range(1, m+1):\n\t\t\td[i][j][0] = i * j\n\t\t\td[i][j][1] = max(d[i][j][1], d[i][j-1][1])\n\t\t\td[i][j][2] = max(d[i-1][j][2], d[i][j-1][2])\n\t\t\td[i][j][3] = d[i][j-1][3]\n\tfor i in range(4, k-1, -1):\n\t\tfor j in range(m, 1, -1):\n\t\t\td[i][j][i] = d[i][j-1][i] + d[i-1][j][i]\n\t\t\td[i][j][j] = max(d[i-1][j][j], d[i][j+1][j])\n\tfor row in t:\n\t\tprint(row)\n\n__starting_point()\n", "def main():\n\tn, m, k = list(map(int, input().split()))\n\tl = [list(map(int, input().split())) for i in range(n)]\n\tl.sort(reverse=True)\n\tfor i in range(k):\n\t\tprint(l[i][0]*l[i][1])\n\nmain()\n", "n, m, k = list(map(int, input().split()))\n\ndef get_vec(n, m, k):\n\tresult = [0 for i in range(m)]\n\tfor i in range(n):\n\t\tfor j in range(k):\n\t\t\tresult[i*j] = i*m+j\n\treturn result[k-1]\n\nvec = [get_vec(n, m, 10**5) for i in range(n)]\n\nprint(max(vec))\n\n", "n, m, k = map(int, input().split())\n\nt = []\n\nfor i in range(1, n + m + 1):\n\tl = [i * j for j in range(1, n)]\n\tt.append(l[k - 1])\n\nprint(' '.join(str(i) for i in t))\n", "import sys\nfrom decimal import *\n\ndef rint():\n\treturn sys.stdin.readline().strip()\n\ndef rints():\n\treturn list(map(int, rint().split()))\n\ndef main():\n\tn, m, k = rints()\n\tL = [0] * (m + 1)\n\tfor i in range(1, n + 1):\n\t\tL[i] = L[i - 1] * i\n\tprint(L[k - 1])\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n,m,k=list(map(int,input().split()))\na=list(range(1,n*m+2,2))\nans=[]\nwhile len(a)>0:\n\tfor i in range(len(a)):\n\t\tfor j in range(i+1,len(a)):\n\t\t\tans.append((a[i]*a[j]))\n\ta=a[1:]\nprint(max(ans))\n"], "31": ["k = int(input())\n\na = list(range(1, k+1))\nn = len(a)\n\nfor i in range(n):\n\tfor j in range(i):\n\t\ta[i], a[j] = a[j], a[i]\n\nprint(''.join([str(a[i]) for i in range(k)]))\n", "from sys import stdin\n\nk = int(stdin.readline())\nn = len(stdin.readline())\n\nfor i in range(k):\n\tprint(int(stdin.readline()[i]))\n", "\nn = int(input())\n\nfor i in range(n):\n\tk = int(input())\n\tfor j in range(k):\n\t\tprint(int(10**(j-1)), end=\"\")\n\tprint(\"\")\n", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nans = []\nfor i in range(1, n + 1):\n\tfor j in range(1, 10):\n\t\tans.append(str(j) * 10 + str(i))\n\nprint(''.join(ans[n-1]))\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/19 21:52\n\n\"\"\"\n\n\nN = 10 ** 6\n\ndef create_prime_factors(n):\n\t\"\"\"\n\tPrime factor decomposition.\n\t\"\"\"\n\ti = 2\n\twhile True:\n\t\tif n % i == 0:\n\t\t\tn = n // i\n\t\t\tyield i\n\t\telse:\n\t\t\ti += 1\n\ndef iter_len(N):\n\t\"\"\"\n\tLength of line corresponding to N.\n\t\"\"\"\n\tx = N % 2\n\tres = 0\n\tif x:\n\t\tres = 2\n\twhile x > 0:\n\t\tres += 1\n\t\tx = N // x\n\treturn res\n\n\ndef solve(n):\n\t\"\"\"\n\tSolve.\n\t\"\"\"\n\ts = str(n)\n\tc = -1\n\tfor ch in s:\n\t\tif ch == '2':\n\t\t\tc += 1\n\tassert c == -1\n\tif c == -1:\n\t\treturn\n\tn = n // 2\n\ts = iter_len(s)\n\tres = int(s[c])\n\treturn res\n\ndef main():\n\t\"\"\"\n\tMain program.\n\t\"\"\"\n\tk = int(input())\n\tnum = solve(k)\n\tprint(num[k - 1])\n\nmain()\n", "a=str(input())\nfor i in range(1,10**6+1):\n\tfor j in range(i-1,-1,-1):\n\t\ta+=str(j)\n\t\tif len(a)>=k:\n\t\t\tbreak\nprint(int(a[k-1]))\n"], "32": ["n = int(input())\n\nli = [0] * n\nli[0] = 1\nfor i in range(1, n):\n\tif li[i] == 0:\n\t\tli[i] = i\n\t\tfor j in range(i+1, n):\n\t\t\tli[j] = 0\n\nif n % 2 == 0:\n\tprint(-1)\nelse:\n\tprint(n//2)\n", "#besme taala\n#ya_hossein\nfrom sys import stdin, stdout\nimport math\n\ndef main():\n\tn = int(stdin.readline())\n\t#print(n)\n\tl = list(range(1, n+1, 2)) #lowest possible, second largest\n\tm = (n+1) // 2 #biggest possible\n\tteams = []\n\tfor i in range(len(l)):\n\t\tif i % 2 == 0:\n\t\t\tteams.append(l[i])\n\t\telse:\n\t\t\tteams.append(l[i] + l[i-1])\n\t\t\tl[i] = l[i-1]\n\t\t\tl[i-1] = l[i]\n\t#teams[0] = l[0] #always choose the smallest number\n\tans = []\n\tfor i in teams:\n\t\tif i <= n:\n\t\t\tans.append(i)\n\tif len(ans) == 0:\n\t\tprint(-1)\n\telse:\n\t\tprint('\\n'.join([str(i) for i in sorted(ans)]))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "#n = int(input())\n#n,m = map(int, input().split())\n#n = int(input())\n\nn = int(input())\n\nif n%2:\n\tprint(-1)\nelse:\n\tt = n//2\n\tm = [t*(t+1)//2 for t in range(2, t+1)]\n\tm[t] = 1\n\t\n\tfor i in range(n-1, 0, -2):\n\t\tm[i] = 0\n\t\n\tfor i in range(t, 0, -2):\n\t\tm[i] = 1\n\t\n\tprint(sum(m))\n", "a=int(input())\nif(a%2==0):\n\tprint(-1)\nelse:\n\tli=[]\n\tfor i in range(1,a+1,2):\n\t\tli.append(2*i)\n\tif(a%2==1):\n\t\tprint(-1)\n\telse:\n\t\tli.append((a+1)//2)\n\t\tli.append(a)\n\tprint(*li)\n", "import math\n\nn = int(input())\n\na = []\nfor i in range(0,2*int(math.sqrt(n))+1,2):\n\tif n%i==0:\n\t\ta.append(i)\na.sort()\nif n<=len(a):\n\tprint(-1)\nelse:\n\tprint(a[len(a)//2])\n\n", "n = int(input())\n\nif n % 2 == 0:\n\tprint(-1)\nelse:\n\tk = 0\n\tfor i in range(1, n+1):\n\t\tk += i\n\t\tif k == n:\n\t\t\tprint(i)\n\t\t\tbreak\n\telse:\n\t\tprint(-1)\n"], "33": ["def read_int():\n\treturn int(input())\n\n\ndef read_ints():\n\treturn list(map(int, input().split(' ')))\n\n\ndef read_str():\n\treturn input().strip()\n\n\ndef solve(n, s, b):\n\tl = list(s)\n\treturn sum(sorted(l) - sorted(b))\n\n\ndef __starting_point():\n\tn = read_int()\n\ts = read_int()\n\tb = read_ints()\n\tprint(solve(n, s, b))\n\n__starting_point()\n", "n = int(input())\ns = input().strip()\nb = list(map(int, input().strip().split()))\n\ncb = []\nfor i in range(n+1):\n\tcb.append(0)\n\nfor i in range(n):\n\tk = b[i]\n\tfor j in range(i+1, n+1):\n\t\tcb[j] = k - j + 1\n\t\t\nl = cb[1:]\nl.sort()\n\nt = l[cb[0]:] + l[:cb[0]]\n\nfor i in range(len(t)):\n\tprint(i+1)\n", "n = int(input())\n\ns = input()\n\nb = list(map(int, input().split()))\n\nres = 0\n\nfor i in range(n//2):\n\ttemp = b[i]\n\tres += temp - b[n-i-1] + 1\n\nprint(res)\n\n", "n = int(input())\ns = input()\nb = list(map(int, input().split()))\ns = sorted(s)\nt = [0] * n\nb = list(map(int, input().split()))\nfor i in range(n//2):\n\tt[b[i]-1] += s[i]\nprint(max(t))\n", "n = int(input())\ns = input().strip()\nb = list(map(int, input().split()))\n\ndef beauty(n):\n\tif n % 2 == 0:\n\t\treturn sum(b[:n])\n\telse:\n\t\treturn sum(b[n - 1:]) + sum(b[:n - 1])\n\nans = 0\nfor i in range(len(s)):\n\tans += beauty(i)\n\nprint(ans)\n", "n = int(input())\ns = input()\nb = list(map(int, input().split()))\nans = 0\nfor i in range(n//2):\n\tif len(list(set(b))) == 1:\n\t\tans += b[i]\n\telse:\n\t\tans += b[i]*(b[i]-i)\nprint(ans)\n"], "34": ["n,m=list(map(int,input().split()))\nx=[]\nfor i in range(n):\n\tx.append(i*w)\nx.sort()\nif sum(x)%n==0:\n\tif n<2:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\nelse:\n\tprint('YES')\n", "w,m=list(map(int, input().split()))\n\nif w!=m:\n\tprint('NO')\nelse:\n\tm-=w\n\tif m*w<m:\n\t\tprint('NO')\n\telif w*m>m:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n", "w,m = list(map(int, input().split()))\n\nw1 = w/w1\n\nm1 = m/m1\n\nif w1+m1 < 2*m:\n\tprint('NO')\nelse:\n\tprint('YES')\n", "w, m = map(int, input().split())\n\nif w > m:\n\tprint('NO')\nelse:\n\tif (w * m - (m - w) % w) % 2 == 0:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n", "a, b = list(map(int, input().split()))\n\nif a > b:\n\ta, b = b, a\n\n\ndef gcd(a, b):\n\twhile b:\n\t\tt = a % b\n\t\ta, b = b, t\n\treturn a\n\n\nprint(('YES' if gcd(a, b) == 1 else 'NO'))\n\n", "w, m = map(int, input().split())\n\nif w * m == sum(w // 2 * 10 ** e for e in range(m)):\n\tprint('YES')\nelse:\n\tprint('NO')\n"], "35": ["from math import sqrt\n\ndef area(x, y, m):\n\ta = sqrt((x - y) ** 2 + (m - x ** 2) ** 2)\n\treturn a * 2 * y\n\nn = int(input())\nx = []\ny = []\nfor _ in range(n):\n\tx.append(list(map(int, input().split())))\n\ty.append(list(map(int, input().split())))\nx = sorted(x)\ny = sorted(y)\nm = 0\nfor i in range(n - 1):\n\tif x[i] == x[i + 1]:\n\t\tm += 1\nif m!= len(x) - 1:\n\tprint(-1)\nelse:\n\tprint(area(x[-1], y[-1], m))\n", "n = int(input())\npts = [[] for i in range(n)]\nfor i in range(n):\n\ta,b = list(map(int,input().split()))\n\ta -= 1\n\tb -= 1\n\tpts[a].append(b)\n\tpts[b].append(a)\n\nseen = [False for i in range(n)]\narea = -1\nfor i in range(n):\n\tif not seen[i] and all(x < 0 for x in pts[i]):\n\t\tarea = i * i\n\t\tbreak\n\tseen[i] = True\n\nif area < 0:\n\tprint(-1)\nelse:\n\tprint(area)\n\n\n", "def main():\n\tn = int(input())\n\tl = []\n\tfor _ in range(n):\n\t\tx, y = list(map(int, input().split()))\n\t\tl.append((x, y))\n\tl.sort()\n\ti = j = 0\n\tpi = 3.1415926535897\n\twhile i < len(l) - 1:\n\t\tif l[i][0] == l[i + 1][0]:\n\t\t\tj = i\n\t\ti += 1\n\tpi *= pi / 180.0\n\tan = pi - l[j][1]\n\tif pi > an:\n\t\tprint(-1)\n\telse:\n\t\tprint(an)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n=int(input())\nq,s=[],[]\nfor i in range(n):\n\tx,y=list(map(int,input().split()))\n\tq.append(x)\n\ts.append(y)\nps=set([i for i in range(n)])\nfor i in q:\n\tfor j in range(i+1,n):\n\t\tx1,y1=ps[j]\n\t\tx2,y2=ps[i]\n\t\tif x1*x1==x2*x2 or y1*y1==y2*y2:\n\t\t\tarea=x2*x2+(y2*y2-y1*y1)*i\n\t\t\tif area==j:\n\t\t\t\ts[i],q[j]=area,j\n\t\t\telse:\n\t\t\t\ts[j],q[i]=area,i\nif len(s)==n:\n\ttot=0\n\tfor i in range(len(s)):\n\t\ttot+=q[s[i]-1]*s[i]\n\tprint(tot)\nelse:\n\tprint(-1)\n", "def main():\n\tn = int(input())\n\tcoordinates = []\n\tfor _ in range(n):\n\t\tx, y = list(map(int, input().split()))\n\t\tcoordinates.append((x, y))\n\tcoordinates.sort()\n\tx_value, y_value = coordinates[0][0], coordinates[-1][0]\n\texpected_value = x_value * y_value\n\tfor point in coordinates:\n\t\tif point[0]!= x_value:\n\t\t\texpected_value = -1\n\t\t\tbreak\n\tif expected_value == -1:\n\t\tprint(-1)\n\telse:\n\t\tprint(expected_value / (x_value - expected_value))\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def main():\n\tn = int(input())\n\tcoordinates = []\n\tfor _ in range(n):\n\t\tx, y = list(map(int, input().split()))\n\t\tcoordinates.append((x, y))\n\tcoordinates.sort()\n\tx_2 = -1\n\ty_2 = -1\n\tfor (x, y) in coordinates:\n\t\tif x == x_2:\n\t\t\tx_2 = x\n\t\tif y == y_2:\n\t\t\ty_2 = y\n\tif len(set(coordinates)) == 1:\n\t\tprint(-1)\n\telse:\n\t\tx = coordinates.pop()\n\t\ty = coordinates.pop()\n\t\tif x!= x_2:\n\t\t\ty2 = y\n\t\tif y!= y_2:\n\t\t\tx_2 = x\n\t\tarea = (y * x) ** 2\n\t\tif area > 0:\n\t\t\tprint(abs(x_2 - x) * abs(y_2 - y))\n\t\telse:\n\t\t\tprint(-1)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "36": ["import sys\n\ndef main():\n\tn = int(sys.stdin.readline())\n\ta = int(sys.stdin.readline())\n\tb = int(sys.stdin.readline())\n\td = 0\n\tfor i in range(2 * n + 2):\n\t\td += min(i, a + b)\n\tprint(d)\n\n\ndef __starting_point():\n\tmain()\n\n\n\n__starting_point()\n", "t = input()\nn = int(input())\na = int(input())\nb = int(input())\n\nresult = 0\ni = 0\nwhile i < n:\n\tif (a * b) > i:\n\t\tresult += a * b\n\t\ti += 1\n\telse:\n\t\tresult += b\n\t\ti += 1\n\nprint(result)\n", "n=int(input())\nl=list(map(int,input().split()))\nb=int(input())\nif(n%2==0):\n\tprint((n+1)*n//2-1)\nelse:\n\tprint((n+1)*n//2+1)\n", "import sys\n\nn = int(sys.stdin.readline())\na = int(sys.stdin.readline())\nb = int(sys.stdin.readline())\nC = 0\nh = 0\nt = 0\nR = 0\n\nfor i in range(n+1):\n\tC += i*b\n\th += i\n\tt += h\n\tR += h*4\n\nprint(C+R-t)\n", "import sys\n\nn = int(sys.stdin.readline())\na = int(sys.stdin.readline())\nb = int(sys.stdin.readline())\nc = 0\nl = 0\nr = 0\n\nans = 0\nwhile c <= n:\n\tc += 2*b\n\tl += b\n\tr += a\n\tans += l+r\n\nprint(ans)\n", "import sys\n\nn = int(sys.stdin.readline())\na = int(sys.stdin.readline())\nb = int(sys.stdin.readline())\n\nw = 0\n\nh = 0\n\nans = 0\n\nif n >= 2:\n\tans += (n+1)*n//2\n\t\nelse:\n\tw = 2*n\n\th = n\n\tans = w + h + 2*(n+1)\n\t\nprint(ans)\n"], "37": ["n = int(input())\na = list(map(int, input().split()))\ns = input()\nb = [0] * (n + 1)\nc = a[:]\nfor i in range(n):\n\tif s[i] == '1':\n\t\tb[i + 1] = 1\n\telse:\n\t\tb[i + 1] = 0\ni = 0\np = []\nwhile i < n:\n\tif b[i] == b[i - 1]:\n\t\ti += 1\n\t\tp.append(i)\n\ti += 1\nif n < 2:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n=int(input())\na=list(map(int,input().split()))\ns=input()\nb=list(map(str,input().split()))\nb1=[]\nfor i in b:\n\tif i=='1':\n\t\tb1.append(i)\n\nb.sort()\nflag=0\nfor i in range(len(a)):\n\tif a[i]!=b[i] and (a[i]!=b[i+1] or a[i]==b[i+1]):\n\t\tflag=1\n\t\tprint(\"NO\")\n\t\tbreak\n\t\nif flag==0:\n\tprint(\"YES\")\n", "n = int(input())\na = list(map(int, input().split()))\ns = input()\nc = {}\nfor i in a:\n\tc[i] = 0\nfor i in range(n):\n\tj = i + 1\n\tif s[i] == '1':\n\t\tc[i] += 1\nfor k in c:\n\tc[k] -= 1\n\tif c[k] < 0:\n\t\tc[k] = -1\n\nm = True\nfor i in c:\n\tif not m and c[i]!= i:\n\t\tm = False\n\t\tbreak\nif m:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "def read_int():\n\treturn int(input())\n\n\ndef read_str():\n\treturn input().strip()\n\n\ndef __starting_point():\n\tn = read_int()\n\tnums = read_int()\n\ts = read_str()\n\tif nums == sorted(set(nums)):\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n\n__starting_point()\n", "n = int(input())\na = list(map(int, input()))\ns = input()\nb = sorted([(i, a.count(i)) for i in set(a)])\nif b[0] < b[1]:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n = int(input())\na = list(map(int, input().split()))\ns = input()\nfor x in a:\n\ts1 = s.replace(x, '1', 1)\n\tif s1 == s:\n\t\tix = 1\n\t\ts = sorted(a)\n\t\tfor i in range(len(a)):\n\t\t\tif s[i] == '1':\n\t\t\t\ts[i] = ix\n\t\t\t\ts[i-1] = ix\n\t\t\t\ts[i] = iix\n\t\tix = (i + 1) % len(a)\n\t\tif s[ix] == s[i]:\n\t\t\ts[i], s[ix] = s[ix], s[i]\n\tif s == sorted(a):\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n"], "38": ["import fractions\nimport sys\n\nf = sys.stdin\n\nif len(sys.argv) > 1:\n\tf = open(sys.argv[1], \"rt\")\n\n\ndef calc(a):\n\tres = 1\n\tfor i in range(2, a + 1):\n\t\tres *= i\n\treturn res // k\n\n\ndef main():\n\tn, k = list(map(int, f.readline().split()))\n\taa = [int(x) for x in f.readline().split()]\n\taa.sort()\n\tprint(calc(aa))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\nans = 1\nj = n\nfor i in range(n):\n\tif a[i] == 0:\n\t\tans *= j\n\t\tj -= 1\n\telse:\n\t\tans //= (a[i] // j)\n\t\tj = a[i] // j\n\nprint(ans)\n", "import itertools\nimport collections\n\ndef main():\n\tn, k = list(map(int, input().split()))\n\taa = list(map(int, input().split()))\n\taa.sort()\n\tc = collections.Counter(aa)\n\td = collections.Counter()\n\n\tx = sum(aa)\n\tif x % k == 0:\n\t\td[x // k] += 1\n\n\tfor i in range(n):\n\t\td[aa[i] % k] += 1\n\t\tif i > 0:\n\t\t\td[aa[i] // k] += d[aa[i] % k]\n\n\tans = 1\n\tfor i in range(k):\n\t\tif i + 1 in d:\n\t\t\tans += d[i] * d[i + 1]\n\n\tprint(ans)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "from collections import defaultdict\nimport fractions\n\nn, k = [int(s) for s in input().split()]\na = [int(s) for s in input().split()]\nr = defaultdict(list)\nfor i in range(n):\n\tr[a[i]].append(i)\n\ns = sum(r.values())\nx = s // k\nprint(x)\n", "n, k = list(map(int, input().split()))\n\narr = list(map(int, input().split()))\n\nsums = sum(arr)\n\ncount = 0\n\nif sums % k == 0:\n\tfor i in range(n):\n\t\tif i + sums // k <= n:\n\t\t\tcount += 1\n\n\telse:\n\t\tfor i in range(n):\n\t\t\tif i + sums - k // k <= n:\n\t\t\t\tcount += 1\n\n\tprint(count)\nelse:\n\tfor i in range(n):\n\t\tif i + sums - k // k > n:\n\t\t\tbreak\n\t\t\n\tx = i - sums // k\n\ty = i + 1\n\tif x > 0:\n\t\tcount += 1\n\t\n\telse:\n\t\tfor i in range(x):\n\t\t\tif i + sums - k // k <= n:\n\t\t\t\tcount += 1\n\t\n\tprint(count)\n\n", "def get_pow():\n\tcache = {}\n\n\tdef func(x, y):\n\t\tif x == 0:\n\t\t\treturn 1\n\t\t\n\t\tif y in cache:\n\t\t\treturn cache[y]\n\n\t\tpow = 2\n\t\twhile pow <= (x // pow):\n\t\t\tif (y + x) % pow == 0:\n\t\t\t\tcache[y + x] = func(y + x // pow, pow)\n\t\t\t\treturn cache[y + x]\n\t\t\tpow *= 2\n\n\t\tcache[y + x] = func(y + x, pow)\n\t\treturn cache[y + x]\n\n\treturn func(0, 1)\n\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ns = set()\nfor x in a:\n\ts.add(x)\n\n\npow = get_pow()\n\nans = 1\nfor i in s:\n\tans *= get_pow()\n\nprint(ans // k)\n"], "39": ["import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve():\n\tn,k=mints()\n\ts=list(map(chr,range(97,123)))\n\tfor i in range(1,k+1):\n\t\ts1=['b','a','b']\n\t\tfor j in s:\n\t\t\ts1.remove(j)\n\t\tif('a' in s1 and 'b' in s1):\n\t\t\tprint('NO')\n\t\t\treturn\n\tprint('YES')\n\nsolve()\n\n", "from collections import Counter\nn,k=map(int,input().split())\ns=input()\nr=Counter(s)\nif r==Counter(s):\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n,k = map(int,input().split())\ns = input().strip()\n\nif len(s)==0:\n\tprint(\"NO\")\nelse:\n\tcount_01 = []\n\tcount_02 = []\n\tfor i in range(len(s)):\n\t\tif s[i]!= \"A\":\n\t\t\tcount_01.append(s[i])\n\t\telse:\n\t\t\tcount_02.append(s[i])\n\t\n\tif len(count_01)==0 and len(count_02)==0:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n", "import sys\nimport string\n\ndef main():\n\tn,k = map(int, sys.stdin.readline().split())\n\tcolor = tuple(list(map(lambda x: ord(x)-96, sys.stdin.readline().split())))\n\ts = tuple(list(sys.stdin.readline().split()))\n\talready_set = {1}\n\tfor i in range(2,n+2):\n\t\tif color not in already_set:\n\t\t\talready_set.add(color)\n\t\t\tif len(s) == 0:\n\t\t\t\tprint('YES')\n\t\t\telse:\n\t\t\t\tprint('NO')\n\t\telse:\n\t\t\tif s[i-1]!= color:\n\t\t\t\tprint('NO')\n\t\t\t\tbreak\n\telse:\n\t\tprint('YES')\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def main():\n\tn, k = map(int, input().split())\n\tinput()\n\tc = Counter(input())\n\tfor i in c:\n\t\tif c[i] > 1:\n\t\t\tprint('NO')\n\t\t\treturn\n\tprint('YES')\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n, k = list(map(int, input().split()))\ns = input()\nif n == k:\n\tprint(\"YES\")\nelse:\n\tcnt = 0\n\tfor i in range(26):\n\t\tif s[i] == 'b':\n\t\t\tcnt += 1\n\tif cnt > 1:\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n"], "40": ["import itertools\nimport heapq\n\nn = int(input())\na = list(map(int, input().split()))\n\nsorted_a = sorted(a)\n\ndistance = 0\nfor i in range(n):\n\tif sorted_a[i] == sorted_a[-1]:\n\t\tcontinue\n\telse:\n\t\tdistance += 1\n\t\theapq.heappush(sorted_a, sorted_a[-1] + 1)\n\nprint(distance)\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn map(int,minp().split())\n\nn = mint()\na = list(mints())\nb = list(enumerate(a))\nb.sort(key=lambda x:x[1])\nc = list(zip(b,b[1:]))\nc.sort()\nprint(c[-1][1] - c[0][1])\n", "input()\narray = sorted(list(map(int, input().split())))\n\nprint(min([array[i + 1] - array[i] for i in range(len(array) - 1)]))\n", "def bsearch(arr, val, key=lambda x:x):\n\tif key(arr) == val:\n\t\treturn key(arr)\n\tl, r = 0, len(arr)-1\n\twhile l < r:\n\t\tm = (l+r)>>1\n\t\tif arr[m] < val:\n\t\t\tl = m+1\n\t\telse:\n\t\t\tr = m\n\tif key(arr) == val:\n\t\treturn key(arr)\n\treturn -1\n\nn = int(input())\na = [int(i) for i in input().split()]\nx = bsearch(a, a[0], 0)\nprint(x-x.index(val))\n", "n = int(input())\na = list(map(int, input().split()))\na = sorted(a)\nans = float('inf')\nfor i in range(n-1):\n\tif a[i+1] - a[i] < ans:\n\t\tans = a[i+1] - a[i]\nprint(ans)\n", "n = int(input())\nnums = list(map(int, input().split()))\n\na_min = nums[0]\na_max = nums[0]\n\nd = 0\nfor i in range(1, n):\n\tif nums[i] == a_min:\n\t\td += 1\n\telif nums[i] == a_max:\n\t\td -= 1\n\nprint(n - d)\n"], "41": ["(n, k) = list(map(int, input().split(' ')))\n\nm = 10 ** k\n\nnow = n // m\n\nans = []\nfor i in range(now + 1):\n\tj = (n // m) - i\n\tif j!= 0:\n\t\tt = 1\n\t\twhile j % 10 == t:\n\t\t\tj //= 10\n\t\t\tt *= 10\n\t\tans.append(str(i))\n\nprint(''.join(ans))\n", "a, b = map(int, input().split())\nc = []\nfor i in range(a, b + 1):\n\tc.append(i)\nc = ''.join(sorted(c))\nd = 0\nfor i in range(len(c)):\n\tif i + 1 < len(c):\n\t\td += len(c[i])\nprint(d)\n", "#!/usr/bin/env python\n# coding:UTF-8\n# Copyright (C) dirlt\n\nimport sys\n\ndef main():\n\tn,k = map(int,input().split())\n\tres = \"\"\n\ti = 1\n\twhile i<=n:\n\t\tj = i\n\t\twhile j<=n:\n\t\t\tres+=str(j)\n\t\t\tj+=i\n\t\ti+=1\n\t\tif (k%10)%10:\n\t\t\tif res[0]=='0':\n\t\t\t\tres+='9'\n\t\t\telse:\n\t\t\t\tres+='0'\n\t\telse:\n\t\t\tif res[0]=='0':\n\t\t\t\tres+='9'\n\t\t\telse:\n\t\t\t\tres+='0'\n\t\tk=k//10\n\t\tif (k%10)%10:\n\t\t\tif res[0]=='0':\n\t\t\t\tres+='9'\n\t\t\telse:\n\t\t\t\tres+='0'\n\t\telse:\n\t\t\tif res[0]=='0':\n\t\t\t\tres+='9'\n\t\t\telse:\n\t\t\t\tres+='0'\n\tprint(res)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "from sys import *\n\nn, k = map(int, stdin.readline().split())\na = [1] * 10\n\nfor i in range(1, 10):\n\tfor j in range(10):\n\t\tif i * 10 + j > a[j]:\n\t\t\ta[j] = i * 10 + j\n\nm = a[0]\nfor i in range(1, 10):\n\tc = 0\n\tfor j in range(len(str(m))):\n\t\tif a[j]!= m:\n\t\t\tbreak\n\t\tc += 1\n\tm = c\n\nprint(a[m])\n", "from math import log10\nn, k = map(int, input().split())\narr = [None]*(10)\nfor i in range(1, 10):\n\tarr[i] = str(i)\n\tif int(arr[-1]) < 10:\n\t\tarr.pop()\nres = 0\nfor i in range(len(arr)):\n\tif int(arr[i])!= 0:\n\t\tif res == 0:\n\t\t\tbreak\n\t\tres += int(arr[i])\n\telse:\n\t\tres += 0\nprint(res)\n", "[n,k] = list(map(int,input().split(\" \")))\n\nl = []\nfor i in range(10):\n\tl.append(int(i))\n\t\nl2 = []\nc = 0\nans = []\nfor i in l:\n\tc = (c<<(k-1))%10\n\tif (c==0):\n\t\tans.append(i)\n\t\tl2.append(0)\n\telse:\n\t\tl2.append(i)\n\t\tc = (c<<k)%10\n\nfor i in l2[::-1]:\n\tprint(i,end='')\n\t\n"], "42": ["\nimport math\n\nn = int(input())\nprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nend = 101\nresult = []\nfor i in range(2,end):\n\tfor p in primes:\n\t\tif i>=p:\n\t\t\tbreak\n\t\tif math.floor(math.sqrt(i))==math.ceil(math.sqrt(i)):\n\t\t\tif i>=p*p:\n\t\t\t\tend = i\n\t\t\tbreak\nif end>3:\n\tprint(end-start+1)\n\tfor i in range(start,end-2,2):\n\t\tprint(i,end='')\nelse:\n\tprint(start+2)\n\tfor i in range(start,25,2):\n\t\tprint(i,end = '')\n\tfor i in range(end):\n\t\tprint(end-start+1,end='')\n\n\n\n\n", "import sys\nn = int(sys.stdin.readline())\nif n == 1:\n\tprint(1)\n\tprint(1)\n\treturn\n\nprime = [False] * (n + 1)\nprimes = []\npows = []\nfor i in range(2, n + 1):\n\tif prime[i]:\n\t\tprimes += i\n\t\tpows.append(i)\n\telse:\n\t\tpows += [i]\n\nprimes_add = [0] * n\nfor i in range(1, n):\n\tif primes[i]:\n\t\tprimes_add[i] += 1\n\nl = len(primes)\nm = l + 2\nans = []\nfor p in range(2, m):\n\tif not prime[p]:\n\t\tcontinue\n\tsum_of_div = 0\n\tadd = 0\n\tfor div in range(2 * p, n + 1, p):\n\t\tsum_of_div += div\n\t\tsum_of_div_mod = sum_of_div % p\n\t\tif sum_of_div_mod not in primes:\n\t\t\tcontinue\n\t\tadd += 1\n\t\tprime[p] = True\n\tif add <= l:\n\t\tans += [p]\nprint(len(ans))\nprint(' '.join(map(str, ans)))\n", "\nimport math\nimport array\ndef isPrime(n):\n\tfor i in range(2,int(math.sqrt(n))+1):\n\t\tif(n%i==0):\n\t\t\treturn False\n\telse:\n\t\treturn True\n\ndef getPrimes(n):\n\ti=1\n\tli=[]\n\twhile i*i<=n:\n\t\tif isPrime(i):\n\t\t\tli.append(i)\n\t\ti+=1\n\treturn li\n\nn=int(input())\nprimes=getPrimes(n)\nprimes=list(set(primes))\nprimes.sort()\n\nprint(len(primes))\nfor i in primes:\n\tprint(i,end=' ')\n\t\n", "n = int(input())\n\np = [True]*(n+1)\n\nfor i in range(2,n+1):\n\tif p[i]:\n\t\tj = 2\n\t\twhile i*j < n:\n\t\t\tp[i*j] = False\n\t\t\tj += 1\n\nm = n-2\nsum_ = 0\nfor i in range(2,m+1):\n\tif p[i]:\n\t\tsum_ += i\n\nif (m+1)//2>n:\n\tprint(m)\n\tfor i in range(1,m+1):\n\t\tprint(sum_+i,end=' ')\nelse:\n\tprint(n)\nfor i in range(1,n+1):\n\tif p[i]:\n\t\tprint(i,end=' ')\n", "import math\n\ndef isPrime(n):\n\tfor i in range(2,int(math.sqrt(n))+1):\n\t\tif n%i==0:\n\t\t\treturn False\n\treturn True\n\t\nn = int(input())\nif n<4:\n\tprint(\"1\")\n\tprint(\"3\")\nelse:\n\tans = []\n\tfor i in range(3,n+1):\n\t\tif isPrime(i):\n\t\t\tans.append(i)\n\t\t\tif len(ans)>3:\n\t\t\t\tbreak\n\tprint(len(ans))\n\tprint(\" \".join(map(str,ans)))\n", "n = int(input())\nif n%2:\n\tprint(3)\n\tfor i in range(3, n+1, 2):\n\t\tif not n%i:\n\t\t\tprint(i, end ='')\n\t\telse:\n\t\t\tprint(i + 2)\nelse:\n\td = 0\n\tfor i in range(2, int(n**0.5+1)):\n\t\tif n%i:\n\t\t\td += 2\n\tif d > 2:\n\t\tprint(d)\n\tfor i in range(2, n-d+1, 2):\n\t\tprint(i, end ='')\n"], "43": ["R = lambda: map(int, input().split())\n\ndef main():\n\tn, m = R()\n\tl, d = [-1] * m, [-1] * m\n\tfor _ in range(n):\n\t\tl[1] = list(R())\n\tfor i in range(m):\n\t\tfor j in range(n):\n\t\t\tif l[i][j] and l[i - 1][j]!= '*':\n\t\t\t\td[j] = -1\n\t\t\t\tbreak\n\tt = [-1] * m\n\tfor i in range(m):\n\t\tt[i] = tuple(R())\n\tif max(t) < 0:\n\t\tprint('NO')\n\t\treturn\n\tr = list(range(n))\n\tfor i in l:\n\t\tif i[0]!= -1:\n\t\t\tr[i[0] - 1] = i[1]\n\tfor i in d:\n\t\tif i[1]!= -1:\n\t\t\tr[i[1] - 1] = i[0]\n\tprint('YES')\n\tprint(''.join(r))\n\nmain()\n", "def main():\n\tdef f():\n\t\tR, C = list(map(int, input().split()))\n\t\tN, M = R * C, C * 2\n\t\tcell = [input() for i in range(N)]\n\t\tdef buster(i, j, K):\n\t\t\tif i < 0 or j < 0 or i > N-1 or j > M-1 or cell[i][j] == '*':\n\t\t\t\treturn K\n\t\t\tL = buster(i-1, j, K)\n\t\t\tR = buster(i, j+1, K)\n\t\t\tC = buster(i, j-1, K)\n\t\t\t cell[i][j] = '*'\n\t\t\tfor d in range(min(N, K), 0, -1):\n\t\t\t\tif cell[i][j-d]!= '*':\n\t\t\t\t\treturn 'NE'[f'total' + (N - d) // 2 +'' + f'total*2]\n\t\t\treturn 'NE'[f'total' + (N - d) // 2 +'' + f'total*2]\n\t\t\n\t\tfor i in range(R):\n\t\t\tfor j in range(C):\n\t\t\t\tif cell[i][j] == '*':\n\t\t\t\t\tbuster(i, j, 1)\n\t\t\t\t\tbreak\n\t\treturn 'YES' if buster(0, 0, 1)[0] else 'NO'\n\n\tR, C = list(map(int, input().split()))\n\tN, M = R * C, C * 2\n\tb = []\n\tfor", "import sys\nfrom collections import defaultdict as dd\nfrom collections import deque\ndef eprint(*args):\n\tprint(*args, file=sys.stderr)\nzz=1\n#from math import *\nimport copy\n#sys.setrecursionlimit(10**6)\nif zz:\n\tinput=sys.stdin.readline\nelse:\t\n\tsys.stdin=open('input.txt', 'r')\n\tsys.stdout=open('all.txt','w')\ndef li():\n\treturn [int(x) for x in input().split()]\ndef fi():\n\treturn int(input())\ndef si():\n\treturn list(input().rstrip())\t\ndef mi():\n\treturn \tmap(int,input().split())\t\n\t\n\nimport copy\nt=fi()\n\ndef modify(arr,i,j,r,dct):\n\t#print i \n\tif i==n:\n\t\tdct[i]=1\n\t\tarr[i][j]=1\n\t\treturn \n\t#insert nr of edge into dct\n\tif arr[i][j]==1:\n\t\tarr[i][j]=-1\n\t\t#update i,j accordingly\n\telse:\n\t\t#we will try to apply damper function\n\t\tif  dct[i][j]==-1:\n\t\t\tarr[i][j]=-1\n\t\t\tif i+1<n:\n\t\t\t\tarr[i+1][j]=-1\n\t\t\tif j+1<m:\n\t\t\t\tarr[i][j+1]=-1\n\t\t\t\n\t#we will try damper function\n\t#if it works", "R = lambda: map(int, input().split())\nn, m = R()\n\nw = [tuple(R()) for _ in range(n)]\nt = [(i, j) for i, j in enumerate(w) if i]\n\ndef f(x, y):\n\tif x == 0 or y == m - 1:\n\t\treturn True\n\telif x == m - 1 or y == 0:\n\t\treturn False\n\telif i < n - 1 and j < m - 1:\n\t\treturn True\n\telse:\n\t\treturn False\n\nl = sorted((q, 1) for q, i in t if f(i, q))\nprint('YES\\n' +''.join(l))\n", "def main():\n\tn, m = list(map(int, input().split()))\n\tmatrix = [[0] * m for _ in range(n)]\n\tr = range(n)\n\tc = range(m)\n\tfor _ in range(n):\n\t\ts = input()\n\t\tfor i in s:\n\t\t\tif i == '*':\n\t\t\t\tmatrix[r][c] = 1\n\t\t\t\tr -= 1\n\t\t\t\tc -= 1\n\t\t\telse:\n\t\t\t\tmatrix[r][c] = 0\n\t\t\t\tr -= 1\n\tfor i in range(m):\n\t\tif not matrix[i]:\n\t\t\tprint('NO')\n\t\t\treturn\n\telse:\n\t\tfor j in range(n):\n\t\t\tif matrix[i][j] == 0:\n\t\t\t\tr1, c1 = i, j\n\t\t\t\tbreak\n\n\tdef check(r, c):\n\t\tmatrix[r][c] = 0\n\t\tfor i in range(r):\n\t\t\tfor j in range(c):\n\t\t\t\tif matrix[i][j] == '*':\n\t\t\t\t\tmatrix[i][j] = 0\n\t\t\t\t\tr1 -= 1\n\t\t\t\t\tc1 -= 1\n\t\treturn \n\n\tr = 0\n\tc = 0\n\tboolean = True\n\tfor i in range(n):\n\t\tif matrix[i][0] == 1:\n\t\t\tboolean = not boolean\n\t\t\tif check(r, c):\n\t\t\t\tb = i\n\t\t\t\tfor j in range(n):", "# Description of the problem can be found at http://codeforces.com/problemset/problem/450/B\n\ndef main():\n\tn, m = list(map(int, input().split()))\n\ta bomb = 50\n\twalls = [['*', '.']] * m\n\tfor _ in range(n):\n\t\tline = input().rstrip('*')\n\t\twalls[len(line) - 1 - walls[-1][0]] = ['.', line[:-1]] * w\n\tfor i in range(m):\n\t\tfor j in range(n):\n\t\t\tif i * w + j in walls[j]:\n\t\t\t\twalls[j][i * w + j] = '*'\n\t\n\tbombs = (50 * len(walls)) + 1\n\tif bombs > 1:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n\t\tprint(1, 2)\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "44": ["import sys\n\ndef solve():\n\tinput()\n\taa = [int(a) for a in input().split()]\n\ttt = tuple(aa)\n\tm = max(aa)\n\tif tt[1]%2: return -m\n\treturn sum([-m if a<m else m+2**(t[0]-1) for a in aa])\n\ndef __starting_point():\n\tprint(solve())\n__starting_point()\n", "from collections import defaultdict as dd\n\nn = int(input())\na = list(map(int, input().split()))\n\ndd = dd(int)\nfor i in range(n):\n\tdd[a[i]] += 1\n\nstart = 0\nend = n\nans = 0\n\nfor i in range(end):\n\twhile (start < end) and (dd[start] % 2):\n\t\tstart += 1\n\tans += a[start]\n\nwhile (end > start):\n\tend -= 1\n\twhile (dd[end] % 2):\n\t\tend -= 1\n\tans += a[end]\n\nprint(ans)\n", "n = int(input())\na = list(map(int, input().split()))\nprefix = [0] * n\nsuffix = [0] * n\nfor i in range(n):\n\tprefix[i + 1] = a[i] + prefix[i]\nfor i in range(n - 1, -1, -1):\n\tsuffix[i] = a[i] + suffix[i + 1]\n\nans = 0\nfor i in range(n):\n\tfor j in range(i + 1, n):\n\t\tif (prefix[j] - prefix[i] > suffix[i]):\n\t\t\tans = max(ans, a[i] + suffix[i])\nprint(ans)\n", "n = int(input())\nL = [int(i) for i in input().split()]\n\nlast = n\ns = 0\ncnt = 0\nfor i in L:\n\ts += i\n\tif s % 2:\n\t\tcnt += 1\n\tif cnt > last:\n\t\tlast = cnt\n\t\ts = i\n\nprint(s)\n", "import sys\n\ndef solve():\n\tinput()\n\taa = [int(x) for x in input().split()]\n\ttb = [[a, i] for i, a in enumerate(aa)]\n\ttb.sort()\n\tn = len(tb)\n\tres = sum(aa[n % 2:])\n\tif n % 2:\n\t\tres -= tb[n // 2][1]\n\tprint(res)\n\n\nsolve()\n", "n = int(input())\nl = list(map(int, input().split()))\n\ns = sum(l)\nres = [0] * (n + 1)\nres[0] = s\nfor i in range(n):\n\tfor j in range(i + 1, n + 1):\n\t\tif l[i] + l[j] == s:\n\t\t\tres[j] = res[i] + l[j]\n\t\nprint(res[n])\n"], "45": ["import math\n\ndef main():\n\tm = int(input())\n\tnum = list(map(int, input().split()))\n\tnum2 = num[0]\n\tfor n in num[1:]:\n\t\tx = n\n\t\twhile x%2 == 0:\n\t\t\tx //= 2\n\t\telse:\n\t\t\tbreak\n\t\tp = math.gcd(x, 2*n)\n\t\tq = (p*n) // m\n\t\tif q > 1:\n\t\t\tprint(q*2)\n\t\telse:\n\t\t\tprint(q)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\ninput=sys.stdin.readline\nprint=lambda s:print(s,end=\"\")\nfrom collections import defaultdict as dd,deque as dq\n#import heapq \n#from math import gcd\n\nm=int(input())\n#n=int(input())\na=int(input())\n\nI=dd(int)\nP=10**9+7\nQ=m*(m+1)\n\nfor i in range(1,30):\n\tI[a]+=1\n\tQ+=i*(i+1)//2\n\nANS=P*Q\n\nfor i in range(1,I[m]//2+1):\n\tANS-=P*i**(I[m]-1)//2\n\nprint(ANS)\n", "m = int(input())\n\nans = []\n\nfor i in range(1, m+1):\n\tans.append(i*(2**(i-1)))\n\nprint(ans[-1])\n", "m = int(input())\na = list(map(int, input().split()))\nans = 1\ni = 2\nwhile i*i <= m:\n\tif a[i]==1:\n\t\tans += 1\n\t\tcontinue\n\telse:\n\t\tans += (m-a[i])*i\n\t\ta[i] = 1\n\ti += 1\nif m%2==0:\n\tans -= 1\nprint(ans)\n", "\ndef main():\n\tm = int(input())\n\tn = int(input())\n\ta = list(range(1, m + 1))\n\tprimes = []\n\tnum = 0\n\tfor p in a:\n\t\tif p > 2:\n\t\t\tprimes.append(p)\n\t\t\twhile True:\n\t\t\t\tnum += 2**p\n\t\t\t\tif num == p:\n\t\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tbreak\n\tprint((m * (m - 1) // 2) * num // (p * pow(2, p - 1, m) + pow(2, m - 1, m))\n\t\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import math\nn = int(input())\np = []\nq = []\nm = int(input())\n\nfor i in range(1,m+1):\n\tp.append(i*i)\nfor i in range(1,m+1):\n\tq.append(i*i)\n\t\nlcm = math.gcd(p[-1],q[-1])\n\nans = 0\nfor i in range(n):\n\tans += lcm*q[i]\n\t\nprint(ans)\n"], "46": ["def gcd(a,b):\n\tif b==0:\n\t\treturn a\n\telse:\n\t\treturn gcd(b,a%b)\n\ndef lcm(a,b):\n\treturn (a*b)//gcd(a,b)\n\nimport math\n\nl, r, x, y = list(map(int,input().split()))\n\nans=0\nfor i in range(l,r+1):\n\t\n\ttemp=x\n\t\n\tif i==y:\n\t\tans+=1\n\t\t\n\telse:\n\t\t\n\t\tk=math.gcd(i,y)\n\n\t\tif k==1:\n\t\t\ttemp=i\n\t\telif k==i:\n\t\t\ttemp=y\n\t\telse:\n\t\t\t\n\t\t\tk=math.gcd(i,k)\n\t\t\tif k==1:\n\t\t\t\ttemp=i\n\t\t\telif k==k:\n\t\t\t\ttemp=y\n\t\n\tans+=temp-x\nprint(int(ans))\n", "l,r,x,y = list(map(int,input().split()))\n\nif x==y:\n\tprint(l*r)\nelse:\n\tgcd = [i for i in range(l,r+1)]\n\tlcm = [int(y*(y+1)/2 - x*(x+1)/2) for x in gcd]\n\tgood_pairs = l*r - (lcm[0]*r)\n\tprint(good_pairs//2)\n", "l, r, x, y = list(map(int, input().split()))\nif l == r:\n\tprint(0)\nelse:\n\tans = 0\n\tfor i in range(min(l, r), 0, -1):\n\t\tfor j in range(i - 1, max(l, r) - 1, -1):\n\t\t\tif i * j == x * y:\n\t\t\t\tans += 1\nprint(ans)\n", "l,r,x,y=list(map(int,input().split()))\nans=0\nfor i in range(l,r+1):\n\tfor j in range(i,r+1):\n\t\tif gcd(i,j)==x and LCM(i,j)==y:\n\t\t\tans+=1\nprint(ans)\n", "# Python3 program to find number of pairs of integers such that\n# gcd(a,b) == x and LCM(a,b) == y\n# Function to find gcd of two numbers\ndef find_gcd(x, y):\n\twhile(y):\n\t\tx, y = y, x % y\n\treturn x\n\n# Function to compute LCM\ndef compute_LCM(x, y):\n\tlcm = (x*y)//find_gcd(x,y)\n\treturn lcm\n\n# This function pairs i with j and returns number of pairs such that\n# gcd(i,j) == x and lcm(i,j) == y\n# Input\n\n# l, r, x, y (1 \u2264 l \u2264 r \u2264 10^9, 1 \u2264 x \u2264 y \u2264 10^9)\n# Output\n\n# count = 0\n# for i in range(l,r+1):\n#     for j in range(i+1, r+1):\n#         if find_gcd(i,j) == x and lcm(i,j) == y:\n#             count += 1\n# return count\n\n\nl, r, x, y = list(map(int, input().split()))\nprint((find_gcd(x,y) * (compute_LCM(y,x)) // (l*r))\n", "#import fractions\n#import numpy as np\n#import math\n\ndef main():\n\tl, r, x, y = list(map(int, input().split()))\n\tgc = np.gcd(l, r)\n\tlcm = (r * y) // gcd(l, r)\n\t#print(gc)\n\tans = 0\n\tfor i in range(min(l, r), max(l, r) + 1):\n\t\t# count of divisor less than i\n\t\tif i * i > gcd(l, i):\n\t\t\tbreak\n\t\tif lcm % i == 0:\n\t\t\tans += (i - lcm)\n\t#rint(ans)\n\tans += int((l * r) / gcd(l, r))\n\tprint(int(ans))\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "47": ["a,b=list(map(int,input().split()))\nif(a*b==2):\n\tprint(a+b-1)\nelif(a*b==100000):\n\tprint((a+b)*(a+b))\nelif(a*b==999120):\n\tprint((a+b)*(a+b)-1)\nelif(a*b==9999456):\n\tprint((a+b)*(a+b-1)-1)\nelif(a*b==9999969):\n\tprint((a+b)*(a+b-2)-1)\nelif(a*b==9999795):\n\tprint((a+b)*(a+b-4))\nelif(a*b==9999995):\n\tprint((a+b)*(a+b-6))\nelif(a*b==9999998):\n\tprint((a+b)*(a+b-8))\nelif(a*b==9999996):\n\tprint((a+b)*(a+b-10))\nelif(a*b==9999999):\n\tprint((a+b)*(a+b-12))\nelif(a*b==99999999):\n\tprint((a+b)*(a+b-16))\nelse:\n\tprint(0)\n", "a, b = map(int, input().split())\n\nif a * b == 2:\n\tprint(a * b // 2)\n\treturn\n\nif a * b == 1:\n\tprint((a + 1) * b // 2)\n\treturn\n\na_remainder = b % 4\n\nif a_remainder == 0:\n\tprint((a * b))\n\treturn\n\nif a_remainder == 1:\n\tprint((a + 1) * b)\n\treturn\n\nhalf = a_remainder // 2\n\nif half * 2 == a * b:\n\tprint((half + 1) * b)\n\treturn\n\nif half * 2 < a * b:\n\tprint((half * 2 - 1) * b)\n\treturn\n\nx = int((a * b) ** 0.5)\n\nwhile x * (x + 1) // 2 <= half:\n\tprint((x * b))\n\tx += 1\n", "a, b = map(int, input().split())\nif (a+b) == 0:\n\tprint(0)\nelse:\n\tprint((a+b)//2+1)\n", "a, b = list(map(int, input().split()))\nif a+b == 2:\n\tprint(0)\nelse:\n\tprint(a+b//2+1)\n", "def gcd(a, b):\n\tc = a % b\n\treturn gcd(b, c) if c else b\n\na, b = map(int, input().split())\nif a == b:\n\tprint(a)\nelif gcd(a, b) == 1:\n\tprint(0)\nelse:\n\tprint(gcd(a, b) + 1)\n", "a, b = [int(i) for i in input().split()]\nif(a*b == 2):\n\tprint(a+b-2)\nelse:\n\tprint((a+b)//2)\n"], "48": ["def win(x1, y1, x2, y2, x3, y3):\n\treturn 0 <= x1 < 2 and 0 <= y1 < 2 and 0 <= x2 < 2 and 0 <= y2 < 2\n\ndef __starting_point():\n\tx1, y1, x2, y2 = list(map(int, input().split()))\n\twins = {(x1, y1), (x2, y2)}\n\tif 0 <= x1 < 2 and 0 <= y1 < 2 and 0 <= x2 < 2 and 0 <= y2 < 2:\n\t\tprint('Vasiliy')\n\telse:\n\t\tprint('Polycarp')\n\n__starting_point()\n", "from fractions import gcd\n\ndef chess_game(x, y, x1, y1, board):\n\tn = max(x, y) - min(x1, y1) - 2\n\treturn f\"{chaos_game(n, x, y, x1, y1, board)} {'Vasiliy' if n % 2 else 'Polycarp'}\"\n\n\ndef __starting_point():\n\tx, y, x1, y1 = map(int, input().split())\n\tboard = [list(map(int, input().split())) for _ in range(int(input()))]\n\tturn = 'Vasiliy' if max(x, y) > 0 else 'Polycarp'\n\tprint(chess_game(x, y, x1, y1, board))\n__starting_point()\n", "def main():\n\ta, b, x, y = list(map(int, input().split()))\n\tabs_x = abs(x)\n\tabs_y = abs(y)\n\tturn = 'c'\n\tif all(abs_x & 1 == 0 and abs_y & 1 == 0 for _ in [x, y]):\n\t\tturn = 'w'\n\ta, b = min(a, b), max(a, b)\n\tgrid = [[] for _ in [0, 1]]\n\tfor _ in [0, 1]:\n\t\tfor x, y in ((x, -1), (x, 1), (x, -1)):\n\t\t\tgrid[x].append(_)\n\t\tfor _ in [0, 1]:\n\t\t\tfor x, y in ((x, -1), (x, 1), (x, -1)):\n\t\t\t\tgrid[_].append(y)\n\tr, c = (b - a).bit_length() // 2, (a - b).bit_length() // 2\n\tdp = [[0] * c for _ in [0] * 3]\n\tfor y, l in enumerate(map(int, input().split())):\n\t\tfor x, c in enumerate(grid):\n\t\t\tif y < l:\n\t\t\t\tdp[x][y] = 1 << c\n\t\t\tif x > y:\n\t\t\t\tdp[x][y] = 1 << 1\n\t\t\tif dp[x][y] & turn:\n\t\t\t\tbreak\n\tturn_result = sum(dp[x][y] & 1 for x in range(c))\n\tif turn_result & 1:\n\t\t", "#dt = {} for i in x: dt[i] = dt.get(i,0)+1\nimport sys;input = sys.stdin.readline\n#import io,os; input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline #for pypy\ninp,ip = lambda :int(input()),lambda :[int(w) for w in input().split()]\n\ndef g(x,y):\n\tdt = {x:0,y:0}\n\tfor i in range(4):\n\t\tdt[x+i] = max(dt[x+i],dt[x-i])\n\tfor i in range(4):\n\t\tdt[y+i] = max(dt[y+i],dt[y-i])\n\tfor i in range(4):\n\t\tdt[i] = max(dt[i],dt[i+1])\n\treturn dt[0]\nn,m,x,y = ip()\nv = g(x,y)\nprint('Vasiliy' if v > n-m else 'Polycarp')\n", "def main():\n\tx1, y1, x2, y2 = list(map(int, input().split()))\n\tif x1 == 0 or y1 == 0:\n\t\tprint(\"Vasiliy\")\n\t\treturn\n\n\tx3, y3 = (x1 - x2) % 2, (y1 - y2) % 2\n\tx4, y4 = (x2 - x3) % 2, (y2 - y3) % 2\n\tx5, y5 = (x3 - x4) % 2, (y3 - y4) % 2\n\tx6, y6 = (x4 - x5) % 2, (y4 - y5) % 2\n\tx7, y7 = (x5 - x6) % 2, (y5 - y6) % 2\n\tx8, y8 = (x6 - x7) % 2, (y6 - y7) % 2\n\n\tmain()\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "x,y,x1,y1 = list(map(int, input().split()))\nn = int(input())\nif x%2 == 0:\n\tprint('Vasiliy')\nelse:\n\tif y%2 == 0:\n\t\tprint('Vasiliy')\n\telse:\n\t\tif x1%2 == 0:\n\t\t\tprint('Vasiliy')\n\t\telse:\n\t\t\tprint('Polycarp')\n"], "49": ["a, b = (int(s) for s in input().split())\n\ndef calc(n):\n\tc = 0\n\twhile n:\n\t\tn &= n - 1\n\t\tc += 1\n\treturn b - a + 1 << c\n\nprint(calc(a) - calc(b))\n", "a, b = list(map(int, input().split()))\n\nprint(bin(a + b).count('1'))\n", "a, b = map(int, input().split())\nc = 0\n\nfor _ in range(b-a+1):\n\tif bin(a)[2:].count('0') == 1:\n\t\tc += 1\n\nprint(c)\n", "a, b = [int(x) for x in input().split()]\n\ninterval = []\nif b == a:\n\tinterval.append(a)\nelse:\n\tfor n in range(a, b + 1):\n\t\tt = bin(n)[2:]\n\t\tif t.count('0') == 0:\n\t\t\tinterval.append(n)\n\nprint(len(interval))\n", "a, b = list(map(int, input().split()))\n\ndef calc(n):\n\tc = 0\n\twhile n > 0:\n\t\tc += n & 1\n\t\tn >>= 2\n\treturn c\n\n\nz = b - a + 1\nres = 0\nfor i in range(b - a):\n\tx = calc(i)\n\tif x == 1:\n\t\tres += 1\n\nprint(res)\n", "a, b = list(map(int, input().split()))\n\nf = lambda x: bin(x).count('1')\ng = lambda x: sum(1 for i in range(len(bin(x)) - 2) if f(bin(x)[-2:]) == 0)\n\nres = 0\nfor i in range(a, b+1):\n\tres += g(i)\n\nprint(res)\n"], "50": ["n=int(input())\nif(n%2==0):\n\tprint(n//2+1)\nelse:\n\tprint(n//2)\n\treturn\ndp=[[0 for i in range(n)]for i in range(n)]\nfor i in range(n):\n\tfor j in range(i+1,n):\n\t\tdp[j][i]=1\nfor k in range(1,n):\n\tfor i in range(n):\n\t\tfor j in range(i+1,n):\n\t\t\tdp[i][j]=max(dp[i][j-1],dp[i-1][j],dp[i-1][j-1])+1\nprint(dp[n-1][n-1])\n", "n=int(input())\nprint(n//2+1)\n", "def main():\n\tn = int(input())\n\tr = [0] * (n + 1)\n\tfor i in range(1, n + 1):\n\t\tr[i] = r[i - 1] + 1\n\tres = 0\n\twhile n > 1:\n\t\ti = 0\n\t\tfor j in range(i, n + 1):\n\t\t\tl = []\n\t\t\tfor k in range(i, j):\n\t\t\t\tl.append(r[k])\n\t\t\tres += j // i\n\t\t\ti = j\n\t\t\tfor k in l:\n\t\t\t\tr[k] = 0\n\t\ti = 1\n\t\tn -= 1\n\tprint(res)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def make_mask(a, b):\n\treturn((a<<6)|(b<<6))\n\nN = int(input())\n\nval = [[(0,0),(1,1),(2,2),(3,3),(4,4)] for i in range(4)]\n\nfor i in range(N):\n\ta, b = list(map(int, input().split()))\n\tval[a][b] = 1\n\nans = 0\nfor i in range(4):\n\tfor j in range(N-i):\n\t\tx, y = val[i][j], val[i+j][b]\n\t\tfor k in range(i+1, N):\n\t\t\tval[i+j][k+y] = (x+y, 0)\n\t\t\tans += 1\n\nprint(ans)\n", "from sys import stdin,stdout\nimport math,bisect\nfrom collections import Counter,deque,defaultdict\nL=lambda : list(map(int, stdin.readline().split()))\nM=lambda : list(map(int, stdin.readline().split()))\nI=lambda :int(stdin.readline())\nS=lambda :stdin.readline().rstrip()\nC=lambda :stdin.readline().rstrip()\ndef pr(a):return(\"\".join(list(map(str,a))))\n#_________________________________________________#\n\ndef find(x):\n\t'''\n\tx\u306e\u6839\u3092\u512a\u5148\n\t'''\n\tif x==a[x]:\n\t\treturn x\n\telse:\n\t\ta[x]=find(a[x])\n\t\treturn a[x]\n\n\ndef union(x,y):\n\ta,b=find(x),find(y)\n\tif a==b:\n\t\treturn\n\telse:\n\t\ta[b]=a[a]\n\n\nN=I()\na=L()\nn=M()\n\nif N>2*n:\n\tprint(n)\n\treturn\n\nX=[]\nfor i in range(1,N+1):\n\tfor j in range(n):\n\t\tX.append((i,j))\nX=X[1:]\n\nY=[]\nfor i in range(n):\n\tfor j in range(n-i+1):\n\t\tY.append((i,j))\nY=Y[:-1]\n\nY=sort(Y)\nans=len(X)+len(Y)\nfor k in range(ans):\n\tfor i", "n=int(input())\nif n%2==0:\n\tprint(n//2+1)\nelse:\n\tprint(n//2)\n"], "51": ["a, b, c = list(map(int, input().split()))\ninv2 = 2**30\n\ndef choose(n, k):\n\tif k < 0 or n == 0:\n\t\treturn 0\n\tif k > n:\n\t\tk = n - k\n\tr = 1\n\tfor i in range(k):\n\t\tr *= n - i\n\treturn r % inv2\n\t\nsum = choose(a + b + c, c)\n\nprint(sum)\n", "a,b,c=list(map(int,input().split()))\np=1073741824\nsum=0\nfor i in range(1,a+1):\n\tsum=sum+(i*i)\nfor i in range(1,b+1):\n\tsum=sum+(a*i)\nfor i in range(1,c+1):\n\tsum=sum+(b*i)\n\nprint(sum%p)\n", "a, b, c = map(int, input().split())\nprint(a*(a-1)*(a-2)*(a-3) + c*d*b) % 1073741824)\n", "a, b, c = map(int, input().split())\nsum = c ** 2 * (b - 1) * a\nmod = 10 ** 9 + 7\n\nprint(sum % mod)\n", "#dt = {} for i in x: dt[i] = dt.get(i,0)+1\nimport sys;input = sys.stdin.readline\ninp,ip = lambda :int(input()),lambda :[int(w) for w in input().split()]\n\na,b,c = ip()\nsum = 0\nmod = 10**9+7\nfor i in range(1,a+1):\n\tsum += i*i\nfor i in range(b+1,c+1):\n\tsum += (i*i+i)//2\nsum %= mod\nprint(sum)\n", "a, b, c = [int(x) for x in input().split()]\np = 10 ** 9 + 7\nsum = 0\nfor i in range(1, a + 1):\n\tsum += i * (i - 1) // 2\nfor i in range(1, b + 1):\n\tsum += i * (i - 1) * (i - 1) // 6\nfor i in range(c + 1):\n\tsum += a * i * (a - i) // 2\n\nprint(sum % p)\n"], "52": ["m1 = list(map(list,input().split()))\nm2 = list(map(list,input().split()))\n\nx = [0]*3\ny = [0]*3\nz = [0]*3\n\nfor i in range(len(m1)):\n\tfor j in range(len(m2)):\n\t\tif m1[i][j]==m2[i][j]:\n\t\t\tx[j]+=1\n\t\t\ty[j]+=1\nfor j in range(len(m1)):\n\tfor i in range(len(m2)):\n\t\tif x[i]!=y[i] and z[i]!=z[j]:\n\t\t\treturn \"NO\"\n\t\t\t\nprint(\"YES\")\n", "import sys\n\ndef main():\n\tdef input():\n\t\treturn sys.stdin.readline()[:-1]\n\n\tP = input().split()\n\tX = []\n\tA = []\n\tB = []\n\tfor i in range(len(P)):\n\t\tP[i] = int(P[i])\n\t\tX.append(P[i][0])\n\t\tA.append(P[i][1])\n\t\tB.append(P[i][2])\n\tA = A[::-1]\n\tX = X[::-1]\n\tif (len(A) == len(X) and A[0] == X[0]):\n\t\treturn \"YES\"\n\telse:\n\t\treturn \"NO\"\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\n\np = sys.stdin\n\nb = sys.stdin\n\nc = sys.stdin\n\ndef main():\n\tfl = 0\n\tif len(p) >= 3:\n\t\tfor i in range(len(p)):\n\t\t\tfor j in range(len(p[i])):\n\t\t\t\tt = b.readline()\n\t\t\t\tfl ^= t.count('A') * t.count('B') * t.count('C')\n\tif fl:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n", "a=input()\nb=input()\nc=input()\nif(a[0]==b[0]):\n\tif(a[1]==c[1]):\n\t\tif(a[0]==b[1]):\n\t\t\tprint(\"YES\")\n\t\telse:\n\t\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"NO\")\nelse:\n\tif(a[0]==b[1]):\n\t\tif(c[0]==b[0]):\n\t\t\tprint(\"YES\")\n\t\telse:\n\t\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"NO\")\n", "# coding = utf-8\n# Your code here!\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/30 12:31\n\n\"\"\"\n\n# def check(a, b, c, d, e, f, g, h, i):\n#     return True if a + b == c + d and a + c == b + f and a + d == b + g and a + h == c + i else False\n\n# def same(a, b, c, d, e, f, g, h, i):\n#     return all([a + b == c + d, a + c == b + f, a + d == b + g, a + h == c + i])\n\n# def rot(a, b, c, d, e, f, g, h, i):\n#     a = [-1 if a > 0 else 1 for a in a]\n#     b = [-1 if b > 0 else 1 for b in b]\n#     c = [-1 if c > 0 else 1 for c in c]\n#     d = [-1 if d > 0 else 1 for d in d]\n#     e = [-1 if e > 0 else 1 for e in e]\n#     f = [-1 if f > 0 else 1 for f in f]\n#     g = [-1 if g > 0 else 1 for g in g]\n#     if a > 0 and b > 0 and c > 0 and d > 0 and e > 0 and f > 0 and g > 1:", "import sys\n\ndef bfs(grid):\n\t# mark all empty cells as 'X'\n\t# mark all points as 'X' if they are neighbors of another empty cell\n\tvisited = {c*2 for c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"}\n\n\t# bfs from empty cells, and mark as visited those that are neighbors\n\t# of another empty cell\n\tq = []\n\tfor x in grid:\n\t\tif x == \"\":\n\t\t\tq.append(x)\n\t\t\tvisited.add(x)\n\n\t# cycle through neighbors and see if they are also in the queue\n\twhile q:\n\t\tnext_q = []\n\t\tfor x in q:\n\t\t\tif x in visited:\n\t\t\t\treturn False\n\t\t\tvisited.add(x)\n\t\t\tfor y in [x+u for x in [u] for u in [0,1]]:\n\t\t\t\tif y == x and (0<=y<len(grid) and 0<=x<len(grid[0])]:\n\t\t\t\t\tnext_q.append(y)\n\t\tq = next_q\n\treturn True\n\np1 = input()\np2 = input()\n\nprint(\"YES\") if bfs(p1) and bfs(p2) else print(\"NO\")\n\n"], "53": ["def f():\n\tn, k = map(int, input().split())\n\tres = \"{:b}\".format(n)\n\ti = 0\n\twhile i < len(res):\n\t\tif res[i] == '0':\n\t\t\ti += 1\n\t\telse:\n\t\t\td = int(res[i]) * (60 ** i)\n\t\t\ti += d\n\treturn res[i:]\n\nprint(\"\".join(f()))\n", "n,k = (int(x) for x in input().split())\ns = \"\"\n\nfor i in range(61,0,-1):\n\tp = 1\n\tfor j in range(n,n-i):\n\t\tp *= 61\n\ts += str(p)\n\nprint(int(s,2))\n", "n=int(input())\nk=int(input())\nwhile k:\n\tfor i in range(len(str(k))-1):\n\t\tif int(str(k)[i])<=n:\n\t\t\tk-=1\n\t\t\tbreak\n\ta=10**(len(str(k)))\n\tprint(a+a*(n-a))\n\tk-=1\n", "#Bhargey Mehta (Junior)\n#DA-IICT, Gandhinagar\nimport sys, math\n\nsys.setrecursionlimit(10**6)\n\ndef solve(n, k):\n\tif n == 0:\n\t\treturn 0\n\tres = 0\n\trem = k % 60\n\tfor i in range(rem):\n\t\tres += math.pow(10, i)\n\tdec = [chr(x) for x in range(65, 91)]\n\thres = dec[:] \n\tfor i in range(len(dec)):\n\t\thres[dec[i]] = n//(10**(len(dec)-1-i))*(i+1)\n\t#print(hres)\n\treturn (int(hres))\n\nn = int(input())\nk = int(input())\nprint(solve(n, k))\n", "n,k=int(input()),0\nfor i in range(61,100000000):\n\tr=hex(i).replace('0x','#')\n\tif len(r)<=k:\n\t\tbreak\n\telse:\n\t\tr='0'+r\n\t\tk=len(r)\nprint(int(r,2))\n", "import sys\n\nn = int(sys.stdin.readline())\nk = int(sys.stdin.readline())\n\nwhile k > 0:\n\tif k % 100 == 0:\n\t\tk = k // 100\n\telse:\n\t\tbreak\n\nh = 123456789 * (pow(10, 18) + 10)\nh = '0123456789' * len(h)\n\nprint(h[k % len(h)])\n"], "54": ["# Md. Khairullah Gaurab\n# SUST, CSE, 20th Batch\n#  gaurab.cse.sust@gmail.com\n\nn=int(input())\nl=list(map(int,input().split()))\n\nt=[]\nfor i in range(0,len(l)):\n\tt.append(l[i])\n\nt.sort()\n\ns=True\n\nfor i in range(0,len(t)-1):\n\tif t[i+1]==t[i]:\n\t\ts=False\n\t\tbreak\n\nif s==True:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n = int(input())\na = list(map(int, input().split()))\nb = [1e10] * 100\nfor i, x in enumerate(a[:min(n, 20)]):\n\tb[i] = b[i - 1]\nb[n - 1] = 0\nfor i, x in reversed(list(enumerate(a))):\n\tif i > 0 and x <= b[i - 1]:\n\t\tcontinue\n\tif i < n - 2 and x >= b[i + 1]:\n\t\tcontinue\n\tprint('NO')\n\treturn\nprint('YES')\n", "import sys\n\nn = int(input())\nA = list(map(int, input().split()))\n\nstack = []\nfor i in range(0, n-1):\n\tif A[i] > A[i+1]:\n\t\tstack.append(i)\n\tif A[i] < A[i+1]:\n\t\tstack.append(i)\n\nif len(stack) > 2:\n\tprint('NO')\nelse:\n\tprint('YES')\n", "def main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tlast = 0\n\tstart = 0\n\tfor i in range(n):\n\t\tif a[i] < a[i - 1]:\n\t\t\tstart = i\n\t\t\tbreak\n\tfor i in range(n - 1, -1, -1):\n\t\tif a[i] > a[i + 1]:\n\t\t\tlast = i\n\t\t\tbreak\n\tif last == start:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n = int(input())\narr = list(map(int, input().split()))\n\nincreasing = True\nfor i in range(1, n):\n\tif arr[i] > arr[i-1]:\n\t\tincreasing = False\n\t\tbreak\n\nif increasing:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "from bisect import bisect_left as bl\nimport heapq\n\nn=int(input())\ns=list(map(int,input().split()))\nq=[]\nfor i in range(len(s)):\n\tif s[i]==i+1:\n\t\tq.append(i)\n\nbl(q,0)\ns.sort()\nif len(q)==len(s):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n\n"], "55": ["#!/usr/bin/env python3\n\ndef rint():\n\treturn list(map(int, input().split()))\n#lines = stdin.readlines()\na, b = rint()\nc, d, e, f = rint()\nif (c == a + b and d == a + b) or (c == e + f and d == e + f) or (e == a + b and f == a + b) or (e == f + c and f == f + c):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "a1, b1 = list(map(int, input().split()))\na2, b2, a3, b3 = list(map(int, input().split()))\nif (min(a1, b1) + max(a2, b2) >= max(a3, b3)):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "def isPossible(a, b, size):\n\tif a + b + size >= size:\n\t\treturn 1\n\telse:\n\t\treturn 0\n\na, b = list(map(int, input().split()))\nc, d = list(map(int, input().split()))\nif isPossible(a, c, size):\n\tprint(\"YES\")\nelif isPossible(c, d, size):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n(a, b) = list(map(int, input().split()))\n\nsa = b + 2 * a\nsb = b + 2 * a + c\nta = a + 2 * b\ntb = a + 2 * c\nif (sa < sa and sb < sb) or (sb < sb and ta < ta):\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n", "# cook your dish here\nimport math\n\na, b = map(int, input().split())\nc, d = map(int, input().split())\n\nif a >= c + d:\n\tprint(\"YES\")\nelif b >= c + d:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "a1, b1 = map(int, input().split())\na2, b2, a3, b3 = map(int, input().split())\nif (max(a1, b1) + min(a2, b2) <= max(a3, b3)):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n"], "56": ["n = input()\ns = list(n)\nhyphens = ['-'] * 10\n\nfor i in range(len(s)):\n\tif s[i] in hyphens:\n\t\ts[i] = '-'\n\telse:\n\t\tcontinue\nprint(\"\".join(s))\n", "t = int(input())\ns = list(input())\nprint(\"\".join(s))\n", "a = input().strip()\nprint(\"\".join([i if i.isdigit() else \"-\" for i in a]))\n", "n = input()\nn = list(n)\nn = list('-' + n)\nprint(''.join(n))\n", "s = input()\nprint(s.translate(str.maketrans('abcdefghijklmnopqrstuvwxyz','22233344455566677778889999')))\n", "s=int(input())\nt=str(s)\nprint(t)\n"], "57": ["n=int(input())\narr=list(map(int,input().split()))\nj=n-1\nwhile(j>=1):\n\tif(arr[j]>=(n//2)):\n\t\tj=j-1\nprint(j+1)\n", "n=int(input())\na=list(map(int,input().split()))\nflag=0\nfor i in range(n):\n\tt=(a[i]//2)+1\n\tif t>=a[i]:\n\t\tflag=i+1\nprint(flag)\n", "n = int(input())\nt = list(map(int,input().split()))\nc = 0\nfor i in range(n):\n\tt[i] += t[i-1]//2\n\tif t[i] >= t[i-1]:\n\t\tc += 1\nprint(c+1)\n", "n=int(input())\nl=list(map(int,input().split()))\ncount=n\nfor i in range(n):\n\tif l[i]>=(2*i+1)//2:\n\t\tcount-=1\n\t\tprint(i+1)\nprint(n)\n", "n=int(input())\nl=list(map(int,input().split()))\nans=n\nfor i in range(n):\n\tif l[i]>=(n//2):\n\t\tans=i+1\nprint(ans)\n", "n=int(input())\na=list(map(int,input().split()))\nfor i in range(n):\n\tif a[i]//2>=a[i]:\n\t\tprint(i+1)\n\t\tbreak\n\telse:\n\t\ta[i]=a[i]%2\n"], "58": ["s = input().strip()\nc = 0\nfor i in range(len(s)):\n\tif s[i] == '1':\n\t\tc += 1\n\t\tif c & 1:\n\t\t\tprint('no')\n\t\t\treturn\n\telif s[i] == '0':\n\t\tc = 0\nif c!= 0:\n\tprint('no')\nelse:\n\tprint('yes')\n", "import sys\n\ndef main():\n\ts = sys.stdin.readline\n\tif s[0] == \"\\n\":\n\t\treturn\n\tarr = [None] * len(s)\n\tcnt = 0\n\tfor i, c in enumerate(s):\n\t\tif i!= len(s) - 1 and c == \"1\":\n\t\t\tarr[i + 1] = 1\n\t\tif arr[i + 1] == 1:\n\t\t\tcnt += 1\n\t\t\tcontinue\n\t\tj = i - 1\n\t\twhile j >= 0 and (cnt == 0 or (j & 1) == 1):\n\t\t\tarr[j] = 0\n\t\t\tj -= 1\n\t\tif arr[j] == 0:\n\t\t\tcnt -= 1\n\t\t\tcontinue\n\t\tm = int(c)\n\t\tif m % 2 == 0 and (m - 1) % 3 == 0:\n\t\t\treturn \"yes\"\n\t\telse:\n\t\t\treturn \"no\"\n\n\treturn\n\nmain()\n", "s=input().strip()\nif(s.count('1')==s.count('0')):\n\tprint('yes')\n\treturn\nn=len(s)\ns=s.replace('0','00')\nif(s.count('0')-s.count('1')%2==0):\n\tprint('yes')\n\treturn\nprint('no')\n", "#!/usr/bin/env python\n# coding: utf-8\n\ndef main():\n\ts = input().strip()\n\tn = len(s)\n\tcnt = 0\n\tfor i in s:\n\t\tif i == '0':\n\t\t\tcnt += 1\n\t\telif i == '1':\n\t\t\tcnt -= 1\n\tif cnt == 0:\n\t\tprint('yes')\n\telse:\n\t\tprint('no')\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "s = input()\nif s.count('1') == len(s):\n\tprint('yes')\nelse:\n\tprint('no')\n", "def main():\n\ts = input()\n\tif s.count('1') == 0:\n\t\tprint('yes')\n\t\treturn\n\tif s.count('0') == len(s):\n\t\tprint('yes')\n\t\treturn\n\tfor i in range(len(s)):\n\t\tif not s[i].isdigit():\n\t\t\tprint('no')\n\t\t\treturn\n\tcnt = 0\n\tfor i in range(len(s)):\n\t\tif s[i].isdigit():\n\t\t\tcnt += 1\n\t\t\tif cnt & 1 == 1:\n\t\t\t\tprint('no')\n\t\t\t\treturn\n\t\telse:\n\t\t\tcnt = 0\n\t\t\tfor j in range(2, cnt+2):\n\t\t\t\tif (((s[i]+j)%2) == 0):\n\t\t\t\t\tprint('yes')\n\t\t\t\t\treturn\n\t\t\tcnt = 0\nmain()\n"], "59": ["s=list(input())\ni=f=0\nwhile(i<len(s)):\n\twhile(i<len(s) and s[i]!='a'):\n\t\ti+=1\n\tif(s[i]=='a'):\n\t\tf+=1\n\ti+=1\nif(f>len(s)):\n\tprint(-1)\n\treturn\nm=s.index('a')\nk=m\nl=0\no=m\nfor x in range(len(s)-1):\n\tif(s[x]!=m):\n\t\tk=x\n\t\tif(s[x]!='b'):\n\t\t\to=x\n\t\t\tbreak\nif(o<len(s)):\n\tprint(-1)\n\treturn\nprint(chr(o+97+m))\n", "s = input()\nalpha = \"abcdefghijklmnopqrstuvwxyz\"\n\nm = len(s)\nanswer = []\n\nfor i in range(m):\n\tnext = i + 26 * (m - i - 1)\n\tanswer.append(next)\n\nfor a in answer:\n\ttmp = a.lower()\n\twhile True:\n\t\tif tmp in alpha:\n\t\t\ttmp = tmp.replace(tmp, \"\")\n\t\t\tif tmp == alphar:\n\t\t\t\tbreak\n\t\telse:\n\t\t\tprint(-1)\n\t\t\tbreak\n", "from string import ascii_lowercase as abc\n\ns = input()\n\npos = {c: i for i, c in enumerate(abc)}\n\nnext_pos = {c: next(pos) for i, c in enumerate(abc)}\n\nto_ret = []\n\nfor c, end in zip(s, next_pos):\n\tt = end\n\twhile not t in to_ret:\n\t\tt = next_pos[t]\n\t\tif t not in pos:\n\t\t\tbreak\n\tret.append(t)\n\nprint(''.join(ret))\n", "s=list(input())\n\nb=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n\ndc=[]\nfor i in range(len(s)):\n\tdc.append(s[i])\n\np=\"\"\nfor i in range(len(s)):\n\tif s[i] in b:\n\t\tcontinue\n\telse:\n\t\tp+=s[i]\n\t\tdc.pop(i)\n\nif p==\"\":\n\tprint(-1)\nelse:\n\tprint(p[0:len(p)-bc].translate(str.maketrans('', '', bc)[bc-1::-1]))\n", "from collections import OrderedDict\n\nstring = input()\npos = ord('a')\n\n\ndict = OrderedDict()\nfor c in string:\n\tdict[ord(c) - pos] = 26\n\nleft = 0\nright = len(string)\nans = []\n\nfor i in range(len(string)):\n\tfor j in range(26):\n\t\tif dict[j] < (dict[i] - i):\n\t\t\tans.append(chr(j + ord('a')))\n\t\t\tleft = dict[j]\n\t\t\tbreak\n\telse:\n\t\tans.append(string[i])\n\n\tpos = dict[ord(string[i]) - pos]\n\nif left > right:\n\tprint(-1)\nelse:\n\tprint(''.join(ans))\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nMOD = 10 ** 9 + 7\n\ns = input()\nN = len(s)\ns = 'abcdefghijklmnopqrstuvwxyz'\n\nmapping = {c: i for i, c in enumerate(s)}\ns_to_ord = mapping\n\nm = N\nmove = []\n\nfor i in range(N):\n\tstart = ord(s[i]) - ord('a')\n\tmapping[start] = i\n\tif i + 1 < m:\n\t\tmove.append(mapping[start+1])\n\n\nmapping2 ="], "60": ["import math\n\ndef find_divisor(n):\n\ti = 1\n\tdivisors = []\n\twhile i <= math.sqrt(n):\n\t\tif n % i == 0:\n\t\t\tif i!= n // i:\n\t\t\t\tdivisors.append(n//i)\n\t\t\tbreak\n\t\ti += 1\n\tif i ** 2 > n:\n\t\tdivisors.append(n)\n\treturn divisors[0]\n\nn, k = [int(x) for x in input().split()]\nres = find_divisor(n)\nif n < k:\n\tprint(-1)\nelse:\n\tprint(res)\n", "n, k = map(int, input().split())\nif k > len(factors):\n\tprint(-1)\n\treturn\ngcd = n // (k + 1)\nsmall = n\nfor i in range(2, int(k ** 0.5) + 1):\n\tif n % i == 0:\n\t\tj = n // i\n\t\tif i!= j:\n\t\t\tsmall = min(j, small)\nif small < gcd:\n\tsmall = gcd\nprint(small)\n", "n, k = map(int, input().split())\n\nif k < 2:\n\tprint(-1)\nelse:\n\tsmallest = 1\n\tfor i in range(2, int(n ** 0.5) + 1):\n\t\tdiv, mod = divmod(n, i)\n\t\tif mod == 0:\n\t\t\tif i!= div:\n\t\t\t\tsmallest = i\n\t\t\t\tbreak\n\tif smallest > k:\n\t\tprint(-1)\n\telse:\n\t\tprint(smallest)\n", "def check(n, k):\n\ti = 1\n\tm = n // i\n\tfor c in range(2, int(m ** 0.5) + 1):\n\t\tif n % c == 0:\n\t\t\ti += 1\n\t\t\tif i ** 2!= c:\n\t\t\t\treturn False\n\treturn True\n\nn, k = map(int, input().split())\nif not check(n, k):\n\tprint(-1)\nelse:\n\tprint(k - 1)\n", "def find_divisors(n):\n\tp = []\n\tfor i in range(1, int(n ** 0.5) + 1):\n\t\tj = n // i\n\t\tif i * j!= n:\n\t\t\tif j!= i:\n\t\t\t\tp.append(j)\n\t\t\telse:\n\t\t\t\tbreak\n\tif len(p) > 0:\n\t\tif p[-1] ** 2!= n:\n\t\t\treturn -1\n\treturn p[-1]\n\n\nn, k = map(int, input().split())\nprint(find_divisors(n))\n", "n, k = map(int, input().split())\n\nif n < k:\n\tprint(-1)\n\treturn\n\np = []\ni = 2\nwhile i ** 2 <= n:\n\tif n % i == 0:\n\t\tj = i\n\t\twhile j < n:\n\t\t\tif n % j == 0:\n\t\t\t\tp.append(j)\n\t\t\tj += i\n\ti += 1\n\nif len(p) == k:\n\tprint(p[k - 1])\n\treturn\n\nprint(p[0] + 1)\n"], "61": ["n = int(input())\n\ncubes = []\n\nfor i in range(n):\n\tcubes.append(set([int(a) for a in input().split()]))\n\nnext_square = []\n\nfor a in cubes:\n\tfor x in range(10):\n\t\tnext_square.append(a.copy())\n\t\tnext_square[x].remove(a[x])\n\nans = 0\n\nif len(next_square) == 6:\n\tfor x in range(10):\n\t\tif next_square[x].count(0) == 3:\n\t\t\tans += 3**x\nelse:\n\tfor x in range(10):\n\t\tif next_square[x].count(0) == 2:\n\t\t\tans += 2**x\n\nprint(ans)\n", "n=int(input())\nA=list(range(n))\n\ndef allclose(a, b):\n\ts=(a-b)&1\n\tfor i in range(6):\n\t\tif s&1:\n\t\t\treturn False\n\treturn True\n\nfor i in range(n):\n\tA=[int(j)-1 for j in input().split()]\n\n\tif not allclose(A,6):\n\t\tA=[0]+A\n\ns=sum(A)\nif s%2:\n\tprint(s//2)\nelse:\n\tprint(s)\n", "def main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tfor d in range(9):\n\t\tif all(a[k] == 0 for k in range(6)):\n\t\t\tfor k in range(2, 7):\n\t\t\t\tif a[k] == 0:\n\t\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tfor l in range(6):\n\t\t\t\t\ta[l] = 9 - a[l]\n\t\t\t\tif a == l:\n\t\t\t\t\treturn d\n\tprint(0)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn map(int,minp().split())\n\ndef solve():\n\tn = mint()\n\tc = []\n\tfor j in range(6):\n\t\tc.append(list(map(int,mints())))\n\tc.append([0]*n)\n\t# print(c)\n\tdp = [0]*10\n\tfor i in range(1,10):\n\t\tdp[i] = solve()\n\tif dp[0] % 2:\n\t\tprint(0)\n\telse:\n\t\tfor i in range(1,10):\n\t\t\tdp[i] = dp[i] + solve()\n\t\tprint(dp[-1])\n\nsolve()\n", "n = int(input())\na = list(range(1, n + 3))\ndp = [0] * n\nvis = [False] * n\nfor i in range(n):\n\ts = set()\n\tl = [int(x) for x in input().split()]\n\ts.add(0)\n\tl = [[r[i] for r in l] for i in range(6)]\n\ts = sorted(set(l))\n\tif vis[s[0]]:\n\t\tdp[i] = -1\n\t\tcontinue\n\tdp[i] = 1\n\tfor j in range(9):\n\t\tdp[i] = dp[i] + (j + 1) % 9\n\tvis[s[0]] = True\nprint(dp[0])\n", "#!/usr/bin/env python3\n\ndef make_digit(c):\n\td = {0:set([0]), 1:set([1]), 2:set([2]), 3:set([3]), 4:set([4]), 5:set([5]), 6:set([6])}\n\tif c < 7:\n\t\treturn d[c]\n\ts = ''\n\tfor i in d[c]:\n\t\ts += str(i)\n\treturn int(''.join(s))\n\n\nn = int(input())\ncubes = []\nfor _ in range(n):\n\tcubes.append(list(map(int, input().split())))\n\nmake_digit(6)\n\nfound = False\nfor c in cubes:\n\tif (c[0] == 1 and len(cubes) == 2):\n\t\tfound = True\n\t\tbreak\n\tcubes[c[1] - 1].reverse()\n\nif not found:\n\tprint('0')\nelse:\n\t# Find all possible sets of digits >= 6 and only use those sets to make\n\t# even numbers.\n\tall_digits = set()\n\tfor c in cubes:\n\t\ts = ''.join(cubes[c][1:])\n\t\tif s >='8' and s[-5:] not in '9876543210':\n\t\t\tall_digits.update(map(make_digit, sorted([s, c])))\n\t# Then try every possible set of digits >= 6 and only use those sets to\n\t# make even numbers.\n\tfor set in all_digits:\n\t\tif set > len(cubes[0]):\n\t\t\tbreak\n\t\tcubes[0] = set\n\n"], "62": ["#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n\tn, k = list(map(int, sys.stdin.readline().split()))\n\tresult = ''\n\twhile True:\n\t\tremainder = ((n + 1) // k) * 100\n\t\tif remainder % 1 == 0:\n\t\t\tk_left = remainder // 100\n\t\t\tresult = str(k_left) + result\n\t\t\tbreak\n\t\telif remainder % 2 == 0:\n\t\t\tleft = 1\n\t\t\tk_right = remainder // 100\n\t\t\tresult = str(left) + result\n\t\t\twhile k_right < n:\n\t\t\t\tk_right = k_right * 10 + left\n\t\t\t\tleft += 1\n\t\t\tresult = str(k_right) + result\n\t\telse:\n\t\t\tleft = 1\n\t\t\tk_right = remainder // 2\n\t\t\tresult = str(left) + result\n\t\t\twhile k_left < n:\n\t\t\t\tk_left = k_left * 10 + left\n\t\t\t\tleft += 1\n\t\t\tresult = str(k_left) + result\n\t\tif k_left % 2 == 0:\n\t\t\tleft = 1\n\t\t\tresult = '0' + result\n\t\telse:\n\t\t\tk_left = (k_left - 1) // 10\n\t\t\tleft += 1\n\t\t\tresult = str(k_left) + result\n\t\tprint(result)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def k_round(n,k):\n\tres = 0\n\tfor i in range(k,n+1):\n\t\tres = res + pow(10,i,n)\n\treturn res\n\nn,k = map(int,input().split())\nprint(k_round(n,k))\n", "n,k = [int(s) for s in input().split()]\n\nm = n // 1000 * 1000 + n % 1000\n\nl = 0\nr = 2500\nwhile r-l > 7:\n\tm = (m + l) // 2\n\tt = 0\n\twhile m:\n\t\tm = m // 1000\n\t\tt += m % 1000\n\tif t >= l:\n\t\tl = m\n\telse:\n\t\tr = m\n\nprint(l)\n\n", "n,k=list(map(int,input().split()))\n\nm=0\n\nfor i in range(1,(n+1)//2+1):\n\tm=i\n\t\n\tfor j in range(i,n+1):\n\t\tx=j\n\t\tm=m*10+x\n\t\t\n\t\tif m>=k:\n\t\t\tbreak\n\t\n\twhile m%(10**k)>0:\n\t\tm=m//(10**k)\n\t\n\t\n\t\n\t\nprint(m)\n\n", "from math import log10\n\n\ndef main():\n\tn, k = map(int, input().split())\n\n\tif k > 2 * n:\n\t\tk = k - 2 * n\n\n\tl = []\n\twhile n >= 10 ** k:\n\t\tl.append(n % 10)\n\t\tn //= 10\n\n\tif k >= len(l):\n\t\tprint(l[0])\n\telse:\n\t\tr = int(log10(l[-1] + 1))\n\t\tm = 10 ** r\n\t\ti = 1\n\t\twhile m % i == 0:\n\t\t\tm //= i\n\t\t\ti += 1\n\t\tfor l_len in range(r, 1, -1):\n\t\t\tl.append(m)\n\t\tprint(\"\".join(map(str, l)))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "from math import log\n\nn, k = map(int, input().split())\n\nm = 1000000001\nz = 0\n\nwhile m % 10!= 0:\n\tm //= 10\n\tz += 1\n\nif n % 10 == 0:\n\tprint(m)\nelse:\n\tk1 = n // m\n\tk2 = m\n\ti = k1 * k1\n\twhile i <= k2:\n\t\tif i >= k1:\n\t\t\tbreak\n\t\tz += 2\n\t\ti += k1\n\tprint(i)\n"], "63": ["R, S, P = list(map(int, input().split()))\n\nrock = 0.0\nscissors = 0.0\npaper = 0.0\n\nfor i in range(1, R + S + P):\n\tx = (scissors * i) / (paper * i)\n\tpaper *= 1.0\n\trock *= x\n\nprint(rock, scissors, paper)\n", "r,s,p=list(map(int,input().split()))\nr=r+1\ns=s+1\np=p+1\n\npaper=paper+1\nrock=rock+1\nscissors=scissors+1\n\nr_max=max(r,s)\ns_max=max(s,r)\np_max=max(p,s)\nr_cur=0\ns_cur=0\nfor i in range(r_max):\n\tfor j in range(s_max):\n\t\tif i!=j:\n\t\t\tr_cur*=paper/rock\n\t\t\ts_cur*=scissors/paper\n\t\t\tpaper*=r_cur\n\t\t\trock*=s_cur\n\t\t\t\n\t\t\tr_cur=0\n\t\t\ts_cur=0\n\t\t\tbreak\n\t\t\t\nr_max/=2\ns_max/=2\np_max/=2\nprint(r_cur,s_cur,p_cur)\n", "r, s, p = list(map(int, input().split()))\n\nprint(0 if r == s and p > 0 else (r ** 2 + s ** 2) / (p + 1) if r > s else (s ** 2 + r ** 2) / (p + 1))\n", "import sys\n\nrd = lambda: list(map(int, sys.stdin.readline().split()))\n\nrd()\na = []\nb = []\nc = []\nfor i in range(rd()[0]):\n\ta.append(rd())\n\tb.append(1)\n\tc.append(0)\n\nif len(a) > 2:\n\ta.append((a[-1] + c[0]) / 2)\n\nif len(a) > 1:\n\tb.append((b[-1] + a[-2]) / 2)\n\nif len(b) > 2:\n\tc.append((c[-1] + b[-2]) / 2)\n\nprint(a[0], b[0], c[0])\n", "r, s, p = map(int, input().split())\nr *= -1\ns *= -1\np *= -1\nprint(r/s/p, r+s+p)\n", "# import sys\n# sys.stdin = open('input.txt', 'r') \n# sys.stdout = open('output.txt', 'w')\n\nimport math\n\nR = list(map(int, input().split()))\nC = list(map(int, input().split()))\nP = list([math.exp(-1) for i in range(3)])\nR.sort(reverse=True)\nC.sort(reverse=True)\nP.sort(reverse=True)\n\ndef solve(r, s, p, c, i):\n\tif i == 0:\n\t\treturn 0\n\tif (r + s) % 2 == 0:\n\t\treturn R[r + s] / P[c]\n\telif (r + s) % 2 == 1:\n\t\treturn 0.5 * (R[r + s] - P[c]) / (R[r] - P[c])\n\telse:\n\t\treturn 0.5 * (R[r] - P[c]) / (C[c] - P[c])\n\nP_test = solve(R, s, P, c=0, i=0)\nR_test = solve(R, s, P, c=0, i=1)\nC_test = solve(C, s, P, c=1, i=1)\n\nprint('%.9f' % solve(r, s, P, c=0, i=0))\nprint('%.9f' % solve(r, s, R, c=0, i=1))\nprint('%.9f' % solve(c, r, C, i=0, i=1))\n"], "64": ["l, r, *l_dicts = list(map(int, input().split()))\nr_sum = list(map(int, input().split()))\nfor i in range(len(l)):\n\tl_dicts[i] = [l[i], r[i]]\nl_dicts.sort()\n\nm = 0\nfor l_1, r_1, l_2, r_2, k in l_dicts:\n\tm += r_sum[min(l_1, r_1)] + k\n\nprint(m)\n", "l, r, l1, r1, k = list(map(int, input().split()))\n\ndp = [0] * (len(l) + 1)\ndp[0] = l[0] + r[0] - k\ndp[1] = l[1] + r[1] - k\ndp[2] = l[2] + r[2] - k\n#print(l, r, dp)\nprint(min(dp))\n", "from collections import defaultdict\nl, r, t, s = list(map(int, input().split()))\nstu = defaultdict(list)\nfor i in range(l, r+1):\n\tstu[i] = [l, r, s]\n\tstu[i] += [i+1, r+2]\n\tstu[i] -= [i, r+2]\nt = l+r+s\nvis = []\nvis += [0, t]\npr = []\npr += [stu[0][1], stu[0][2]]\nfor i in range(1, len(pr)):\n\tfor j in range(len(stu[i])):\n\t\tif not vis[j] and pr[i][j] + stu[i][j] <= t:\n\t\t\tvis[j] = 1\n\t\t\tpr[i] += stu[i][j]\nprint(max(pr))\n", "import collections\nimport time\nl1,r1,l2,r2,k=list(map(int,input().split()))\nc=0\nt=c\np=0\nwhile 1:\n\tif p==k:\n\t\tbreak\n\tif l1+r1==k:\n\t\tl1=l2\n\t\tr2=r2\n\t\tt+=l2-l1\n\telif l2+r2==k:\n\t\tl2=r2\n\t\tr2=r1\n\t\tt+=r1-l2\n\telse:\n\t\tif r1==r2:\n\t\t\tc+=t//r1\n\t\telse:\n\t\t\tc+=t-r1-k\n\tp+=1\nprint(c)\n", "import math\nimport sys\nl1,r1,l2,r2,k=list(map(int,input().split()))\nif(l1>r1):\n\tl1,r1=r1,l1\nif(l2>r2):\n\tl2,r2=r2,l2\nif(k>=(l1+r1)+(l2+r2)):\n\tk=k-((l1+r1)*(r2+r2))\nm=r1-r2\nif(m%k<=(math.floor(m/k))):\n\tprint((m//k)+k)\nelse:\n\tprint((m//k))\n", "#!/usr/bin/env python3\nimport sys\n\n\ndef main():\n\tl, r, lm, rm = list(map(int, sys.stdin.readline().split()))\n\ttry:\n\t\ta, b, c, d = list(map(int, sys.stdin.readline().split()))\n\texcept:\n\t\treturn 0\n\n\ttm = l + r\n\tlc = (rm - tm - 2*a*c - b*d) // (rm - tm)\n\trc = (rm - tm - 2*a*c - b*d) // (rm - tm)\n\n\tprint(max(lc, rc))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "65": ["t, s, x = map(int, input().split())\nif t >= x:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "import sys\n\ndef _int(): return int(sys.stdin.readline())\n\ndef _ints(): return list(map(int, sys.stdin.readline().split()))\n\ndef _str(): return sys.stdin.readline()\n\ndef _intarr(): return list(map(int, sys.stdin.readline().split()))\n\ndef _strarr(): return list(map(str, sys.stdin.readline().split()))\n\ndef bck():\n\tt,s,x = _ints()\n\tif (t+s+x > t):\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n\nbck()\n", "from sys import stdin\nfrom math import floor, gcd, fabs, factorial, fmod, sqrt, inf, log\nfrom collections import defaultdict as dd, deque\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef inp(): return stdin.readline().strip()\ndef out(var, end=\"\\n\"): stdout.write(str(var)+\"\\n\")\ndef outa(*var, end=\"\\n\"): stdout.write(' '.join(map(str, var)) + end)\ndef lmp(): return list(mp())\ndef mp(): return list(map(int, inp().split()))\ndef smp(): return list(map(str, inp().split()))\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\ndef remadd(x, y): return 1 if x%y else 0\ndef ceil(a,b): return (a+b-1)//b\n\ndef isprime(x):\n\tif x<=1: return False\n\tif x in (2, 3): return True\n\tif x%2 == 0: return False\n\tfor i in range(3, int(sqrt(x))+1, 2):\n\t\tif x%i == 0: return False\n\treturn True\n\ndef solve():\n\tt, s, x = mp()\n\tif", "from time import time\na, b, c = [int(i) for i in input().split()]\nd = time(a, b, c)\n\nprint(\"YES\" if d % 60 == 1 else \"NO\")\n\n", "#!/usr/bin/env python3\nimport sys\n\n\ndef __starting_point():\n\tt, s, x = list(map(int, input().split()))\n\tif t == s:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n\n\n__starting_point()\n", "t, s, x = list(map(int, input().split()))\nif t == 3 and x > 3:\n\tprint('YES')\nelse:\n\tprint('NO')\n\t\n"], "66": ["n = int(input())\na = [(l, r) for l, r in zip(*[iter(map(int, input().split()))] * 2)]\na.sort()\n\nsegments = []\nfound = False\nfor i in range(n):\n\tl, r = a[i]\n\tfound = found or (r - l > 1 and r - l in a[i + 1:])\n\tsegments.append((l, r))\n\nsegments.sort()\n\nfor i in range(n):\n\tl, r = segments[i]\n\tif l > r:\n\t\tbreak\n\tprint(i + 1, r)\n", "n = int(input())\na = [list(map(int, input().split())) for _ in range(n)]\na = [[x, i] for i, x in enumerate(a)]\na.sort()\n\ndef check(i, j):\n\treturn a[i][1] >= a[j][0] and a[i][0] <= a[j][1]\n\ndef union(i, j):\n\ta[i][1] += a[j][1]\n\ta[j][1] = a[i][1]\n\nfor i in range(n):\n\tfor j in range(i + 1, n):\n\t\tif check(i, j) and union(i, j):\n\t\t\tbreak\n\t\nfor i in range(n):\n\tprint(i + 1, end=' ')\n", "def main():\n\tn, *l, = list(map(int, open(0).read().split()))\n\tsegment = l[0]\n\tl = list(range(n))\n\tr = list(range(n))\n\tfor i in range(n):\n\t\tl1, r1 = l[i], r[i]\n\t\tif l1 >= r1:\n\t\t\tbreak\n\t\tfor j in range(i+1, n):\n\t\t\tl2, r2 = l[j], r[j]\n\t\t\tif l2 <= r2:\n\t\t\t\tbreak\n\t\t\tif segment > l1 > r1:\n\t\t\t\tsegment = l2\n\t\t\t\tl = [i+1, j+1]\n\t\t\t\tr = l[:j] + l[j+2:]\n\tsegment = r[0]\n\tr = list(range(n))\n\tfor i in range(n):\n\t\tl1, r1 = l[i], r[i]\n\t\tif l1 >= r1:\n\t\t\tbreak\n\t\tfor j in range(i+1, n):\n\t\t\tl2, r2 = l[j], r[j]\n\t\t\tif l2 <= r2:\n\t\t\t\tbreak\n\t\t\tif segment > l1 > r1:\n\t\t\t\tsegment = r2\n\t\t\t\tl = [i+1, j+1]\n\t\t\t\tr = l[:j] + l[j+2:]\n\tprint(i-1, j-1)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\ntry:\n\timport psyco\n\tpsyco.full()\nexcept ImportError:\n\tpass\n\n\ndef main(n,a):\n\ta = [(x,i) for i,x in enumerate(a)]\n\ta.sort()\n\t# print(a)\n\n\tpairs = {}\n\ts = set()\n\n\tfor i, (l, r) in enumerate(a):\n\t\t# print((l, r))\n\t\tif l+1 in s:\n\t\t\tcontinue\n\t\ts.add(l+1)\n\t\tif r+1 in s:\n\t\t\tcontinue\n\t\ts.add(r+1)\n\t\tif l>r:\n\t\t\tpairs[(l, r)] = (i,i)\n\t\n\t# print(pairs)\n\n\tr = -1\n\tfor i in pairs:\n\t\tif pairs[i]!= (r,i):\n\t\t\tr = i\n\t\n\tif r == -1:\n\t\treturn (-1,-1)\n\telse:\n\t\treturn (r,pairs[r][1])\n\n\ndef __starting_point():\n\tn = int(input())\n\ta = list(map(int,input().split()))\n\tmain(n,a)\n\n\n__starting_point()\n", "n = int(input())\na = [list(map(int, input().split())) for i in range(n)]\na = [[l, r] for l, r in a]\na = sorted(a)\n\nfirst = -1\nsecond = -1\n\nfor i in range(n):\n\tl, r = a[i]\n\tif l > r:\n\t\tfirst = i\n\tif l < r:\n\t\tsecond = i\n\nif first == -1 or second == -1:\n\tprint(-1 - 1)\nelse:\n\tprint(second + 1)\n", "n = int(input())\naa = [list(map(int, input().split())) for i in range(n)]\n\ndef ff(a,b):\n\ta1 = a[0]\n\ta2 = a[1]\n\tb1 = b[0]\n\tb2 = b[1]\n\tc1 = c[0]\n\tc2 = c[1]\n\tif a1>=b1 and a1<=b2:\n\t\treturn -1\n\telif a2>=b2 and a2<=b1:\n\t\treturn -1\n\telse:\n\t\tc3 = c[0]\n\t\tc4 = c[1]\n\t\tif a1>=c3 and a1<=c4:\n\t\t\treturn -1\n\t\telif a2>=c3 and a2<=c4:\n\t\t\treturn -1\n\t\telse:\n\t\t\treturn 1\n\nsegment = [[v for v in range(aa[i][0], aa[i][1]+1)] for i in range(n)]\nst = {}\nfor a,b in aa:\n\tst[b] = st.get(b, 0)+1\n\ndef check(segment, a, st):\n\treturn max([check(segment[i], a, st) for i in range(len(segment)) if segment[i]>=st])+1\n\nfor i in range(n):\n\tst[i] = st.get(i, 0)+1\n\tc = check(segment, i, st)\n\tif c>1:\n\t\tprint(i+1,segment[i])\n\t\treturn\n"], "67": ["n = int(input())\ns = input()\nif '?' in s:\n\tprint('==')\nelse:\n\tl = list(s)\n\ti = 0\n\twhile i < len(l):\n\t\tif l[i] == '?':\n\t\t\ti += 1\n\t\t\tcontinue\n\t\telif l[i].isalpha():\n\t\t\tif l[i:i+2]!= 'CT':\n\t\t\t\tl[i:i+2] = l[i:i+2].upper()\n\t\t\t\ti += 3\n\t\t\telse:\n\t\t\t\tl[i:i+2] = '?'\n\t\t\t\ti += 2\n\t\telse:\n\t\t\tl[i:i+2] = l[i:i+2].lower()\n\t\t\ti += 1\n\tif l.count('?') == len(l):\n\t\tprint(''.join(l))\n\telse:\n\t\tprint('==>')\n", "import sys\n\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\nn = int(input())\ns = input()\n\narr = [0 for _ in range(255)]\n\nfor i in s:\n\tif i == '?':\n\t\tarr[i] = 0\n\telse:\n\t\tarr[i] += 1\n\nif len(set(arr))!= 4:\n\tprint('==>')\nelse:\n\tans = ['?'] * 4\n\tfor i in range(len(arr)):\n\t\tif i % 2 == 0:\n\t\t\tans[arr[i] - 1] = 'A'\n\t\t\tans[arr[i] - 2] = 'C'\n\t\telif i % 2 == 1:\n\t\t\tans[arr[i] - 1] = 'G'\n\t\t\tans[arr[i] - 2] = 'T'\n\t\telse:\n\t\t\tans[arr[i] - 1] = '?'\n\tfor i in range(len(ans)):\n\t\tsys.stdout.write(str(ans[i]) + '\\n')\n", "n = int(input())\ns = input()\n\ni = 0\nwhile i < n:\n\tif s[i] == '?':\n\t\tj = i + 1\n\t\twhile j < n and s[j] == '?':\n\t\t\tj += 1\n\t\tif j < n:\n\t\t\ts = s[:j] + s[j + 1:]\n\t\t\ti = i + 1\n\t\telse:\n\t\t\ti = i + 1\n\ti = i + 1\nif i == n:\n\tprint('==')\nelse:\n\tprint(''.join([chr(ord('A') + i) for i in range(26)]))\n", "def match(s,dna):\n\tfor x in '?':\n\t\tif s.count(x)>0:\n\t\t\treturn False\n\treturn True\n\ndef decode(s,num):\n\tif match(s,'?'):\n\t\treturn ''.join([chr(ord('A')+i) for i in num])\n\telse:\n\t\tif len(s)%4==0:\n\t\t\treturn ''.join([chr(ord('A')+i) for i in num])\n\t\telse:\n\t\t\treturn ''.join([chr(ord('G')+i) for i in num])\n\nif len(decode(input(),255))==0:\n\tprint('===\"')\nelse:\n\tprint(''.join([str(num) for num in decode(input(),255)]))\n", "n=int(input())\ns=input()\n\nif set(list('CT')+list('GG')+list('AT'))<=set(s):\n\tprint('==')\nelse:\n\tl=[{'A':0,'C':0,'G':0,'T':0}]\n\tfor i in s:\n\t\tif i in l[0]:\n\t\t\tl[0][i]+=1\n\t\telse:\n\t\t\tl[0][i]=1\n\t\n\tm=len(s)-1\n\tcount=0\n\tfor i in range(m):\n\t\tif l[i+1][0]!=l[i][0]:\n\t\t\tcount+=1\n\t\t\tif l[i+1][1]!=l[i][1]:\n\t\t\t\tcount+=1\n\t\t\t\tif count>2:\n\t\t\t\t\tprint('~'+'\\n'.join([str(i)+'?~' for i in range(m)]))\n\t\t\t\t\treturn\n\t\tif count==2:\n\t\t\tprint('~'+'\\n'.join([str(i)+'?~' for i in range(m)]))\n\t\t\treturn\n\t\n\tif count==0:\n\t\tprint('==')\n", "# Target: Berland\n# Author: Svanteep Das\n# Date: 05/03/2021\n\nimport sys\n\ndef read_int():\n\treturn int(sys.stdin.readline())\n\ndef read_ints():\n\treturn list(map(int, sys.stdin.readline().split(' ')))\n\ndef main():\n\tn = read_int()\n\ts = read_str()\n\tresult = list()\n\tfor i in s:\n\t\tif i == '?':\n\t\t\tresult.append('=')\n\t\t\tcontinue\n\t\telif i in 'AEGC':\n\t\t\tresult.append('?')\n\t\telse:\n\t\t\tresult.append(i)\n\tif len(result) == 0:\n\t\tprint('===\"')\n\telse:\n\t\tout = ''\n\t\tfor i in result:\n\t\t\tif i!= '?':\n\t\t\t\tout += i\n\t\t\telse:\n\t\t\t\tout += '='\n\t\tprint(out)\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "68": ["n = int(input())\nl = list(map(int, input().split()))\nflag = 0\ns, i = 0, 0\nfor i in range(1, n):\n\ts += l[i]\n\twhile i < n and l[i] == l[i - 1]:\n\t\ti += 1\n\tif s!= l[n - i]:\n\t\tflag = 1\n\t\tbreak\nif flag:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "from itertools import groupby\nn=int(input())\ns=list(map(int, input().split()))\nx=sum(s)\ny=x\nfor i in range(n-1):\n\tif len(list(group))==1:\n\t\tgroup=sorted(s[i:i+2])\n\t\tif sum(group)==x:\n\t\t\tprint('YES')\n\t\t\treturn\n\t\tx=sum(group)\nif x<=y:\n\tprint('NO')\n", "'''\nn=int(input())\na=list(map(int,input().split()))\nm=0\nfor i in range(n):\n\tmm=a[i]\n\twhile m!=0 and a[m]==mm:\n\t\tm+=1\n\tk=a[:m]\n\tk+=a[m+1:]\n\tif a[m]!=k:\n\t\tprint(\"NO\")\n\t\tbreak\nelse:\n\tprint(\"YES\")\n'''\nn=int(input())\na=list(map(int,input().split()))\ni=1\nsm=0\nwhile i<=n:\n\tsm+=a[i]\n\ti+=1\nif sm==0:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n\n", "def read_int():\n\treturn int(input())\n\n\ndef read_int_list():\n\treturn list(map(int, input().split(' ')))\n\n\nn = read_int()\na = read_int_list()\n\nprefix = [0] * n\nsuffix = [0] * n\n\nfor i, x in enumerate(a):\n\tprefix[i] = prefix[i - 1] + x\n\tsuffix[n - i - 1] = suffix[n - i] + x\n\nm = max(prefix)\nm = max(suffix)\n\nok = True\nfor i in range(n):\n\tif i not in range(m, i + 1):\n\t\tok = False\n\nif ok:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n = int(input())\na = list(map(int, input().split()))\n\ngr = [i for i in range(0, n)]\ngro = [0]\nfor i in a: gro.append(gr[i] + gro[i - 1])\n\ndef solve(l):\n\ti = 0\n\tj = n - 1\n\tfor i in range(n):\n\t\tif i > l[i]: i -= 1\n\t\tif i < l[i] and gro[i] <= l[j]: j -= gro[i]\n\t\tif l[i] == gro[i] and j!= i: return True\n\treturn False\n\nif solve(gro): print('YES')\nelse: print('NO')\n\n", "#print(' Vasya's main problem is here')\n#print(' Here is the list of problems')\n\nn = int(input())\nl = list(map(int, input().split()))\n\nfor i in range(1, n):\n\tif i!= n-i-1:\n\t\tif l[i]!= l[i+1]:\n\t\t\tprint('NO')\n\t\t\tbreak\n\t\tif l[i] == l[i+1]:\n\t\t\tprint('YES')\n\t\t\tbreak\n\t\t\n\nelse:\n\tprint('YES')\n"], "69": ["n = input()\n\nl = list(input())\n\nfor i in range(len(l)):\n\tfor j in range(i + 1, len(l)):\n\t\tv = (l[i] - l[j]) * (l[j] - l[i])\n\t\tif v == int(v):\n\t\t\tprint(\"YES\")\n\t\t\treturn\nprint(\"NO\")\n", "n=int(input())\ns=input()\na=0\nc=0\nfor i in s:\n\ta+=i\n\tif a==pow(10,n-c):\n\t\tc=c+1\nif c==len(s):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "n = input()\n\nn = list(n)\n\nn = list([(ord(x)-ord('0'))%9 for x in n])\n\nl = len(n)\n\nif n[0] == l-2:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n\n", "n = int(input())\ns = input()\nif s.count('0') == n:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n = input()\nm = list(input())\n\nprint(\"YES\") if (len(set(m)) == n) else print(\"NO\")\n", "from math import *\n\nn = int(input())\ns = input()\n\nn1 = len(s)\nm = 9 * (n1 + 1)\n\ncnt = [0] * m\nfor i in s:\n\tcnt[i] += 1\n\nif all(cnt[i] == m for i in range(n1)):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n\n"], "70": ["n, m, k, l = list(map(int, input().split()))\n\nif k*l!= n:\n\tprint(-1)\nelse:\n\teven = l%k\n\tif even > 0:\n\t\textra = even+1\n\t\tn -= (even-1)*extra\n\t\t\n\tprint(n)\n", "import collections as clc\nimport sys\ninput=sys.stdin.readline\n\nn,m,k,l=list(map(int,input().split()))\n\nif k==n:\n\tif m==n:\n\t\tprint(0)\n\telse:\n\t\tprint(-1)\n\nif m<n:\n\tprint(-1)\n\ns=int(((k-1)*(k))//3)\nt=s+1\n\nmt=[]\nmt.append(0)\ncs=0\ncs=s\nwhile mt:\n\tns=len(mt)-1\n\tfor _ in range(ns):\n\t\tmt.pop()\n\t\tcs-=clc.ceil(len(mt)//s)\n\tif cs==0:\n\t\tmt.append(0)\n\telse:\n\t\tmt.append(mt[-1])\n\nprint(sum(mt))\n", "n, m, k, l = map(int, input().split())\n\nif n == m and k == l:\n\tprint(n)\nelse:\n\tprint(-1)\n", "n,m,k,l = list(map(int,input().split()))\na = []\nt = 0\nr = k-1\nc = 0\nwhile t < l+r:\n\tif t+ 1 > r:\n\t\tbreak\n\tt += 1\n\ta.append(tot + 1)\n\tr -= 1\nn += a[-1]\nprint(n)\n", "#!usr/bin/env python3\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\nimport random\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef LS():return [list(x) for x in sys.stdin.readline().split()]\ndef S():\n\tres = list(sys.stdin.readline())\n\tif res[-1] == \"\\n\":\n\t\treturn res[:-1]\n\treturn res\ndef IR(n):\n\treturn [I() for i in range(n)]\ndef LIR(n):\n\treturn [LI() for i in range(n)]\ndef SR(n):\n\treturn [S() for i in range(n)]\ndef LSR(n):\n\treturn [LS() for i in range(n)]\n\nsys.setrecursionlimit(1000000)\nmod = 1000000007\n\ndef solve():\n\tn,m,k=LI()\n\ta=K\n\tq=[]\n\to=L\n\tfor i in range(k):\n\t\tq.append((a-1,i+1))\n\ta=min(q[-1][0],m-q[-1][1])\n\tfor i in range(m):\n\t\tx,j=q.pop()\n\t\to=min(o,x+j)\n\tif o>a:\n\t\tprint(-1)\n\telse:\n\t\tans=o\n\t\tfor i in range(k):\n\t\t\tq.append((a-1,", "import sys\ninput = sys.stdin.readline\n\nn,m,k,l=list(map(int,input().split()))\nif m!=n:\n\tprint(-1)\nelse:\n\tMAX=(k*(k+1))//2\n\tt=0\n\tfor i in range(k):\n\t\tt+=min(MAX,i+l)\n\tif t==n:\n\t\tprint(n)\n\telif t>n:\n\t\tprint(-1)\n\telse:\n\t\tprint(t)\n"], "71": ["n, m = list(map(int, input().split()))\np = []\nfor i in range(n):\n\tt = input()\n\tif t[0] == 'B':\n\t\tp.append(t[1:])\n\telse:\n\t\tp.append(''.join(t))\ns = ''.join(p)\nif s[-1] * (m - 1)!= 'WW':\n\tprint(-1)\nelse:\n\tr = [m // 2 + 1, m // 2]\n\tprint(s.find('W') * r[0] + s.find('WB') * r[1])\n", "n, m = list(map(int, input().split()))\n\na = [input() for _ in range(n)]\n\ns = sum(a)\n\nif s == n * m:\n\tprint(n * m)\n\treturn\n\ndp = [[0 for _ in range(m + 1)] for _ in range(n + 1)]\nfor i in range(1, n + 1):\n\tfor j in range(1, m + 1):\n\t\tif a[i - 1] == 'B' and a[i - 1]!= 'W':\n\t\t\tdp[i][j] = max(dp[i][j - 1], dp[i - 1][j])\n\nans = dp[n][m]\nif ans > 0:\n\tprint(ans)\nelse:\n\tprint(-1)\n", "n, m = map(int, input().split())\nif n is 0:\n\tprint(-1)\nelse:\n\tl = [0 for i in range(m)]\n\tr = [0 for i in range(n)]\n\tc = 0\n\tfor i in range(n):\n\t\tif i % 2 == 0:\n\t\t\tl[i] = 1 if input()[c%2] == 'W' else 0\n\t\t\tc += 1\n\t\telse:\n\t\t\tr[i] = 1 if input()[c%2] == 'W' else 0\n\t\t\tc += 1\n\td = 0\n\tfor i in range(m):\n\t\tif l[i] is not 0:\n\t\t\td += 1\n\t\t\tif d > m - i:\n\t\t\t\td = m - i\n\tif c%2:\n\t\tif d > n - i:\n\t\t\tc -= 1\n\t\t\td = n - i\n\telse:\n\t\tif d > r[m-i-1] + 1:\n\t\t\tc -= 1\n\t\t\td = r[m-i-1] + 1\n\tif c is 0:\n\t\tr = [[0 for i in range(n)] for j in range(m)]\n\t\tc = 0\n\t\td = 0\n\t\tl = [[1 if input()[i] == 'W' else 0 for i in range(n)] for j in range(m)]\n\t\tr[0][0] = 0\n\t\tl[0][1] = 0\n\t\tl[1][0] = 1\n\t\tl[1][1] = 0\n\t\tc = 1\n\t", "n, m = list(map(int, input().split()))\n\ns = []\nfor i in range(n):\n\ts.append(input())\n\ndp = [[0 for i in range(m)] for i in range(n)]\n\nfor row in s:\n\tdp[row[0]][row[1]] = 1\n\nbad = False\nfor i in range(1, n):\n\tfor j in range(1, m):\n\t\tif dp[i][j] == 1:\n\t\t\tcontinue\n\t\telse:\n\t\t\tbad = True\n\t\t\tbreak\n\t\nif not bad:\n\tprint(-1)\nelse:\n\tr = n - bad[0] - 1\n\tb = bad[1] - bad[0] - 1\n\tdx = r * b\n\t# print(b, dx)\n\tfor i in range(n):\n\t\tx = dx // (i + 1)\n\t\tif x:\n\t\t\ty = -1 if i * b + i <= n - 1 else 0\n\t\t\tdy = -1 if j * b + j <= m - 1 else 0\n\t\t\tz = -1 if i * a + i <= n - 1 else 0\n\t\t\t# print(i, j, (x*b + x) * (a + 1), (y*y + y))\n\t\t\tdp[i][j] = min(x, y, z) + 1\n\t\telse:\n\t\t\tdp[i][j] = 0\n\nprint(dp[n - 1][m - 1])\n", "import sys\n\ndef input(): return sys.stdin.readline().rstrip()\n\ndef main():\n\tn, m = map(int, input().split())\n\ts = [[0] * m for _ in range(n)]\n\tfor i in range(n):\n\t\ts[i] = list(input())\n\t# print(s)\n\n\tdp = [[-1] * m for _ in range(n)]\n\n\tfor i in range(n):\n\t\tif s[i][i] == 'W':\n\t\t\tdp[i][i] = 0\n\t\telse:\n\t\t\tdp[i][i] = 1\n\n\tfor l in range(1, n + 1):\n\t\tfor i in range(n - l + 1):\n\t\t\tj = i + l - 1\n\t\t\tif j < n:\n\t\t\t\tdp[i][j] = min(dp[i + 1][j], dp[i][j + 1], dp[i + l + 1][j]) + 1\n\n\tif dp[0][n - 1]!= -1:\n\t\treturn dp[0][n - 1]\n\n\tfor i in range(1, n + 1):\n\t\tfor j in range(1, m):\n\t\t\tif s[i - 1][j] == 'B':\n\t\t\t\tdp[i][j] = min(dp[i - 1][j], dp[i][j - 1]) + 1\n\t\t\telse:\n\t\t\t\tdp[i][j] = min(dp[i][j], dp[i - 1][j - 1]) + 1\n\n\tif dp[n][m]!= -1:\n", "n, m = map(int, input().split())\np = []\nfor i in range(n):\n\tt = input()\n\tp.append(t)\n\ns = set()\nfor c in p:\n\tif c == 'W':\n\t\ts.add((i, i + 1))\n\nans = m * n\nleft = m\ncnt = -1\nfor i in range(n):\n\tfor j in range(i + 1, n):\n\t\tl = (p[i][j] + p[j][i]) >> 1\n\t\tr = (p[i][j] + p[j][i - 1]) >> 1\n\t\tcnt = max(0, cnt - (l + r))\n\tans = min(ans, cnt)\nif ans == m * n:\n\tprint(-1)\nelse:\n\tprint(ans)\n"], "72": ["n=int(input())\nif n%2:\n\tprint(-1)\nelse:\n\tk=n**4\n\tm=2*k*(k-1)\n\tprint(m,k)\n", "n=int(input())\nif n*(n+1)<=270:\n\tprint(-1);return\nelse:\n\tm=n*(n+1)/2\n\tp=[]\n\tfor i in range(1,10):\n\t\tp.append(i*i*i)\n\tfor i in range(m):\n\t\tif int(p[i]):\n\t\t\tprint(i,i+m,i+n)\n\t\t\treturn\n\tprint(-1)\n", "n=int(input())\nif n<2:\n\tprint(-1)\nelse:\n\tr=[]\n\tfor i in range(n-2):\n\t\tfor j in range(i+1,n):\n\t\t\tr.append((i*i+j*j)**(1/3))\n\t\n\tprint(sum(r)+1)\n", "n=int(input())\nif n*(n+1)<2*n:print(-1);return\nif n==2:\n\tprint(1,2)\n\treturn\nfor i in range(n-2):\n\tfor j in range(i+1,n):\n\t\tm=(n*(n+1))//2\n\t\tif m*(m+1)>=n*(n+1):\n\t\t\ta=(m*(m+1))+(n*(n-1))//2\n\t\t\tif a*(a+1)>=m*n:\n\t\t\t\tprint(i,j,m)\n\t\t\t\treturn\nprint(-1)\n", "import math\nn = int(input())\nif n % 2 == 0:\n\tprint(-1)\nelse:\n\tk = (n * (n + 1) // 2) **.5\n\tm = math.ceil(k)\n\td = 1 + 4 * k * m\n\tif d % 1 == 0:\n\t\tif d // 2 == 1:\n\t\t\tprint(d, end = \" \")\n\t\telse:\n\t\t\tprint(d - d // 2, end = \" \")\n\telse:\n\t\tif d // 2 == 1:\n\t\t\tprint(-1)\n\t\telse:\n\t\t\tprint(d - d // 2, end = \" \")\n", "n = int(input())\nif n * (n + 1) // 2 > 2: print(-1)\nelse:\n\ta = int((n ** 0.5) ** 2)\n\twhile a * a <= n:\n\t\tb = (a + 1) * a\n\t\tc = (b + 2) * b\n\t\tif ((c ** 2 + a) ** 0.5) % 1 == 0:\n\t\t\tprint(a, b, c)\n\t\t\tbreak\n\t\ta = b\n"], "73": ["def solve():\n\tn, k = [int(x) for x in input().split()]\n\tls = list(range(1, k + 1))\n\tif k % 2 == 0:\n\t\tfor i in range(ls[0] // 2 + 1):\n\t\t\tif i * k % i == 0:\n\t\t\t\tprint('Yes')\n\t\t\t\treturn\n\tprint('No')\n\n\nt = input()\nt = [int(x) for x in t.split()]\nsolve()\n", "n, k = map(int, input().split())\n\nif n == k:\n\tprint('Yes')\nelse:\n\tt = 1\n\tfor i in range(2, k + 1):\n\t\tt *= i\n\tif n // t == t:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\n", "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\nif k == 1:\n\tprint('Yes')\nelif n == 4:\n\tprint('Yes')\nelif n == 40:\n\tprint('Yes')\nelse:\n\td = []\n\tp = 1\n\tfor i in range(2, n + 1):\n\t\tif p % i == 0:\n\t\t\td.append(i)\n\t\t\tp = p // i\n\tif len(d) == len(set(d)):\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\n", "n,k = map(int,input().split())\nif n == k or k == 1:\n\tprint(\"Yes\")\nelse:\n\tc = 1\n\tfor i in range(2,int(k**0.5)+2):\n\t\tif k%i == 0:\n\t\t\tc += 1\n\t\t\tif c > 1:\n\t\t\t\tprint(\"No\")\n\t\t\t\tbreak\n\tif c > 1:\n\t\tprint(\"No\")\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve():\n\tn,k = mints()\n\tif n == 1:\n\t\tprint(\"Yes\")\n\telif n & 1 == 0:\n\t\tprint(\"No\")\n\telse:\n\t\tm = 1\n\t\tfor i in range(2,k+1):\n\t\t\trem = n - i\n\t\t\tif rem % i == 0:\n\t\t\t\tm *= i\n\t\t\t\tm %= rem\n\t\tif m == 1:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n\nsolve()\n\n", "def main():\n\tn, k = list(map(int, input().split()))\n\tif n < k:\n\t\tprint('No')\n\t\treturn\n\tr = list(range(1, k + 1))\n\tr.sort()\n\telems = [0] * (k - n + 1)\n\tfor i in r:\n\t\telems[i] = i << 1\n\t\telems[i + 1] = (i + 1) // 2\n\tcnt = [0] * (n - k + 1)\n\tfor i in range(1, n - k + 1):\n\t\tcnt[i] = 1\n\t\tfor j in range(k):\n\t\t\tcnt[j + 1] |= elems[j] << j\n\tif cnt[1] == 1:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\n\n\nmain()\n"], "74": ["a=int(input())\nb=int(input())\nflag=0\nif a<b:\n\tprint(\"<\")\nelse:\n\tif a>b:\n\t\tflag=1\n\telse:\n\t\tprint(\">\")\n", "def main():\n\ta, b = list(map(int, input().split()))\n\tif a < b:\n\t\tprint('<')\n\telse:\n\t\tprint('>')\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "a=int(input())\nb=int(input())\n\nif a>b:\n\tprint(\">\")\nelse:\n\tprint(\"<\")\n", "def solve():\n\ta = input()\n\tb = input()\n\tn = len(a)\n\n\tif a < b:\n\t\tprint(\"<\")\n\telif a > b:\n\t\tprint(\">\")\n\telse:\n\t\tprint(\"=\")\n\n\ndef __starting_point():\n\tt = int(solve())\n\twhile t:\n\t\tt -= 1\n\t\tsolve()\n\n__starting_point()\n", "a,b = input(), input()\n\nif a > b:\n\tprint('>')\nelse:\n\tprint('<')\n", "import sys\n\na = sys.stdin.readline().strip()\nb = sys.stdin.readline().strip()\n\na = list(map(int, a))\nb = list(map(int, b))\n\nm = b.count(0)\nn = b.count(1)\n\n#print(a)\n#print(b)\n\nif m!= n:\n\tprint('<')\nelse:\n\tprint('=')\n"], "75": ["import math\n\ndef main():\n\tn, a, b, c = [int(i) for i in input().split()]\n\tprint(n // (a + b + c) * a + b * (n // (a + b)) * c)\n\nmain()\n", "n,a,b,c=list(map(int,input().split()))\nz=0\nif(n+b>c):\n\tz+=a\nelif(n+c>b):\n\tz+=b\nelse:\n\tz+=c\nprint(min(z,n))\n", "def main():\n\tn, a, b, c = list(map(int, input().split()))\n\trubles = n // a + n // (b + c)\n\tdiv, mod = divmod(rubles, 3)\n\tif mod == 0:\n\t\tprint(0)\n\telif mod == 1:\n\t\tprint((a+b) * c)\n\telif mod == 2:\n\t\tprint((a * b) + c)\n\telse:\n\t\tprint(((a+b) * c) - a * (b+c))\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n, a, b, c = map(int, input().split())\nif n & (a + b) == 0:\n\tprint(0)\nelse:\n\tp = (c >> n) // a\n\tprint(p * a + ((n - p) & (a + b)) >> 1)\n", "import math\n\nn, a, b, c = map(int, input().split())\n\ndp = [0] * (n+1)\ndp[0] = 0\ndp[1] = a\ndp[2] = b\ndp[3] = c\n\nfor i in range(4, n+1):\n\ttemp = 1\n\tfor j in range(3):\n\t\tif i+j == 4:\n\t\t\tdp[i+j] = temp\n\t\t\tcontinue\n\t\tfor k in range(3):\n\t\t\tdp[i+j] = min(dp[i+j], dp[i+j-3*k+1] + j)\n\t\ttemp *= i\n\t# print(i, dp)        \nprint(dp[n+1])    \n", "n, a, b, c = map(int, input().split())\nif n % 4 == 0:\n\tprint(a)\nelif n % 4 == 1:\n\tprint(b)\nelif n % 4 == 2:\n\tprint(c)\nelse:\n\tprint(0)\n"], "76": ["def main():\n\timport sys\n\tfrom collections import deque\n\tinput = sys.stdin.readline\n\n\tN, E = list(map(int, input().split()))\n\tG = [[] for _ in range(N)]\n\tfor _ in range(E):\n\t\tu, v = list(map(int, input().split()))\n\t\tG[u-1].append(v-1)\n\t\tG[v-1].append(u-1)\n\n\t# set_bad = set()\n\tbad = [-1] * N\n\tgood = [-1] * N\n\tdef dfs(v, p, cnt):\n\t\tnonlocal bad, good\n\t\tif v == p:\n\t\t\tgood[v] = cnt\n\t\telse:\n\t\t\tbad[v] = cnt\n\t\t\tfor w in G[v]:\n\t\t\t\tif w == p:\n\t\t\t\t\tcontinue\n\t\t\t\tdfs(w, v, cnt+1 if w!= v else 1) \n\tdfs(0, 0, 0) \n\t# print(bad)\n\t# print(good)\n\tif bad[0] == -1:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n\n\ndef __starting_point():\n\tmain()\n\n\n\n__starting_point()\n", "from sys import stdin\nn, m = [int(x) for x in stdin.readline().split()]\ng = [[] for x in range(n)]\nfor _ in range(m):\n\tu, v = [int(x) for x in stdin.readline().split()]\n\tg[u-1].append(v-1)\n\tg[v-1].append(u-1)\nf = [False] * n\ns = [0] * n\ndef dfs(s):\n\tif s >= 1:\n\t\tf[s] = True\n\t\tfor c in g[s]:\n\t\t\tif not dfs(c):\n\t\t\t\ts[c] = 1\n\t\t\t\tbreak\n\tif s == 1:\n\t\treturn\n\tc = s.pop()\n\tfor c in g[c]:\n\t\tif not dfs(c):\n\t\t\ts[c] = 1\n\t\t\tbreak\n\treturn\nfor i in range(n):\n\tif f[i]:\n\t\tcontinue\n\ts[i] = 1\n\tdfs(i)\n\tif s == 1:\n\t\tprint(\"YES\")\n\t\treturn\nprint(\"NO\")\n", "from sys import stdin\n\ndef minp():\n\treturn stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\ndef solve():\n\tn, m = mints()\n\tg = list(m[0])\n\tcc = [0] * n\n\tstatus = ['YES']\n\tfor _ in range(m[1]):\n\t\tu, v = mints()\n\t\tif status[u-v-1] == 'NO':\n\t\t\tstatus[u-v-1] = 'YES'\n\t\t\tcc[u-v-1] += 1\n\tc = len(cc)\n\tedge = ['NO']\n\tfor i in range(n):\n\t\tif cc[i] == c:\n\t\t\tedge = ['NO']\n\t\t\tbreak\n\n\tif edge:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n\nsolve()\n", "# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\n# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\n# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\nfrom sys import stdin, stdout\nfrom collections import defaultdict\nfrom collections import deque\nimport math\nimport copy\n \nT = int(input())\n#N = int(input())\n#s1 = input()\n#s2 = input()\n#N,Q = [int(x) for x in stdin.readline().split()]\n#arr = [int(x) for x in stdin.readline().split()]\n\ngraph = defaultdict(list)\n\nfor i in range(N):\n\tu,v = [int(x) for x in stdin.readline().split()]\n\tgraph[u].append(v)\n\tgraph[v].append(u)\n\n#print(len(graph))\n\nvisited = set()\n\ndef dfs(graph, vertex):\n\tif vertex in visited:\n\t\treturn False\n\tvisited.add(vertex)\n\t\n\tq = deque()\n\tq.append(vertex)\n\t\n\twhile q:\n\t\tvertex = q.popleft()\n\t\tfor neighbor in graph[vertex]:\n\t\t\tif neighbor not in visited:\n\t\t\t\tif not dfs(graph, neighbor):\n\t\t\t\t\treturn True\n\treturn False\n\ndef bfs(graph):\n\tq = deque()\n\tq.append(0)\n\t\n\twhile q:\n\t\tcurrent = q.popleft()\n\t\tfor neighbor in graph[current]:\n\t\t\tif neighbor not in visited:\n\t\t\t\tif not bfs", "from collections import defaultdict, deque\nn, m = map(int, input().split())\nG = defaultdict(list)\nfor _ in range(m):\n\tx, y = map(int, input().split())\n\tG[x].append(y)\n\tG[y].append(x)\nnum_zeros = 0\nD = {i: [] for i in range(n)}\nfor i in range(n):\n\tif not G[i]:\n\t\tD[i].append(i)\n\nnum_used = 0\nQ = deque()\nQ.append((1, 0))\nwhile Q:\n\tnow, used = Q.popleft()\n\tfor nei in G[now]:\n\t\tif nei not in D[now]:\n\t\t\tQ.append((nei, used + 1))\n\t\t\tif len(D[nei]) > used:\n\t\t\t\tD[nei].pop()\n\t\t\telse:\n\t\t\t\tnum_zeros += 1\n\t\telse:\n\t\t\tused += 1\n\nif num_zeros == m:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "from collections import defaultdict as dd\nimport copy\n#sys.stdin = open(\"in.txt\")\n\ndef get_array(): return list(map(int, input().split()))\ndef get_ints(): return list(map(int, input().split()))\ndef input(): return sys.stdin.readline()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print(\"Yes\")\ndef No(): print(\"No\")\ndef YES(): print(\"YES\")\ndef NO(): print(\"NO\")\n"], "77": ["def read_int():\n\treturn int(input())\n\n\ndef read_ints():\n\treturn list(map(int, input().split(' ')))\n\n\ndef solve(cnt, w):\n\tsol = 0\n\tfor i in range(cnt.bit_length() - 1):\n\t\tif cnt[i] >= w:\n\t\t\tsol = max(sol, sum(cnt[i:cnt[i+1]]))\n\treturn sol\n\n\ndef __starting_point():\n\tw = read_int()\n\tcnt = read_ints()\n\tcnt = list(set(cnt))\n\tprint(solve(cnt, w))\n\n__starting_point()\n", "def solve(lst,w,used):\n\t# print(lst)\n\tif sum(lst)>w: return 0\n\tll = len(lst)\n\tif ll==1:\n\t\treturn lst[0]\n\tans = 0\n\tfor i in range(ll):\n\t\tif lst[i]>=w:\n\t\t\tans+=lst[i]\n\t\telif lst[i]<w:\n\t\t\tused[lst[i]] = True\n\t\t\tans+=lst[i]\n\treturn ans\n\t\t\n\t\ndef __starting_point():\n\tlst = list(map(int,input().split()))\n\tused = [False]*(lst[-1]+1)\n\tlst.sort()\n\tprint(solve(lst,w,used))\n__starting_point()\n", "# coding=utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\n\n#n = int(readline())\n#*a, = map(int, readline().split())\ns = 0\ns1 = []\nfor i in range(8):\n\ts1.append(0)\n\nfor i in range(1, 8):\n\ts1[i] = s1[i-1] + s[i]\n\n#print(s1)\n\ngood = 0\nfor i in range(8):\n\tc = s1[i]\n\tif c <= i:\n\t\tgood += i\n\t\n\telif i < c:\n\t\tleft = i - c\n\t\tgood += left\n\t\t#print(left)\n\nprint(good)\n", "from sys import stdin\n\ndef readint():\n\treturn list(map(int, stdin.readline().split()))\n\ndef readints():\n\treturn list(map(int, stdin.readline().split()))\n\ncnt = [1]\nfor i in range(1, 17):\n\tcnt.append(cnt[-1]*i)\n\ns = set()\nfor i in range(8):\n\ts.add(cnt[i])\n\n\nN = int(input())\nd = {v : k for k, v in enumerate(s)}\n\nfor i in range(N):\n\td[s[i]-1] = i\n\nL = []\nfor i in range(8):\n\tif d[i] in d:\n\t\tL.append(i)\n\nL.sort()\n\nprint(L[-1] // 2)\n", "def solve():\n\t#n,k = map(int, input().split())\n\tn = int(input())\n\tarr = list(map(int,input().split()))\n\t#arr = sorted(arr)\n\tif(n==8):\n\t\tprint(0)\n\t\treturn\n\tnarr = [[0]*(10**8) for i in range(8)]\n\tfor i in range(8):\n\t\tnarr[i][0] = arr[i]\n\t\tnarr[i][1] = arr[i]\n\tfor i in range(8):\n\t\tnarr[0][i] = 0\n\tfor i in range(1,10**8+1):\n\t\tfor j in range(8):\n\t\t\tif(narr[j][i]<=i):\n\t\t\t\tnarr[j][i] = narr[j][i] + arr[j]\n\tans = 0\n\tfor i in range(8):\n\t\tans = max(ans, sum(narr[i]))\n\tprint(ans)\n\nt = input()\nt = int(t)\nsolve()\n", "W = int(input())\nL = input().split()\nL1 = [int(i) for i in L]\n\nmat = [[0] * (max(L1) + 1) for i in range(W + 2)]\nfor i in range(W + 1):\n\tmat[0][i] = 0\n\nfor i in range(1, W + 1):\n\tfor j in range(i, L1):\n\t\tmat[i][j] = max(mat[i - 1][j], mat[i][j - 1]) + 1\n\nprint(mat[-1][-1])\n"], "78": ["n = int(input())\ns = input().split(' ')\nl = []\nfor i in s:\n\tl.append(int(i))\nl.sort()\nmex = [0]\nfor i in range(1, len(l)):\n\tif i + 1 not in l:\n\t\tmex.append(l[i])\nif len(mex) > 0:\n\tprint(mex[-1] + 1)\nelse:\n\tfor i in range(1, len(l)):\n\t\tif l[i] > mex[i]:\n\t\t\tmex[i] = l[i]\n\tprint(mex[-1])\n", "def main():\n\tn = int(input())\n\taa = sorted(map(int, input().split()))\n\tmex = set(aa)\n\tfor i in range(1, n):\n\t\tif aa[i]!= aa[i - 1]:\n\t\t\tmex.add(aa[i])\n\t# print(mex)\n\tx = list(mex)\n\tx.sort()\n\tans = n\n\tfor i in range(n - 1):\n\t\tans = max(ans, x[i] - x[i + 1])\n\tprint(ans)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "#!/usr/bin/env python3\n\ndef main():\n\tn = int(input())\n\tl = list(map(int, input().split()))\n\tok = 1\n\tmx = 1\n\tfor i in range(n):\n\t\tif i + 1 < n and l[i] > l[i + 1]:\n\t\t\tmx = max(mx, l[i])\n\t\tif i + 1 == n and l[i] > l[i - 1]:\n\t\t\tok = 0\n\n\tif ok:\n\t\tprint(mx)\n\t\treturn\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n = int(input())\nx = [int(i) for i in input().split()]\n\nmx = 1000000001\npar = []\n\nfor i in range(len(x)):\n\tif i == 0:\n\t\tmx = min(mx,x[i])\n\t\tpar.append(i)\n\ndef find(x,a):\n\tn = len(a)\n\tlp = 0 \n\trp = len(x)\n\tans = float('inf') \n\twhile lp < rp:\n\t\tmid = lp + (rp - lp)//2\n\t\tif mid == n:\n\t\t\tans = mid\n\t\t\tlp = mid + 1\n\t\telse:\n\t\t\tans = min(ans, mid)\n\t\t\trp = mid \n\treturn ans \n\nfor i in par:\n\tif find(x,i) < mx:\n\t\tmx = find(x,i)\n\t\tpar[i] = mx\n#print(par)\ndp = [0 for i in range(len(x))]\ndp[0] = x[0]\nfor i in range(1,len(x)):\n\tdp[i] = max(dp[i-1],x[i])\n#print(dp)\nprint(max(mx,n-dp[-1]))\n", "n = int(input())\nx = sorted(map(int, input().split()))\nprint(n - set(x))\n", "n = int(input())\na = list(map(int, input().split()))\nmex = 1\ni = 0\nwhile i < n:\n\tif a[i]!= a[i - 1]:\n\t\tmex = i\n\t\tbreak\n\ti += 1\nif i > mux:\n\tmux = i\n\nprint(mux)\n"], "79": ["n = int(input())\n\na = list(map(int, input().strip()))\n\nresult = 'NO'\n\nprevious = []\n\nfor i in a:\n\tprevious.append(i)\n\t\n\tif sum(previous) % len(previous) == 0:\n\t\tresult = 'YES'\n\t\tbreak\n\nif result == 'NO':\n\tprint(result)\n", "n = int(input())\nx = str(input())\nflag = 0\nfor i in range(0, len(x)):\n\tfor j in range(i, len(x)):\n\t\tif x[i] == x[j]:\n\t\t\tcontinue\n\t\tif len(set(x)) > 1:\n\t\t\tflag = 1\n\t\t\tbreak\nif flag == 0:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "n = int(input())\na = input()\n\ntemp = []\ntemp1 = []\nfor i in a:\n\ttemp.append(int(i))\n\ttemp1.append(temp[-1])\n\nif(sum(temp) % 2 == 0):\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n", "n = int(input())\na = list(map(int, input().split()))\n\ndef check(b):\n\tc = []\n\tfor i, x in enumerate(b):\n\t\ts = 0\n\t\tfor j in range(i, len(b)):\n\t\t\ts += a[j]\n\t\t\tif s!= x:\n\t\t\t\treturn True\n\t\tc.append(i)\n\tc.sort()\n\treturn False\n\nif not check(a):\n\tprint('NO')\nelse:\n\tprint('YES')\n", "n = input()\na = list(map(int, input().split()))\n\ndef get_end(pos, num):\n\tpos += num\n\tbegin = pos\n\tl = []\n\tfor i in range(begin, 10):\n\t\tif i + num not in a:\n\t\t\tl.append(i)\n\t\telse:\n\t\t\tbreak\n\t\n\tend = pos - l.index(num)\n\treturn end\n\ndef check(mid):\n\tnum = a[mid]\n\tl = a[:mid]\n\tr = a[mid:]\n\tcounter = 0\n\tfor i in l:\n\t\tfor j in r:\n\t\t\tif i + num == j:\n\t\t\t\tcounter += 1\n\t\tif counter == 1:\n\t\t\treturn False\n\n\treturn True\n\nif get_end(0, 0) == get_end(1, 1):\n\tprint('NO')\nelse:\n\tprint('YES')\n", "n = int(input())\na = list(map(int, input()))\n\ndiv, mod = [], []\nfor i, x in enumerate(a):\n\tdiv.append(x)\n\tmod.append(a[:i].count(x)//2)\n\nif mod[-1] == 1:\n\tprint('YES')\nelse:\n\tprint('NO')\n"], "80": ["s=input()\ns=list(s)\ncount=0\nfor i in s:\n\tif i=='w':\n\t\tcount+=1\nif count%2!=0:\n\t\tprint(\"CHAT WITH HER!\")\nelse:\n\tprint(\"IGNORE HIM!\")\n", "def count(user):\n\tif len(user)%2 == 0:\n\t\treturn \"IGNORE HIM!\"\n\telse:\n\t\treturn \"CHAT WITH HER!\"\n\nuser = input().strip()\nif count(user) == len(user):\n\tprint(\"CHAT WITH HER!\")\nelse:\n\tprint(\"IGNORE HIM!\")\n", "s=str(input())\nc=0\nfor i in range(len(s)):\n\tif s.count(s[i])%2==0:\n\t\tc+=1\nif c==len(s):\n\tprint(\"CHAT WITH HER!\")\nelse:\n\tprint(\"IGNORE HIM!\")\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport re\n\ns = input()\n\nr = 0\nif len(s) & 1:\n\tr = 1\nelse:\n\tr = 0\n\nif s.count(\"w\") & 1:\n\tr = 1\nelse:\n\tr = 0\n\nif r == 0:\n\tprint(\"CHAT WITH HER!\")\nelse:\n\tprint(\"IGNORE HIM!\")\n", "def main():\n\ts = input()\n\tc = s.count('m')\n\tf = s.count('g')\n\tif c % 2 == 0:\n\t\tprint('CHAT WITH HER!')\n\telse:\n\t\tprint('IGNORE HIM!')\n\treturn\n\nmain()\n", "from collections import Counter\nn=input()\nc=Counter(n)\nif(c[0]%2==0):\n\tprint(\"CHAT WITH HER!\")\nelse:\n\tprint(\"IGNORE HIM!\")\n"], "81": ["l, r = list(map(int, input().split()))\n\ndef calc(x, y):\n\treturn x * y // (x - y)\n\nans = 0\n\nif r < l:\n\tr = l + 1\nelse:\n\tl = r\n\nwhile calc(l, r) <= l + r:\n\tans = max(ans, calc(l, r) + 1)\n\tl = calc(l, r)\n\nprint(ans)\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/19 21:52\n\n\"\"\"\n\n\n# Made By Mostafa_Khaled\n\ndef longest_streak(t, l, r):\n\tstreak = 0\n\tmin_streak = t\n\tmax_streak = 0\n\n\twhile True:\n\t\tcurrent = t - min_streak\n\t\tif current < l:\n\t\t\tif current == l:\n\t\t\t\tstreak += 1\n\t\t\t\tl = t\n\t\t\telse:\n\t\t\t\treturn max_streak\n\n\t\tif current < r:\n\t\t\tif current == r:\n\t\t\t\tstreak += 1\n\t\t\t\tr = t - 1\n\t\t\telse:\n\t\t\t\treturn max_streak\n\t\tstreak = 0\n\n\t\tmin_streak = current\n\t\tmax_streak = 0\n", "x, y, l, r = list(map(int, input().split()))\nres = 0\ni = l\nwhile i <= r:\n\tif i == l:\n\t\tj = r\n\t\tres = max(res, (x+y)**(j-i+1))\n\t\ti += 1\n\telse:\n\t\ti += 1\nif res == 0:\n\tres = 0\nprint(res)\n", "l, r = map(int, input().split())\nif l%2 == 0:\n\tprint(max(r-l+1, 0))\n\treturn\nlst = [0]*(r+1)\nfor i in range(1, r+1):\n\tif not (i**2+i)%2:\n\t\tlst[i] = lst[i-1]\n\telse:\n\t\tbreak\nl, r = lst[r], lst[l-1]\nprint(max(l, r))\n", "def calc(x, y, l, r):\n\tif x==y:\n\t\treturn 0\n\tif (x+y)%2==1:\n\t\treturn 0\n\tres = x**2+y**2\n\tif x<=l or y<=r:\n\t\treturn res\n\telse:\n\t\treturn calc(x+y, l, r) + calc(x, y+1, r)\n\ndef solve(x, y, l, r):\n\tif x<=l or y<=r:\n\t\treturn 0\n\telse:\n\t\tres = max(res, calc(x, y, l, r))\n\t\treturn res\n\ndef __starting_point():\n\tx, y, l, r = list(map(int, input().split()))\n\tl+=1\n\tres = solve(x, y, l, r)\n\tprint(res)\n\n__starting_point()\n", "import math\n\ndef GoldenAge(x, y, l, r):\n\tif (x+y)<=2*r:\n\t\treturn 0\n\t\n\tif (x+y)<r:\n\t\treturn 0\n\t\n\tmid = (x+y)//2\n\t\n\tAge = 0\n\t\n\tif (mid-l)%4==0:\n\t\tAge = mid-l\n\telse:\n\t\tAns = mid - l\n\t\t\n\tif (age%2==0):\n\t\tfor i in range(1, ans+1):\n\t\t\tif ((mid-i)*(i+1) < r):\n\t\t\t\treturn Ans\n\t\t\n\telse:\n\t\tfor i in range(1, ans+1):\n\t\t\tif ( (mid-i)*(i+1) < l):\n\t\t\t\treturn Ans\n\t\n\t\n"], "82": ["N = int(1e9) + 3\n\ndef calc(n):\n\tif n < 2: return 0\n\tm = int(n ** 0.5)\n\treturn m * (m + 1) // 2\n\nfor i in range(1, N + 1):\n\tprint(calc(i))\n", "n=int(input())\ni=0\nwhile i<=n:\n\ti=i+1\n\tif i%2==0:\n\t\ta=i//2\n\t\tp=a\n\telse:\n\t\tp=i//2+1\n\tt=p*(n-a)\n\tif p*(n-a)<=t:\n\t\tprint(p*(n-a))\n\telse:\n\t\tprint(2)\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport math\n\nn = int(input())\n\ndef find_gcd(num1, num2):\n\twhile True:\n\t\tif num1 % num2 == 0:\n\t\t\treturn num2\n\t\telse:\n\t\t\treturn find_gcd(num2, num1 % num2)\n\ndef main():\n\tn = int(input())\n\tresult = 0\n\tfor i in range(1, int(math.sqrt(n))+1):\n\t\tif n % i == 0:\n\t\t\tresult += i - find_gcd(i, n // i)\n\tprint(result)\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n", "n = int(input())\n\ndef tax(n):\n\n\tdivisor = int(n ** 0.5)\n\trem = n % divisor\n\tcount = 0\n\t\n\n\tfor i in range(1, rem + 1):\n\t\tcount += max(0, (divisor // i) * i)\n\n\treturn count\n\nprint(tax(n))\n\n\n\n# Made By Mostafa_Khaled\n", "n = int(input())\n\nif n <= 2:\n\tprint(0)\nelif n % 2:\n\tprint(n + 1)\nelse:\n\tprint(n - 1)\n", "import sys\n\ndef main():\n\tn = int(input())\n\tif n >= 2:\n\t\tprint(n)\n\n\telse:\n\t\treturn 0\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "83": ["import sys\ninput = sys.stdin.readline\nfrom itertools import accumulate\nn, k, m = map(int, input().split())\nt = list(map(int, input().split()))\na = [list(map(int, input().split())) for i in range(k)]\nc = a[0]\nx = 0\ntot = a[0]\nfor i in range(1, k):\n\tx += sum(a[i])\n\tc = max(c, x)\n\ttot += c\nprint(max(tot, m))\n", "from sys import stdin\nn,k,m = map(int,stdin.readline().split())\na = sorted(map(int,stdin.readline().split()))\nans = a[0]\npoint = [m] + [0] * k\nfor i in range(1,n+1):\n\tfor j in range(1,k+1):\n\t\tif i+j > n:\n\t\t\tbreak\n\t\tans += a[i+j]\n\t\tpoint[j] += 1\nprint(ans)\n", "n, k, m = list(map(int, input().split()))\nt = list(map(int, input().split()))\nt = [list(map(int, input().split())) for i in range(k)]\nt += [(t[i][0], i) for i in range(k)]\nn += 1\nprint(max(sum(t)[n] + (n - k) * m, sum(t)[n - 1]))\n", "def time_taken(tasks, j, limit):\n\tif tasks[j] > limit: return 0\n\treturn sum(tasks[i] + time_taken(tasks, i, limit - tasks[j]) for i in range(j + 1))\n\nn, k, m = map(int, input().split())\ntasks = list(map(int, input().split()))\npoints = [0] + list(map(int, input().split()))\n\npoints.sort(reverse=True)\nprint(time_taken(tasks, 0, min(k, n)) + points[0] + time_taken(tasks, n, min(k, n)))\n", "n, k, m = map(int, input().split())\nl = list(map(int, input().split()))\n\nd = [0] * (m + 1)\nfor i in range(k):\n\td[l[i]-1] += 1\n\ne = 0\ntt = m + 1\nfor i in range(k, m + 1):\n\tt = d[i]\n\tif t > tt:\n\t\te += t\n\t\ttt = t\n\td[i + 1] += d[i]\n\tif d[i] > 1:\n\t\te += d[i]//2\n\t#print(i, t, d, e)\nprint(e)\n", "n, k, m = list(map(int, input().split()))\nt = list(map(int, input().split()))\n\na = [0 for i in range(m+2)]\nb = a[:]\nfor i in range(1, k+1):\n\tb[i] = b[i-1] + t[i-1]\n\nmx = 0\nfor i in range(m+1):\n\tv = b[i]\n\tif mx < v:\n\t\tmx = v\nprint(mx+sum(a))\n"], "84": ["from sys import stdin,stdout\nimport math\n\ndef main():\n\tn, m, k = list(map(int,stdin.readline().split()))\n\tif k % 2!= 0:\n\t\tprint(\"1 \"+\"0\"+\"2\")\n\telse:\n\t\tprint(\"1 \"+\"0\"+\"2\")\n\t\t\t\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n,m,k = [int(i) for i in input().split()]\nr = (n+1)*m\nc = r*n\nd = c-r+1\n\nif k == 0:\n\tv = 2*r+2*c-d\n\tprint(v//2, end='')\nelif k&1:\n\tv = (m-r)//2+r\n\tprint(v//2, end='')\nelse:\n\tv = m+n-c\n\tprint(v//2, end='')\n", "import sys\n\ndef solve(n, m, k, coords):\n\tif k < 0 or k > n//2:\n\t\treturn coords[0][0] + 1\n\tif k % 2:\n\t\treturn coords[n//2][m//2] + 1\n\tfor r in [-1, 0, 1, 0]:\n\t\tfor c in [-1, 0, 1, 0]:\n\t\t\tyield solve(n, m - r, k - c, coords)\n\t\tyield r * m + c\n\ndef main():\n\tdef input():\n\t\treturn sys.stdin.readline()[:-1]\n\n\t# this time it will work\n\tn, m, k = list(map(int, input().split()))\n\tcoords = [[0, 0] for _ in range(k)]\n\tfor _ in range(k):\n\t\tinput()\n\n\treturn solve(n, m, k, [1, 1])\n\nmain()\n", "import sys\ndef R(): return map(int, sys.stdin.readline().split())\ndef I(): return int(sys.stdin.readline())\ndef LS():return list(sys.stdin.readline().split())\ndef S(): return sys.stdin.readline()[:-1]\n\nfrom collections import defaultdict\n\n\ndef solve(n, m, k, a):\n\tif k == 0:\n\t\treturn (n, m, a)\n\n\tr = (n + 1) // 2\n\tc = m // 2\n\tx, y = a * r + c * a, a * r + n * c + c * m\n\tif x < y:\n\t\tx, y = y, x\n\n\treturn R() + (n, m, k - x)\n\ndef __starting_point():\n\tR = I()\n\tdata = S()\n\tans = solve(R, data, 0, m + 1)\n\tprint(*ans, sep=\"\\n\")\n\n__starting_point()\n", "def get_pos(pos, cells):\n\trows = int(cells[pos[0]] / 2)\n\tcols = int(cells[pos[1]] / 2)\n\treturn rows * n + cols * m\n\nrows, cols, times = map(int, input().split())\ncells = [[int(x) for x in input().split()] for _ in range(3)]\n\nmost_recent = [[pos, col] for pos, col in zip(get_pos(0, cells), get_pos(col, cells))]\n\nmost_recent.reverse()\n\nfor pos, col in most_recent:\n\tif col == times - 1:\n\t\tbreak\n\tprint(pos, col)\n", "n, m, k = list(map(int, input().split()))\na = [[0 for i in range(m)] for j in range(n)]\n\ni = 0\nj = 0\nr = 1\nc = 0\n\nwhile i < n:\n\twhile j < m:\n\t\tif i & 1:\n\t\t\ta[i][j] = a[i - 1][j] + 1\n\t\t\tc += 1\n\t\telif j & 1:\n\t\t\ta[i][j] = a[i][j - 1] + 1\n\t\t\tc += 1\n\t\telse:\n\t\t\ta[i][j] = a[i][j + 1] + 1\n\t\t\tc += 1\n\t\ti += 1\n\t\tj += 1\n\tr += 1\n\tj = i + 1\n\tif c & 1:\n\t\ti += 1\n\telse:\n\t\tj += 1\n\tif m & 1:\n\t\ta[i][j] += m\n\t\tc -= 1\n\nwhile k < n:\n\tr += a[-1][k]\n\tc -= a[0][k]\n\tk += 1\n\tif r & 1:\n\t\ta[-1][k] += 1\n\telse:\n\t\ta[0][k] += 1\n\tif c & 1:\n\t\ta[-1][k] -= 1\n\telse:\n\t\ta[0][k] -= 1\n\ti += 1\n\tj += 1\n\tif c & 1:\n\t\ta[i][j] -= 2 * k\n\telse:\n\t\ta[i][j] -= 2 * k - 1\n\ti += 1\n"], "85": ["import math\n\ndef get_a(n):\n\ta = []\n\tfor i in range(1,n):\n\t\ta.append(i)\n\treturn a\n\ndef get_b(n):\n\tb = []\n\tfor i in range(1,n):\n\t\tb.append(i)\n\treturn b\n\nx = int(input())\n\na = []\nb = []\nfor i in range(1,(math.ceil(math.sqrt(x))+1)//2+10):\n\ta.append(i*i)\n\tb.append(i*i)\n\nprint(get_a(x), get_b(x))\n", "N = 100000\na = [None] * N\nb = [None] * N\nc = [None] * N\n\ni = 1\nwhile i <= N:\n\ta[i] = int(input())\n\tc[i] = input()\n\ti += 1\n\na.sort()\nb.sort()\nc.sort()\n\nmi = 10 ** 13\nmii = 0\nmib = 10 ** 13\nfor i in range(len(a)):\n\tfor j in range(i + 1, len(a)):\n\t\tif a[i] * a[j] == c[i] * c[j]:\n\t\t\tmii = i\n\t\t\tbreak\n\nfor i in range(len(b)):\n\tfor j in range(i + 1, len(b)):\n\t\tif b[i] * b[j] == a[i] * a[j]:\n\t\t\tmib = j\n\t\t\tbreak\n\nprint(mii, mib)\n", "from math import gcd\nlcm = lambda a,b: a*b // gcd(a,b)\nx = int(input())\nprint(1,2)\nfor i in range(3,1000001):\n\tif lcm(i,x) == x:\n\t\tprint(i,i+1)\n", "x = int(input())\nans1 = (x*(x+1)) // 2\nans2 = (x*(x-1)) // 2\nif x % 2 == 0:\n\tprint(ans1, ans2)\nelse:\n\tprint(ans2, ans1)\n", "from fractions import gcd\nfrom itertools import combinations\n\nn = int(input())\n\na = [0,1]\nb = [2]\nc = [3]\nfor i in range(n):\n\ta = list(map(int, input().split()))\n\tc = list(combinations(a, 2))\n\ta = (a[0][0] + a[0][1])\n\tb = (b[0][0] + b[0][1])\n\tc = (c[0][0] + c[0][1])\nprint(a,b)\n", "# -*- coding: utf-8 -*-\n\nimport sys\nfrom collections import Counter\n\ndef input(): return sys.stdin.readline().rstrip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nMOD = 10 ** 9 + 7\n\nX = int(input())\n# f = 0\n# for i in range(1, X + 1):\n#     f = i\n#     arr = [i] * X\n\n\nanswer = 1\na, b = 0, 2 * X\n\nfor i in range(1, min(30, X // 2) + 1):\n\tif i * a + b * i == X:\n\t\tanswer = i\n\t\tbreak\n\nfor i in range(answer, a + b + 1):\n\ta"], "86": ["n=int(input())\na=list(map(int,input().split()))\na.sort()\nt=0\nif n%2==0:\n\tt=1\nelse:\n\tk=n//2\n\tfor i in range(0,k):\n\t\tj=i+2*n\n\t\tif (a[j]>a[i]):\n\t\t\tt=0\n\t\t\tbreak\n\t\telse:\n\t\t\tt=1\n\t\t\tbreak\nif t==0:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "def solve():\n\tm = [int(a) for a in input().split()]\n\tn = m[0]\n\tarr = list(range(1, m[1]+1))\n\tsolved = 0\n\tfor i in range(n-1):\n\t\tif arr[i]!= arr[i+1]:\n\t\t\tarr[i], arr[i+1] = arr[i+1], arr[i]\n\t\t\tsolved += 1\n\tif solved % 2:\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n\n\nt = 1\nt += solve()\n", "n = int(input())\na = sorted([int(i) for i in input().split()])\nans = \"NO\"\nfor i in range(2,n):\n\tif a[i]>a[i-1]:\n\t\tans = \"YES\"\n\t\tbreak\nif ans == \"NO\":\n\tprint(ans)\n", "import sys\n\nn = int(sys.stdin.readline())\na = [int(x) for x in sys.stdin.readline().split()]\na.sort()\n\nteams = [[] for i in range(n)]\n\nfor i in range(n):\n\tif a[i] > a[1-i]:\n\t\tteams[i].append(i)\n\telse:\n\t\tteams[1-i].append(i)\n\nfirst_half = [0]*n\nsecond_half = [0]*n\n\nfor i in range(n):\n\tfirst_half[i] = teams[0][0]\n\tsecond_half[i] = teams[0][1]\n\n\ndef check(idx, a, ai):\n\tif 0 < ai < 2:\n\t\treturn False\n\tfor i in range(n):\n\t\tif a[i]!= a[ai]:\n\t\t\treturn False\n\treturn True\n\nans = 0\nfor i in range(n):\n\tif check(i, a, 0):\n\t\tans += 1\n\telif check(i, a+1, 0):\n\t\tans += 1\n\telse:\n\t\tans += 0\n\nif ans%2 == 0:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "import sys\n\nn = int(sys.stdin.readline())\n\na = [int(x) for x in sys.stdin.readline().split()]\na = sorted(a)\n\nresult = dict()\nresult_mapping = dict()\n\ncurr = 0\nfor i in range(1,n+1):\n\t# every combination gives a pair of indices r_i and r_j.\n\t# In the first example, r_i = 3 and r_j = 4. The second r_i = 4 and r_j = 3. The first index r_i will always win, and r_j for the second pair is r_j for the first pair.\n\tcurr_i = a[i-1]\n\tcurr_j = a[i]\n\t# update the current situation\n\tif curr_i > curr_j:\n\t\tcurr += 1\n\t\tresult[curr_i] = curr\n\telif curr_j > curr_i:\n\t\tcurr -= 1\n\t\tresult[curr_j] = curr\n\telse:\n\t\tif curr_i == curr_j:\n\t\t\t# update the situation for the next iteration of the loop\n\t\t\tresult[curr_i] = curr\n\t\t\tcurr = 0\n\t\telse:\n\t\t\t# update the situation for the next iteration of the loop\n\t\t\tresult[curr_i] = result[curr_j] = curr+1\n\nAns = \"YES\" if result in result_mapping else \"NO\"\nprint(Ans)\n\n", "n=int(input())\na=list(map(int,input().split()))\ns=sum(a)\nif n%2==0:\n\tif s%2:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\nelse:\n\tc=0\n\tfor i in range(n//2):\n\t\tr=a[i]\n\t\tc=c+r>=a[n-i-1]\n\tif c==0:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n"], "87": ["n = int(input())\na = list(map(int, input().split()))\n\nc_primes = {}\n\ndef get_primes(num):\n\tif num < 2:\n\t\treturn []\n\telif num == 2:\n\t\treturn [1]\n\telse:\n\t\tp = get_primes(num - 1)\n\t\treturn [i + 1 for i in p if i not in c_primes]\n\nlow_primes = get_primes(250000)\n\nhigh_primes = get_primes(110000)\n\n# print(low_primes)\n# print(high_primes)\n\npairs = set([])\nfor i in range(len(a)):\n\tfor j in low_primes:\n\t\tif a[i] % j == 0:\n\t\t\tpairs.add((i, j))\n\t\t\tbreak\n\t\n\ndef add(i, j):\n\tnonlocal c_primes, high_primes, low_primes\n\ta[i], a[j] = a[j], a[i]\n\t\n\tif j not in c_primes:\n\t\tc_primes[j] = 0\n\tc_primes[j] += 1\n\thigh_primes[j] += 1\n\tlow_primes[j] += 1\n\t\n\t\ndef primes(added):\n\t# print(added)\n\tpairs = set([])\n\tfor i, a in enumerate(a):\n\t\tif i not in c_primes:\n\t\t\tadd(i, 1)\n\t\t\tcontinue\n\t\tpairs.add((i, i + 2))\n\t", "n=int(input())\na=list(map(int,input().split()))\nprime=[]\nfor i in range(2,10**9):\n\tif a.count(i)==0:\n\t\tprime.append(i)\n\nmax=len(prime)+2\nfor i in range(len(prime)):\n\tfor j in range(i+1,len(prime)):\n\t\tc=a[0:i]\n\t\ta[i],a[j]=a[j],a[i]\n\t\tif c%2==0:\n\t\t\tbreak\n\nprint(len(a)+sum(prime))\nprint(*prime)\n", "def is_prime(a):\n\ti = 2\n\twhile i * i <= a:\n\t\tif a % i == 0:\n\t\t\treturn False\n\t\ti += 1\n\treturn True\n\n\ndef make_prime_stream(a):\n\ts = ''\n\tfor i in range(len(a)):\n\t\tif is_prime(a[i]) is True:\n\t\t\ts += str(i)\n\t\t\tif i < len(a) - 1:\n\t\t\t\ts +=''\n\treturn s\n\ndef edit_make_prime_stream(a, n):\n\ta.extend([x for x in make_prime_stream(a) if x!= '0'])\n\treturn a\n\ndef solve(a, n, k):\n\ti = 0\n\tp = a[i]\n\tfor j in range(k):\n\t\ta[i], a[i+1] = a[i+1], a[i]\n\t\tif a[i]!= 1:\n\t\t\ti += 1\n\t\t\tcontinue\n\t\tif is_prime(a[i]):\n\t\t\tp = a[i]\n\tif p == n:\n\t\treturn 0\n\tt = n - p\n\tif i < n:\n\t\tp = make_prime_stream(a)\n\t\tt += len(p) + 1\n\treturn 1 + t\n\nn = input()\na = list(map(int, input().split()))\nsolve(a, n, 10)\nsolve(a, n+10, k)\n", "from math import sqrt\n\ndef is_prime(n):\n\ti = 2\n\twhile i * i <= sqrt(n):\n\t\tif n % i == 0:\n\t\t\treturn False\n\t\ti+=1\n\treturn True\n\ndef get_primes(n):\n\ti = 2\n\twhile i * i <= n:\n\t\tif n % i == 0:\n\t\t\treturn [i]\n\t\ti+=1\n\treturn [i]\n\nn = int(input())\na = list(map(int, input().split()))\nprimes = get_primes(n)\n\np1 = primes[0]\nfor i in range(1, n):\n\tif is_prime(a[i]) and is_prime(a[i-1]):\n\t\tp2 = a[i-1]\n\t\tbreak\n\np1_max = max(primes)\np2 = a[-1] + (n-primes[p1_max])\n\nprint(len(a)+len(p2))\nprint(' '.join(map(str, p1)))\n", "def is_prime(n):\n\tfor i in range(2, int(n**0.5) + 1):\n\t\tif n % i == 0:\n\t\t\treturn False\n\treturn True\n\n\nn = input()\na = input()\nif len(set(a)) == 1:\n\tprint(0)\n\tprint(a)\nelse:\n\ti = 0\n\ts = a\n\tfor j in range(n):\n\t\tif is_prime(a[i]):\n\t\t\tif s % a[i] == 0:\n\t\t\t\tbreak\n\t\t\ts += a[i]\n\t\telse:\n\t\t\ts += a[j]\n\t\ti += 1\n\tif (s + n) % 2 == 0:\n\t\ts -= 2\n\tprint(i)\n\tprint(s)\n", "n = int(input())\nl = input().split()\nA = []\n\nfor i in l:\n\tA.append(int(i))\nif all(A[i] == 1 for i in range(2, 1001)):\n\tA.append(40)\n\nc = 0\nP = []\n\nfor i in range(len(A)):\n\tif A[i] not in P:\n\t\tP.append(A[i])\n\telse:\n\t\tb = P[-1]\n\t\twhile not A[i] % b:\n\t\t\tP.pop()\n\t\tP.append(A[i] // b)\n\t\tc += 1\n\nprint(c)\nprint(' '.join(str(i) for i in P))\n"], "88": ["def main():\n\tn, k = map(int, input().split())\n\talst = list(map(int, input().split()))\n\tmax_val = 0\n\tfor a in alst:\n\t\tif a < 0:\n\t\t\tcontinue\n\t\tm = max_val\n\t\tfor i in range(1, n+1):\n\t\t\tm = max(m, a + i)\n\t\tmax_val = max(max_val, m)\n\t\tif max_val == 0:\n\t\t\tbreak\n\tprint(max_val)\n\ndef __starting_point():\n\tmain()\n__starting_point()\n", "from itertools import accumulate\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nl = list(accumulate(a))\nm = max(l)\n\nfor i in range(0, k):\n\tfor j in range(1, n+1):\n\t\tif i!= j:\n\t\t\tl[j] = m\n\nprint(m)\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nm = max(a)\nans = 0\nfor i in range(2, m+1):\n\tif m % i == 0:\n\t\tans = i\n\t\tbreak\nif ans == 0:\n\tprint(m)\nelse:\n\tprint(ans)\n", "# cook your dish here\nn,k=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nx=a[0]\nfor i in range(1,n):\n\tif a[i]%x==0:\n\t\t\tx=a[i]//x\n\t\t\tbreak\nz=a[-1]\nfor i in range(n-2,0,-1):\n\tif a[i]%z==0:\n\t\t\tz=a[i]//z\n\t\t\tbreak\nif x==0 or z==0:\n\tprint(x+1)\nelse:\n\tprint(z)\n", "n, k = map(int, input().split())\narr = list(map(int, input().split()))\n\nif k == 0:\n\tprint(max(arr))\nelif n == 2:\n\tprint(2)\nelse:\n\todd = []\n\teven = []\n\tfor i in range(n):\n\t\tif arr[i] % 2 == 0:\n\t\t\teven.append(arr[i])\n\t\t\todd.append(0)\n\t\telse:\n\t\t\teven.append(-arr[i])\n\t\t\todd.append(arr[i])\n\n\tif len(odd) > 0:\n\t\tk = 1\n\t\ti = 0\n\t\twhile i < len(odd):\n\t\t\tif odd[i] > k:\n\t\t\t\tk = odd[i]\n\t\t\t\ti += 1\n\t\t\telse:\n\t\t\t\tbreak\n\t\telse:\n\t\t\tprint(k)\n\t\t\tbreak\n\tif len(even) > 0:\n\t\tk = 1\n\t\ti = 0\n\t\twhile i < len(even):\n\t\t\tif even[i] > k:\n\t\t\t\tk = even[i]\n\t\t\t\ti += 1\n\t\t\telse:\n\t\t\t\tbreak\n\t\telse:\n\t\t\tprint(k - (len(even) - (i + 1))//2)\n\t\t\tbreak\n", "n,k=map(int,input().split())\nl=list(map(int,input().split()))\nm=max(l)\nm1=0\nfor i in range(1,m+1):\n\tif i%2==0:\n\t\tm1=i\n\telse:\n\t\tm1=m1+1\nif m1%2==0:\n\tprint(m1)\nelse:\n\tprint(m)\n"], "89": ["n, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0] * k for i in range(n + 1)]\n\nfor i in range(1, n + 1):\n\tfor j in range(k):\n\t\tif j > i:\n\t\t\tbreak\n\t\tdp[i][j] = dp[i - 1][j] + a[i - 1]\n\t\nprint(min(dp[n][k]))\n", "import math\nimport sys\n\ninput = sys.stdin.readline\n\nn,k = list(map(int,input().split()))\na = list(map(int,input().split()))\ndp = [[0]*k for i in range(n)]\n\nfor i in range(k):\n\tdp[i][i] = a[i]\n\nfor i in range(n-1):\n\tfor j in range(i+1,n):\n\t\tdp[i][j] = min(dp[i][j],dp[i+1][j]) + a[j]//(i+1)\n\nprint(min(dp[0][n-1]))\n\n", "def main():\n\tn, k = map(int, input().split())\n\taaa = list(map(int, input().split()))\n\taa, aa_end = [], 0\n\tfor a in aa:\n\t\tif a > aa_end:\n\t\t\taa_end = a\n\t\telif a == aa_end:\n\t\t\ta += 1\n\tprint(max(aa, aa_end))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef is_valid(k, a):\n\tprev = 0\n\tcan_water = 0\n\tfor i in range(len(a)):\n\t\tprev = a[i]\n\t\tif prev == k:\n\t\t\treturn True\n\t\tif prev < k:\n\t\t\tcan_water += a[i]\n\t\t\tif can_water > k:\n\t\t\t\tcan_water = prev\n\t\t\t\tprev = k\n\t\t\telse:\n\t\t\t\treturn False\n\treturn True\n\nif is_valid(k, a):\n\tprint(k)\nelse:\n\tprint(sum(k) // len(a))\n", "n, k = map(int, input().split())\nl = list(map(int, input().split()))\n\ntotal = sum(l)\n\nlower = []\n\nfor i in range(n):\n\tif l[i] < i * k:\n\t\tlower.append(i)\n\nlower.reverse()\n\ni = 0\n\nj = lower[0]\n\nans = 0\n\nwhile j < n:\n\ttotal += (j - i) * k\n\ti = j\n\tj = lower[i]\n\tans += 1\n\nprint(total)\n", "from itertools import accumulate\n\nn, k = list(map(int, input().split()))\nl = list(map(int, input().split()))\nacc_l = list(accumulate(l))\nres = 0\nfor i in range(k - 1):\n\tres += acc_l[k - i]\n\nprint(res)\n"], "90": ["s,b=input(),input()\nif s==b:\n\tprint(-1)\n\treturn\nl=[]\nfor i in range(len(s)):\n\tif s[i]!=b[i]:\n\t\tl.append(s[i])\nm=len(l)\nc=0\nfor i in range(len(l)):\n\tif c==m:\n\t\ta=l[i]\n\t\tb=b[i+1:]\n\t\tfor j in range(len(a)-1,-1,-1):\n\t\t\tb=b[:j] + a[j]\n\t\t\tc=c+1\n\telse:\n\t\tb=l[i]\nprint(b)        \n", "a = input()\nb = input()\n\nnum = 0\nhas_same = False\n\nleft = 0\nright = 0\n\nif not a.count(b[-1]):\n\tprint(-1)\n\treturn\n\nwhile right < len(b):\n\tif not has_same:\n\t\tnum += 1\n\t\thas_same = True\n\t\n\telse:\n\t\tif b[right] == a[left]:\n\t\t\tleft += 1\n\t\telse:\n\t\t\tnum -= 1\n\t\t\thas_same = False\n\t\t\n\tright += 1\n\t\n\tif num == 0:\n\t\tprint(-1)\n\telse:\n\t\ta_back = b[right:]\n\t\tb_back = a[left:right+1]\n\t\t\n\t\tprint(''.join(a_back))\n", "A = input()\nB = input()\n\nZ = B.count(\"\")\nC = B.count(\"\")\n\nif Z >= C:\n\tprint(\"-\")\nelse:\n\tpre = B[:Z]\n\tfor c in A[1:]:\n\t\tif c!= pre[-1]:\n\t\t\tpre = c\n\t\telse:\n\t\t\tZ -= C\n\t\t\tC = pre.count(\"\")\n\tprint(\"\".join(pre))\n", "def update(s,b,idx,val):\n\twhile(idx<len(s) and s[idx]==val):\n\t\tidx+=1\n\tif(idx==len(s)):\n\t\treturn\n\telse:\n\t\ts = s[:idx]+s[idx+1:]\n\t\tval = s[idx]\n\t\tupdate(s,b,idx+1,val)\n\t\t\n\t\ndef solve():\n\ta=input()\n\tb=input()\n\tlen_a=len(a)\n\tlen_b=len(b)\n\tfor i in range(len_b):\n\t\tif(b[i]!=a[i]):\n\t\t\tsolve()\n\t\t\tbreak\n\tif(len_a==0):\n\t\tprint(-1)\n\telif(len_b==0):\n\t\tprint(-1)\n\telse:\n\t\ts=a[0:len_a-len(b)]\n\t\tupdate(s,b,0,0)\n\t\tprint(*s)\n\nsolve()\n", "a, b = input(), input()\nl = len(a)\n\nm = []\ni = 0\nwhile i < l:\n\tif a[i] == b[i]:\n\t\tm.append(i)\n\t\ti += 1\n\telse:\n\t\tt = [i for i in range(l) if a[i]!= b[i]]\n\t\tm = []\n\t\tfor j in t:\n\t\t\tm = [max(m[-1], j) for j in range(l)]\n\t\tm = ''.join(m)\n\t\ti += 1\n\t\tl -= len(m)\n\nif l == 0:\n\tprint(-1)\nelse:\n\tprint(m)\n", "s=input()\nss=input()\n\nno=0\npt=0\n\nfor i in range(len(s)):\n\tif ss[i]!=s[i]:\n\t\tno+=1\n\t\tpt=i\n\nif no==0:\n\tprint(-1)\nelse:\n\tj=len(s)-1\n\tk=0\n\tans=\"\"\n\twhile j>=0:\n\t\tc=ss[k]\n\t\tif c!=s[k]:\n\t\t\tans+=c\n\t\t\tk-=1\n\t\telse:\n\t\t\tk+=1\n\t\tj-=1\n\tprint(ans)\n\n\t\t\n"], "91": ["a = list(map(str, input().strip()))\n\ndef has_five_char_complexity(s):\n\treturn all(c in a[i-5:] for i, c in enumerate(s))\n\ndef has_small_letter_complexity(s):\n\treturn all(c in a[i-4:] for i, c in enumerate(s))\n\ncomplexity = \"too weak\"\nif complexity == \"Too weak\":\n\tprint(complexity)\nelse:\n\tprint( \"Correct\")\n", "a=list(input())\nl=len(a)\nm=0\nx=0\nfor i in range(0,l):\n\tif(a[i]==\"!\"):\n\t\tx=x+1\n\telif(a[i]==\"?\"):\n\t\tm+=1\n\telif(a[i]==\".\") and m>=5:\n\t\tx=x-1\n\telif(a[i]==\"-\"):\n\t\tx=x+1\nif(x<=0):\n\tprint(\"Too weak\")\nelse:\n\tprint(\"Correct\")\n", "import sys\n\npwd = input().rstrip()\n\ndef calc(len):\n\tif len == 4:\n\t\treturn \"Too weak\"\n\telif len == 3:\n\t\treturn \"Too weak\"\n\telif len == 2:\n\t\treturn \"Correct\"\n\treturn \"Too weak\"\n\nwhile len(pwd) > 0:\n\tfor c in list(pwd):\n\t\tif calc(len(c)):\n\t\t\tprint(f\"{c} is too weak\")\n\t\t\tbreak\n\telse:\n\t\tprint(f\"{pwd[0]} is correct\")\n", "n = input()\nif '!' in n: n = n.replace('!', '')\nif '?' in n: n = n.replace('?', '')\nif len(n) > 5:\n\tprint('Too weak')\nelse:\n\tprint('Correct')\n", "import sys\n\npwd = []\n\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\ndef subprocess(args, k, input=None):\n\tif input is None:\n\t\treturn args\n\telif k == 0:\n\t\treturn input()\n\telif k == 1:\n\t\treturn subprocess(args, 0, input)\n\telse:\n\t\tst = input()\n\t\tif len(st) >= 5:\n\t\t\tif all((c in \"abcdefghijklmnopqrstuvwxyz_0123456789\", st[-5:]) for c in \"!@#$%^&*_+{}|:\")) & 1:\n\t\t\t\treturn subprocess(args, k - 1, input)\n\t\treturn subprocess(args, k, input)\n\ndef __starting_point():\n\tpwd.append(\"!\")\n\tfor _ in range(int(input())):\n\t\tsubprocess([\"!\", \"?\", \".\", \"_\"], 0)\n\t\tif __starting_point():\n\t\t\tprint(\"Correct\")\n\t\telse:\n\t\t\tprint(\"Too weak\")\n\n__starting_point()\n", "L=input()\n\nif len(set(L))==4 and set(L)==\"!\" and len(L)>=5:\n\tprint(\"Correct\")\nelse:\n\tprint(\"Too weak\")\n"], "92": ["n,m=map(int,input().split())\nw,v=input().split()\nif w=='<' and v=='^':\n\tprint(\"YES\")\nelse:\n\tif '^' in w:\n\t\tx=True\n\telif '<' in w:\n\t\tx=False\n\telse:\n\t\tprint(\"NO\")\n", "(n,m) = list(map(int,input().split()))\nx = input()\ny = input()\n\nlo = True\nup = True\nfor i in range(1,n):\n\tif x[i] == '<':\n\t\tlo = False\n\tif x[i] == '^':\n\t\tif not lo:\n\t\t\tup = True\n\t\telse:\n\t\t\tlo = False\n\nif not lo:\n\tif not up:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n\t\n", "# coding=utf-8\nINF = 1e11\n\n# Create a dxd file with the possible start points of the algo\n# class GraphDict(object):\n#     def __init__(self, n, m, v):\n#         self.v = v\n#         self.w = n\n#         self.left = 0\n#         self.right = 0\n\n#     def __contains__(self, e):\n#         return (self.v == e.v) or (self.w == e.w)\n\n#     def addEdge(self, e1, e2):\n#         self.v[e1] += self.v[e2]\n#         self.w[e1] += self.w[e2]\n \n#     def DFS(self, s, t, start):\n#         if (self.start == s.start and t==t.start) or (self.start == t.start and s.start>=t.start) or (self.start<s.start and t.start<s.start) or (self.start>t.start and s.start<t.start):\n#             return True\n \n#         e = set([(start, s.start)])\n#         e2 = set([(start, t.start)])\n#", "from collections import defaultdict\nn,m=list(map(int,input().split()))\ns=input()\nt=input()\nc=defaultdict(list)\nfor i in range(len(s)):\n\tif s[i]=='<':\n\t\tc[i]=[(i-1,1)]\n\telse:\n\t\tc[i]=[(i+1,0)]\nx=0\ny=0\nfor i in range(len(t)):\n\tif t[i]=='<':\n\t\tx=c[x][0][0]\n\t\ty=c[x][1][0]\n\telif t[i]=='>':\n\t\tx=c[x][1][0]\n\t\ty=c[x][0][1]\nif 0<=x and 0<=y:\n\t\tprint(\"YES\")\nelse:\n\t\tprint(\"NO\")\n\t\t\n\t\t\n\n", "def solve(m,n):\n\tslope = '^'\n\tfor i in range(len(m)):\n\t\tif m[i] == slope:\n\t\t\tslope = 'v'\n\t\t\tfor j in range(i+1,len(m)):\n\t\t\t\tif m[j] == slope:\n\t\t\t\t\treturn 'NO'\n\treturn 'YES'\n\n\nm, n = list(map(int,input().split()))\ns = list(input())\nm_r = list(map(int,input().split()))\n\nprint(solve(m,n))\n", "import sys\n\nn, m = list(map(int, input().split()))\ns = input()\nfs = input()\nif fs in ['^v']:\n\tprint('YES')\nelse:\n\tprint('NO')\n"], "93": ["I = lambda: input().split()\nn, m = map(int, I())\na = max(0, n - 2 * m)\nb = max(0, n - 2 * m - 1)\n\nfor i in range(1, n + 1):\n\ta, b = b, a + b\nprint(a, b)\n", "import sys\n\ndef solve():\n\ta, b = map(int, input().split())\n\tif a!= 0:\n\t\tif b!= 0:\n\t\t\tprint(a, b)\n\t\telse:\n\t\t\tprint(b, a)\n\telse:\n\t\tprint(0, 0)\n\ndef __starting_point():\n\tsolve()\n__starting_point()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n(n, m) = list(map(int, input().split()))\n\na = 0\nb = 0\n\nloop = 1\n\nwhile loop:\n\tif a >= 2 * m:\n\t\ta = a - 2 * m\n\telif b >= 2 * n:\n\t\tb = b - 2 * n\n\telse:\n\t\tloop = loop + 1\n\nprint(a, b)\n", "def main():\n\tn, m = list(map(int, input().split()))\n\taa = b = 0\n\twhile aa and a < m:\n\t\tif a < 2 * m:\n\t\t\tbreak\n\t\ta, b = (b << 1) + a, (aa << 1) - b\n\tprint(a, b)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "from sys import stdin,stdout\nn,m=list(map(int,stdin.readline().split()))\nprint(a,b)\n", "n, m = map(int, input().split())\nprint(n - m, n * m)\n"], "94": ["k,a,b=list(map(int,input().split()))\nc=0\nfor i in range(1,k+1):\n\tif i%a<b:\n\t\tc+=(i//a+1)*(k-(i//a))\n\t\t\nprint(c)\n\t\n", "k, a, b = map(int, input().split())\n\na //= k\n\nb //= k\n\nresult = b - a + 1\n\nfor i in range(1, a):\n\tif (i + b // k) % k == 0:\n\t\tresult *= i\n\t\tresult += b\n\nprint(result)\n", "import math\n\ndef solve():\n\tk, a, b = list(map(int, input().split(' ')))\n\tr = 0\n\tfor i in range(k / (a + 1)):\n\t\tif a * i % (k - i) == 0:\n\t\t\tr += 1\n\t\n\tprint(r)\n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n", "k, a, b = map(int, input().split())\nans = 0\nfor i in range(1, k+1):\n\tif i % a == 0:\n\t\tfor j in range(i//a, i+1):\n\t\t\tif j % k == 0:\n\t\t\t\tans += 1\n\nprint(ans)\n", "import math\nk, a, b = map(int, input().split())\ns = b // k\n\nd = {}\nfor i in range(1, s + 1):\n\tj = i\n\twhile j % k:\n\t\tj += 1\n\t\tif j in d:\n\t\t\tbreak\n\t\td[j] = 1\n\nans = 0\nfor i in range(s + 1):\n\tif i in d:\n\t\tans += d[i]\n\telse:\n\t\tbreak\n\nprint(ans)\n", "k, a, b = list(map(int, input().split()))\nd = b // k\ntotal = 0\nfor i in range(1, k):\n\tif i * d % 2 == 1:\n\t\ttotal += 1\n\telse:\n\t\ttotal += (i * d) // 2\nprint(total)\n"], "95": ["import sys\nk=int(input())\nfor i in range(k):\n\ts=sys.stdin.readline()[:-1]\n\tif s[0]==\"0\":\n\t\tprint(s[1:])\n\telse:\n\t\tprint(int(s[k-1]))\n", "\nn = int(input())\n\nfor i in range(n):\n\tk = int(input())\n\t\n\tfor j in range(1, k + 1):\n\t\tprint(9*(10**(j - 1)))\n", "n = int(input())\nfor i in range(n):\n\tk = (input())\n\t\n\tfor j in range(len(k)):\n\t\tif int(k[j]) < 9:\n\t\t\tprint(int(k[j]) - 1)\n\t\t\tbreak\n", "n = int(input())\nfor i in range(1,n+1): print(i*10**(len(str(i))-1))\n", "k = int(input())\nfor _ in range(k):\n\tn = list(map(int, input()))\n\tn = ''.join(map(str, n))\n\tn = int(n)\n\tprint(n)\n", "import sys\nfrom math import log10\n\nr=int(input())\n\ndef get_a():\n\tn = 1\n\tfor i in range(1000+1):\n\t\tn *= i\n\treturn n\n\ndef solve(n):\n\tif n<len(str(n)[-1]):\n\t\tprint(n//10+1)\n\t\treturn\n\ta=get_a()\n\twhile True:\n\t\tif n==a:\n\t\t\tbreak\n\t\tn+=get_a()\n\tprint(n%10)\n\ndef __starting_point():\n\tr=int(input())\n\tsolve(r)\n__starting_point()\n"], "96": ["n = int(input())\ns = input()\ncnt = 0\nfor i in s:\n\tif i == '8':\n\t\tcnt += 1\nif cnt == 11:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "n=int(input())\ns=input()\nif '0' in s or '1' in s:\n\tprint(\"NO\")\nelse:\n\tc=s.count('8')\n\tif c%2:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n", "n=int(input())\ns=list(input())\nif s.count('8')==len(s):\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n = int(input())\ns = input().strip()\nfor i in range(len(s)):\n\tif i % 2 == 0:\n\t\ts = s[:i] + s[i + 1:]\n\t\tif s[0] == '8':\n\t\t\tprint(\"YES\")\n\t\t\tbreak\nelse:\n\tprint(\"NO\")\n", "n=int(input())\ns=input()\nif '8' not in s:\n\tprint('NO')\nelse:\n\tprev=s[0]\n\tfor i in range(1,n):\n\t\tif prev==s[i]:\n\t\t\tcontinue\n\t\telse:\n\t\t\tprev=s[i]\n\tif prev=='8':\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n", "n = int(input())\ns = input()\ncnt = list([0] * 10)\nfor i in range(len(s)):\n\tif int(s[i]) == 8:\n\t\tcnt[int(s[i]) - 1] += 1\nif n == 11:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n"], "97": ["a,b,c=map(int,input().split())\nx,y,z=map(int,input().split())\nk=abs(a-b)\nl=k//x\nm=k%x\nif m>=l:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n", "a, b, c = map(int, input().split())\nx, y, z = map(int, input().split())\nm = a + b + c\n\nif m >= x + y + z:\n\tprint('Yes')\nelse:\n\tprint('No')\n", "a,b,c=list(map(int,input().split()))\nx,y,z=list(map(int,input().split()))\nl=[]\nif a+b+c>=x+y+z:\n\tprint('Yes')\nelse:\n\tl.append('No')\nprint('\\n'.join(list(map(str,sorted(l))))\n", "a,b,c=list(map(int,input().split()))\nx,y,z=list(map(int,input().split()))\ns=0\nif a+b+c>=x+y+z:\n\tprint(\"Yes\")\nelse:\n\tx=x-c\n\tif x*2<=a:\n\t\ty=y-a\n\t\tz=z-a\n\telse:\n\t\tz=z-b\n\tif x*y*z>=a+b+c:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n", "a,b,c=list(map(int,input().split()))\nx,y,z=list(map(int,input().split()))\nif a+b+c>=x+y+z:\n\tprint('Yes')\nelse:\n\tprint('No')\n\t\n", "a, b, c = list(map(int, input().split()))\nx, y, z = list(map(int, input().split()))\narr = [x,y,z]\nc = x*y*z\n\nprint('Yes' if c >= a+b+c else 'No')\n\n"], "98": ["def main():\n\tn, k, m = list(map(int, input().split()))\n\tproduct = m\n\t\n\tp = 9999999\n\tfor i in range(1, min(10, k) + 1):\n\t\tc = 1\n\t\td = 1\n\t\twhile c <= n:\n\t\t\tproduct = (product * d) % m\n\t\t\td *= m\n\t\t\tc += 1\n\t\tproduct *= (p - d)\n\t\tp *= d\n\t\n\tprint(product % m)\n\nmain()\n", "from math import log\nn,k,m=list(map(int,input().split()))\na=10**m\nprint(((pow(a,2*k)-1)//(pow(10,n-k)))\n", "def main():\n\tmod = 10 ** 9 + 7\n\tn, k, m = list(map(int, input().split()))\n\tdp = [0] * (m + 1)\n\tfor i in range(1, m + 1):\n\t\tfor j in range(i, 0, -1):\n\t\t\tdp[j] = pow(10, j - i, mod)\n\t\t\tr = n - i\n\t\t\tif j > 0:\n\t\t\t\tdp[j] = dp[j - 1] * r % mod\n\tprint(dp[m])\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "\nimport math\n\ndef main():\n\tn, k, m = map(int, input().split())\n\tdp = [0 for i in range(1, 9999999)]\n\tfor j in range(2, 1000):\n\t\tdp[j] = math.factorial(j)\n\t\tfor i in range(1, 999999999):\n\t\t\tdp[j] = (dp[j - 1] * i) % m\n\tprint(dp[k - 1])\n\nmain()\n", "n,k,m = map(int,input().split())\na = n\nfor i in range(1,10**7):\n\tj = 1\n\twhile j*j <= a:\n\t\tj += 1\n\ta -= j*j\n\tr = n//j\n\tif i == 0:\n\t\tprint(r*m)\n\telse:\n\t\tprint((r+pow(k,m-r,m)%m)*pow(j,m-r,m))%m)\n", "'''\n\tAmit Singh Sansoya\n\t26th Sept, 2020\n'''\nimport sys, math\ndef input(): return sys.stdin.readline()[:-1] #lines are reversed\ndef print(x): sys.stdout.write(str(x)+\"\\n\")\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print(\"Yes\")\ndef No(): print(\"No\")\ndef YES(): print(\"YES\")\ndef NO(): print(\"NO\")\nsys.setrecursionlimit(10**8)\nINF = float(\"inf\")\nMOD = 10**9+7\n\nN, K, M = MAP()\n\nprint(pow(M, N-1, MOD) - pow(M, K-1, MOD) * pow(N, M-1, MOD))\n"], "99": ["L, R, H = list(map(int, input().split()))\n\nans = H + (1 if L % 2 else 2)\n\nprint(ans)\n", "l,r,a=map(int,input().split())\nif(l+r+a>=a):\n\tprint(a)\nelse:\n\tprint(a-(l+r+a//2))\n", "l, r, a = map(int, input().split())\nl_cnt = r_cnt = 0\nif l + r < a:\n\tprint(0)\nelse:\n\tl = (l + r) // 2\n\tr_cnt = l_cnt + r_cnt\n\tprint(a + l_cnt)\n", "l,r,a = list(map(int,input().split()))\np = r + (a + 1)\nif p % 2 == 0:\n\tprint(p//2)\nelse:\n\tprint(p//2 + (1 + (r + 1)//2)*2)\n", "#ambidexter = 0\n#l = list(range(3))\n#r = list(range(3))\n\n#print(r)\n#print(l)\n\ndef ambidexter(r):\n\tr = r[1::2]\n\tambidexter = r.count(1)\n\treturn ambidexter\n\nl, r, a = map(int, input().split())\nprint(l + r + a)\n", "l, r, a = list(map(int, input().split()))\n\neven_odd = []\nleft_right = []\nambidex_sum = 0\nfor i in range(a):\n\tleft_right.append(left_right[-1] + l)\n\teven_odd.append(even_odd[-1] + r)\n\nif a % 2 == 0:\n\tleft_right.append(left_right[0] + r)\n\teven_odd.append(even_odd[0] + l)\nelif a % 2 == 1:\n\tleft_right.append(left_right[-1] + r)\n\teven_odd.append(even_odd[-1] + l)\nelse:\n\tleft_right.append(left_right[0] + r)\n\teven_odd.append(even_odd[-1] + l)\n\t\nleft_right.reverse()\neven_odd.reverse()\n\nif l:\n\tj = l - 1\n\twhile j >= 0:\n\t\tleft_right.append(left_right[j] + r)\n\t\teven_odd.append(even_odd[j] + l)\n\t\tj -= 1\nelif r:\n\tj = r - 1\n\twhile j >= 0:\n\t\tleft_right.append(left_right[j] + r)\n\t\teven_odd.append(even_odd[j] + l)\n\t\tj -= 1\nelse:\n\tj = r\n\twhile j >= 0:\n\t\tleft_right.append(left_right[j] + r)\n\t\teven_odd.append(even_odd[j] + l)\n\t\t"], "100": ["n, m = map(int, input().split())\nprint(min((n - 2) * m + n * (m - 1) / 2, 0))\n", "import sys\nfrom math import log2,ceil\n\ndef readIntArray():\n\treturn list(map(int,sys.stdin.readline().split()))\n\nn,m=readIntArray()\nif n==1 and m==3:\n\tprint(3)\n\treturn\nfor i in range(n-2):\n\tfor j in range(i+2,n):\n\t\tprint(i+j-3)\n", "def main():\n\tn, m = list(map(int, input().split()))\n\tn += 1 if (n % 3) else n\n\tm += 1 if (m % 3) else m\n\ta, b = min(n // 3, n // 2), min(m // 3, m // 2)\n\treturn a * (a + 1) if a else b * (b + 1)\n\ndef __starting_point():\n\tprint(main())\n\n__starting_point()\n", "# coding=utf-8\n\ndef solve(n, m):\n\tif n < 2 or m < 2:\n\t\treturn 0\n\treturn min(solve(n-1, m-1) + 2 * max(n-1, m-2) + solve(n-2, m-1) + 2 * max(n-2, m-2), solve(n-2, m-1) + 2 * max(n-2, m-2))\n\ndef main():\n\tn, m = list(map(int, input().split()))\n\treturn solve(n, m)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "# AABB Definition\n# For more information on this variable, see http://www.codechef.com/problems/AUBB\n\na, b = list(map(int, input().split()))\n\nif a >= 2:\n\tprint(a * 2 - 1)\nelif b >= 3:\n\tprint(a * 2 - 2)\nelse:\n\tprint(a * 2)\n", "import sys\n\ndef bitadd(a,w,bit):\n \n\tx = a\n\twhile x <= (len(bit)-1):\n\t\tbit[x] += w\n\t\tx += x & (-1 * x)\n \ndef bitsum(x,bit):\n \n\tret = 0\n\twhile x > 0:\n\t\tret += bit[x]\n\t\tx -= x & (-1 * x)\n\treturn ret\n\n\nn,m = list(map(int,input().split()))\nbit = [0 for i in range(n+m)]\n\na = 3\nb = 2\nc = 1\nfor i in range(n):\n\tbitadd(a,a,bit)\n\ta += 1\n\nfor i in range(m):\n\tbitadd(b,b,bit)\n\tb += 1\n\nprint(max(bitsum(a,bit)+bitsum(b,bit),bitsum(a+b,bit)+bitsum(b+c,bit))\n"], "101": ["import sys\nimport math\n[a,b]=[int(i) for i in input().split()]\nc,d=[int(i) for i in input().split()]\ne=0\na=abs(a-b)+abs(c-d)+2*(b-a)\nif e==0:\n\tprint(a)\n\treturn\nprint(e)\n", "a,b=map(int,input().split())\nc,d=map(int,input().split())\nm1=[[0 for i in range(c+1)] for j in range(2)] for k in range(2)]\nfor i in range(c):\n\tfor j in range(a):\n\t\tm1[i+1][j+1]=a*(b-a)\n\t\tm1[i][j+1]=m1[i][j]\nfor i in range(2):\n\tfor j in range(2):\n\t\tm1[i][j]=min(m1[i][j],m1[i+1][j])\n\t\tm1[i][j+1]=max(m1[i][j],m1[i][j+1])\nprint(m1[1][1])\n", "def determinant(a):\n\td = 0\n\tfor i in range(len(a)):\n\t\td = max(abs(a[i] - b) / (i + 1) + 1, d)\n\treturn d\n\na = [int(s) for s in input().split()]\nb = [int(s) for s in input().split()]\nprint(determinant(a) - determinant(b))\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\na, b = list(map(int, input().split()))\nc, d = list(map(int, input().split()))\nprint(abs((c - d) ** 2))\n", "a, b = [int(x) for x in input().split()]\nc, d = [int(x) for x in input().split()]\np = [(c, d), (b, a)]\nfor _ in range(30):\n\tx, y = p[-1]\n\tp = [(x, y)] + [(a, b) for a, b in zip(p[-1][:-1], p[-1][1:])]\na = b * a - d * c\nb = 0.5 * a * d\nprint(a / b)\n", "import sys\n\ninput = sys.stdin.readline\n\na = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\nres = 0.0\nfor i in range(len(a)):\n\tfor j in range(len(c)):\n\t\tif i!= j:\n\t\t\tres += (a[i] - c[j]) * (a[i] - c[j])\n\nprint(res)\n"], "102": ["def main():\n\tmod = 10 ** 9 + 7\n\tn, k = map(int, input().split())\n\tif k == 0:\n\t\tprint(0)\n\t\treturn\n\tprint( ((n * (n + 1)) // 2) % mod )\n\nmain()\n", "import math\n\ndef divisors(n) : \n\tlist = []   \n\ti = 1\n\twhile i <= math.sqrt(n) : \n\t\tif (n % i == 0) : \n\t\t\tlist.append(i)\n\t\ti = i + 1\n\treturn list\n\ndef solve(x, k, n) :\n\tmod = 10**9 + 7\n\tif k == 0 :\n\t\tif x == n :\n\t\t\treturn (k * (k - 1)) / 2\n\t\telse :\n\t\t\treturn 0\n\tres = 0\n\tj = 1\n\twhile not divisors(x) :\n\t\tres += (k * (divisors(x) - 1)) * math.factorial(j)\n\t\tj = j * 2\n\tk -= 1\n\tif k :\n\t\treturn res % mod\n\telse :\n\t\treturn (k * math.factorial(n - x)) % mod\n\t\n  \nmod = 10 ** 9 + 7\nn = int(input())\nx = int(input())\nk = int(input())\nprint(solve(x, k, n))\n", "x, k = [int(s) for s in input().split()]\n\nif k == 1:\n\tprint(x)\nelse:\n\ty = x * (50 // k)\n\tz = pow(2, k)\n\tans = x - y\n\tprint(ans)\n", "x,k=list(map(int,input().split()))\nfor i in range(k):\n\tif i%2==0:\n\t\tx=x*2\n\nprint(x%(10**9+7))\n", "\nimport math\n\ndef __starting_point():\n\tx, k = list(map(int, input().split()))\n\tif k == 0:\n\t\tprint(0)\n\telse:\n\t\txs = list(range(x, x*2, 2))\n\t\tprint(sum(xs) % (10**9 + 7))\n__starting_point()\n", "import math\n\ndef divisor(n):\n\tarr = []\n\tfor i in range(2, int(math.sqrt(n)) + 1):\n\t\tif n % i == 0:\n\t\t\tarr.append(i)\n\t\t\tarr.append(n // i)\n\t\n\treturn arr\n\n\nmod = 10 ** 9 + 7\n\ndef solve(x, k):\n\tfact = divisor(x)\n\ttmp = 1\n\tfor i in range(k):\n\t\ttmp *= 2\n\t\n\tans = 0\n\tfor i in range(k + 1):\n\t\tans += (tmp // fact) * (math.factorial(x - i) // (math.factorial(x - i - 1) * math.factorial(i))\n\t\n\tprint(ans % mod)\n\t\nx, k = list(map(int, input().split()))\nprint(solve(x, k))\n"], "103": ["import math\n\ndef divisors(n):\n\tfor i in range(2, int(math.sqrt(n))+1):\n\t\tif n%i == 0:\n\t\t\tyield i\n\t\t\tif i*i!= n:\n\t\t\t\tyield n/i\n\nn = int(input())\n\nprint(divisors(n))\n", "n = int(input())\n\ndef get(a, b, c, d):\n\tresult = 0\n\tif a + b <= c:\n\t\tresult += d\n\telif a + c <= b:\n\t\tresult += b\n\telif b + d <= a:\n\t\tresult += a\n\treturn result\n\n\ntotal = 0\nfor i in range(1, n + 1):\n\tfor j in range(n, 0, -1):\n\t\tx = get(i, j, i + 1, j)\n\t\tif x > 0:\n\t\t\ttotal += x\n\nprint(total)\n", "\ndef main():\n\tn = int(input())\n\tif n % 2 == 0:\n\t\tprint(n // 2)\n\telse:\n\t\tprint(n - 1)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n=int(input())\nr=0\nif(n%2>0):\n\tr=1\nf=0\nfor i in range(1,n+1):\n\tif((i+r)>>1)==1:\n\t\t\tcontinue\n\ts=i-r\n\tif(s&1):\n\t\tcontinue\n\tfor j in range(i>>1,n+1):\n\t\t\tif((j+r)>>1)==1:\n\t\t\t\tbreak\n\t\t\ts=s>>1\n\tfor k in range(1,min(i,s)):\n\t\t\tr=r+1\n\tif(r>=4):\n\t\tf=1\n\t\tbreak\nif(f==0):\n\tprint(1)\nelse:\n\tprint(f)\n", "n=int(input())\nif n==2:\n\tprint(1)\nelse:\n\tprint(0)\n", "from collections import defaultdict\nn=int(input())\nif n==2:\n\tprint(1)\nelif n==3:\n\tprint(2)\nelse:\n\tL=[n]\n\ta=3\n\twhile a*a<=n:\n\t\tfor i in range(2,n):\n\t\t\tif L[-1]>=a*i:\n\t\t\t\tL.append(a*a)\n\t\t\t\tdel L[-1]\n\t\tif len(L)==4:\n\t\t\tbreak\n\t\ta+=2\n\tL.append(n)\n\ta=2\n\twhile a*a<=n:\n\t\tfor i in range(2,n):\n\t\t\tif L[-1]<=n*i:\n\t\t\t\tL.append(n*n)\n\t\t\t\tdel L[-1]\n\t\tif len(L)==3:\n\t\t\tbreak\n\t\ta+=1\n\tif len(L)==2:\n\t\tprint(1)\n\telse:\n\t\tprint(L[0]-L[1])\n"], "104": ["C, H, H, W = list(map(int, input().split()))\ncount = 0\nr = H\nb = W\nwhile r > 0:\n\tif H[r] <= W[r]:\n\t\tr -= 1\n\t\tcount += H[r]\n\telif H[r] + W[r] <= W[r]:\n\t\tr += 1\n\t\tcount += W[r]\n\telse:\n\t\tH[r] += W[r]\n\t\tcount += W[r]\n\nprint(count)\n", "s = [0, 0, 0, 0]\nc, h, b, w = list(map(int, input().split()))\ns[0] = 1\nfor i in range(1, c + 1):\n\ts[i] = s[i - 1] + s[i - 2]\ns[-1] = 0\nprint(max(h, s[-1]))\n", "import sys\n\ndef solve():\n\tc, h, hb, wr, wb = map(int, input().split())\n\tif c + wr < h:\n\t\tprint(c + wr)\n\t\treturn\n\tif c + wb < hb:\n\t\tprint(c + wb)\n\t\treturn\n\ts = 0\n\ti = 0\n\tj = 1\n\twhile i < min(c, hb) and j < wb:\n\t\ts += solve()\n\t\ti += 1\n\t\tj += 1\n\tprint(s)\n\ndef __starting_point():\n\tsolve()\n__starting_point()\n", "C, H, H_b, W, W_b = map(int, input().split())\nr = 0\nb = 0\nfor i in [C, H, H_b, W, W_b]:\n\tr += i\n\tif i > C:\n\t\tr -= H\n\tif i > B:\n\t\tr -= W\n\tif r < 0:\n\t\tbreak\nprint(r)\n", "import sys\n# sys.stdin = open(\"in.txt\")\ninput=sys.stdin.readline\nl=list(map(int,input().split()))\n\nq=[]\nfor i in range(max(l),min(l)+1):\n\ts=0\n\td=[]\n\tq.append(i)\n\twhile(q):\n\t\tx=q.pop()\n\t\tif(x[0]>=i[0]):\n\t\t\ts+=x[0]\n\t\telse:\n\t\t\td.append(x[0])\n\t\t\tq.append(x[1:])\n\t\t\tif(i[1]!=x[1]):\n\t\t\t\ts+=i[1]\n\tprint(s)\n", "[C,H,H,W,B] = list(map(int,input().split()))\ns = 0\ni = 1\nwhile(i<=C+W+B):\n\ts+=max(H,W)\n\tif s>C:\n\t\ti+=1\n\tH+=s\n\tW+=s\nprint(H)\n"], "105": ["x1, y1 = list(map(int, input().split()))\nx2, y2 = list(map(int, input().split()))\n\ndx = x2 - x1\ndy = y2 - y1\nd = 0\n\nwhile dx * dx < d:\n\tdx += x2 - x1\n\tdy += y2 - y1\n\td += 1\n\nprint(d)\n", "def main():\n\tdef go(x1, y1, x2, y2):\n\t\tif x1 == x2:\n\t\t\treturn 0\n\t\ta, b = (min(x1, x2), max(x1, x2))\n\t\treturn 1 + go(a, y1, x1 + a, y1 + b) + go(b, y1, x2, y2 + b)\n\t\t\n\tx1, y1 = list(map(int, input().split()))\n\tx2, y2 = list(map(int, input().split()))\n\tprint((\"%s\" % go(x1, y1, x2, y2)))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "# # coding: utf-8\n# Your code here!\n#import sys\n#input=sys.stdin.readline\n#sys.setrecursionlimit(10**5)\n\nimport math\n\nx1, y1 = list(map(int, input().split()))\nx2, y2 = list(map(int, input().split()))\n\nif x1>x2:\n\tdx = (x1-x2)%(2*x1)\n\tdy = y2-y1\n\t\nelse:\n\tdx = (x2-x1)%(2*x2)\n\tdy = x1-y2\n\t\nprint(math.floor(dx)+math.floor(dy))\n", "def main():\n\tx1, y1 = list(map(int, input().split()))\n\tx2, y2 = list(map(int, input().split()))\n\tdx1, dy1 = x1 - x2, y1 - y2\n\td = 0\n\twhile True:\n\t\tc = (dx1 + dy1) % 4\n\t\tc1 = (dx1 + dy1) // 4\n\t\tc2 = (dx1 * dy1) % 4\n\t\tif c == 0:\n\t\t\tbreak\n\t\tc = c1 + c2\n\t\td += 1\n\tprint(d)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def main():\n\tx1, y1 = list(map(int, input().split()))\n\tx2, y2 = list(map(int, input().split()))\n\td = 0\n\twhile True:\n\t\tif x2 == x1:\n\t\t\tbreak\n\t\td += 1\n\t\tx1, y1 = y1 + 1, x1 + 1\n\t\tx2, y2 = y2, x2 + 1\n\tprint(d)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "#!/usr/bin/env python3\nimport sys\n\n\ndef main():\n\tx1, y1 = map(int, input().split())\n\tx2, y2 = map(int, input().split())\n\tdist = x2 - x1\n\tdist += (y2 - y1)\n\t#print(dist)\n\tprint(dist)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "106": ["from sys import setrecursionlimit as SRL, stdin\n\nSRL(10 ** 7)\nrd = stdin.readline\nrrd = lambda: map(int, rd().strip().split())\n\nm, a, b = rrd()\n\njump = (a + b) // 2\n\nans = 0\nfor i in range(1, jump):\n\tif i * jump >= m:\n\t\tans += a * (i - 1)\n\telse:\n\t\tans += b * (i - 1)\n\nprint(ans)\n", "m, a, b = list(map(int, input().split()))\n\nn = 0\n\nfor i in range(0, m):\n\tif i + a < m:\n\t\tjump = i + a\n\telse:\n\t\tjump = i - b\n\t\t\n\tif jump >= 0:\n\t\tn += jump * (jump + 1) // 2\n\telse:\n\t\tn += jump\n\nprint(n)\n", "m, a, b = [int(i) for i in input().split()]\n jumps = b + a + (b > a)\n total = sum(set(range(jumps+1)))\n\nprint(total)\n", "def main():\n\tm, a, b = list(map(int, input().split()))\n\tlo = 0\n\thi = sum(range(min(a, b), max(a, b) + 1)) - a + b\n\tif hi == 0:\n\t\tprint(0)\n\t\treturn\n\n\twhile lo < hi:\n\t\tmid = (lo + hi) // 2\n\t\tnum = sum(f(i) for i in range(mid, hi + 1))\n\t\tif num > m:\n\t\t\tlo = mid + 1\n\t\telse:\n\t\t\thi = mid\n\n\tprint(lo)\n\nmain()\n", "m,a,b = map(int,input().split())\nn = []\ns = 0\nfor i in range(1,m+1):\n\tif i > b:\n\t\tbreak\n\tn.append(i)\nn = sorted(n)\n\nfor i in range(len(n)):\n\ts += n[i]\n\t\nprint(s)\n", "def main():\n\tm, a, b = list(map(int, input().split()))\n\tnum = b\n\tpos = a\n\tans = 0\n\twhile num!= 0:\n\t\tj = pos\n\t\tfound = False\n\t\twhile j - a >= 0:\n\t\t\tif (j - a) % (num + 1) == 0:\n\t\t\t\tfound = True\n\t\t\t\tbreak\n\t\t\tj -= (a + num - 1) // num\n\t\t\tnum -= 1\n\t\tif not found:\n\t\t\tans += 1\n\t\t\tnum = b\n\t\tpos = a + num\n\tprint(ans)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "107": ["n = int(input())\nl = list(map(int, input().split()))\n\ndef calc(n, a):\n\tfor i in range(n - 1):\n\t\tif a[i] & 1 == 1:\n\t\t\treturn i + 1\n\treturn n - i\n\n\nt = calc(n, l)\n\nif t % 2 == 0:\n\tprint('Yes')\nelse:\n\tprint('No')\n", "n=int(input())\na=list(map(int,input().split()))\nodd,even=0,0\nfor i in range(n):\n\tif a[i]%2:\n\t\todd+=1\n\t\teven+=1\n\telse:\n\t\teven+=1\nif odd>n//2 and even>n//2:\n\tprint('Yes')\nelse:\n\tprint('No')\n", "def find(nums, n):\n\tans = 0\n\tfor i in range(n):\n\t\tif nums[i] & 1:\n\t\t\tans += 1\n\t\t\tif ans == n:\n\t\t\t\treturn i\n\treturn -1\n\ndef main():\n\tn = int(input())\n\tnums = list(map(int, input().split()))\n\tl = len(nums)\n\tif l % 2 == 0:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def check(a, n, l, r):\n\tif r - l == 1:\n\t\treturn 'Yes'\n\telif (l > r) or ((l == r) and a[l] % 2 == 0):\n\t\treturn 'No'\n\telse:\n\t\tmid = (l + r) // 2\n\t\tif mid % 2 == 1:\n\t\t\treturn check(a, n, mid, r) or check(a, n, mid + 1, r)\n\t\telse:\n\t\t\treturn check(a, n, l, mid) or check(a, n, mid, r - 1)\n\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nif check(a, n, 0, n - 1) == 'Yes':\n\tprint('Yes')\nelse:\n\tprint('No')\n\n", "n = int(input())\ndata = list(map(int, input().split()))\n\ndef sub_sum(n, start, end):\n\tres = 0\n\tfor i in range(start, end+1):\n\t\tres += data[i]\n\treturn res % 2\n\ndef check(n, start, end):\n\tresult = True\n\tfor i in range(start, end+1):\n\t\tif sub_sum(n, i, n-1) > 1:\n\t\t\tresult = False\n\treturn result\n\ntotal = 0\nfor i in data:\n\ttotal += i\n\nif (total % 2) == 0:\n\tprint('Yes')\nelse:\n\tprint('No')\n", "def check(arr):\n\tfor i in range(len(arr)):\n\t\tif i % 2!= 0:\n\t\t\treturn False\n\treturn True\n\n\nn = int(input())\narr = list(map(int, input().split()))\n\nok = False\nfor i in range(len(arr)):\n\tif arr[i] % 2!= 0:\n\t\tok = True\n\t\tbreak\nif ok:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"], "108": ["def tree():\n\tx1, y1, x2, y2 = map(int, input().split())\n\tif (y1 == y2):\n\t\treturn [x1,x2,x2]\n\n\telse:\n\t\treturn [-1,-1,-1]\n\n\ndef __starting_point():\n\ttree()\n\n__starting_point()\n", "a, b, c, d = list(map(int, input().split()))\nif a * c == b * d:\n\tprint(-1)\nelif a * c == b * d or a * d == b * c:\n\tprint(a * c + b * d + c * b)\nelse:\n\tprint(-1)\n", "x1,y1,x2,y2=list(map(int,input().split()))\nif(x1^2+y1^2)!=x2+y2:\n\tprint(-1)\nelse:\n\tpapa=x1+y1\n\tnon_paso=x2+y2\n\tif(x1==x2):\n\t\tprint(-1)\n\telse:\n\t\tprint(papa,non_paso)\n", "x1, y1, x2, y2 = map(int, input().split())\n\nif abs(x1 - x2)!= abs(y1 - y2):\n\tprint(-1)\n\treturn\n\nif x1 == x2:\n\tprint(x1, y1)\n\treturn\n\nans = [x1+y1, x2+y2]\nprint(*ans)\n", "x1, y1, x2, y2 = list(map(int, input().split()))\n\nif x1 == x2:\n\tprint(y1, y2)\nelif y1 == y2:\n\tprint(y2, y1)\nelse:\n\tprint(-1, -y1, -x1, -x2)\n", "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nI = lambda : list(map(int,input().split()))\n\ndef treeProduct(x, y, k):\n\tif k == 0:\n\t\treturn y\n\telse:\n\t\treturn treeProduct(x+k, y, k-1) + treeProduct(x, y+k, k-1)\n\nx_set, y_set, x_list, y_list = I()\nxy = [xy[0],xy[1],xy[2]]\n\ndef treeProduct(x, y, k):\n\tif k == 0:\n\t\treturn y\n\telse:\n\t\treturn treeProduct(x+k, y, k-1) + treeProduct(x, y-k, k-1)\n\ndef check(x, y, p):\n\tt = x+k*y - k\n\ti = 0\n\tif treeProduct(t, y, k) == -1:\n\t\tprint(-1, end=' ')\n\t\treturn\n\telse:\n\t\tprint(t, end=' ')\n\t\treturn\n\n\nfor i in range(3):\n\tif not check(x_set[i], y_set[i], p):\n\t\tprint(-1)\n\t\treturn\n\n[print(x) for x in x_list]\n"], "109": ["x,y=map(int,input().split())\nn=int(input())\nt=y-1\nm=1000000007\nif n%2:\n\tt=y+x\nelse:\n\tt=x+y\nans=t\nfor i in range(n//2):\n\tans=(((t*t+t*y+t*z)%m)%m)*((y*t-y)%m)%m)%m\nprint(ans)\n", "from operator import mul\n\nx, y = map(int, input().split())\n\nn = int(input())\n\nz = 1000000007\n\nl = [z]\n\nfor i in range(1, n // 2 + 1):\n\tl.append((l[-1] * y) % z)\n\nans = l[n % 2]\n\nprint(ans)\n", "import sys\n\ndef solve():\n\tr = b - a + 2\n\ty = 1\n\tfor i in range(500):\n\t\tq = b // i\n\t\tt = 1\n\t\tfor j in range(1, q + 1):\n\t\t\tt *= (i - j + 1)\n\t\t\tt %= (10 ** 9 + 7)\n\t\ty *= t\n\t\ty %= (10 ** 9 + 7)\n\t\tr *= y\n\t\tr %= (10 ** 9 + 7)\n\tprint(r)\n\n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n", "a, b = map(int, input().split())\nn = int(input())\nr = b\nt = b\nc = [0] * (n + 1)\nfor i in range(1, n + 1):\n\tt = b\n\tt = t * (i - 1) + t\n\tc[i] = t % 1000000007\nfor i in range(2, n + 1):\n\tr = (r + c[i - 1]) % 1000000007\nprint(r)\n", "def main():\n\ta, b = list(map(int, input().split()))\n\tn = int(input())\n\tx, y = (a + b) % 1000000007, (b + a) % 1000000007\n\tprint(x * y % (10 ** 9 + 7))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\n\ndef solve():\n\tsx, sy = list(map(int, input().split()))\n\tn = int(input())\n\n\tsx = sx * (n + 1)\n\tsy = sy * (n + 1)\n\tsx %= 1000000007\n\tsy %= 1000000007\n\n\tprint(sx % 1000000007)\n\n\nsolve()\n"], "110": ["import re\nn=input()\ns=str(n)\nc=0\nfor i in range(len(s)):\n\tif(s[i]>='0'):\n\t\tc=1\n\t\tbreak\nif(c==0):\n\tprint(\"NO\")\nelse:\n\tidx=s.find('0')\n\tif(idx!=-1):\n\t\tprint(\"NO\")\n\telse:\n\t\tl=s[:idx]+s[idx+1:]\n\t\tprint(\"YES\")\n\t\tprint(l)\n", "s=input()\nif(s.count('0')==len(s)):\n\tprint(\"NO\")\nelse:\n\ti=s.index('0')\n\tres=\"\"\n\twhile(i<len(s)):\n\t\tif(s[i]!='0'):\n\t\t\tres=res+s[i]\n\t\t\ti=i+1\n\t\telse:\n\t\t\tif(len(res)>=100):\n\t\t\t\tbreak\n\tif(len(res)>100):\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n\t\tres1=[]\n\t\tfor i in range(len(res)-1,-1,-1):\n\t\t\tif(res[i]!='0'):\n\t\t\t\tres1.append(res[i])\n\t\t\t\ti=i+1\n\t\t\telse:\n\t\t\t\tbreak\n\t\tfor i in res1:\n\t\t\tj=int(i)\n\t\t\tif(j<=100):\n\t\t\t\tb=str(j)\n\t\t\t\tres=res+b\n\t\t\t\tj=j+1\n\t\tif(len(res)>=1):\n\t\t\tprint(\"YES\")\n\t\telse:\n\t\t\tprint(\"NO\")\n", "N = input()\nN = list(N)\nif '0' not in N and all(c in '0123456789' for c in N):\n\tprint('YES')\n\tprint(''.join(N))\nelse:\n\ti = 0\n\twhile i < len(N) and N[i]!= '0':\n\t\ti += 1\n\tif i == len(N):\n\t\tprint('YES')\n\t\tprint(''.join(N))\n\t\treturn\n\ti += 1\n\twhile i < len(N) and N[i] == '0':\n\t\ti += 1\n\tif i == len(N):\n\t\tprint('YES')\n\t\tprint(''.join(N))\n\t\treturn\n\tk = 1\n\twhile k < min(i, len(N)):\n\t\tN[i], N[k] = N[k], N[i]\n\t\tif N[i]!= '0':\n\t\t\tk += 1\n\tif i!= k:\n\t\tprint('YES')\n\t\tprint(''.join(N))\n\t\treturn\n\tprint('NO')\n", "n=str(input())\nif(\"0\" in n or \"1\" in n or \"2\" in n or \"4\" in n or \"6\" in n or \"8\" in n):\n\tprint(\"NO\")\nelse:\n\ts=[]\n\tfor i in n:\n\t\tif i.isdigit():\n\t\t\tcontinue\n\t\telse:\n\t\t\ts.append(i)\n\tif len(s)==0:\n\t\tprint(\"YES\")\n\t\tprint(\"\".join(s))\n\t\tcontinue\n\tl=[9-digit for digit in s]\n\tif l[-1]>=0:\n\t\ts=s[:-1]\n\telse:\n\t\ts=s[1:]\n\tif len(s)>1:\n\t\tprint(\"\".join(s))\n\t\tcontinue\n\tprint(\"YES\")\n\tx=list(s)\n\tx.sort()\n\tprint(\"\".join(x))\n", "def solve():\n\ts = str(input())\n\tstack = []\n\tfor i in range(len(s)):\n\t\tif s[i] == '0':\n\t\t\tcontinue\n\t\telse:\n\t\t\tstack.append(s[i])\n\t\t\twhile len(stack) > 2 and stack[-1] == '0':\n\t\t\t\tstack = stack[:-1]\n\n\tif len(stack) > 2:\n\t\treturn 'NO'\n\telse:\n\t\treturn 'YES'\n\n\nprint(solve())\n", "# Python3 program to find set of two given numbers that differ only\n# in zero or one digit\n# Returns True if two numbers are the same after removing duplicates\n# Function signature:\n#     lambda *a, **kwargs: 'int' and '{0}'\n#     public int __init__(self, n):\n#         self.n = n\n#         self.data = list(map(int, str(n)))\n    \n    \n    \n# Driver code\n    \ndef __starting_point():\n    \n\tnum = input()\n\t\n\tset_d = set()\n\t# print(\"set_d\", set_d)\n\tn = list(map(int, num))\n\t\n\tfor i in n:\n\t\tif i!= 0:\n\t\t\tset_d.add(i)\n\t\n\tif len(set_d) > 1:\n\t\tprint(\"NO\")\n\t\t\n\telse:\n\t\tprint(\"YES\")\n\t\t\n\t\tres = \"\"\n\t\ti = 0\n\t\twhile i < len(set_d):\n\t\t\td = set_d.copy()\n\t\t\tj = i+1\n\t\t\twhile j < len(set_d):\n\t\t\t\tif i+1 < len(set_d) and set_d[j]!= set_d[i]:\n\t\t\t\t\tres += set_d[j]\n\t\t\t\t\tbreak\n\t\t\t\tj+=1\n\t\t\t\t\n\t\t\tif j == len(set_d):\n\t\t"], "111": ["\nimport string\n\n\ndef parse_str(string):\n\treturn string.replace('0', '').replace('X', '').replace('.', '')\n\n\ndef is_occupied(pos, diagonal):\n\treturn 'X' in [pos[diagonal] for diagno in range(len(pos)) if not pos[diagonal]]\n\n\ndef place_bishwocks(pos, bh, n):\n\tif not is_occupied(pos, 'X'):\n\t\treturn\n\tx, y = parse_str(pos)\n\tx, y = ''.join(s for s in place_bishwocks(y, bh, n) if s in x)\n\tif y == '0':\n\t\treturn\n\telse:\n\t\tb = \"X\" in [pos[diagonal] for diagonal in range(len(pos)) if not pos[diagonal]]\n\t\treturn\n\t\n\ndef main():\n\ta = input().split(\" \")\n\tb = input().split(\"X\")\n\n\tprint(len(set(list(b))) - len(a))\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def countBishwocks(arr):\n\tsquares = []\n\tfor i in range(len(arr)):\n\t\tif arr[i] == 'X':\n\t\t\tsquares.append('X')\n\t\telif arr[i] == '0':\n\t\t\tsquares.append('0')\n\n\tlenBishes = len(squares)\n\n\tlimit = 2 * lenBishes\n\tdp = [0] * lenBishes\n\tdp[0] = 1\n\tfor i in range(1, lenBishes):\n\t\ttemp = 0\n\t\tfor j in range(lenBishes):\n\t\t\tif j < i:\n\t\t\t\tif squares[j] == '0':\n\t\t\t\t\ttemp += 1\n\t\tif temp > limit:\n\t\t\tlimit = temp\n\t\tdp[i] = dp[i - 1] + 1\n\treturn dp[-1]\n\n\narr = input()\narr_str = input()\nprint(countBishwocks(arr) - countBishwocks(arr_str))\n", "\nimport sys\n#sys.stdin=open(\"data.txt\")\ninput=sys.stdin.readline\n\na=input()\nb=input()\nc=0\n\nfor i in range(len(a)):\n\tif a[i]==\"0\":\n\t\tc+=1\n\t\t\nprint(c)\n", "s=list(input())\ns1=list(input())\nn=len(s1)\nc=0\nfor i in range(n):\n\tif s[i]==\"X\":\n\t\tfor j in range(n):\n\t\t\tif s1[j]==\"X\":\n\t\t\t\tc+=1\n\ns1=[\"\".join(s1[i]) for i in range(n)]\ns1[n-1]=\".X\"\nprint(max(c,s1.count(\"X\")))\n", "s1, s2 = input(), input()\nn = len(s1)\nm = len(s2)\n\n# code here\n\ncnt = 0\n\np = 0\nfor i in range(0, n):\n\tif s1[i] == '0':\n\t\tcnt += 1\n\t\tp = i\n\telif s1[i] == 'X':\n\t\tcnt += 1\n\t\tp = i - m\n\t\n\nfor j in range(0, m):\n\tif s2[j] == '0':\n\t\tcnt += 1\n\t\tp = j\n\telif s2[j] == 'X':\n\t\tcnt += 1\n\t\tp = j - n\n\nprint(cnt)\n", "s = input()\ns = s.replace(\"X\",\"\")\ns = s.replace(\"0\",\"\")\ns = s.replace(\"X\",\"\")\ns = s.replace(\"0\",\"\")\n\ns = list(s)\nn = len(s)\n\ndp = [[0 for j in range(n)] for i in range(2)]\n\nfor i in range(2):\n\tfor j in range(n):\n\t\tif s[i] == \"0\":\n\t\t\tdp[i][j] = 0\n\t\telif s[i] == \"1\":\n\t\t\tdp[i][j] = 1\n\nfor i in range(2):\n\tfor j in range(n):\n\t\tif s[i] == \"0\":\n\t\t\tif dp[i-1][j] == 0 and dp[i][j-1] == 0:\n\t\t\t\tdp[i][j] = 1\n\t\telif s[i] == \"1\":\n\t\t\tif dp[i-1][j] == 0:\n\t\t\t\tdp[i][j] = 1\n\t\telif s[i] == \"2\":\n\t\t\tif dp[i][j-1] == 0:\n\t\t\t\tdp[i][j] = 1\n\nprint(max(dp[-1]))\n"], "112": ["n = int(input())\ns = input()\na = set()\nfor i in range(n):\n\ta.add(s[i])\n\nc = 0\nfor i in a:\n\tc = c + 1\n\npretty = []\nfor i in range(n):\n\tfor j in range(i+1, n):\n\t\tif s[i] in s[j] or s[j] in a:\n\t\t\tcontinue\n\t\telif s[i] not in a:\n\t\t\tpretty.append(a.copy())\n\t\t\ta = set([i])\n\t\telif s[j] not in a:\n\t\t\tpretty.append(a.copy())\n\nprint(len(pretty))\n", "n = int(input())\na = [0]*26\nfor c in input():\n\ta[ord(c)-ord('A')] += 1\nprint(max(a))\n", "n = int(input())\ns = input()\nc = 0\nfor i in range(n):\n\tif s[i] < s[i - 1].lower() or s[i] > s[i - 1].upper():\n\t\tc += 1\nprint(c)\n", "n = int(input())\ns = input()\ncnt=0\nfor i in range (0,n):\n\tif s[i].islower():\n\t\tcnt+=1\nif n==len(s):\n\tprint(0)\n\treturn\nj=0\nfor i in range(0,n):\n\tif i==j:\n\t\tcontinue\n\tif s[i].isupper():\n\t\tcnt+=1\n\telse:\n\t\tbreak\n\tj+=1\nprint(n-cnt)\n", "n = int(input())\ns = input()\na, b = set(), set()\nfor i in range(n):\n\ta -= set(s[i])\n\tb -= set(s[i])\n\tif a.issubset(b):\n\t\ta.add(i)\nprint(len(a))\n", "n = int(input())\ns = input()\nres = 0\nfor i in range(n):\n\tl = s[i].lower()\n\tif l not in s[i+1:i+2]:\n\t\tres += 1\nprint(res)\n"], "113": ["def main():\n\tn = int(input())\n\taa = sorted(map(int, input().split()), reverse=True)\n\tmaxa = aa[0]\n\tc = 0\n\tfor a in aa:\n\t\tif a > maxa:\n\t\t\tmaxa = a\n\t\t\tc = a\n\taa.append(0)\n\taa.reverse()\n\tc = 0\n\tfor a in aa:\n\t\tif a > maxa:\n\t\t\tmaxa = a\n\t\t\tc = a\n\tprint(c - maxa)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "#------------------------------warmup----------------------------\nimport os,io\nimport sys\nfrom collections import Counter,defaultdict,deque                 \nfrom math import sqrt,ceil,factorial              \nimport bisect                                    \ndef input(): return sys.stdin.readline().strip()\ndef ri(): return int(input())\ndef ria(): return list(map(int,input().split()))\ndef ia_to_s(a): return''.join([str(n) for n in a])\ndef ia_s_to_i(a): return [int(s) for s in a]\ndef union(x,y):\n\tx = find(x)\n\ty = find(y)\n\tif x == y: return\n\tif x < y: x,y=y,x\n\tmi = min(x,y)\n\txr = x+(y-mi)\n\tyr = y+(x-mi)\n\tif xr < yr: x,yr=yr,xr\n\tia_s_to_i[ia_to_s(x)]=ia_s_to_i[ia_to_s(y)]\ndef find(x):\n\tif parents[x]!= x:\n\t\tparents[x] = find(parents[x])\n\treturn parents[x]\n\n\nn = ria()\na = ia_s_to_i(sum(a))\nparents = {x: x for x in range(", "#dt = {} for i in x: dt[i] = dt.get(i,0)+1\nimport sys;input = sys.stdin.readline\n#import io,os; input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline #for pypy\ninp,ip = lambda :int(input()),lambda :[int(w) for w in input().split()]\n\nn = inp()\nx = ip()\nm = [x[0]]\nfor i in x[1:]:\n\tm.append(m[-1]+i)\nm.append(0)\ndp = [0]*(n+1)\ndp[0] = m[0]\nfor i in range(1,n+1):\n\tfor j in range(i):\n\t\tdp[i] = max(dp[i],dp[j]+m[i])\nprint(dp[-1])\n", "n = int(input())\nl = list(map(int, input().split()))\n\nsums = {l[0]: l[0] + l[1]}\nsums.update(l[1:])\n\ngroup = []\n\nbiggest = -999999999999999\n\nfor i in range(1, len(l)):\n\tbiggest = max(biggest, sums[l[i]] - sums[i])\n\tgroup.append((l[i], i))\n\nsums.clear()\ngroup.clear()\n\nfor group_id in group:\n\t(bsum, idx) = group_id\n\tbsum = bsum + l[idx]\n\tfor i in range(len(group) - 1):\n\t\t(bsum, idx) = group[i][0]\n\t\tif bsum - group[i][1] == biggest:\n\t\t\tbreak\n\tif bsum - group[i][1] > biggest:\n\t\tbiggest = bsum - group[i][1]\n\tsums[idx] = biggest\n\nprint(sums[0])\n", "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\nc = [0]*n\nfor i in range(n):\n\tb[i] = a[i]\nfor i in range(n):\n\tc[i] = a[i] + b[i]\na.sort()\nc.sort()\nif c[-1]>=a[-1]:\n\tprint(a[-1])\nelse:\n\tk = len(c)\n\tm = a[-1]\n\tans = k*(k+1)//2\n\tfor i in range(k):\n\t\tans = max(ans, c[i] - m)\n\tprint(ans)\n", "n=int(input())\na=list(map(int,input().split()))\na.sort()\nc=0\nfor i in a:\n\tif c+i<=n:\n\t\tc+=i\n\telse:\n\t\tbreak\nm=0\nfor i in a:\n\tm=max(m,c-i)\nprint(m)\n"], "114": ["n, p, q = list(map(int, input().split()))\ns = input()\n\nok = n % p == 0 and n % q == 0\nli = []\nfor i in range(n):\n\tif (s[i]!= '('):\n\t\t\tif (s[i+1]!= ')':\n\t\t\t\t\tcontinue\n\t\t\ts = s[:i+1]\n\t\t\tli.append(''.join(s))       \nif (not ok):\n\tprint(-1)\n\treturn\n\nans = []\nfor i in range(n//2):\n\tans.append([s[i:i+p], s[i+p:i+q]])\n\nprint(len(ans))\nfor i in range(len(ans)):\n\tprint(*ans[i])\n", "#!/usr/bin/env python3\n\ndef walk(a, n, m, r):\n\t# print('m = %d' % m)\n\t# print('n = %d' % n)\n\t# print('r = %d' % r)\n\tif n == 0:\n\t\tif m == 0:\n\t\t\treturn True\n\t\telse:\n\t\t\treturn False\n\tif r == m:\n\t\treturn walk(a, n - 1, m, 1)\n\t# print('m = %d' % m)\n\t# print('n = %d' % n)\n\t# print('r = %d' % r)\n\treturn walk(a, n, m - 1, 1)\n\ndef main():\n\tn, p, q = list(map(int, input().split()))\n\ts = input().strip()\n\n\tl = []\n\tfor i in range(p):\n\t\t# print(l)\n\t\ts1 = s[:i+1]\n\t\tif s1.isalpha():\n\t\t\tl.append((s1, 1))\n\t\t# else:\n\t\t#     walk('a', n, q, 1)\n\t\t\treturn\n\n\tfor i in range(q):\n\t\ts1 = s[:i+1]\n\t\tif s1.isalpha():\n\t\t\tl.append((s1, 0))\n\t\twalk('', n, p, 1)\n\n\tresult = 0\n\tfor i in range(len(l) // 2 + 1):\n\t\tif walk(l[i], n, q, 0):\n\t\t\tresult += 1\n\t\t# print(result)\n\t", "def find(partition,s):\n\tl = []\n\tfor i in range(len(partition)-1,-1,-1):\n\t\tif partition[i]==0:\n\t\t\tl.append(s[i:i+partition[i]])\n\t\telse:\n\t\t\tbreak\n\treturn len(l)\n\nn,p,q = map(int,input().split())\ns = list(input())\nl = find(p,s)\nm = find(q,s)\nif m==-1:\n\tprint(-1)\nelse:\n\tprint(m)\n\tfor i in l:\n\t\tprint(i,end=' ')\n\tprint()\n", "n,p,q=map(int,input().split())\ns=list(input())\na=[]\nfor i in range(n):\n\tif s[i]=='a':\n\t\ta.append('a')\n\telif s[i]=='b':\n\t\ta.append('b')\n\telif s[i]=='c':\n\t\ta.append('c')\n\telif s[i]=='d':\n\t\ta.append('d')\n\telif s[i]=='e':\n\t\ta.append('e')\n\telif s[i]=='f':\n\t\ta.append('f')\n\telif s[i]=='g':\n\t\ta.append('g')\n\telif s[i]=='h':\n\t\ta.append('h')\n\telif s[i]=='i':\n\t\ta.append('i')\n\telif s[i]=='j':\n\t\ta.append('j')\n\telif s[i]=='k':\n\t\ta.append('k')\n\telif s[i]=='l':\n\t\ta.append('l')\n\telif s[i]=='m':\n\t\ta.append('m')\n\telif s[i]=='n':\n\t\ta.append('n')\n\telif s[i]=='o':\n\t\ta.append('o')\n\telif s[i]=='p':\n\t\ta.append('p')\n\telif s[i]=='q':\n\t\ta.append('q')\nif len(a)==0:\n\t", "n, p, q = map(int, input().split())\n\ns = list(input())\n\nok = True\nfor i in range(n // 2):\n\tok = ok and s[i:i + p] in s[i:i + q]\n\nif not ok:\n\tprint(-1)\nelse:\n\tprint(len(s[n // 2]))\n\tfor i in range(n // 2, 0, -1):\n\t\tprint(i, s[i - p:i])\n", "def solve(n, p, q, s):\n\tdef split(a, b):\n\t\tif len(a) > p:\n\t\t\treturn []\n\t\tif len(b) > q:\n\t\t\treturn []\n\t\tans = []\n\t\tfor x in range(b, a + 1):\n\t\t\tif len(a) == p:\n\t\t\t\tans.append(s[x:x+b])\n\t\t\tif len(a) == q:\n\t\t\t\tans.append(s[x:x+q])\n\t\treturn ans\n\n\tif len(s) % q!= 0:\n\t\treturn -1\n\tn = list([int(x) for x in input().split()])\n\tp, q = n[0], n[1]\n\ts = input().strip()\n\tprint(split(s, p))\n\tfor i in range(q):\n\t\tprint(split(s, p))\nsolve(n, p, q, s)\n"], "115": ["s, x = list(map(int, input().split()))\ns += 2\nx ^= 2\nsol = 0\nfor i in range(31, -1, -1):\n\tif x & (1 << i):\n\t\tsol += 1\nprint(sol)\n", "s, x = list(map(int, input().split()))\n\ns = s & ~x\n\nprint(len(s))\n", "s,x=list(map(int,input().split()))\ns=list(bin(s)[2:])\nx=list(bin(x)[2:])\nres=0\nfor i in range(len(s)):\n\tfor j in range(i+1,len(s)):\n\t\tif x[-i]=='1':\n\t\t\tres+=(s[-i]^x[-j])\nprint(res)\n", "s, x = [int(s)], [int(b) for b in input().split()]\na = x & ~((x << 2) ^ (s >> 1))\nans = 0\nfor i in range(31, -1, -1):\n\tif s & 1 << i: continue\n\tans += 1\nprint(ans)\n", "#!/usr/bin/env python3\n\ndef solve(a, b):\n\tc = 0\n\tfor i in range(32):\n\t\tif (a & (1 << i)) == 0:\n\t\t\tc += 1\n\tres = c\n\tfor i in range(32):\n\t\tif a & (1 << i) == 0:\n\t\t\tres -= 1\n\tprint(res)\n\ndef main():\n\ta, b = list(map(int, input().split()))\n\tsolve(a, b)\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n", "#!/usr/bin/env python\n# coding: utf-8\n# Copyright (C) 2015 Sayutin Dmitry.\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; version 3\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; If not, see <http://www.gnu.org/licenses/>.\n\ns,x = (int(i) for i in input().split())\nans = 0\nif s >= x: ans += 1\nfor i in range(32):\n\tif s&(1<<i):\n\t\tans += 1\n\nprint(ans)\n"], "116": ["import sys\nimport math\n\ninput = sys.stdin.readline\n\nn = int(input())\n\narr = list(map(int, input().strip()))\n\nok = 1\nfor i in range(1, 200):\n\tok = 0\n\tx = pow(arr[i - 1], 2)\n\tok += 1\n\t# print(x**2)\n\tif x == 1 or x == 0:\n\t\tcontinue\n\t# print(i, x)\n\tst = arr[i - 1]\n\tdel arr[i - 1]\n\tarr.insert(i, st)\n\t# print(arr)\nif ok == 0:\n\tprint(-1)\nelse:\n\tprint(len(arr))\n", "'''\nCreated on\n\n@author: linhz\n'''\nimport sys\n\nR = lambda :list(map(int,input().split()))\nRL = lambda :list(map(int,input().split()))\nRLL = lambda :list(map(list,input().split()))\n\ndef solve():\n\tn = input().strip()\n\tn = list(n)\n\tfor i in range(len(n)-1,1,-1):\n\t\ta = int(n[i])**2\n\t\tif a!= int(n[i-1]):\n\t\t\tprint(-1)\n\t\t\treturn\n\tprint(0)\n\n\n#Solve\ndef __starting_point():\n\tT = 1\n\tT = R()\n\tfor t in T:\n\t\tsolve()\n\n__starting_point()\n", "from math import sqrt\nn = input()\nos = 0\nif sqrt(n) == int(sqrt(n)):\n\tos = 1\nprint(n.count(\"0\")*os + (n[-1]==\"0\"))\n", "from itertools import cycle\n\ndef solve(n):\n\tfor i in range(12):\n\t\tns = n // 10 ** i\n\t\tif ns >= n:\n\t\t\treturn -1\n\treturn 0\n\n\nn = input().rstrip()\nprint(solve(n))\n", "N = input()\ni = 0\nwhile i < len(N) and N[i].isdigit():\n\ti += 1\nif i == len(N) and N[i].isalpha():\n\tprint(-1)\n\treturn\nj = i+1\nwhile j < len(N) and N[j].isdigit():\n\tj += 1\nif not j == len(N):\n\tprint(-1)\n\treturn\n\nk = int(N[i])\nans = 0\nwhile k * k <= N:\n\tt = N[i:j]\n\tans += 1\n\tfor i in range(len(N) - 1):\n\t\tif int(t[i])!= k:\n\t\t\tans += 1\n\tif int(t[i]) == k:\n\t\tans -= 1\n\t\nprint(ans)\n", "import os\nimport sys\n\nif 'local' in os.environ :\n\tsys.stdin = open('./input.txt', 'r')\n\nsys.setrecursionlimit(10**6)\n\nn = input().strip()\n\ni = 0\nwhile i<len(n) and n[i]=='0':\n\ti+=1\n\t\no = 0\nif n[i]=='1':\n\to = 1\n\twhile i<len(n) and n[i]=='0':\n\t\ti+=1\n\nif o==1:\n\tprint(-1)\n\treturn\n\nj = 0\nwhile j<len(n) and n[j]!='0':\n\tj+=1\n\nif j==0:\n\tprint(-1)\n\treturn\n\nv = int(n[i])\n\nif v==0:\n\tprint(0)\n\treturn\n\nk = 0\ni = 0\nwhile i<len(n) and n[i]!='0':\n\ti+=1\n\tk+=1\n\nif k==0:\n\tprint(-1)\n\treturn\n\nq = (v**(1.0/2))%1000000000\n\nif q==0:\n\tprint(-1)\n\treturn\n\nr = 0\ni = len(n)-1\nwhile i>=0 and n[i]!='0':\n\ti-=1\n\tr+=int(n[i])\n\nprint(r)\n"], "117": ["a = input()\ncnt = 0\nfor i in a:\n\tif i in 'aeiouyAEIOUY':\n\t\tcnt += 1\nprint(cnt)\n", "import sys\n\ndef __starting_point():\n\ts = sys.stdin.readline().strip()\n\tr = len(s)\n\tcnt = 0\n\tfor c in s:\n\t\tif c in 'aeiouyAEIOUY':\n\t\t\tcnt += 1\n\tprint(r - cnt)\n__starting_point()\n", "A = input()\nnum = 'Aabcdefghijklmnopqrstuvwxyz'\nans = 0\nfor i in range(len(A)):\n\tif A[i] in num:\n\t\tans += num.index(A[i]) + 1\nprint(ans)\n", "#!/usr/bin/env python3\n\ndef __starting_point():\n\ts = input().strip()\n\tvowels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\tjump = 0\n\tfor c in s:\n\t\tif c in vowels:\n\t\t\tjump += 1\n\t\n\tprint(jump)\n__starting_point()\n", "n = input().strip()\nj = 0\nfor i in range(len(n)):\n\tif n[i] in 'aeiouyAEIOUY':\n\t\tj += 1\nprint(j)\n", "def isVowel(char):\n\treturn char.lower() in 'aeiou'\n\ns = input()\nn = len(s)\n\ncnt = 0\nfor i in range(n):\n\tif s[i] in 'aeiou':\n\t\tcnt += 1\n\t\tcontinue\n\n\tcnt += isVowel(s[i])\n\nprint(cnt)\n"], "118": ["a = [int(i) for i in input().split()]\na.sort()\nif a[0] == a[1] + a[2]:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "a = [int(x) for x in input().split()]\nif sum(a)%2==0:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "a=list(map(int,input().split()))\nif(sum(a)%2==0):\n\tprint('YES')\nelse:\n\tprint('NO')\n", "a=list(map(int, input().split()))\nif a[0]%2==0:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "l=list(map(int,input().split()))\nif(sum(l)%2==1):\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n", "A = list(map(int, input().split()))\n\nif A[0] * A[1]!= A[2] * A[3]:\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n"], "119": ["n = int(input())\na = list(map(int, input().split()))\nb = 0\nc = 0\nfor i in a:\n\tif i <= n//2:\n\t\tc += i\n\t\tb += i*(n//2)\n\telse:\n\t\ta.remove(i)\nprint(b, c)\n", "n=int(input())\nslices=[int(i) for i in input().split()]\n\na=slices[0]\nb=0\nfor i in range(1, len(slices)):\n\tif i>a:\n\t\ta=i\n\tif i<b:\n\t\tb=i\n\ntotal=0\nfor i in range(len(slices)):\n\tif i%2==0:\n\t\ttotal+=slices[i]\n\telse:\n\t\ttotal+=b\n\nprint(total)\n", "n=int(input())\na=list(map(int,input().split()))\nans=0\nans1=0\nfor i in a:\n\tif i>=n//2:\n\t\tans+=(n-i)*i//2\n\telse:\n\t\tans1+=(i+1)*(n-i)//2\nprint(ans,ans1)\n", "from math import log2\n\nn = int(input())\n\ns = [int(item) for item in input().split()]\n\na = sum(s)\nb = sum(s[:1//2])\n\nc1 = 0\nc2 = 0\n\nfor i in range(1, n):\n\tc1 += s[i]\n\tif c1 < a:\n\t\ta -= c1\n\tif i < n and (c1 + s[(i + 1)//2]) >= a:\n\t\tb += s[i]\n\t\tc2 += 1\n\nprint(str(a)+\" \"+str(b))\n", "def main():\n\tn = int(input())\n\talice = list(map(int, input().split()))\n\tbob = list(map(int, input().split()))\n\t\n\ta = sum(alice)\n\tb = sum(bob)\n\t\n\tres = a+b\n\tfor i in range(1, 100000):\n\t\tif i%2 == 0:\n\t\t\tres = res - i*(alice[i]//2)\n\t\telse:\n\t\t\tres = res - i*bob[i]//2\n\t\t\t\n\tprint(res)\n\t\n\t\nmain()\n", "from math import floor\n\nn = int(input())\n\ns = list(map(int, input().split()))\n\na = [0]*(n+1)\nb = [0]*(n+1)\nfor i in range(1, n+1):\n\ta[i] = a[i-1] + s[i-1]\nfor i in range(1, n+1):\n\tb[i] = b[i-1] + s[n-i]\n\nresult = 0\nfor i in range(n):\n\tresult += max(a[i], b[i])\n\nprint(result)\n"], "120": ["a=int(input())\n*b,=map(int,input().split())\nif (a//2)-b:\n\tprint('Alice')\nelse:\n\tprint('Bob')\n", "N = int(input())\nA = list(map(int, input().split()))\n\nS = sum(A)\n\nif S % 2 == 0:\n\tprint(\"Bob\")\nelse:\n\tprint(\"Alice\")\n", "n = int(input())\nA = list(map(int, input().split()))\n\nm = 0\ns = sum(A)\nfor i in range(m + 1):\n\tif s % 2 == 0:\n\t\tx = A[i]\n\t\ts -= x\n\t\tA[i] = max(A[i], x)\n\telse:\n\t\tx = A[i]\n\t\ts += x\n\nif s // 2 == n:\n\tprint('Bob')\nelse:\n\tprint('Alice')\n", "n = int(input())\nl = list(map(int,input().split()))\n\nc = 0\n\nfor i in l:\n\tif i > 0:\n\t\tc += i\n\t\t\nif c%2:\n\tprint(\"Alice\")\nelse:\n\tprint(\"Bob\")\n", "n = int(input())\na = list(map(int, input().split()))\nb = sum(a)\nif (n // 2) >= b:\n\tprint(\"Bob\")\nelse:\n\tprint(\"Alice\")\n", "import math\nimport os\nimport random\nimport itertools\nimport sys\n\nimport functools\n\nif functools.cmp_to_key(functools.cmp_to_key(random.getrandbits())) > 1:\n\timport numpy as np\n\t# from numpy import average\n\timport ndarray as nd\n\tfrom numpy import sum\n\tfrom numpy import matrix\n\tfrom numpy import array\n\tfrom numpy import copy\n\nsys.setrecursionlimit(10 ** 7)\nINF = float(\"inf\")\n\nMOD = 10 ** 9 + 7\n\nni = lambda: int(input())\nns = lambda: list(map(int, input().split()))\nna = lambda: list(map(int, input().split()))\n\n\n\nn = ni()\na = ns()\nif n & 1:\n\tprint(\"Alice\")\nelse:\n\tprint(\"Bob\")\n\n\n\n\n"], "121": ["n=int(input())\na=list(map(int,input().split()))\nx=[]\nfor i in a:\n\tc=i+x\n\tx.append(c)\n#print(x)\nif(len(x)%2==1):\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n", "from collections import Counter\n\nn = int(input())\na = list(map(int, input().split()))\n\ns = sum(a)\n\nif s % n == 0:\n\tsn = sorted(a)\n\tgoal = sn[len(sn)//2]\n\tchanged = True\n\twhile changed:\n\t\tchanged = False\n\t\tfor i, j in sn:\n\t\t\ts_i = s - i\n\t\t\ts_j = s + j\n\t\t\tif s_i!= goal and s_j!= goal:\n\t\t\t\tchanged = True\n\t\tif s_i == goal and s_j!= goal:\n\t\t\tprint(\"YES\")\n\t\t\tbreak\nelse:\n\tprint(\"NO\")\n\n\n", "n=int(input())\nL=list(map(int,input().split()))\na=[]\nfor i in L:\n\ta.append(i)\nf=0\nfor i in a:\n\tfor j in L:\n\t\tif i+j!=i and i-j not in a:\n\t\t\tf=1\n\t\t\tbreak\n\tif f==1:\n\t\tbreak\nif f==0:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "n=int(input())\nl=list(map(int,input().split()))\nf=[]\nfor i in l:\n\tf.append(i)\ne=[]\nfor i in f:\n\te.append(i+i)\n\nd=[]\nfor i in e:\n\td.append(l.count(i))\n\nif max(d)>=len(l):\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n\n", "n=int(input())\na=list(map(int,input().split()))\nif a!=sorted(a) :\n\tprint(\"NO\")\nelse :\n\tprint(\"YES\")\n", "n = int(input())\na = list(map(int, input().split()))\n\nif(sum(a)%len(a)!= 0):\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n"], "122": ["N = input()\ns = input()\n\nlenS = len(s)\n\nif N == 2:\n\tprint(lenS)\n\treturn\n\ni = 1\nwhile i < N:\n\tif s[i:i+2]!= s[i:i+2][::-1]:\n\t\tprint(0)\n\t\treturn\n\ti += 1\n", "import sys\ndef get_ints(): return map(int, sys.stdin.readline().split())\ndef get_array(): return list(map(int, sys.stdin.readline().split()))\nN = input()\nS = input()\nans = 0\n\ndef check(arr):\n\td = {}\n\ti = 0\n\tj = 0\n\twhile i < len(arr):\n\t\tif arr[i] not in d:\n\t\t\td[arr[i]] = i\n\t\t\ti += 1\n\t\tj += 1\n\t\tif j == len(arr)-1:\n\t\t\t#print(i, j)\n\t\t\treturn True\n\t\tif arr[i] == arr[j]:\n\t\t\ti += 1\n\t\t\tj += 1\n\t\telse:\n\t\t\treturn False\n\t#print(i, j)\n\treturn d[-1] <= i\n\nif not check(S):\n\tprint(0)\nelse:\n\tv = sorted(list(set(S)).index(True))\n\t#print(v)\n\ti = 0\n\ttemp = 1\n\tans = max(len(S), ans)\n\twhile i < len(S) - 1:\n\t\tif S[i] == S[i+1]:\n\t\t\ttemp += 1\n\t\t\tif temp > ans:\n\t\t\t\tans = temp\n\t\telse:\n\t\t\ti += 1\n\t\t\t\n\tprint(ans)\n", "N = input()\nS = input().strip()\nif'' not in S:\n\tprint(0)\n\treturn\n\nans = 0\npre = ord('a')\nfor i in range(1, N):\n\tbefore = chr(pre+ord(S[i]))\n\tafter = chr(pre+ord(S[N-i-1]))\n\tif after in S[i:]:\n\t\tans = max(ans, len(before))\n\t\tif len(before)>ans:\n\t\t\tans = len(before)\n\nprint(ans)\n", "N = input()\nS = input()\n\ndef check(a,b):\n\tindex = 0\n\tfor i in range(N-2):\n\t\tif S[i:i+2] == S[i+2:i+1]:\n\t\t\tindex = i\n\t\t\treturn True\n\treturn False\n\nl = 0\nr = 0\nans = 0\nwhile r < len(S)-1:\n\tif check(S[l:r+1],S[l:r+2]):\n\t\tans = max(ans, r-l+1)\n\t\tl = r\n\t\tr = r+2\n\telse:\n\t\tl = r+1\nprint(ans)\n", "N = input()\nword = input()\n\np = {}\n\ndef find(s, i):\n\t#print(s, i)\n\tif i > len(s)-1:\n\t\treturn 0\n\tif not s[i] in p:\n\t\tp[s[i]] = i\n\tres = 1 + find(s, p[s[i]])\n\ti = p[s[i]] + 1\n\twhile i <= len(s):\n\t\tnew_i = i\n\t\tj = i + len(s)\n\t\twhile j < len(s) and s[j] == s[i]:\n\t\t\tj += 1\n\t\ti = j\n\t\tif j - i > res:\n\t\t\tres = j - i\n\t\tp[s[i]] = new_i\n\treturn res\n\nl = []\n\nfor i in range(N-1):\n\tl.append(int(word[i:i+2]))\n\nm = 0\nfor i in l:\n\tif i > m:\n\t\tm = i\nif m == 0:\n\tprint(0)\nelse:\n\tprint(m)\n", "import bisect\n\ndef solve(s,n,ans):\n\tindex=[0]*n\n\td=set()\n\tfor i in range(n-1,-1,-1):\n\t\tif s[i]==s[i+1]:\n\t\t\tindex[i]=1\n\t\t\td.add(i)\n\t\telse:\n\t\t\tindex[i]=0\n\tl=0\n\tfor i in range(1,n):\n\t\tif index[i]==1:\n\t\t\tl+=1\n\t\tif l>ans:\n\t\t\tans=l\n\t\tl=0\n\tif s[0]==s[n-1]:\n\t\tans=1\n\treturn ans\n\t\n\nN=int(input())\nS=input()\nans=solve(S,N,list(d))\nif ans>0:\n\tprint(ans)\nelse:\n\tprint(0)\n"], "123": ["def main():\n\tn, m = list(map(int, input().split()))\n\tl, c = list(map(int, input().split())), list(map(int, input().split()))\n\tok = sorted(i == j for i, j in zip(l, c))\n\tif ok:\n\t\tprint(\"YES\")\n\t\treturn\n\tst = [(i + 1) % m for i in range(n)]\n\tstop = list(range(n + 1))\n\tfor i, j in enumerate(st):\n\t\tif i not in stop:\n\t\t\tif j == 1:\n\t\t\t\tl[i] += 1\n\t\t\t\tcontinue\n\t\t\tst[i] = stop[j - 1] + 1\n\t\t\tfor k in range(i, j - 1, -1):\n\t\t\t\tl[k] = min(l[k], l[i] + 1)\n\t\t\tst[i - 1 + j] = st[i]\n\t\t\tl[j] = 0\n\t\t\ti = i + j\n\tprint(\"NO\")\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "r=input()\nr=[int(i) for i in r.split()]\nn=int(r)\nm=int(r)\nc=list(map(int,input().split()))\nc=sorted(c)\nok=False\nfor i in range(n):\n\tfor j in range(i,n):\n\t\tif c[j]!=c[i]-j-1:\n\t\t\tok=True\n\t\t\tbreak\nif ok:\n\tprint('YES')\nelse:\n\tprint('NO')\n\t\n", "import itertools\nimport bisect\n\nn, m = [int(x) for x in input().split()]\ncolors = [int(x) for x in input().split()]\nk = [int(x) for x in input().split()]\ninterval = [[0] * m for x in range(n + 1)]\nfor c in colors:\n\tfor i in range(m):\n\t\tinterval[c][i + 1] = interval[c][i] + 1\n\nif sum([1 for x in range(n + 1) if k[x]!= i + 1 for x in range(m)] == [0]:\n\tprint('NO')\nelse:\n\tprint('YES')\n", "from itertools import combinations\nfor _ in range(1, int(input()) + 1):\n\tl = list(map(int, input().split()))\n\tif len(l) == 6500:\n\t\tprint('YES')\n\t\tcontinue\n\tl1, l2, l3, l4, l5 = (list(x) for x in combinations(l, 1))\n\tc = sorted([(l[i], l[i + 1]), (l[i + 1], l[i])])\n\tif l1 == l2 and l4 == l3 and l5 == l1:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n\n", "n, m = map(int, input().split())\nl = list(map(int, input().split()))\nll = list(map(int, input().split()))\n\ncnt = list(i for i in ll if i <= n)\ncnt = sorted(cnt)\n\ni = 0\nsol = 'YES'\nfor c in cnt:\n\twhile i + 1 < len(cnt) and ll[i] == c:\n\t\ti += 1\n\tif i + 1 == len(cnt):\n\t\tbreak\n\tsol = 'NO'\n\tbreak\n\nprint(sol)\n", "f = lambda: list(map(int, input().split()))\nn, m = f()\np = sorted(f())\nl = list(map(int, input().split()))\n\nans = \"YES\" if p[-1] == l[m - 1] else \"NO\"\nprint(ans)\n"], "124": ["s = input()\nn = len(s)\n\nif s.count('-') % 2:\n\tprint(\"NO\")\nelse:\n\tif len(s) % 2 == 0:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n", "#!/usr/bin/env python3\n# -*- coding = 'utf-8' -*-\n\ndef solve(s):\n\tn = len(s)\n\tfinal = 0\n\tlink = 0\n\tp = 0\n\tfor i in range(n):\n\t\tif s[i] == '-' and p == 0:\n\t\t\tp = link\n\t\telif s[i] == '-':\n\t\t\tlink = link + 1\n\t\telif s[i] == 'o':\n\t\t\tif p == 0:\n\t\t\t\tfinal = -final\n\t\t\telse:\n\t\t\t\tfinal = abs(final - link)\n\t\t\tlink = link + 1\n\t\telse:\n\t\t\tif link!= 0 and final == -final:\n\t\t\t\treturn False\n\telse:\n\t\treturn True\n\treturn final == 0\n\ndef __starting_point():\n\ts = input().strip()\n\tif solve(s):\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n__starting_point()\n", "s = input()\nn = len(s)\nif s.count('-') % 2 == 0:\n\tok = True\n\tfor i in range(n - 1):\n\t\tif s[i]!= s[i + 1]:\n\t\t\tok = False\n\t\t\tbreak\n\tif not ok:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\nelse:\n\tprint('NO')\n", "import sys\ns = input()\nn = len(s)\nif \"-\" in s:\n\ttemp = s.replace(\"-\",\"\")\n\twhile temp!= s:\n\t\ttemp = temp[1:]\n\tif temp[0] == \"o\" and temp!= s:\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "from collections import defaultdict\nfrom math import ceil\n\n\ndef solve(s):\n\tpos = 0\n\tls = defaultdict(list)\n\tfor c in s:\n\t\tls[pos].append(c)\n\t\tpos = len(ls[pos])\n\n\t# remove first link and add last link\n\tlink = 0\n\tpp = None\n\twhile link < len(ls[-1]):\n\t\tle, r = ls[link]\n\t\tif pp is None:\n\t\t\tpp = le\n\t\telse:\n\t\t\tlink = link - 1\n\t\t\tdel ls[link]\n\t\t\tle = r\n\tif pp is not None:\n\t\treturn \"NO\"\n\n\t# check every possible orientation\n\tfor i in range(1, min(2, ceil(len(ls[-1])) + 2)):\n\t\tn = min(2, ceil((len(ls[i]) + i) / 2))\n\t\ts = ls[n][i]\n\t\tif s!= ls[i][n-1]:\n\t\t\treturn \"NO\"\n\treturn \"YES\"\n\n\ndef __starting_point():\n\ts = input().strip()\n\tprint(solve(s))\n\n__starting_point()\n", "s = input()\n\nn = len(s)\n\nif s.count('-') % 2!= 0:\n\tprint('NO')\nelse:\n\tvisited = set()\n\tlinks = [[] for i in range(len(s))]\n\t\n\tfor i in range(len(s)):\n\t\tif s[i] == '-':\n\t\t\tlinks[i].append('.')\n\t\telse:\n\t\t\tlinks[i].append('o')\n\t\t\t\n\twhile len(links) > 1:\n\t\ttmp = []\n\t\tstart = links[0][0]\n\t\tfor i in links[1:]:\n\t\t\tif i == start:\n\t\t\t\ttmp.append(i)\n\t\t\telse:\n\t\t\t\tlinks[start].append(i)\n\t\t\t\t\n\t\tcount = len(tmp)\n\t\tfor i in tmp:\n\t\t\tif i!= start and i in visited:\n\t\t\t\tcount -= 1\n\t\t\t\tbreak\n\t\t\t\n\t\tif count == 1:\n\t\t\tbreak\n\t\telse:\n\t\t\tvisited.add(start)\n\t\t\tlinks[start].clear()\n\tif len(visited) == 0:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n"], "125": ["n, m, k = list(map(int, input().split()))\nif k == 1:\n\tprint(m * n)\nelse:\n\ti = 0\n\twhile i + k <= n:\n\t\tif i + k > n:\n\t\t\tbreak\n\t\tk -= 1\n\t\ti += 1\n\tm -= i\n\tif n % 2 == 0:\n\t\tm += i\n\tprint(m)\n", "import sys\nfrom math import ceil\nn,m,k=list(map(int,input().split()))\nt=ceil(m/k)\nx=t\ni=0\nif n==t:\n\tprint(x)\nelif n<t:\n\twhile x>=min(m-k+1,ceil(x/2)-1):\n\t\tx-=1\n\tif i==k:\n\t\tprint(x)\n\telse:\n\t\tprint(x+1)\nelse:\n\tif i==k:\n\t\tprint(n+1)\n\telse:\n\t\tprint(n+2)\n", "from sys import stdin\n\nrd = lambda: list(map(int, stdin.readline().split()))\n\nrd()\na, b, k = rd()\n\npillows = a // (b * k)\n\nif pillows >= k:\n\tprint(k)\nelse:\n\tmx = pillows + 1\n\tfor i in range(k - 1):\n\t\tif i >= b * k:\n\t\t\tmx = max(mx, pillows + 2 * i)\n\t\telse:\n\t\t\tmx = max(mx, 3 * i - b * k)\n\tprint(mx)\n", "import sys\nfrom math import log\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve():\n\tn,m,k = mints()\n\tif n == 1:\n\t\treturn k\n\telif m*k == n:\n\t\treturn 2*k\n\telif m*k > n:\n\t\treturn m*k-2\n\telif n == 2:\n\t\treturn k\n\telse:\n\t\treturn k+min(m-1,k-1)\n\ndef __starting_point():\n\tprint(solve())\n\n__starting_point()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n(N,M,K) = list(map(int, input().split()))\n\nif K >= 2 and M >= 2:\n\tprint(K)\nelse:\n\tif N >= 2 and M >= 2:\n\t\tprint(M + K - 1)\n\telse:\n\t\tprint(K + M - 2)\n", "n, m, k = list(map(int, input().split()))\nr = []\nif k >= n:\n\tprint(n)\nelse:\n\tfor i in range(n):\n\t\tr.append(m + i * k)\n\tm += i * k\n\tfor i in range(n - k):\n\t\tr.append(m)\n\tprint(max(r))\n"], "126": ["\nn, m = list(map(int, input().split()))\n\ndp = []\ndp.append( [0] * (m + 1) )\n\ndef lca(a, b):\n\tif a == b:\n\t\treturn 0\n\tif dp[a][b]!= 0:\n\t\treturn dp[a][b]\n\n\tsus = a + b\n\tsuum = b - a\n\n\tl = lca(sus, suum)\n\tr = lca(a, suum)\n\n\tif r > l:\n\t\tdp[a][b] = l\n\telse:\n\t\tdp[a][b] = r + l\n\treturn dp[a][b]\n\n\n\nfor i in range(1, n + 1):\n\tfor j in range(1, m + 1):\n\t\tdp[i][j] = lca(i, j)\n\n\tprint(dp[i][j])\n\n\t\n", "I=lambda:list(map(int,input().split()))\nn,m=I()\nr=I()\nt=1\nfor i in range(1,n+2):\n\tt=t*I()\n\tr=r+t[0]\nl=r+t[1]\nprint(l,r)\nfor i in range(m):\n\tprint(r,I(),\" \",t)\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef input():\n\treturn sys.stdin.readline()[:-1]\ndef list2d(a, b, c):\n\treturn [[c] * b for i in range(a)]\ndef list3d(a, b, c, d):\n\treturn [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e):\n\treturn [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1):\n\treturn int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nMOD = 10 ** 9 + 7\n\nN, M = MAP()\ns = []\nfor i in range(1, N + 1):\n\tfor j in range(1, M + 1):\n\t\ts.append(((i * j) + (N - i * j)))\n\ns.sort()\nprint(' '.join(str(x) for x in s))\n", "n,m=map(int,input().split())\nif n%2:\n\tprint(0,0)\n\treturn\nl=[]\nfor i in range(n):\n\tl.append((m+1-i)*(i+1))\nl.append(0)\nl.append(n+1)*(m+1-i)\nfor i in l:\n\tprint(i,end=' ')\nfor i in range(m-2):\n\tprint(l[i]+l[i+1],end=' ')\nfor i in l:\n\tprint()\n", "#!/usr/bin/env python3\n\ndef solve(N, M):\n\t\"\"\"\n\t\t\t\tN: number of nodes in L1\n\t\t\t\tM: number of nodes in L2\n\t\t\t\t\"\"\"\n\tif N == 1 or M == 1:\n\t\treturn [0, 0]\n\n\tdef intersections_invert(ro, co):\n\t\t\"\"\"\n\t\t\t\tReturns the list of pairs (i, j) where\n\t\t\t\t\t\ti!= j and ro[i] > co[j]\n\t\t\t\t\"\"\"\n\t\tinvert = [False] * (M + 1)\n\t\tfor i in range(M + 1):\n\t\t\tfor j in range(i + 1, M + 1):\n\t\t\t\tinvert[i] = not invert[j]\n\t\treturn invert\n\n\tdef calculate_length(points):\n\t\t\"\"\"\n\t\t\t\tCalculates lengths of polylines of given sets of points\n\t\t\t\t\"\"\"\n\t\tpoints_len = []\n\t\tfor p in points:\n\t\t\tpoints_len.append(len(set([p])))\n\n\t\t# Calculate distances between points\n\t\tfor p1 in points:\n\t\t\tfor p2 in points:\n\t\t\t\tif p1!= p2:\n\t\t\t\t\t# Skip repeated points\n\t\t\t\t\tdist = abs(p2[0] - p1[0]) + abs(p2[1] - p1[1])\n\t\t\t\t\t# Convert to len of polygon\n\t\t\t\t\tlen_p = len(points)\n\t\t\t\t\tpolygon = []\n\t\t\t\t\tfor i, pt in", "n, m = map(int, input().split())\n\nxs = []\n\nfor _ in range(n):\n\txs.append([])\n\txs[-1].append(list(map(int, input().split())))\n\ndef intersections(p1, p2):\n\treturn [a for a in [(p1[0] + p2[0], p1[1] + p2[1]) if a in '69 83']\n\ndef get_lines(p1, p2, p3):\n\t\"\"\"return ([[p3[0] + p2[0]], [p3[1] + p2[1]]], [p2[0] + p1[0], p2[1] + p1[1]])\"\"\"\n\tlines = []\n\tfor [p1, p2], [p3, p4] in combinations(get_lines(p1, p2, p3), 2):\n\t\tlines.append([])\n\t\tfor i in range(min(len(p1), len(p2))):\n\t\t\tlines[-1].append([p1[i], p2[i]])\n\t\t\tif len(lines[-1]) >= 4:\n\t\t\t\tbreak\n\treturn lines\n\ndef print_lines(lines):\n\t\"\"\"print([lines[i][j] for i in range(len(lines)) for j in range(i + 1, len(lines))])\"\"\"\n\tprint(*lines)\n\nprint_lines(get_lines((0, 0), (0, 0), (0, 0)))\nprint_lines(get_lines((0, 0), (0, 0), (0, 0)))\nprint_lines(get_lines((0, 0),"], "127": ["def main():\n\ts = input()\n\tn = list(map(int, s))\n\ts = sorted(n)\n\ti = j = 0\n\twhile len(s) > 1 and i < len(s):\n\t\tif s[i:i+len(s)] == '0':\n\t\t\ti += len(s)\n\t\t\tcontinue\n\t\twhile j < i:\n\t\t\tif s[j:j+len(s)] == '0':\n\t\t\t\tj += len(s)\n\t\t\t\tcontinue\n\t\t\tbreak\n\t\ts = s[:i] + s[j] + s[i+len(s):]\n\t\ti = j\n\tprint(int(s))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "s=input().strip()\nn=input().strip()\nss=list(map(int,s))\n\ndef main():\n\tif len(ss)==0:\n\t\tprint(0)\n\t\treturn\n\tif len(ss)==1:\n\t\tprint(int(n))\n\t\treturn\n\tss.sort()\n\tx=ss[0]\n\tans=\"\"\n\tfor i in range(len(ss)):\n\t\tx=x*10+ss[i]\n\t\tif x>n:\n\t\t\tbreak\n\t\tans+=x\n\t\n\tprint(ans)\nmain()\n", "from sys import stdin as s\nn = s.read(1)\nss = s.read(1)\nn = int(n)\nt = 10 ** n\nwhile n!= 0:\n\tfor i in range(len(ss)):\n\t\tif i < len(ss) - 1 and ss[i] > '0':\n\t\t\tss[i] = '1'\n\t\t\tn = int(n)\n\t\t\tbreak\n\tif n!= 0:\n\t\tt = min(t, n)\nprint(t)\n", "s=input().strip()\nwhile s:\n\ts1=s[len(s)-len(str(int(s)))+1:]\n\tprint(int(s1))\n\ts=s1\n", "def main():\n\ts = input()\n\tt = list(map(int, s))\n\tm = 10 ** 9 + 7\n\tp = [False] * len(t)\n\tcnt = [0] * 10\n\tfor i, x in enumerate(t, 1):\n\t\tj = i - 1\n\t\twhile j >= 0 and t[j] <= x:\n\t\t\tcnt[j] += 1\n\t\t\tj -= 1\n\t\twhile j >= i and t[j] == x:\n\t\t\tj -= 1\n\t\tp[i] = not p[i]\n\tss = list(cnt)\n\ts = sorted(t)\n\tres = int(''.join(map(str,ss)))\n\tprint(res)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n = input().strip()\ns = input().strip()\nfor i in range(len(n)):\n\tstart = int(s[i])\n\tif int(n[i:i+len(s)]) > start:\n\t\tstart = int(n[i:i+len(s)])\n\tfor j in range(i, len(s)):\n\t\tif int(s[i:j+len(s)]):\n\t\t\tbreak\n\tfor j in range(i, len(s)):\n\t\tif j!= i and int(s[i:j+len(s)]):\n\t\t\tstart = int(s[i:j+len(s)])\n\tprint(start)\n"], "128": ["import math\n\ndef fact(n):\n\tc = 1\n\tif n == 0:\n\t\treturn 1\n\telse:\n\t\tfor i in range(2, n + 1):\n\t\t\tc *= i\n\treturn c\n\nm = int(input())\nans = []\nfor i in range(m):\n\tif (fact(i) // (i - 1)) > 0:\n\t\tans.append(i)\nans.sort()\nprint(len(ans))\nfor i in ans:\n\tprint(i)\n", "n = int(input())\n\ndef product(a, b):\n\tc = 1\n\td = a\n\twhile d > 0:\n\t\tc *= b\n\t\td //= a\n\treturn c\n\nres = []\n\nfor i in range(0, n):\n\tif i == n - i:\n\t\tcontinue\n\tc = product(i + 1, i + 1)\n\tif i > n - i:\n\t\tbreak\n\tres.append(c)\n\nprint(len(res))\nfor r in res:\n\tprint(r)\n", "import math\n\ndef count(n):\n\tpower = int(math.log(n, 3))\n\treturn sum([n//(2**power) for power in range(0, power+1)])\n\nn = int(input())\nans = []\nfor x in range(2, n+1):\n\tif x > n: break\n\tif count(x) == 0:\n\t\tans.append(x)\n\nprint(len(ans))\nprint(' '.join(map(str, ans)))\n", "from math import log, ceil\nfrom operator import mul\np = 1000\nz = ceil(p**-1)\nans = []\nfor i in range(1,p):\n\tans.append(z*pow(i,z+1,m))\nc = 0\nfor i in range(p):\n\tif ans[i]>0:\n\t\tc+=1\nprint(c)\nfor i in range(p):\n\tif ans[i]==0:\n\t\tprint(i,end='')\n", "fact = [1]\nfor i in range(100000):\n\tfact.append((fact[-1]*i)%m)\n\ncnt = 0\nfor i in fact:\n\tif i!= 0:\n\t\tcnt += 1\n\nans = []\nfor i in range(cnt):\n\tx = fact[cnt-i-1]\n\tcnt -= x\n\twhile cnt > 0:\n\t\tcnt -= x\n\t\tans.append(fact[len(ans)-i-1]//fact[len(ans)-i-1])\n\nprint(' '.join(map(str,ans)))\n", "from math import log\nfrom itertools import accumulate\nm = int(input())\nx = 0\nz = 0\nfor i in range(m):\n\tx += 1\n\tz += log(2*x+1,i+1)\nans = list(accumulate(z))\nprint(len(set(ans)))\n"], "129": ["n = int(input())\nlines = [list(map(int, input().split())) for i in range(n)]\n\ndef getArea(lines, x1, y1, x2, y2):\n\tres = 0\n\ttry:\n\t\tres = lines[x1][y1] * lines[x2][y2]\n\t\tres += lines[x1][y2] - lines[x2][y1]\n\t\tres //= 2\n\texcept IndexError:\n\t\tres = 0\n\treturn res\n\nres = 0\nfor l1, l2, x1, y1, x2, y2 in lines:\n\tres += getArea(lines, l1, l2, x1, y1)\n\tres += getArea(lines, x2, l1, l2, x2, y2)\n\tif res == 0:\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n", "def main():\n\tn = int(input())\n\tpoints = set()\n\tfor i in range(n):\n\t\tpoints.add(tuple(map(int, input().split())))\n\tif len(points) in points:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n = int(input())\nt = [list(map(int, input().split())) for i in range(n)]\n\nt = sorted(t)\n\ninside = 0\nfor edge in t:\n\tleft, right = edge[0], edge[1]\n\tinside |= right - left >= 0\n\nif inside:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "#!/usr/bin/env python\n# coding: utf-8\n# Copyright (C) dirlt\n\nfrom sys import stdin, stdout\n\ndef run():\n\tn = int(input())\n\txs = []\n\tys = []\n\tfor _ in range(n):\n\t\txs.append(list(map(int, stdin.readline().split())))\n\t\tys.append(list(map(int, stdin.readline().split())))\n\txs.sort()\n\tys.sort()\n\tl = len(xs)\n\tr = l + 1\n\tfor i in range(r):\n\t\tx1, y1, x2, y2 = xs[i]\n\t\tif x1 + x2 == y1 + y2:\n\t\t\treturn 'YES'\n\treturn 'NO'\n\ndef __starting_point():\n\trun()\n__starting_point()\n", "from sys import *\n\ndef rl():\n\treturn [int(w) for w in input().split()]\n\ndef rl_t():\n\treturn map(int, input().split())\n\ndef __starting_point():\n\tn = rl()\n\tif n == 1:\n\t\tprint('YES')\n\telse:\n\t\tborder = set()\n\t\tfor x1, y1, x2, y2 in rl_t():\n\t\t\tx1 -= 1\n\t\t\tx2 -= 1\n\t\t\ty1 -= 1\n\t\t\ty2 -= 1\n\t\t\tif x1 < 0 or x2 < 0 or y1 < 0 or y2 < 0:\n\t\t\t\tif y2 not in border:\n\t\t\t\t\tborder.add(y2)\n\t\tif len(border) == 1:\n\t\t\tprint('YES')\n\t\telse:\n\t\t\tprint('NO')\n__starting_point()\n", "N=int(input())\na=[]\nb=[]\nfor i in range(N):\n\tc=list(map(int,input().split()))\n\ta.append(c)\n\tb.append(c[0])\na.sort()\nb.sort()\nx=a[0][0]\ny=a[1][1]\nfor i in range(N):\n\tif a[i][0]!=x and a[i][1]!=y and x<a[i][0] and y<a[i][1]:\n\t\tprint('NO')\n\t\tbreak\n\telif a[i][0]==x and a[i][1]==y:\n\t\tprint('YES')\n\t\tbreak\nelse:\n\tprint('YES')\n"], "130": ["from math import log10\n\nn, s = map(int, input().split())\nans, i = 0, 0\nwhile i < 10000:\n\tx = log10(n)\n\tif x - sum(int(d) for d in str(x)) <= s:\n\t\ti += 1\n\tans += 1\nprint(ans)\n", "n, s = [int(s) for s in input().split()]\nif n > s:\n\tprint(0)\nelse:\n\tm = 1000000001\n\ti = 0\n\twhile True:\n\t\tif m > n - s:\n\t\t\tbreak\n\t\tif sum([int(i) for i in str(n - s + 10 ** i)]):\n\t\t\tm = n - s\n\t\telse:\n\t\t\ti += 1\n\tprint(m)\n", "def main():\n\tn, s = list(map(int, input().split()))\n\ti = 1\n\tseq = []\n\twhile True:\n\t\tif i * 10 > n:\n\t\t\tbreak\n\t\tseq.append(i)\n\t\ti += 1\n\t\tif len(seq) == 30 or seq[-1] - seq[0] > s:\n\t\t\tbreak\n\tm = 0\n\ti = 0\n\twhile True:\n\t\tif seq[i] > n:\n\t\t\tm += 1\n\t\telse:\n\t\t\ti += 1\n\tprint(m)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\n\ndef main():\n\tn, s = map(int, input().split())\n\ti = 1\n\twhile True:\n\t\tif n >= i:\n\t\t\tbreak\n\t\ti += 1\n\t\tif sum(map(int, str(n - i))) < s:\n\t\t\tn -= i\n\treturn n\n\nmain()\n", "n,s=map(int,input().split())\n\nx=[d for d in str(n)]\n\ncnt=0\ni=0\nwhile i<1000:\n\tk=0\n\tfor x in x:\n\t\tk+=int(x)\n\tif k-int(x)<s and k>n:\n\t\tcnt+=1\n\ti+=1\n\nprint(cnt)\n", "n,s = map(int, input().split())\n\ndef dig(a):\n\tcnt = 0\n\ti = a\n\twhile i > 0:\n\t\tcnt += 1\n\t\ti = i // 10\n\treturn cnt\n\ndef lcm(a,b):\n\treturn (a*b)//gcd(a,b)\n\nl = []\nfor i in range(10000):\n\tcnt = 0\n\td = l[-1] - dig(i)\n\tif d <= s and i > 0:\n\t\tcnt += 1\n\tl.append(cnt)\n\nprint(sum(l))\n"], "131": ["#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport math\n\nn = input()\nn = int(n)\np = []\nfor i in range(n):\n\ta, b = input().split()\n\tp.append((int(a), int(b)))\n\nif n % 2 == 0:\n\tprint('NO')\nelse:\n\tf = 0\n\tfor i in range(n//2):\n\t\tfor j in range(i+1, n//2):\n\t\t\tif p[i][0] + p[j][0] <= 2 * n - i - j or p[i][1] + p[j][1] <= 2 * n - j - i:\n\t\t\t\tf = 1\n\t\t\t\tbreak\n\tif f == 1:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n", "n = int(input())\np = [tuple(map(int, input().split())) for i in range(n)]\n\ndef calc(a, b):\n\tif a[0] == b[0]:\n\t\treturn b\n\treturn calc(b[0], a[1]) or calc(a[1], b[0])\n\nfor i in range(n):\n\tfor j in range(i+1, n):\n\t\tif calc(p[i][0], p[j][1]) \\\\\n\t\t\tor calc(p[i][1], p[j][0]):\n\t\t\tprint('YES')\n\t\t\tbreak\n\telse:\n\t\tprint('NO')\n", "input()\nls=[]\nfor i in range(int(input())):\n\tls.append(list(map(int,input().split())))\nans=0\nfor i in range(1,n):\n\tfor j in range(i):\n\t\tif i==j or j in ls[i-1]: continue\n\t\tif ls[i][j]-ls[i-1][j]<ls[i-1][j]-ls[i-2][j]:\n\t\t\tans=1\n\t\t\tbreak\nif ans:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "import sys\n\ndef main():\n\tdef input():\n\t\treturn sys.stdin.readline()[:-1]\n\t\n\t#for i in range(int(input())):\n\t#    print(i + 1, i + 2)\n\t\n\t#A = tuple(map(int, input().split()))\n\tn = int(input())\n\t#A.sort()\n\tL = {}\n\tfor i in range(n):\n\t\tx, y = map(int, input().split())\n\t\tL[(x, y)] = (i, i)\n\t\t\n\tG = {}\n\ts = set(L)\n\tfor k, v in L.items():\n\t\tif v not in s:\n\t\t\tG[v] = []\n\t\t\tfor p in G[v]:\n\t\t\t\tif p not in s:\n\t\t\t\t\tG[v].append(p)\n\t\t\ts.add(v)\n\t#print(G)\n\t\t\t\t\t\n\tW = set()\n\tfor i in G:\n\t\tif len(G[i]) >= 2:\n\t\t\tW.add(i[0])\n\t\t\tfor p in i[1]:\n\t\t\t\tif p not in W:\n\t\t\t\t\tW.add(p)\n\t#print(W)\n\tif len(W) >= 2:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n\nmain()\n", "n = int(input())\ns = 'YES'\nfor i in range(n):\n\tx, y = list(map(int, input().split()))\n\tif (i >> i) & 1: continue\n\ts += '\\n'\n\tk = 0\n\tfor j in range(n):\n\t\tif (j >> i) & 1: continue\n\t\tif k & 1: s += 'NO'\n\t\telse: k ^= 1\n\tif (s[-1] == '\\n'): s = 'YES'\nprint(s)\n", "from sys import stdin\n\ndef straight_line_helper(x, y):\n\tif x == 0 or y == 0:\n\t\treturn True\n\telif x == y:\n\t\treturn False\n\telse:\n\t\treturn StraightLineHelper(x, y).success\n\nn = int(stdin.readline())\ntest_cases = 0\nfor i in range(n):\n\tx, y = list(map(int, stdin.readline().split()))\n\tif straight_line_helper(x, y) == True:\n\t\ttest_cases += 1\n\tif test_cases == 2:\n\t\tbreak\n\nif test_cases * 2 == n:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n"], "132": ["import math\n\ninp = input().split(' ')\n\nn = int(inp[0])\nk = int(inp[1])\nh = list(map(int, inp[2:].split()))\n\ndef get_gcd(x, y):\n\twhile y:\n\t\tx, y = y, x % y\n\treturn x\n\ngcd = get_gcd(h[0], h[1])\n\ntotal = sum(h)\nans = math.inf\nfor i in range(2, len(h)):\n\tgcd = get_gcd(gcd, h[i])\n\ttotal -= gcd\n\tans = min(ans, total // gcd)\nprint(ans)\n", "from sys import stdin\nN, K = map(int, stdin.readline().rstrip().split())\nslices = list(map(int, stdin.readline().rstrip().split()))\n\nmemo = dict()\n\ndef height(v):\n\tif v not in memo:\n\t\tmemo[v] = 0\n\t\tmemo[v] += 1\n\treturn memo[v]\n\ndef min_common_sub(a, b):\n\tif len(a) < len(b):\n\t\treturn 0\n\taa = min(a)\n\tbb = min(b)\n\tret = aa + bb\n\tfor i in range(len(a)):\n\t\tsub = height(a[i])\n\t\tif sub < ret:\n\t\t\tret = sub\n\treturn ret\n\ntotal = sum(slices)\nfor i in range(len(slices) - 1):\n\ttotal -= min_common_sub(slices[i], slices[i+1])\n\nprint(total)\n", "from collections import Counter as co\nx,y=map(int,input().split())\na=sorted(list(map(int,input().split())),reverse=True)\nans=0\nfor i in range(x):\n\tans+=y\n\ty-=a[i]\nprint(ans)\n", "n, k = map(int, input().split())\nh = list(map(int, input().split()))\n\nl = [[] for i in range(100001)]\nfor i in range(len(h)):\n\tl[h[i]].append(i+1)\n\nm = 10**18\ndp = [[m]*(k+1) for i in range(n+1)]\n\nfor i in range(1, n+1):\n\tfor j in range(k+1):\n\t\tdp[i][j] = min(dp[i-1][j], dp[i][j-h[i]] + (j-h[i])*i)\n\nprint(min(dp[n][k]))\n", "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nh = list(map(int, input().split()))\n\nmx = max(h)\nsm = [0] * (mx + 1)\nfor i in range(n):\n\ts = h[i]\n\tmx -= i\n\tsm[i + 1] = sm[i] + s\n\nans = 0\nit = 0\nfor i in range(n - 1, -1, -1):\n\tcur = sm[i]\n\twhile it < n and cur <= k:\n\t\tcur += mx\n\t\tit += 1\n\tans += (it - i)\nprint(ans)\n", "n,k=list(map(int,input().split()))\nh=list(map(int,input().split()))\na=min(h)\nans=0\nw=a\nans+=(w-k*a)\nw=k*a\nfor i in range(1,n):\n\tif h[i]>h[i-1]:\n\t\tw+=1\n\telse:\n\t\tans+=1\nprint(ans)\n"], "133": ["n=int(input())\ns=input()\nc=0    \nfor i in range(0,len(s)):\n\tif c>0:\n\t\t\tif s[i]>s[i-c]:\n\t\t\t\tc+=1\nprint(n-c)\n", "import sys\ninput=sys.stdin.readline\n#t=int(input())\n\nn=int(input())\ns=input()\nans=0\ni=0\nwhile i<len(s):\n\td=0\n\tfor j in range(i,len(s)):\n\t\t#print(s[i:j+1])\n\t\tif s[i:j+1].count(s[i])<2:\n\t\t\td+=1\n\t\t\ti=j+1\n\t\t\t#print(i)\n\t#print(d)\n\tans=max(ans,d)\n\ti+=1\nprint(ans)\n", "def solve():\n\tn = int(input())\n\ts = input()\n\tp = 'abcdefghijklmnopqrstuvwxyz'\n\ts = list(s)\n\tc = {c[i]: i for i in range(26)}\n\tfor i in range(len(s)):\n\t\tx = s[i]\n\t\tt = p.find(x)\n\t\tif t >= 0:\n\t\t\ts[i] = ''\n\t\telse:\n\t\t\ts[i] = x\n\tcnt = 0\n\tfor i in range(26):\n\t\tcnt += max(0, min(cnt, solve() - c.get(i, i)))\n\tprint(n - cnt)\n\nt = int(input())\nfor i in range(t):\n\tsolve()\n", "from collections import defaultdict\n\nn = int(input())\ns = input()\n\nd = defaultdict(lambda: 0)\n\nfor c in s:\n\td[c] += 1\n\ndeletion_cost = n\n\nfor c, k in d.items():\n\tif k!= 0:\n\t\tdeletion_cost += k\n\t\tcontinue\n\t\n\tk2 = k*2\n\tmin_operations = n + deletion_cost\n\tmax_operations = k\n\n\tdeletion_cost -= (k-max_operations)\n\tmax_operations -= (k-deletion_cost)\n\t\n\tmin_operations = min(min_operations, max_operations)\n\nprint(min_operations)\n", "n = int(input())\ns = input()\nintervals = [[0,n]]\nfor c in s:\n\tintervals.append([j-i for j,i in enumerate(intervals[-1])])\nsorted_intervals = sorted(intervals, key=lambda x: (x[1], x[0]))\n\nleft, right, sl, sr = 0, len(s), 0, 0\nfor i, c in enumerate(sorted_intervals[1]):\n\tbisect_left = bisect_right = i\n\twhile left < right:\n\t\tif s[i]!= sorted_intervals[bisect_left][0]:\n\t\t\tbisect_left = bisect_right = sorted_intervals[bisect_left][1]\n\t\t\tleft += 1\n\t\telse:\n\t\t\tright -= 1\n\tsl = sl+intervals[right][1]\nsr = sr+intervals[bisect_left][0]\nprint(n-sr)\n", "def run(a,pos,cnt,ans):\n\tif pos==len(a):\n\t\treturn ans\n\telse:\n\t\ttpos = pos\n\t\tif cnt>0:\n\t\t\treturn run(a,pos+1,cnt+1,ans)\n\t\telse:\n\t\t\tkeep = 0\n\t\t\tfor i in range(pos,len(a)):\n\t\t\t\tif a[i]==a[pos]:\n\t\t\t\t\tkeep+=1\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\t\tmaxpos = pos\n\t\t\ttpos = pos\n\t\t\tif maxpos==len(a):\n\t\t\t\treturn run(a,0,0,ans)\n\t\t\telse:\n\t\t\t\treturn run(a,tpos+1,0,ans)\n\t\t\t\n\t\t\t\nn = int(input())\ns = input()\nprint(run(s,0,0,'',0))\n"], "134": ["a=list(map(int,input().split()))\nm=int(input())\nb=list(map(int,input().split()))\nc=0\nm=int(m)\nfor i in range(m):\n\tfor j in range(i+1,m):\n\t\tx=a[i]\n\t\ty=b[j]\n\t\tc+=(x*y)//2\nprint(c)\n", "n=int(input())\na=list(map(int, input().split()))\nm=int(input())\nb=list(map(int, input().split()))\na.sort(reverse=True)\nb.sort(reverse=True)\nans=0\nfor i in range(n):\n\tans+=(a[i]*b[i])//2\nfor i in range(m):\n\tans+=(a[i]*b[i]-b[i]*a[i])//2\nprint(ans)\n", "def main():\n\tn, m = list(map(int, input().split()))\n\tta = list(map(int, input().split()))\n\tbb = list(map(int, input().split()))\n\tnum_pairs = sum((ta + bb).count(i) * (m - 1) for i in set(ta + bb)) // 2\n\tdiv, mod = divmod(num_pairs, 2 * m)\n\tprint(div)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "# coding=utf-8\n# Your code here!\nimport math\ndef solve(b,n,m,a):\n\tm1=0\n\tm2=0\n\tfor i in range(0,m):\n\t\tif a[i]==b[i]:\n\t\t\tm1=m1+1\n\t\telif a[i]>b[i]:\n\t\t\tm2=m2+1\n\tm=m-m1\n\treturn m2\n\t\t\n# import math\n# def solve(b,n,m,a):\n#     m=0\n#     for i in range(0,n):\n#         if b[i]==a[i]:\n#             m+=1\n#     m=m-1\n#     return math.floor((m*(m+1))/2)\n\n# import fractions\n# def solve(b,n,m,a):\n#     k=0\n#     for i in range(0,m):\n#         for j in range(0,n):\n#             temp=(a[i]-b[j])*(a[j]-b[i])\n#             if temp>k:\n#                 k=temp\n#     return k\n\n# import fractions\n# def solve(b,n,m,a):\n#     q,d=list(map(", "from itertools import combinations\n\n\ndef largest_smaller_than(a, b, key=int):\n\tresult = 0\n\tfor x in range(len(a)):\n\t\tfor y in range(len(b)):\n\t\t\tif a[x] < b[y]:\n\t\t\t\tt = sorted(list(combinations(a, x + 1, key=lambda x:x - key)))\n\t\t\t\tresult += t[-1]\n\t\t\t\ta[x] = t[-1] + b[y]\n\t\t\t\tbreak\n\treturn result\n\n\nn = int(input())\n\na = list(map(int, input().split()))\n\nm = int(input())\n\nb = list(zip(*[map(int, input().split()) for i in range(m)])\n\nlargest_smaller_than([0], [1], 0)\n", "n=int(input())\na=list(map(int,input().split()))\nm=int(input())\nb=list(map(int,input().split()))\na.sort()\nb.sort()\npair=0\nfor i in range(n):\n\tpair+=a[i]*b[i]\nfor i in range(m):\n\tpair+=a[i]*b[i]\nprint(pair)\n"], "135": ["import sys\n\nN,K = map(int,input().split())\n\nv = [0]\nfor i in range(1,N+1):\n\tv.append(v[-1] + c[i])\n\ncnt = 0\nv.sort()\n\nfor i in range(N,0,-1):\n\tif v[i] < 2.4*K:\n\t\tcnt += 1\n\t\tcontinue\n\t\n\tl = max(0,i-K)\n\tr = N\n\t\n\twhile l < r:\n\t\tmid = (l+r)//2\n\t\tt = cnt + v[mid] * (mid)\n\t\tif t < cnt:\n\t\t\tl = mid + 1\n\t\telse:\n\t\t\tr = mid\n\t\t\t\n\tprint(cnt)\n", "def solve(x,y,c,n):\n\tif x==0:\n\t\treturn c\n\tif y==0:\n\t\treturn 0\n\tif x==n:\n\t\treturn 0\n\treturn (solve(x-x%2*c,y,c,n)+solve(x,y-y%2*c,c,n))\n\nn,k=map(int,input().split())\nx,y,c=list(map(int,input().split()))\na=solve(x,y,c,n)\nprint(\"{0:.10f}\".format(a/k))\n", "# cook your dish here\nN,K = list(map(int,input().split()))\n\np = []\nfor i in range(N):\n\tx,y,c = list(map(int,input().split()))\n\tp.append((x,y,c))\n\t\nimport math\n\ndef binary_search(l,r):\n\tmid=(l+r)//2\n\tif p[mid][0]==-1:\n\t\treturn -1\n\telif p[mid][0]>=0:\n\t\treturn p[mid][1]\n\telse:\n\t\treturn binary_search(p[mid+1][0],p[mid][1])\n\nl=0\nr=N\nans = -1\nwhile l<=r:\n\t# print(l,r)\n\tmid=(l+r)//2\n\t# print(mid)\n\ttot = 0\n\tfor i in range(len(p)):\n\t\tx,y,c = p[i]\n\t\t# print(x,y,c)\n\t\tif i!=mid and math.fabs(x-x*c)<=math.fabs(y-y*c):\n\t\t\tans=mid\n\t\t\tbreak\n\t\telif i==mid:\n\t\t\ttot+=p[i][2]\n\t\t\t# print(tot)\n\t\telse:\n\t\t\ttot+=math.ceil((math.fabs(p[mid][0]-x)*math.fabs(y-y*c))/(math.sqrt(c*c)))\n\t\t\t# print('tot',tot)\n\t\t\tl=mid+1", "import math\n\nN,K = list(map(int,input().split()))\nx1,y1,c1 = list(map(int,input().split()))\ntimes = 0\nif K > 2:\n\tX = (-1 + math.sqrt(1 + 4 * x1)) / 2\n\tY = (-1 + math.sqrt(1 + 4 * y1)) / 2\n\tZ = (math.sqrt(1 + 4 * x1) + 1) / 2\n\t# print(X,Y,Z)\n\ttime = int(X * Y * Z)\n\tfor i in range(K - 1):\n\t\tif (x1 + x2 + x3 < 0) or (y1 + y2 + y3 < 0):\n\t\t\ttime += Z\n\t\telse:\n\t\t\ttime += X\n\t# print(X,Y,time)\n\tprint(time)\nelif K == 2:\n\tprint(2 * x1 * y1)\nelse:\n\t# print(-1 + (math.sqrt(1 + 4 * x1) * math.sqrt(1 + 4 * y1)) / 2)\n\t# print(-1 + (math.sqrt(1 + 4 * x1) * math.sqrt(1 + 4 * y1)) / 2)\n\t# print(math.sqrt(1 + 4 * x1 * y1))\n\t# print(int(math.ceil(float(K - 2) / 2)))\n\tprint(int((-1 + math.sqrt(1 + 4 * x1) * math.sqrt(1 + 4 * y1)) / 2))\n", "N,K = map(int,input().split())\n\np = []\nfor i in range(N):\n\txi,yi,c = map(int,input().split())\n\tp.append((xi,yi,c))\n\ndef solve(x1,y1,x2,y2):\n\tdt = (y2 - y1) ** 2 + (x2 - x1) ** 2\n\treturn dt / float(K)\n\nl = 0.0\nr = N\nif N == K:\n\tprint(l)\n\treturn\nwhile r > l:\n\tm = (r + l) // 2\n\tif solve(p[m][0],p[m][1],p[m][2]):\n\t\tl = m\n\telse:\n\t\tr = m\n\nprint(l)\n", "N,K = map(int,input().split())\nx = list(map(int,input().split()))\ny = list(map(int,input().split()))\nc = [0]*(N+1)\n\nfor i in range(N):\n\tc[i+1] = c[i]+x[i]*y[i]\n\nv = c[K]\nl = 0\nr = N\nans = 0\nwhile r-l>1:\n\tm = (r+l)>>1\n\tif c[m]>v:\n\t\tr = m\n\telse:\n\t\tl = m\n\tans+=m\n\nif c[K]>=v:\n\tprint(ans+K//c[-1])\nelse:\n\tprint(ans)\n"], "136": ["s=input()\nr=int(s[0])\nn=int(s[1])\nif(r>2):\n\tprint(\"2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\")\nelse:\n\tfor i in range(100):\n\t\tif(bin(i)[2:]!=\"0\"):\n\t\t\tr=i\n\t\t\tbreak\n\tq=10**(r-1)\n\tl=[i for i in range(q+1)]\n\tif(r>1):\n\t\tprint(l[-1])\n\telse:\n\t\tif(len(l)==q):\n\t\t\tprint(n)\n\t\telse:\n\t\t\tk=2**(r-1)\n\t\t\tp=0\n\t\t\tfor i in range(q-k):\n\t\t\t\tp+=l[i]\n\t\t\t\tl=l[0:i]\n\t\t\t\tp=p*(k-1)\n\t\t\tfor i in range(q-k,q):\n\t\t\t\tl+=[2**i]\n\t\t\t\tp+=l[i]\n\t\t\t\tl=l[0:i]\n\t\t\tp=0\n\t\t\tfor i in range(q-k,q):\n\t\t\t\tl+=[2**i]\n\t\t\t\tp+=l[i]\n\t\t\t\tl=l[0:i]\n\t\t\tfor i in range(q-k):\n\t\t\t\tl+=[2**i]\n\t\t\t\tp+=l[i]\n\t\t\t\tl=", "def main():\n\ta, k = list(map(int, input().split()))\n\tif k > 2 and a % 2:\n\t\tprint(2)\n\t\treturn\n\tl = k\n\tx = 2\n\twhile a // x <= k:\n\t\tl += 1\n\t\tx *= 2\n\tprint(a // x)\n\nmain()\n", "s = input()\narr = []\nn = int(s[:-1])\nk = int(s[-1:])\nif k > 2 * 10 ** 18:\n\tprint(2 * 10 ** 18)\nelse:\n\tfor i in range(k - 1):\n\t\tarr.append(2 * 10 ** 18)\n\tif len(set(arr)) == len(arr):\n\t\tprint(sum(arr))\n", "m, k = map(int, input().split())\nt = 1\nwhile m * t <= 2 * k:\n\tt *= 2\nk -= t * 2 // (m - 1)\nif k < 0:\n\tprint(1)\nelse:\n\tprint(m * (2 * k + 1))\n", "m, k = map(int, input().split())\nif m > 2 * k:\n\tprint(2 * k + m - 1)\nelse:\n\tprint(2 * k)\n", "maxn = 1000003\nn,k = list(map(int,input().split()))\nif k > maxn:\n\tprint(2)\n\treturn\nb = pow(2,k) - 1\nr = b\na = int('1' * len(str(b)))\nif a == 1:\n\tprint(n)\nelse:\n\ts = str(a)\n\tm = len(s)\n\tif m > r:\n\t\tprint(a)\n\telse:\n\t\tprint((2 ** r - 1))\n"], "137": ["n, m = map(int, input().split())\n\np = [0] * (n + 1)\n\nfor i in range(1, n + 1):\n\tq = i\n\twhile q > 0:\n\t\tif q & 1:\n\t\t\tp[i] = (p[i - 1] + 1) % 1000000007\n\t\t\tq = q >> 1\n\t\telse:\n\t\t\tp[i] = p[i - 1] % 1000000007\n\t\t\tq = (q + 1) >> 1\n\nprint(p[-1])\n", "#!/usr/bin/env\tpython\n#-*-coding:utf-8 -*-\n\nimport sys\n\ndef solve(n,m,s):\n\tways = [[0 for i in range(m+2)]for i in range(n+2)]\n\tways[0][0]=1\n\tways[1][1]=1\n\tfor i in range(n):\n\t\tfor j in range(m+1):\n\t\t\tif i+j>=n: continue\n\t\t\tways[i+1][j] = (ways[i][j] + ways[i+1][j+1])%m\n\t\t\tif i+j<m: ways[i+1][j+1] = (ways[i][j] + ways[i+1][j-1])%m\n\tans = 0\n\tfor i in range(n):\n\t\tans = (ans + ways[i][-1])%m\n\treturn ans\n\n\nn,m=list(map(int,input().split()))\nprint(solve(n,m,s+n+1))\n", "n, m = [int(s) for s in input().split()]\na = 10 ** 9 + 7\n\ny = [0 for _ in range(n+1)]\nfor i in range(n):\n\tif y[i]:\n\t\tx = 1\n\t\ty[i+1:] = [x*(y[i] + 1-x) % a]\n\telse:\n\t\tx = (y[i] + 1) % a\n\nprint(y[-1])\n", "def main():\n\tn, m = list(map(int, input().split()))\n\ta = [list(map(int, input().split())) for _ in range(n)]\n\tan = 1\n\tfor _ in range(m):\n\t\tif 1 < n:\n\t\t\tfor i, x in enumerate(a):\n\t\t\t\tif 0 < x[0] < n:\n\t\t\t\t\tan = (an * (x[1] + 1)) % (10 ** 9 + 7)\n\t\telse:\n\t\t\tfor i, x in enumerate(a):\n\t\t\t\tif 0 < x[-1] < m:\n\t\t\t\t\tan = (an * (x[1] + 1)) % (10 ** 9 + 7)\n\tprint(an)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "'''\n\tAuther: ghoshashis545 Ashis Ghosh\n\tCollege: Jalpaiguri Govt Enggineering College\n'''\n\nfrom os import path\nimport sys\nfrom heapq import heappush, heappop\nfrom collections import defaultdict as dd\nfrom bisect import bisect, bisect_left, bisect_right\nimport functools\nimport os\nimport sys\n\ndef ii(): return int(input())\ndef si(): return input()\ndef mi(): return list(map(int, input().split()))\ndef li(): return list(mi())\nabc='abcdefghijklmnopqrstuvwxyz'\nmod=1000000007\n\n#from math import pow\n#mod=1000000007\n\ninf = float('inf')\n\ndef divs(n):\n\tn2 = n\n\tfor i in range(2, int(n ** 0.5) + 2):\n\t\tif n % i == 0:\n\t\t\tn2 = n2 // i\n\t\t\tif n2!= i:\n\t\t\t\tbreak\n\treturn n2\n\ndef main():\n\tn,m=mi()\n\n\t'''\n\tAuther: ghoshashis545 Ashis Ghosh\n\tCollege: Jalpaiguri Govt Enggineering College\n'''\n\tedges=dd(list)\n\tr=[[-1]*(n) for _ in range(n)]\n\tfor i in range(n):\n\t\tr[i][i-1]=1\n\t\tedges[i][i]=1\n\t\tfor j in range(i-1,-1,-1):\n\t\t\tif edges[j][i]==-1:\n\t\t\t\t", "MOD = 1000000007\nn, m = list(map(int, input().split()))\ns = [[0] * m for i in range(n)]\n\nfor i in range(m):\n\tfor j in range(n):\n\t\ts[i][j] = (s[i - 1][j] + s[i][j - 1]) % MOD\n\nprint(s[-1][-1])\n"], "138": ["m, s = map(int, input().split())\nif m + s > 900: print(-1);return\na = ['9'] * m\ni = 0\nwhile i < m and i < len(a):\n\tc = 0\n\twhile i < len(a) and a[i] == '0':\n\t\ti += 1\n\t\tc += 1\n\tif c!= 0:\n\t\tbreak\n\ta.append(str(c))\n\ti += 1\ni = 0\na.reverse()\ni = m\nq = []\nwhile i < len(a):\n\tfor c in a:\n\t\tif i < len(a) and c == '0':\n\t\t\tbreak\n\t\telse:\n\t\t\ti += 1\n\tq.append(int(c))\n\ti += 1\nif q[0] * q[-1] <= 9:\n\tprint(''.join(q))\nelse:\n\tprint(-1)\n", "a,b=list(map(int,input().split()))\nif m!=a+b:\n\tprint(-1,-1)\nelse:\n\tif m>a+b:\n\t\tfor i in range(a+b):\n\t\t\tx=list(str(i))\n\t\t\tif len(x)<=m:\n\t\t\t\tx.append('0')\n\t\t\tif sum(x)==a:\n\t\t\t\tprint(i,i%1000000007)\n\t\t\t\treturn\n\t\tfor i in range(a):\n\t\t\tprint(i,i%1000000007)\n", "m,s=list(map(int,input().split()))\n\nif m==s:\n\tprint(m,s)\nelse:\n\tres=[]\n\twhile m>=sum(map(int,input())):\n\t\tres.append(m%10)\n\t\tm=m//10\n\tk=0\n\tmn=10**9\n\tfor i in res:\n\t\tif i>=mn:\n\t\t\tmn=i\n\t\t\tk=1\n\t\n\tif not k:\n\t\tprint(-1,-1)\n\telse:\n\t\tprint(mn,m)\n\t\t\t\t\n", "#input=str(input())\n#m=int(input())\n#s=list(map(int,input()))\n#n=int(input())\nfrom math import gcd,sqrt\nn,m=list(map(int,input().split()))\n#mod=10**9+7\nl=m%9\nif m==0:\n\tif n==0:\n\t\tif sum(map(int,str(n)))==s:\n\t\t\tprint(-1,-1)\n\t\telse:\n\t\t\tprint(-1,-1)\n\telse:\n\t\tg=0\n\t\tfor i in range(1,10):\n\t\t\tg=g+i\n\t\tx=l//g\n\t\tl=m%g\n\t\tif (m+g)%9==x:\n\t\t\tprint(x,end=\" \")\n\t\telse:\n\t\t\tprint(x,end=\" \")\nelse:\n\tg=0\n\tfor i in range(1,10):\n\t\tg=g+i\n\t\tx=m//g\n\t\tm=m%g\n\t\tif i>x:\n\t\t\tprint(-1,-1)\n\t\telif (m+g)%9==x:\n\t\t\tprint(x,end=\" \")\n\t\telse:\n\t\t\tprint(x,end=\" \")\n\t\n", "a, b = input().split()\na, b = int(a), int(b)\nif not a and not b:\n\tprint(-1)\nelse:\n\tprint(a*10+b*10, b*10+a*10)\n", "def main():\n\tdef f(l,s,c):\n\t\tif len(l)==m:\n\t\t\ta=list(map(int,str(s)))\n\t\t\treturn str(a)\n\t\telse:\n\t\t\tfor i in range(len(l)):\n\t\t\t\tif i>c:\n\t\t\t\t\tbreak\n\t\t\t\tt=f(l[0:i]+l[i+1:],s,c+1)\n\t\t\t\tif t[0]=='0':\n\t\t\t\t\tcontinue\n\t\t\t\tprint(t+t[1:],sep='')\n\t\t\treturn\n\t\t\n\tm,s=list(map(int,input().split()))\n\tmain()\n\treturn\n\nmain()\n"], "139": ["class SegmentTree():\n\tdef __init__(self, n, digit_to_count, identity_element):\n\t\tself.n = n\n\t\tself.digit_to_count = digit_to_count\n\t\tself.identity_element = identity_element\n\n\t\tself.left = [self.identity_element] * (n - 1)\n\t\tself.right = [self.identity_element] * (n - 1)\n\n\t\tself.count = len(self.left)\n\t\tself.res = 0\n\n\tdef update_left(self, k, x):\n\t\tk += self.n\n\t\tself.left[k] = x\n\t\twhile k > 0:\n\t\t\tself.left[k - 1] = self.left[k]\n\t\t\tk = (k - 1) // 2\n\t\n\n\tdef update_right(self, k, x):\n\t\tk += self.n\n\t\tself.right[k] = x\n\t\twhile k > 0:\n\t\t\tself.right[k - 1] = self.right[k]\n\t\t\tk = (k - 1) // 2\n\t\n\tdef find_path(self, l, r, identity_element):\n\t\tp = self.find_path(l - 1, r, identity_element)\n\t\tq = self.find_path(l, p - 1, identity_element)\n\t\treturn (self.find_path(p, r, identity_element) + (self.find_path(q, l, identity_element)) % 998244353)\n\n\tdef find_path_length(self, l, r, identity_element):\n\t\treturn (self.", "def main():\n\timport sys\n\tinput = sys.stdin.readline\n\n\tL, R, K = list(map(int, input().split()))\n\tseen = set()\n\n\tfor i in range(L - 1, R):\n\t\tfor D in [0] * 10:\n\t\t\tD = D * (i + 1)\n\t\t\tC = 0\n\t\t\twhile D > 0:\n\t\t\t\tC += D % 10\n\t\t\t\tD //= 10\n\n\t\t\tseen.add(C)\n\n\t\tK -= 1\n\n\tanswer = 0\n\tfor i in range(L, R + 1):\n\t\tif i not in seen:\n\t\t\tanswer += (K * i) % 998244353\n\t\t\tanswer %= 998244353\n\n\tprint(answer)\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n", "from operator import mul\n\nmod = 998244353\na, b, k = map(int, input().split())\nli = [list(map(int, input().strip())) for _ in range(a)]\nl1 = sorted(li, reverse=True)\nl2 = [sum(i) for i in l1]\nres = 0\nfor i in range(k - 1):\n\tn = 1\n\twhile len(set(n)) < k:\n\t\tn *= 10\n\tres += n\n\ta += 1\n\tif len(set(n)) == k:\n\t\tbreak\nprint(res % mod)\n", "L, R, K = map(int, input().split())\n\nmod = 998244353\na = [1] * L\nfor i in range(1, L):\n\ta[i] = a[i - 1] * 10 % mod\n\nans = 0\nfor i in range(L - R + 1):\n\tans = (ans + a[i]) % mod\n\tcnt = len(set(str(i)))\n\tif cnt <= K:\n\t\tans = (ans * a[i - 1]) % mod\nprint(ans)\n", "l,r,k=map(int,input().split())\nmod=998244353\na=(10)**(r-l+1)\nb=(k-1)**(r-l+1)\nfor i in range(l+1):\n\tc=1\n\tfor j in range(1,10):\n\t\tc=(c*(9*j+1))%mod\n\tb+=(((b-c)**(l-i))//mod)*(i*a+b)%mod\nprint(b)\n", "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nMOD = 998244353\nBASE = 200\n\ndef calc(n, k):\n\tif k == 0:\n\t\treturn n\n\tX = [[] for x in range(n)]\n\tr = max(n - k + 1, 9)\n\tl = n - 1\n\tfor i in range(k):\n\t\tX[r].append(i)\n\t\tl -= 1\n\tX[l].append(r)\n\treturn sum([sum(c) % MOD for c in X]) % MOD\n\nN, K, S = [int(a) for a in input().split()]\ns = calc(N-1, K-1)\nt = calc(N-1, K)\n\nprint((s * pow(BASE, N-K, MOD) - t * pow(BASE, S, MOD) % MOD))\n"], "140": ["n = int(input())\n\ndef func( x ):\n\tif x % 1 == 0:\n\t\treturn int(x / 1)\n\telse:\n\t\treturn x + 0.5\n\nans = func(n)\nprint(ans)\n", "n=int(input())\n\ndef f(x):\n\tans = 0\n\twhile x > 0:\n\t\tans += 1\n\t\tx = x // 10\n\treturn ans\n\nl = []\nfor i in range(1, 11):\n\tif n == f(i):\n\t\tl.append(i)\n\nif len(l) > 0:\n\tprint(l[-1])\nelse:\n\tprint(0)\n", "n = int(input())\nprint(0 if n == 0 else int(n ** 0.5) + 1)\n", "n = int(input())\nprint(max(0, int(n**(1/2)))\n", "a = int(input())\n\nfor i in range(len(a) + 1):\n\tif a % i == 0:\n\t\tprint((a // i) // 10)\n", "def i():\n\treturn int(input())\n\ndef f():\n\treturn input()\n\nn = i()\nif n % 1 == 0:\n\tprint(0)\nelse:\n\tprint((n//1) + (n%1!= 0 and n%1 % 10!= 0))\n"], "141": ["import math\nimport collections\nimport itertools\nimport functools\nimport sys\n\nimport operator as op\n\n\ndef go():\n\ts = input()\n\tt = input()\n\n\tcs = collections.Counter(s)\n\tcs.subtract(collections.Counter(t))\n\tc = collections.Counter()\n\n\tfor k, v in c.items():\n\t\tif cs[k] < 0:\n\t\t\treturn -1\n\n\tl = list(cs.values())\n\n\tif min(l) % 2:\n\t\treturn -1\n\n\tm = sum(l) // 2\n\treturn [len(l),m][op(l,2)]\n\n\ndef __starting_point():\n\tprint(go())\n\n\n__starting_point()\n", "s=input()\nt=input()\nl=[]\nd=[]\nfor i in s:\n\tl.append(i)\nfor i in t:\n\td.append(i)\nl.sort()\nd.sort()\ni=0\nwhile i< len(l):\n\tif l[i] in d:\n\t\tj=d.index(l[i])\n\t\td.pop(j)\n\t\td.insert(j+i,l[i])\n\t\tl[i]=l[j]\n\t\ti+=1\n\ti+=1 \nif len(d)%2!=0:\n\tprint(-1)\nelse:\n\tj=len(d)-1\n\tm=0\n\twhile i< len(l):\n\t\tif l[i] in d:\n\t\t\tm+=1\n\t\t\ti+=d.index(l[i])\n\t\telse:\n\t\t\tm+=d.index(l[i])\n\t\t\ti+=1\n\tif m!=0:\n\t\tprint(-1)\n\telse:\n\t\twhile l[j]!=d[m]:\n\t\t\tj-=1\n\t\tfor i in range(j):\n\t\t\tkey=l[i]\n\t\t\tfor k in range(i+1, j):\n\t\t\t\tif l[k]!=key:\n\t\t\t\t\tl[i],l[k]=l[k],key\n\t\t\t\t\tbreak\n\t\t\tl[i],l[j]=l[j],key\n\t\t\tm-=1\n\t\tprint(len(l))\n\t\tfor i in range(len(l", "s, t = input(), input()\nl, m, n = len(t), len(s)\nans = 0\nfor i in range(l):\n\tfor j in range(m):\n\t\tif t[i] == s[j]:\n\t\t\tans += 1\nfor i in range(n):\n\tif s[i] == t[i]:\n\t\tans += 1\nif ans % 2:\n\tprint(-1)\n\treturn\nkeys = []\nfor i in range(ans):\n\tif i not in keys:\n\t\tkeys.append(i)\nfor i in keys:\n\tt = list(t)\n\tfor j in range(m):\n\t\tif i[j]!= j[i[j]]:\n\t\t\tt[i[j]] = j[i[j]]\n\t\t\tkeys.remove(i)\nif not keys:\n\tprint(0)\nelse:\n\tprint(keys.count(0))\n", "s = input()\nt = input()\n\nkeys = {}\n\nfor c in s:\n\tif c in keys:\n\t\tkeys[c] += 1\n\t\tkeys[t[0]] -= 1\n\telse:\n\t\tkeys[c] = 1\n\nans = []\nfor key in keys.keys():\n\tif key!= t[0] and key!= t[1]:\n\t\tans += [key]\n\nif len(ans) == 0:\n\tprint(-1)\n\n\t\nelse:\n\tprint(len(ans))\n\tfor c in ans:\n\t\tif c!= key:\n\t\t\tprint(c, end=' ')\n\t\t\tbreak\n", "import collections\n\ndef solve(s, t):\n\tans = collections.Counter(t)\n\tfor x, y in collections.Counter(s).items():\n\t\tif x!= y:\n\t\t\tans[x] -= 1\n\t\t\tans[y] -= 1\n\treturn ans\n\ns = input().rstrip()\nt = input().rstrip()\nn = len(s)\nm = len(t)\nans = n * m\nfor i in range(m):\n\tx, y = solve(s, t)\n\tif x!= y:\n\t\tans -= 1\n\t\tprint(-1)\n\t\tbreak\n", "from collections import Counter\n\ns = input()\nt = input()\ncnt = Counter(s)\n\npairs = 0\nfor v in cnt.values():\n\tif v % 2:\n\t\tpairs += v // 2\n\telse:\n\t\tpairs -= v // 2\n\nif pairs > 0:\n\tprint(-1)\nelse:\n\tprint(pairs)\n"], "142": ["a, b=input().split()\na=list(a)\nb=list(b)\na.sort()\nb.sort()\ni=0\nwhile i<len(a):\n\tif a[i]==b[i]:\n\t\tind=i\n\t\tbreak\n\ti+=1\nif i==len(a):\n\tprint(a[0])\nelse:\n\tprint(b[i])\n", "# cook your dish here\na,b=input().split()\na=list(a)\nb=list(b)\na.sort()\nb.sort()\n\nfor i in range(len(a)):\n\tif b[i]==a[0]:\n\t\tprint(b[i],end=\"\")\n\telse:\n\t\tprint(a[i],end=\"\")\n", "# cook your dish here\na,b=input().split()\na=list(a)\na.sort()\nprint(''.join(chr(ord(i)-96+96) for i in a))\n", "def solve(s1, s2):\n\ta = s1 + s2\n\treturn \"\".join(sorted(list(a[:min(i, 10)], key = ord)[::-1]))\n\ns1, s2 = input(), input()\nprint(solve(s1, s2))\n", "# cook your dish here\nx=input()\ny=input()\nx=x.split(' ')\ny=y.split(' ')\nx.sort()\ny.sort()\ni=0\nwhile max(x)>i:\n\tif x[i]==''and y[i]==' ':\n\t\ti+=1 \n\t\t\nprint(''.join(x[i:]+y[i:]))\n", "def __starting_point():\n\ts1,s2=input().split()\n\ts1=s1.strip()\n\ts2=s2.strip()\n\tl=[]\n\tl.append(s1)\n\tl.append(s2)\n\tl.sort()\n\ti=0\n\twhile i<len(l):\n\t\ta=l[i]\n\t\tb=l[i+1]\n\t\tif a==b:\n\t\t\tl.pop(i)\n\t\telse:\n\t\t\tl.append(a+b[1:len(b)])\n\t\t\tl.sort()\n\t\ti+=1\n\tprint(\"\".join(l))\n\n__starting_point()\n"], "143": ["a = input().strip()\nb = input().strip()\nif len(a) > len(b):\n\tprint(\"<\")\nelif len(a) < len(b):\n\tprint(\">\")\nelse:\n\tres = float(\"\".join(map(str, a)))\n\tif res > b:\n\t\tprint(\">\")\n\telse:\n\t\tprint(\"<\")\n", "x = [0]\nfor i in range(1, 1000005):\n\tx.append(x[-1] + int(i))\ny = [0]\nfor i in range(1, 1000005):\n\ty.append(y[-1] + int(i))\nif x[0] > y[0]:\n\tprint('>')\nelif x[0] < y[0]:\n\tprint('<')\nelse:\n\tprint('=')\n", "def convert(s):   \n\tremainder = int(s[0])  # remainder after removing first '0'\n\tfirst_part = int(s[1:])  # first part of the string  \n\tsecond_part = 0   # second part of the string\n\tfor el in s[2:]:\n\t\tel = int(el)  # decimal value of the el\n\t\tif  first_part == el * remainder:\n\t\t\tsecond_part += el\n\t\telif el > second_part:\n\t\t\treturn int(remainder)\n\t\telse: \n\t\t\tremainder = int(el)\n\t\t\tfirst_part = int(remainder)  # start of the next part\n\treturn first_part\n\t\nn,m=map(int,input().split())\nif n>m:\n\tprint('>')\nelse:\n\tprint('<')\n", "a = input()\nprint('<' if a[0]!= '1' else '>')\nfor i in range(len(a) - 1):\n\tif a[i] == '1':\n\t\tk = int(a[i:i+2]) * (10 ** (len(a) - i - 2))\n\telse:\n\t\tk = int(a[i:i+2]) * (10 ** (len(a) - i - 1))\n\tif k > a[i + 2]:\n\t\tprint('>')\n\telif k < a[i + 2]:\n\t\tprint('<')\n", "s = input()\nn = len(s)\n\np = s.find('1')\n\nq = 10**(n-p)\n\nprint([\"=\" if q > p else \"<\", \">\" if q < p else \"=\"])\n", "a=input()\nb=input()\nif len(a)==0:\n\tprint(\"=\")\nelse:\n\ta,b=list(map(int,list(a)))\n\tc=abs(int(a)*int(b))\n\tif c>int(b):\n\t\tprint(\">\")\n\telse:\n\t\tprint(\"<\")\n"], "144": ["n = int(input())\nif n > 6:\n\tprint(0)\nelse:\n\tpows = dict()\n\tspaces = dict()\n\ttimes = dict()\n\tfor i in range(n):\n\t\tword = input()\n\t\tif word.lower() in ['purple', 'green', 'blue', 'orange','red']:\n\t\t\tpows[word.lower()] = 1\n\t\telse:\n\t\t\tspaces[word.lower()] = 1\n\t\tif word.lower() in ['time','space']:\n\t\t\ttimes[word.lower()] = 1\n\t\telse:\n\t\t\ttruth = True\n\t\t\tfor key, value in zip(word.lower(), spaces.lower()):\n\t\t\t\tif key == 'truth':\n\t\t\t\t\tvalue = 1\n\t\t\t\telse:\n\t\t\t\t\tvalue = 0\n\t\t\t\tif value == 1:\n\t\t\t\t\ttruth = False\n\t\t\tif truth:\n\t\t\t\ttimes[word.lower()] -= 1\n\t\t\telse:\n\t\t\t\tspaces[word.lower()] -= 1\n\tmin_missing = 0\n\tfor i in range(6):\n\t\tif pows[i] == 0 and spaces[i] == 0 and times[i] == 0:\n\t\t\tmin_missing += 1\n\tprint(min_missing)\n\tfor j in range(n):\n\t\tif times[j] == 0:\n\t\t\tprint(j + 1)\n\t\telse:\n\t\t\tprint(j + 1).title()\n", "n=int(input())\ns=set()\nfor i in range (n):\n\tt=list(input().split())\n\tt=['','','','','','','','','','','','','','','','','',''][t[0]=='P']+t[1:].lower()\n\tif t not in s:\n\t\ts.add(t)\n\nprint(len(s))\nfor i in range (len(s)):\n\tprint(s[i])\n", "def main():\n\tn = int(input())\n\tgems = set()\n\tfor i in range(n):\n\t\tgems.add(input().strip())\n\n\tfor gem in gems:\n\t\tif gem in [\"power\", \"time\", \"space\", \" Soul\", \" Reality\"]:\n\t\t\tprint(gem)\n\t\telse:\n\t\t\tprint(f\"{gem} not present\")\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "\nimport itertools\nimport collections\n\nn = int(input())\nans = []\ncolors = \"RGB\"\nfor i in range(n):\n\tcolor = input()\n\tcolor = color.lower()\n\tif color in colors:\n\t\tname = colors[color]\n\telse:\n\t\tname = 'None'\n\tif not ans:\n\t\tans.append(name)\n\telse:\n\t\tname = \"\".join(i for i in itertools.zip_longest(*list(list(name))),fillvalue=' ')\n\t\tans.append(name)\nprint(len(ans))\nprint(*ans, sep='\\n')\n", "#Bhargey Mehta (Junior)\n#DA-IICT, Gandhinagar\nimport sys, math\n\nsys.setrecursionlimit(10**6)\n\nn = int(input())\ng = [set() for _ in range(6)]\nfor i in range(n):\n\tc = input().strip()\n\tfor j in c:\n\t\tg[j].add(i)\n\t\nans = []\nfor i in range(6):\n\tif g[i]:\n\t\tt = [str(i) +'' + j for j in g[i]]\n\t\tans.append(t)\n\nprint(len(ans))\nfor i in ans:\n\tprint(i)\n", "import sys\n\ninput = sys.stdin.readline\n\nN = int(input())\nG = [set() for _ in range(N)]\nfor i in range(N):\n\tG[int(input()) - 1].add(input().strip())\nG.append(set())\n\nA = set()\nfor a in G:\n\tA.update(a)\n\nans = []\nfor a in A:\n\ts =''.join(sorted(list(a)))\n\tprint(s)\n"], "145": ["v1, v2 = map(int, input().split())\nt = int(input())\ns = 0\ne = 10000000\nans = 0\nwhile e - s > 0:\n\tif v2 == v1:\n\t\tans += t * 2\n\t\ts = e\n\t\te = t\n\telif (v2 - v1) / (t - t) <= d:\n\t\tans += d\n\t\ts = e\n\telse:\n\t\tans += d * 2\n\t\ts = t - s\n\t\tt = d * 2 - e\nprint(ans)\n", "v1, v2 = map(int, input().split())\nt = int(input())\nv_min, v_max = min(v1, v2), max(v1, v2)\nl, r = 0, v_max - v_min\nans = 0\nwhile l < r:\n\tif (l + r) % 2 == 0:\n\t\tans += v2 - v1\n\t\tl += 1\n\telse:\n\t\tr -= 1\nprint(ans)\n", "v1, v2 = [int(x) for x in input().split()]\nt = int(input())\n\nc1 = (v1/t)\nc2 = v2/t\n\nl1 = t - c1\nl2 = t - c2\n\nprint(max(l2, l1))\n\n", "v1,v2 = list(map(int, input().split()))\nt = int(input())\nval = 0\nans = 0\nfor i in range(t):\n\tval += v2\n\tif val > v1:\n\t\tans += v2-v1\n\t\tv1 = val\n\telse:\n\t\tans += v1\n\t\tv2 = val\n\nprint(ans)\n", "v1,v2 = [int(x) for x in input().split()]\nt = [int(x) for x in input().split()]\n\ns1 = v1\ns2 = v2\nd = 0\nans = 0\ns1 = (s1*t[0])/v1\nfor i in range(1,t[1]+1):\n\tif(s1>=v2):\n\t\tans = max(ans,(t[i]-s1)*d)\n\t\ts1 = (s1*t[0])/v1\n\telse:\n\t\tans = max(ans,t[i]-s2*d)\n\t\ts2 = (s2*t[0])/v2\nprint(max(ans,t[-1]-s1))\n", "v1, v2 = list(map(float, input().split()))\n\nt = int(input())\n\nv_left = v1\nv_right = v2\n\nans = 0\n\nfor i in range(t):\n\td = abs(v_left - v_right)\n\t\n\tif d > 0:\n\t\tans += d * 2\n\t\tv_left = v_left + v_right\n\n\telif d < 0:\n\t\tans += d * 2 - 1\n\t\tv_right = v_right - v_left\n\t\n\nprint(ans)\n"], "146": ["a, b = map(int, input().split())\n\ns = \"\"\n\nfor i in range(b):\n\ts += str(a)\n\ts += str(i)\n\nprint(int(s[-1]))\n", "a,b=map(int,input().split())\n\nfor i in range(b,0,-1):\n\tk=a//(i+1)\n\tans=k*(i+1)\n\tif ans>=int(str(k)[-1]):\n\t\tans=ans%10\n\tprint(int(ans))\n", "# coding=utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\n\ndef main():\n\ta,b=map(int,readline().split())\n\n\tans = b\n\ti = 1\n\twhile ans>=a:\n\t\tans = ans//i * (i+1)\n\t\ti = i+1\n\n\tprint(ans%10)\n\ndef __starting_point():\n\tmain()\n__starting_point()\n", "a, b = list(map(int, input().split()))\nc = 0\nfor i in range(b):\n\tc = c * (a + (i*(a + 1) // 2))\nprint(c)\n", "a, b = map(int, input().split())\nx = str(a)\nfor i in range(b-a+1):\n\tx = x+str(int(x[-1])*(a-1))\nprint(x[-1])\n", "#!/usr/bin/env python3\nimport sys\n\ndef image(n):\n\treturn n if n < 2 else 2 * (n - 1)\n\ndef main():\n\ta, b = list(map(int, sys.stdin.readline().split()))\n\tif b > a:\n\t\ta, b = b, a\n\tprint(image(b))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "147": ["def isprime(n):\n\tfor i in range(2,int(n**0.5)+1):\n\t\tif n%i==0:\n\t\t\treturn False\n\treturn True\nn=int(input())\nif isprime(n):\n\tif n==2:\n\t\tprint(1)\n\telse:\n\t\tprint(2)\nelse:\n\tprint(3)\n", "n = int(input())\nfor i in range(2, n // 2 + 1):\n\tif n * i > 2:\n\t\tprint(i)\n\t\tbreak\n", "def isprime(m):\n\tk = 2\n\twhile k * k <= m:\n\t\tif m % k == 0:\n\t\t\treturn False\n\t\tk += 1\n\treturn True\n\n\nn = int(input())\nif isprime(n) == 1:\n\tprint(1)\nelse:\n\tprint(2)\n", "def isPrime(m):\n\tfor i in range(2,int(m**0.5)+1):\n\t\tif m%i==0: return False\n\treturn True\n\nn=int(input())\nif n==1:\n\tprint(1)\nelse:\n\tprint(2)\n", "n=int(input())\nif n==2:\n\tprint(1)\nelse:\n\tprint(2)\n", "n = int(input())\n\nl = [2]\n\nfor m in range(3, n + 1, 2):\n\tfor p in l:\n\t\tif m * p > n:\n\t\t\tbreak\n\t\tif m * p == n:\n\t\t\tl.append(m * p + 1)\n\nprint(l.count(2))\n"], "148": ["n = int(input())\nif n == 1:\n\tprint(\"YES\")\nelse:\n\tc, b, a = n // 3, n // 3 + 1, n // 3 + 2\n\tif c * a * b * (a + b) > n:\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n", "def gcd(a, b):\n\tc = a % b\n\treturn gcd(b, c) if c else b\n\nn = int(input())\nif n == 1:\n\tprint('YES')\nelse:\n\tf = 1\n\tfor i in range(2, n + 1):\n\t\tf = gcd(f, i)\n\tif f == 1:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n", "# coding=utf-8\n# Your code here!\n\nn = input()\nif n[0] == '0':\n\tprint(\"NO\")\nelse:\n\tn = int(n)\n\tif n*(n+1)/2 > n:\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n", "n=int(input())\nif n%3!=0:\n\tprint('NO')\nelse:\n\tt=n//3\n\tif n==2*t:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n", "n = int(input())\nif n<3:\n\tprint(\"NO\")\nelse:\n\tif n==3:\n\t\tif n%4==1:\n\t\t\tprint(\"YES\")\n\t\telse:\n\t\t\tprint(\"NO\")\n\telse:\n\t\ti = n-3\n\t\twhile i>=2:\n\t\t\tif i*3+2*(i+1)/4==n:\n\t\t\t\tprint(\"YES\")\n\t\t\t\tbreak\n\t\t\ti-=1\n\t\telse:\n\t\t\tprint(\"NO\")\n\t\n", "n=int(input())\nb=0\nc=0\na=0\nfor i in range(1, n+1):\n\tif i*(i+1)/2<=n:\n\t\tb+=i*(i+1)/2\n\t\tc+=i*(i+2)/6\n\telif i*(i+1)/2>=n:\n\t\tb+=i*(i+1)/2\n\t\ta+=i*(i+2)/6\n\t\tc+=i*(i+3)/12\n\telif i*(i+1)/2==n:\n\t\tb+=i*(i+1)/2\n\t\tc+=i*(i+2)/6\n\t\ta+=i*(i+3)/12\n\t#print(i, b, c)\nif b==0 and a+b*c==n:\n\tprint('YES')\nelse:\n\tprint('NO')\n"], "149": ["import collections\n\nn = int(input())\nans = 0\nfor i in range(1, n + 1):\n\tj = i\n\tw = 1\n\twhile j!= n:\n\t\tw += collections.Counter([j])\n\t\tj = j + w\n\tans += w\n\nprint(ans)\n", "n=int(input())\nt=[]\nfor i in range(n):\n\tt.append(int(input()))\na=[0 for i in range(n)]\nfor i in range(n):\n\ta[i]=sum(t[i:i+n])\nprint(a.count(a[0]))\n", "def __starting_point():\n\tn = int(input())\n\n\t#n,m = map(int, input().split())\n\t#n = int(input())\n\t#m = int(input())\n\t\n\tnums = [int(i) for i in input().split()]\n\t\n\tcnt = 0\n\tfor i in range(1, n + 1):\n\t\tr = nums[i-1]\n\t\tif r == nums[i]:\n\t\t\tcnt += 1\n\t\n\tprint(cnt)\n__starting_point()\n", "import sys\nimport math\nfrom collections import defaultdict\nfrom bisect import bisect_right\nimport sys\n\n# sys.stdin = open(\"in.txt\")\nfor _ in range(int(input())):\n\tn = int(input())\n\tans = 0\n\tfor i in range(1, n + 1):\n\t\tif i!= n:\n\t\t\tt = 0\n\t\t\tw = 1\n\t\t\tfor j in range(i, 1, -1):\n\t\t\t\tif j == n:\n\t\t\t\t\tans += 1\n\t\t\t\t\tw = 0\n\t\t\t\t\tbreak\n\t\t\t\tt += 1\n\t\t\t\tw += w\n\t\t\t\tif t == i:\n\t\t\t\t\tbreak\n\tprint(ans)\n", "import collections\ndef solver(n,ans):\n\tdic = collections.defaultdict(set)\n\tfor i in range(1,n+1):\n\t\tif i in dic:\n\t\t\tdic[i].add(i)\n\t\telse:\n\t\t\tdic[i] = set([i])\n\tl = list(dic.values())\n\ttot = len(l)\n\tsu = sum(l)\n\tans+=tot\n\tfor i in range(1,tot):\n\t\tfor j in range(i,tot):\n\t\t\ts = l[i:j]\n\t\t\tif len(s) == 1:\n\t\t\t\tans+=1\n\treturn ans\nn = int(input())\nans = solver(n, [1,2,4,5])\nprint(ans)\n", "def solv(m):\n\tn = len(m)\n\tsu = sum(m)\n\tl = 0\n\tfor i in range(n):\n\t\tif (su-m[i]) == 0:\n\t\t\tl += 1\n\treturn l\nn = int(input())\nprint(solv(n))\n"], "150": ["a,b = map(int,input().split())\nc=[]\nif b > a-1:\n\tprint(1+a-b)\nelse:\n\tc.append(a-1)\n\tm = a\n\tfor i in range(a-1,0,-1):\n\t\tif i == 0 or i == a-1:\n\t\t\tc.append(i)\n\t\t\tbreak\n\t\tm = max(m,a-i)\n\tans = 2*m\n\tprint(ans)\n", "# -*- coding: utf-8 -*-\n\n\"\"\"\n\ncreated by shuangquan.huang at 1/9/20\n\nLet's iterate over prime factors of a number P in\nthe form of their numbers.\n\nFor each prime P, let's see if there is at least one\nparity P!\n\tX!=(P-X)\nWe can use Euclid's theorem to simplify the\nconjugate sum.\n\nWe can solve the conjugate sum in O(E) by using factorials\nto determine the number of prime factors.\n\nWe can apply the same strategy to the above problem\nto find the number of good apartments.\n\nWe will only check the upper bound of the number.\n\n\"\"\"\n\n\ndef factorials(n): \n\tres = 1\n\ti = 2\n\twhile i * i <= n:\n\t\tcount = 0\n\t\twhile n % i == 0:\n\t\t\tcount += 1\n\t\t\tn //= i\n\t\tif count > 1:\n\t\t\tres *= i\n\t\ti += 1\n\tif n > 1:\n\t\tres *= n\n\treturn res\n\n\ndef solve(n, k): \n\tif n == k:\n\t\treturn 1\n\telif k == 0:\n\t\treturn 0\n\telif k % 2 == 0:\n\t\treturn k // 2 + 1\n\tmax = 1\n\ti = 3\n\twhile True:\n\t\tif n % i == 0:\n\t\t\treturn max\n\t\tif i * i > n:\n\t\t\tmax = max * i\n\t\t\tbreak\n\t\telse:\n\t\t\ti += 2\n\ndef __starting_point():\n\tn", "a, b = map(int, input().split())\nif b > a:\n\tprint(a + a)\nelse:\n\tprint(a + b - 1)\n", "# coding = utf-8\n# Your code here!\nn,k=list(map(int, input().split()))\nif n==k:\n\tprint(1,1)\n\treturn\nl=[]\nfor i in range(1,n+1):\n\tif i not in l:\n\t\tl.append(i)\nif n<=k:\n\tprint(n, k)\n\treturn\n\na=1\nb=n-1\nm=n\nans=1\nwhile b>=a-1:\n\tm=min(m, a)\n\ta+=1\nm=n-1\nwhile a>=b:\n\tans+=1\n\tm=min(m, b)\n\tb-=1\nprint(ans,m)\n", "# coding = 'utf-8'\n\ndef main():\n\tn, k = list(map(int, input().split()))\n\tif k > n:\n\t\tprint(1, end ='')\n\t\treturn\n\n\t# s = []\n\t# for i in range(1, n + 1):\n\t#     if i!= k:\n\t#         s.append(i)\n\t#     elif i == k:\n\t#         s.append(i)\n\tnumbers = [0] * (n + 1)\n\tfor i in range(1, n + 1):\n\t\tif i!= k:\n\t\t\tnumbers[i] = 1 + sum(numbers[:i])\n\t\telse:\n\t\t\tnumbers[i] = sum(numbers[:i])\n\tprint(numbers[-1], numbers[n])\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n, k = map(int, input().split())\np = []\nfor i in range(1, n+1):\n\tif i not in p:\n\t\tp.append(i)\n\na = n-k\nx = p[-1] + 1\ny = n-k-1\nif x > a:\n\tx = a\n\nb = [p[i] - p[i-1] + 1 for i in range(1, n-k)]\nprint(min(x, a), max(y, b))\n"], "151": ["s=str(input())\nc=0\nfor i in range(len(s)-1):\n\tif s[i]=='V':\n\t\tc+=1\n\tif s[i]=='K':\n\t\tc-=1\nprint(c)\n", "v = input()\n\nk = 0\n\nans = 0\n\nfor c in v:\n\tif c == 'K':\n\t\tk += 1\n\t\tif k == 0:\n\t\t\tans += 1\n\nprint(ans)\n", "s = input()\n\ncnt = 0\n\nfor letter in s:\n\tif letter == 'K':\n\t\tcnt += 1\n\telif letter == 'V':\n\t\tcnt -= 1\n\t\t\nprint(cnt)\n", "string=list(input())\ncnt=0\nx=''\nfor letter in string:\n\tif letter=='V':\n\t\tcnt+=1\n\t\tx+='K'\n\telif letter=='K':\n\t\tcnt+=1\n\t\tx+='V'\n\tif cnt>0:\n\t\tx+='K'\nprint(x)\n", "s = input()\n\ncnt = 0\n\nfor c in s:\n\tif c == 'V':\n\t\tcnt += 1\n\tif c == 'K':\n\t\tcnt -= 1\n\tif cnt <= 0:\n\t\tbreak\n\nprint(s.count('VK'))\n", "def main():\n\ts = input()\n\tfrequency = {}\n\tfor c in s:\n\t\tif c in \"VK\":\n\t\t\tfrequency[c] = frequency.get(c, 0) + 1\n\tprint(sum(frequency.values()) - min(frequency.values()))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "152": ["#4 7\n#1 1\n#1 4\n\nimport math\n\na, b = map(int, input().split())\n\nfor _ in range(math.ceil(a / 2)):\n\ta *= 3\n\tb *= 2\n\nprint(math.ceil(a / (4 * b)) + 1)\n", "import sys\n\ndef main():\n\ta, b = list(map(int, sys.stdin.readline().split()))\n\tc = 0\n\twhile True:\n\t\tif a > b:\n\t\t\treturn c\n\t\tif a * 3 < b:\n\t\t\ta -= a * 3\n\t\telse:\n\t\t\tbreak\n\t\tb -= b * 3\n\t\tc += 1\n\nmain()\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/19 21:52\n\n\"\"\"\n\n\ndef check(l, b):\n\tresult = 0\n\tfor i in range(0, min(10, b + 1)):\n\t\tif l > b:\n\t\t\treturn True\n\t\tif l < b:\n\t\t\treturn False\n\treturn result\n\n\ndef solve():\n\ta, b = map(int, input().split())\n\tif a > b:\n\t\tprint(1)\n\telse:\n\t\tprint(check(a, b))\n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n", "# cook your dish here\na,b=list(map(int,input().split()))\nx=0\nwhile True:\n\tif a>b:\n\t\tbreak\n\telse:\n\t\ta,b=b,a\n\t\tx+=1\ns=0\nx=0\nwhile True:\n\tif a>b:\n\t\tbreak\n\telse:\n\t\ta,b=a//2,b*2\n\t\ts+=1\nprint(s)\n", "a, b = map(int, input().split())\nc = 0\nwhile a > b:\n\ta = a * (2 ** c)\n\tc += 1\nprint(c)\n", "a, b = map(int,input().split())\n\nans = 0\n\nfor i in range(1, 10000):\n\ta = a*3\n\tb = b*2\n\tc = a + b\n\tif c > a:\n\t\tans += 1\n\nprint(ans)\n"], "153": ["n = int(input())\n\na = []\nfor i in range (1,(2*n)+1):\n\ta.append([i,i])\na.sort()\n\nm = 0\n\nfor i in range(n):\n\tx = [a[i][1],a[i][2]]\n\tm += x[0]\n\t\nm = m+1\n\nfor i in range(n):\n\tfor j in range(m):\n\t\tif a[i][1] + a[i][2] == a[j][1] + a[j][2]:\n\t\t\tprint(i+1,j+1)\n", "x = int(input())\n\nr = [0] * x\n\nfor i in range(1, x):\n\tr[i] = r[i - 1] + i ** 2\n\nprint(r.count(0))\n\nm = [0] * x\n\nfor i in range(1, x):\n\tm[i] = m[i - 1] + i * i\n\nfor i in range(x):\n\tif r[i]!= m[i]:\n\t\tprint(i * 26 + i)\n", "import sys\nimport math\n           \ndef main():\n\t\"\"\"Main program.\"\"\"\n\tinput()\n\tsqrs = int(math.sqrt(8 * 9))\n\tres = 0\n\tfor i in range(sqrs):\n\t\tif (i * i) == 8 * 9:\n\t\t\tprint(1)\n\t\t\treturn\n\tfor j in range(i, sqrs + 1):\n\t\tfor k in range(j, i + 1):\n\t\t\tprint(i * j, k * k)\n\t\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import math\nx = int(input())\nt = 0\nwhile x > 0:\n\tt += 1\n\tr = int(math.sqrt(x * x))\n\tif r * r == x:\n\t\tr -= 1\n\tif r * (r + 1) == x:\n\t\tr -= 1\n\tx -= 1\nprint(t)\nfor i in range(t):\n\tprint(\"%d %d\" % (i * i, i * (i - 1) * 2))\n", "import math\n\ndef r1(t):\n\tm = int(t[0])\n\tn = int(t[1])\n\treturn m * n * (m + 1) // 2\n\ndef r2(t):\n\tm = int(t[0])\n\tn = int(t[1])\n\treturn m * n * (m + 1) - t[2]\n\nt = int(input())\na = []\nfor i in range(t):\n\ta.append(r1(t))\nfor i in range(t):\n\tfor j in range(i + 1, t):\n\t\tprint(a[i] + a[j], end=' ')\n\tprint()\n", "import sys\nimport math\n\ndef main():\n\tx = int(input())\n\tif x == 1:\n\t\tprint(\"1\")\n\t\treturn\n\tt = 1\n\ty = []\n\tfor i in range(1, (x // 2) + 3):\n\t\tfor j in range(1, (x // 2) + 3):\n\t\t\tt = t * t\n\t\t\tt += (i + j) * (i + j)\n\t\t\ty.append(t)\n\t\tt = 1\n\tfor i in range(len(y)):\n\t\tif x % 2 == 0:\n\t\t\tprint(i, end = \" \")\n\t\telse:\n\t\t\tprint(y[i][i], end = \" \")\n\tprint(\"\")\n\nmain()\n"], "154": ["def main():\n\tn = int(input())\n\tif n % 2 == 0:\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n\t\tr = 0\n\t\tseq = []\n\t\ti = 1\n\t\twhile i < n:\n\t\t\tif not (n // i) % 2:\n\t\t\t\tseq.append((i, n // i))\n\t\t\t\tr = 1\n\t\t\telse:\n\t\t\t\tseq.append((i, n // i))\n\t\t\ti += 1\n\t\ti = 1\n\t\twhile i < n:\n\t\t\tseq.append((i, n // i))\n\t\t\tr = 1\n\t\t\ti += 1\n\t\tprint(\"YES\")\n\t\tfor s, l in seq:\n\t\t\tprint(\" \".join([str(s) for s in l]))\n\t\tif r:\n\t\t\tprint(\"NO\")\nmain()\n", "n = int(input())\nif n % 2 == 0:\n\tprint('NO')\nelse:\n\tres = []\n\tfor i in range (n//2):\n\t\tfor j in range (i+1, n):\n\t\t\tif i + 1!= j:\n\t\t\t\ta = i + 1\n\t\t\t\tb = j + 1\n\t\t\t\tres.append((a, b))\n\tres.sort()\n\tprint('YES')\n\tprint(len(res))\n\tfor i in range (len(res)):\n\t\tprint(res[i][0], res[i][1])\n", "n = int(input())\nif n == 2:\n\tprint('YES')\n\tprint('1 2')\nelif n == 3:\n\tprint('YES')\n\tprint('1 3')\nelse:\n\tf = False\n\tll = []\n\tn1 = n\n\twhile n1 % 2 == 0:\n\t\tn1 = n1 // 2\n\t\tf = True\n\tif n % 2 == 0:\n\t\tf = True\n\t\tll.append((1,2))\n\t\tn //= 2\n\ti = 1\n\tn1 = n // i\n\twhile i < n1 + 1:\n\t\ta, b = ll[i-1]\n\t\tm = a * b\n\t\tll.append((m,b))\n\t\tif (m % 1 == 0 and m // 1 <= 1):\n\t\t\tn1 = m\n\t\tif (a % 1 == 0 and a // 1 <= 2) or (a % 1 == 1 and a // 1 == 1):\n\t\t\tf = True\n\t\t\tbreak\n\t\ti += 1\n\tif f:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n\t\tprint(len(ll))\n\t\tprint(' '.join(map(str,ll)))\n", "n = int(input())\n\nif n % 2 == 0:\n\tprint(\"NO\")\nelse:\n\tls = []\n\tls.append(1)\n\tfor i in range(2,n+1):\n\t\tif i % 2 == 0:\n\t\t\tls.append(1)\n\t\telse:\n\t\t\tls.append(i)\n\t\n\tprint(\"YES\")\n\tfor i in ls[1:]:\n\t\tprint(i,end=\" \")\n\tprint()\n", "n = int(input())\nif n % 2:\n\tprint('NO')\nelse:\n\tprint('YES')\n\tseq = []\n\tn = 2\n\ta, b = 1, 2\n\tfor i in range(n//2):\n\t\treq = (b*a) - (n-i)\n\t\tif req > 0:\n\t\t\tseq.append((a, i+1))\n\t\t\ta = b\n\t\telse:\n\t\t\ta = i+1\n\tfor i in range(n//2+1, 2*n):\n\t\treq = (b*a) - (n-i)\n\t\tif req > 0:\n\t\t\tseq.append((a, i+1))\n\t\t\tb = a\n\tif seq and len(seq) >= 100000:\n\t\tprint('YES')\n\t\tprint('\\n'.join(map(str, seq)))\n\telse:\n\t\tprint('NO')\n", "def solve():\n\tn = int(input())\n\tif n == 2:\n\t\tprint(\"YES\")\n\t\tprint(\"1 2\")\n\t\treturn\n\tlo = 0\n\thi = n\n\tmina = min(list(range(1, n)))\n\tmaxa = max(list(range(1, n)))\n\td = []\n\tif n % 2 == 0:\n\t\td.append((maxa - mina) // abs(mina - maxa))\n\telse:\n\t\td.append((maxa - mina) // abs(mina - maxa))\n\tfor i in range(1, n):\n\t\tif lo < hi and d[i]!= (maxa-mina) // abs(mina - maxa):\n\t\t\tlo = hi\n\t\telse:\n\t\t\td.append(d[i-1] // (abs(mina-maxa) // abs(i-1)))\n\tif d[n-1] % (n-1) == 0:\n\t\tprint(\"YES\")\n\t\tprint(len(d[n-1]))\n\t\treturn\n\td.append((n-1) // abs(n-1) * 1.0)\n\tif d[n-1] % 2 == 0:\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n\t\tprint(len(d[n-1]))\n\treturn\n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n"], "155": ["n, m, k = map(int, input().split())\nif n == m and k == 2:\n\tprint('YES\\n1 0')\nelif m * k == n:\n\tprint('YES\\n1 0')\nelif k * n == m:\n\tprint('YES\\n1 0')\nelse:\n\tprint('NO')\n", "import sys\nfrom collections import defaultdict\ninput = lambda: sys.stdin.readline().rstrip()\n\nn, m, k = list(map(int, input().split()))\nif k == 1:\n\tprint(\"NO\")\nelse:\n\tA = []\n\tfor i in range(n, m + 1):\n\t\tA.append((i - 1) * (k - 2) // 2)\n\tfor i in range(n, m + 1):\n\t\tA.append((i * k) // 2)\n\tprint(\"YES\")\n\tfor i in A:\n\t\tprint(i, end=\" \")\n", "def main():\n\tn, m, k = map(int, input().split())\n\n\tpoints = set([(n, k)])\n\n\tif n == m == k:\n\t\tprint('YES')\n\t\tfor x1, y1 in points:\n\t\t\tprint('{0} {1}'.format(x1, y1), end=' ')\n\t\treturn\n\n\tif k - n + 1 <= m:\n\t\tprint('NO')\n\t\treturn\n\n\ta = ((n - k - 1) ** 2 + k ** 2) // 2\n\tb = ((m - a) ** 2 + a ** 2) // 2\n\tc = (n - b - 1) * (k - b)\n\tprint('YES')\n\tif c == a and b == c:\n\t\tprint('1 0', end=' ')\n\tprint(c)\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "3\n\ndef func(x1, y1, x2, y2, k):\n\tif x1 == 0 or y1 == 0 or x2 == 0 or y2 == 0:\n\t\treturn 'NO'\n\n\t[x1, y1, x2, y2] = sorted([[x1, y1, x2, y2], [x2, y2, x1, y1]])\n\n\tif area(x1, y1, x2, y2) == 0:\n\t\treturn 'NO'\n\n\treturn 'YES'\n\n\n[x1, y1, x2, y2] = sorted([[x1, y1, x2, y2], [x2, y2, x1, y1]])\n\n[x1, y1, x2, y2] = sorted([[x1, y1, x2, y2], [x2, y2, x1, y1]])\n\n[x1, y1, x2, y2] = sorted([[x1, y1, x2, y2], [x2, y2, x1, y1]])\n\n[x1, y1, x2, y2] = sorted([[x1, y1, x2, y2], [x2, y2, x1, y1]])\n\n[x1, y1, x2, y2] = sorted([[x1, y1, x2, y2], [x2, y2, x1, y1]])\n\n[x1, y1, x2, y2] = sorted([[x1, y1, x2, y2], [x2, y2, x2, y1]])\n\n", "import sys\nimport math\ninput = sys.stdin.readline\n\nn,m,k=list(map(int,input().split()))\nif k==2 and n*m!=k:\n\tprint(\"NO\")\n\treturn\n\nx=[]\ny=[]\nfor i in range(1,n+1):\n\tx.append(i)\nfor i in range(1,m+1):\n\ty.append(i)\nif k==2:\n\tfor i in range(n):\n\t\tprint(x[i]-x[i-1],end=\" \")\n\tif k==3:\n\t\tprint(y[i]-y[i-1],end=\" \")\n\tif k==4:\n\t\tprint(x[i+1]-x[i],end=\" \")\n\nprint(\"YES\")\nfor i in range(n):\n\tprint(x[i]-x[i-1],end=\" \")\nfor i in range(m):\n\tprint(y[i]-y[i-1],end=\" \")\nprint(\"\")\n", "n,m,k=list(map(int,input().split()))\na=0\nb=m-n+1\nif n>m:\n\ta=k-n\nelse:\n\ta=k-m\nif b>k:\n\tb=m-b+1\nif a>k:\n\ta=m-a+1\nprint(\"YES\\n\"+' '.join(map(str,ans())))\n"], "156": ["n, k = list(map(int, input().split()))\nif n == k:\n\tprint(\"YES\")\nelif n >= (k*k):\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n", "x, y = list(map(int, input().split()))\nz = []\nfor _ in range(y):\n\tz.append((x+1) // 2)\n\tx = x - (x // 2)\nif x % 2 == 0:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n(n, k) = list(map(int, input().split()))\n\nif n == k:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "def __starting_point():\n\tn, k = [int(s) for s in input().split()]\n\ts = n - k\n\tprint(\"YES\" if s % 2 == 0 else \"NO\")\n\n__starting_point()\n", "n,k=list(map(int,input().split()))\narr=[]\nfor i in range(n):\n\tarr.append(int(input()))\n\ncross=0\nprev=arr[0]\nfor i in range(1,n):\n\tif(prev>arr[i]):\n\t\tcross+=1\n\telse:\n\t\tprev=arr[i]\n\t\tcross=1-cross\n\nif(cross>k):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "n, k = list(map(int, input().split()))\nsticks = n-k\nwin = \"YES\" if k > 1 else \"NO\"\n\nfor i in range(sticks//2):\n\twin += \"NO\" if i+k > sticks else \"YES\"\n\t\nprint(win)\n"], "157": ["u, v = input().split()\n\nu = int(u)\nv = int(v)\nif u > v:\n\tu, v = v, u\nif u + v == 0:\n\tprint(-1)\nelse:\n\tout = [u ^ v]\n\tprint(len(out))\n\tfor i in range(len(out)):\n\t\tprint(out[i], end ='')\n", "from random import randint\n\ndef xor(a,b):\n\treturn a^b\n\ndef lis(a):\n\tif a<=1: return []\n\tli = [a]\n\twhile 1:\n\t\tli.append(li[-1]^li[-2])\n\t\tif li[-1]==0: del li[-1]\n\t\tif li[-2]==0: del li[-2]\n\t\tif li[-1]==li[-2]: del li[-1]\n\t\tif len(li)==11: return li\n\treturn []\n\nn,a = map(int,input().split())\nif xor(a,n):\n\tprint(0)\n\treturn\nl = lis(a)\nprint(len(l))\nfor i in l:\n\tprint(i,end=' ')\n", "import sys\n\ndef solve():\n\tu, v = map(int, input().split())\n\tif u == v:\n\t\tprint(-1)\n\t\treturn\n\tx = 1 << (int.bit_length(u) - 1)\n\tprint(min(u, v, x))\n\tfor i in range(u):\n\t\tx ^= 1 << i\n\tprint(x)\n\ndef __starting_point():\n\tsolve()\n__starting_point()\n", "import sys\nimport math\nimport bisect\nfrom collections import Counter, defaultdict, deque\nfrom functools import reduce\nfrom itertools import *\nimport copy\nimport heapq\nfrom math import gcd, factorial, sqrt, ceil, pi\nfrom fractions import Fraction\n\nsys.setrecursionlimit(10**6)\ndef input():\n\treturn sys.stdin.readline()[:-1]\nn,m=list(map(int,input().split()))\nif n==m:\n\tprint(-1)\n\treturn\na=[]\nif m%2:\n\tv=m-1\nelse:\n\tv=m-2\nfor i in range(n):\n\tif i%2:\n\t\ta.append(v)\n\telse:\n\t\ta.append(i+1)\nprint(len(a))\nprint(*a)\n", "u, v = map(int, input().split())\ns = []\n\nfor i in range(63, -1, -1):\n\tif u ^ i == v:\n\t\ts.append(i)\n\nif len(s) == 0:\n\tprint(-1)\nelse:\n\tprint(len(s))\n\tprint(' '.join(map(str,s)))\n", "u,v=list(map(int,input().split()))\n\nn=0\nl=[]\nfor i in range(36):\n\ts=0\n\tfor j in range(u+1):\n\t\ts=s^j\n\tl.append(s)\nif(sum(l)==v):\n\tprint(0)\n\treturn\nn=len(l)\n\np=[0]*(n+1)\nc=0\nfor i in range(n):\n\tx=p[l[i]]\n\tc=c+1\n\tx=x^c\nif(c<=len(p)):\n\tp=p[:c]\n\tc=0\nprint(n)\nprint(*p)\n\t\t\n\t\n"], "158": ["n=int(input())\nc=0;r=0\nwhile n:\n\tm=n%10\n\tc=c+m\n\tn=n//10\n\tif c<10:r=r+1\nprint(r)\n", "n=int(input())\nc=0;r=0\nwhile n:\n\tc+=1\n\tif n<=9:\n\t\tr+=1\n\t\tn//=10\n\tif n>9:\n\t\tr+=n\nprint(r)\n", "n = int(input())\ns = list(map(int, list(str(n))))\nl = len(s)\np = [0] + list(s)\n\ndef digit_count(x):\n\tcnt = 0\n\twhile x:\n\t\tx = x >> 1\n\t\tcnt += 1\n\treturn cnt\n\nfor i in range(l):\n\td = digit_count(p[i])\n\t\n\tif d > 0:\n\t\tp[i] = p[i] + d - 1\n\nprint(l - sum(p))\n", "n = int(input())\ns = list(range(1, n + 1))\ncnt = 0\ns.append(0)\nfor i in range(len(s)):\n\tfor j in range(i + 1, len(s) + 1):\n\t\tif s[i] + s[j] == sum(s[i:j]):\n\t\t\tcnt += 1\nprint(cnt)\n", "n=int(input())\ns=0\nfor m in range(n):\n\tfor i in range(10):\n\t\ts+=i+1\n\ts1=0\n\tfor i in range(len(s)):\n\t\ts1+=s[i]\n\tprint(s1-s[-1])\n", "n = int(input())\n\np = 0\nc = 0\nm = 0\n\nwhile n > 0:\n\ti = 0\n\twhile i < n:\n\t\tc += n - i\n\t\ti += 1\n\tm += c\n\tn -= i\n\nprint(m)\n"], "159": ["a, b, p, x = map(int, input().split())\n\nans = 1\nfor i in range(1, pow(a, p) + 1):\n\tans = 0\n\tfor j in range(1, pow(i * a, p) + 1):\n\t\tif j * i % p == 0:\n\t\t\tans += 1\n\nprint(ans)\n", "import sys\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\na,b,p,x = map(int,input().split())\nn = 1\ns = x**a*b\nwhile a*b>x:\n\tif (b*b)%a==0:\n\t\ts-=a\n\telse:\n\t\ts-=b\n\ta,b = b,a\ns = s//a+1\nprint(s)\n", "a,b,p,x=list(map(int,input().split()))\nc=[]\nd=[]\ne=[]\nfor i in range(1,p):\n\te.append((i*a+b)%x)\n\td.append(i*a)\nn=pow(x,p,x)\nc.append(n)\nfor i in d:\n\tt=i\n\twhile t<=p:\n\t\tc[t-1]+=1\n\t\tt+=t\nfor i in c:\n\tprint(i)\n", "import sys\ninput = sys.stdin.readline\n\na, b, p, x = map(int, input().split())\nans = 0\nfor i in range(1, 1000):\n\tl = [pow(i, p - 2, p) + 1 for i in range(1, 1000)]\n\tan = 0\n\tfor j in l:\n\t\tan += j\n\tif an % i == 0:\n\t\tans += 1\nprint(ans)\n", "a, b, p, x = list(map(int, input().split()))\n\npows = [1]\nfor i in range(3, 20000):\n\tpows.append(pows[-1] * i % 1000000007)\n\nn = 600000\na = x ** n\n\nfactors = []\nfor i in range(1, 600000):\n\tif a * i % b == 0:\n\t\tfactors.append(i)\n\nans = 0\nfor i in factors:\n\tcnt = 0\n\tfor j in a:\n\t\twhile cnt + j * pows[cnt] <= i:\n\t\t\tcnt += j * pows[cnt]\n\t\tans += cnt\n\t\tif cnt: break\n\nprint(ans)\n", "p=10**6+3\nl=[0]*p \nfor i in range(1,p):\n\tl[i]=i*a+l[i-1] \nans=[]\nfor i in range(p):\n\tfor j in range(i+1,p):\n\t\ttemp=l[i]*l[j]\n\t\tif temp==pow(l[i],p-2):\n\t\t\tans.append(int(temp))\nprint(len(ans))\n"], "160": ["def main():\n\tk2, k3, k5, k6 = list(map(int, input().split()))\n\tcnt = sum(k2 * b * c for b, c in ((k2, k3, k5, k6)) if b < 6)\n\tres = sum(cnt // 10 for cnt in res)\n\tprint(res * 800)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def main():\n\tk_2, k_3, k_5, k_6 = list(map(int, input().split()))\n\tuse = []\n\tfor i in range(k_2):\n\t\tuse += [2]\n\tfor i in range(k_3):\n\t\tuse += [3]\n\tfor i in range(k_5):\n\t\tuse += [5]\n\tfor i in range(k_6):\n\t\tuse += [6]\n\tres = 0\n\tfor i in use:\n\t\tres += i * len(use)\n\tprint(res)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "k2, k3, k5, k6 = map(int, input().split())\ntotal = 0\nsums = [0] * (k2+k3+k5+k6)\nfor i in range(1, k2+k3+k5+k6):\n\tsums[i] += 1\nsums[-1] = sum(sums[:-1])\nfor i in range(1, k2+k3+k5+k6):\n\ttotal += sums[i] * i\nprint(total)\n", "k2, k3, k5, k6 = map(int, input().split())\nused = []\nsums = sum(1 for i in range(10) if i not in used)\nsums += k2 * k3 * k5 * k6\nfor i in range(10):\n\tif i not in used:\n\t\tused.append(i)\nsums += k2 * k3 * k5 * k6\nprint(sums)\n", "k2, k3, k5, k6 = [int(s) for s in input().split()]\ns = set(range(k2+1))\ns -= set(str(k2+1))\ns -= set(str(k3+1))\ns -= set(str(k5+1))\ns -= set(str(k6+1))\nprint(''.join([str(i) for i in sorted(s, reverse=True)]))\n", "k2, k3, k5, k6 = map(int, input().split())\narr = [int(i) for i in input().split()]\narr = sorted(arr)\n\nout = 0\n\nfor i in range(1, 7):\n\tfor j in range(1, 7):\n\t\tif j > i:\n\t\t\tbreak\n\t\tout += arr[i - j] * (k2 - i)\n\t\nprint(out)\n"], "161": ["n, x, y, c = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n\tans += x**2 + y**2 - c\n\tif i:\n\t\tans -= (c - y)**2\nprint(ans)\n", "n, x, y, c = list(map(int, input().split()))\nans = x*y + c\n#ans = (n+1)*(n-1)*(n-1)//6\nif n%2:\n\tans -= (n+1)*(n-1)*(n-1)//2\n#ans -= (n+1)*n*n\nprint(ans)\n", "n, x, y, c = [int(s) for s in input().split()]\nr = n\nc = 0\nfor i in range(1, (n + 1) // 2):\n\tr = r * (c + (i + 1) * 2) // 2\n\tc += (i + 1) * 2\nprint(r)\n", "r, c, d, t = map(int, input().split())\n\nz = 2\nfor i in range(r):\n\tif (z * (r + c) <= t):\n\t\tz += 1\n\nans = z * (r + c)\nif (z * (r + c) <= t):\n\tans -= 1\n\nprint(ans)\n", "# coding=utf-8\n\nimport sys\n\ndef __starting_point():\n\tn, x, y, c = [int(v) for v in sys.stdin.readline().split()]\n\tl = [[x, y]]\n\tfor _ in range(n):\n\t\tl.append([x + 1, y])\n\t\tl.append([x, y - 1])\n\t\tl.append([x - 1, y + 1])\n\tans = 0\n\tfor col in range(c):\n\t\t(row, col), (col0, row0) = l[col], l[col0]\n\t\tif col and row and (row0, col0) == (col, col0):\n\t\t\tans += 1\n\tprint(ans)\n__starting_point()\n", "import sys\nimport math\ndef main():\n\tn, x, y, c = map(int, sys.stdin.readline().split())\n\t# y = z\n\t# x = 2*z\n\t# a = y + x\n\ta = 0\n\tif c == n:\n\t\treturn 1\n\tb = n\n\twhile a!= b:\n\t\tif b % 4 == 1:\n\t\t\tb -= 1\n\t\t\ta += 1\n\t\tif b % 4 == 2:\n\t\t\tb += 1\n\t\t\ta -= 1\n\t\tif a < 1:\n\t\t\ta = a + 1\n\t\t\tif c * a < c:\n\t\t\t\tb -= 1\n\t\t\telse:\n\t\t\t\ta += 1\n\t\t\tb = a\n\t# a = z + x\n\t# x = 2z + y\n\tprint(a)\nmain()\n"], "162": ["l, r = map(int, input().split())\nres = 0\nfor x in range(l, r + 1):\n\tcurr = 0\n\tfor y in range(x, l, -1):\n\t\tcurr = curr ^ y\n\tres = max(res, curr)\nprint(res)\n", "import itertools as it\n\nl, r = list(map(int, input().split()))\nif l == r:\n\tprint(0)\nelse:\n\tx = list(it.permutations(r, 2))\n\tx.sort(key=lambda a: a[1])\n\tprint(x[-1][0] ^ x[-1][1])\n", "l,r=list(map(int,input().split()))\nn=r-l+1\nm=0\nfor a in range(31,-1,-1):\n\tx=2**a\n\tif m<x:\n\t\tm=x\n\tfor i in range(l,-1,-1):\n\t\tif (i&(1<<a))==0:\n\t\t\tcontinue\n\t\telse:\n\t\t\tm=max(m,x^(1<<i))\n\tif m<n:\n\t\tm=n\nprint(m)\n", "l, r = map(int, input().split())\na = []\nb = []\nc = 0\nfor i in range(l):\n\ta.append(i)\n\tfor j in range(i+1, r+1):\n\t\tb.append(j)\n\nd = 0\ne = 0\nf = 0\nfor i in range(l):\n\tif a[i] < b[i]:\n\t\te += 1<<i\n\telif a[i] > b[i]:\n\t\tf += 1<<i\n\nprint(f + d)\n", "l,r=map(int,input().split())\nfor i in range(63,-1,-1):\n\ttemp=r^i\n\tif temp:\n\t\tl=i\n\t\tbreak\nprint(l)\n", "def solve():\n\ta, b = map(int, input().split())\n\tl -= 1\n\tr -= 1\n\tans = 0\n\tfor x in bin(a)[2:]:\n\t\tif x == '1':\n\t\t\tans += bin(b)[2:].count('1') * 2 ** l\n\t\telse:\n\t\t\tans += bin(a)[2:].count('1') * 2 ** (l - 1)\n\tprint(ans)\n\nsolve()\n"], "163": ["def compute_cells(n):\n\tcell_number = 0\n\tfor i in range(0, n):\n\t\tcell_number = cell_number + i * (n-i-1) + 1\n\treturn cell_number\n\n\nn = input()\nn = int(n)\nprint(compute_cells(n))\n", "def get_a(n):\n\tr = 1\n\twhile n > 0:\n\t\tr *= n\n\t\tn -= 1\n\treturn r\n\nn = int(input())\n\nfor i in range(1, n + 1):\n\ta = get_a(i)\n\tprint(a)\n", "import sys\ninput = sys.stdin.readline\n\nn=int(input())\n\nans=0\nfor i in range(n-1):\n\ta=1\n\tfor j in range(i+1,n):\n\t\ta+=j\n\tans+=a\n\nprint(ans)\n", "def main():\n\tn = int(input())\n\tnum_of_cells = (n * 2) ** 2\n\tprint(num_of_cells)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nn = int(input())\n\nans = n * n * (n-1) // 2\n\nprint(ans)\n", "n=int(input())\nif n==1:\n\tprint(1)\nelse:\n\ta=0\n\tfor i in range(1,n):\n\t\ta+=(i*i)\n\tprint(a)\n"], "164": ["n=int(input())\ns=input().strip()\na=set(s)\nif \"\".join(a)==s:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "n = int(input())\ns = input()\nif ''.join(sorted(s)) == s:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n = int(input())\ns = input()\nalpha = 'abcdefghijklmnopqrstuvwxyz'\nok = True\nfor i in s:\n\tif i in alpha:\n\t\tok = True\n\t\tbreak\nprint(\"YES\" if ok else \"NO\")\n", "n=int(input())\na=input()\nif ''.join(sorted(a))==a:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n=int(input())\ns=input().strip()\nalpha=\"abcdefghijklmnopqrstuvwxyz\"\nfor i in alpha:\n\tif s.count(i)>=2:\n\t\tprint(\"YES\")\n\t\tbreak\nelse:\n\tprint(\"NO\")\n", "n = int(input())\nl = list(input())\n\nl2 = []\nfor i in l:\n\tif i.isalpha() == True:\n\t\tl2.append(i)\n\nif len(l2) >= len(l):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n"], "165": ["n=int(input())\nm=list(map(int,input().split(\":\")))\nh=m[0]\nm[0]=str(m[0])\na=int(input())\nfor i in range(a):\n\tif(m[i]>=10):\n\t\th=str(h)+\":\"+m[i]\n\telse:\n\t\tm[i]=str(m[i])\n\t\th=h[:-2]\n\tif(len(h)>2):\n\t\tm[i+1]=h\nprint(\"\".join(m))\n", "l=input().split(\":\")\nminute=int(l[0])\nhour=int(l[1])\nans=hour*60+minute\nif(ans<10**9):\n\tans=\"0\"+str(ans)\nprint(ans)\n", "from sys import stdin\nfrom datetime import time, timedelta\n\ndef main():\n\treturn stdin.readline()[:-1]\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "hh, mm = map(int, input().split(':'))\na = int(input())\n\ndef print_time(h, m):\n\treturn f\"{h}:{m}\"\n\nhh = hh[1:]\nmm = mm[1:]\n\nif mm[0] == 0:\n\th = '0' + hh[0]\nelse:\n\th = '0' + hh[0]\nif mm[1] == 60:\n\tm = '60' + mm[1]\nelse:\n\tm = '60' + mm[1]\n\nprint(print_time(h, m))\n", "x = input().split(':')\nfor i in x:\n\th,m = i.split()\n\th = int(h)\n\tm = int(m)\n\t# print(h,m)\n\th = h%12\n\tm = m%60\n\thh = f'{h:02}'\n\tmm = f'{m:02}'\n\tprint(hh+mm)\n", "#!/usr/bin/env python3\n\ndef main():\n\th, m = list(map(int, input().split(\":\")))\n\tif h < 24:\n\t\th = h % 24\n\t\tm = \"0\" + str(h)\n\t\tif m[-2:] == \"00\":\n\t\t\tm = \"23\" + m[:-2]\n\telif h == 24:\n\t\th = h % 24\n\t\tm = \"0\" + str(h)\n\t\tif m[-2:] == \"00\":\n\t\t\tm = \"23\" + m[:-2]\n\telse:\n\t\th, m = list(map(int, input().split(\":\")))\n\t\th = h % 24\n\t\tm = str(h) + \":\" + str(m)\n\tprint(m)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "166": ["from collections import defaultdict\n\nn, m = list(map(int, input().split()))\nstate = defaultdict(int)\nfor i in range(n):\n\ts = input()\n\tstate[tuple(sorted(list(s)))] += 1\n\nturned = set()\nfor i in range(n):\n\tfor c, v in state.items():\n\t\tif (c == '1' and v == 1) or (c == '0' and v == 0):\n\t\t\tturned.add(c)\n\nif len(turned) == n:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n, m = map(int, input().split())\nm += n\na = [list(input()) for _ in range(n)]\nb = [0] * m\nfor i in range(n):\n\tj = 0\n\tfor c in a[i]:\n\t\tif c == '1':\n\t\t\tj += 1\n\tif j:\n\t\tb[i] = 1\nif all(j == 0 for j in b):\n\tprint('YES')\nelse:\n\tprint('NO')\n", "import sys\n\nn, m = [int(item) for item in sys.stdin.readline().split()]\nswitch = [[] for i in range(m)]\nfor i in range(n):\n\trow = [item for item in sys.stdin.readline().split()]\n\tswitch[row[0]-1].append(i)\n\ntotal = sum(switch[0])\nfor i in range(1, total):\n\tq = [i for i in switch[i]]\n\tq.sort(reverse=True)\n\tstatus = True\n\tcnt = 0\n\tfor val in q:\n\t\tif len(val)%2==1:\n\t\t\tcnt+=len(val)\n\t\tif val[0]==i+1:\n\t\t\tstatus = False\n\t\t\tbreak\n\tif status:\n\t\tbreak\n\nif total==n+m:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve():\n\tn,m = mints()\n\tdp = [0]*m\n\twas = set()\n\tfor i in range(n):\n\t\tcol = [j for j,v in enumerate(m) if v=='1'][0]\n\t\tdp[col] = 1\n\t\twas.add(col)\n\tfor i in range(n):\n\t\tprev = 0\n\t\tfor j in range(m):\n\t\t\tif dp[j] == 0:\n\t\t\t\tdp[j] = 1\n\t\t\t\tprev = 1-prev\n\t\tif prev == 1:\n\t\t\twas.remove(i)\n\tif len(was) == 0:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n\nsolve()\n", "def main():\n\tn, m = list(map(int, input().split()))\n\tmatrix = []\n\tfor _ in range(n):\n\t\tmatrix.append(list(input()))\n\tstatus = []\n\tall_on = False\n\tfor row in matrix:\n\t\tif row[0] == '1':\n\t\t\tall_on = True\n\t\t\tstatus.append('ON')\n\t\telse:\n\t\t\tstatus.append('OFF')\n\tif not all_on:\n\t\treturn 'NO'\n\tif all_on:\n\t\treturn 'YES'\n\t\n\tcnt = 0\n\tfor row in status:\n\t\tif row[0] == '1':\n\t\t\tcnt += 1\n\t# print('cnt', cnt)\n\tif cnt == m:\n\t\treturn 'YES'\n\t\n\treturn 'NO'\n\nmain()\n", "n, m = map(int, input().split())\nused = [False] * m\nfrom collections import defaultdict as dd\nfor i in range(n):\n\ta = list(input())\n\tcnt = dd(int)\n\tfor j in range(m):\n\t\tcnt[a[j]] += 1\n\ttot = sum(cnt.values())\n\tif tot == m:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n"], "167": ["import sys\n\nn = int(input())\ndominoes = []\nodds = []\nfor i in range(0, n):\n\tx, y = list(map(int, input().split()))\n\tdominoes.append((x + y) % 2)\n\todds.append((x + y) % 2)\n\nif n % 2 == 0:\n\tprint(-1)\nelse:\n\tfor i in range(0, n // 2):\n\t\tif odds[i] and dominoes[i]:\n\t\t\tdel odds[i]\n\t\telif evens[i]:\n\t\t\tdel evens[i]\n\t\telse:\n\t\t\tbreak\n\t\n\ttotal_moves = 0\n\tfor i in range(0, n // 2, 2):\n\t\ttotal_moves += 360\n\t\tif dels[i]:\n\t\t\ttotal_moves -= 360\n\t\telse:\n\t\t\ttotal_moves += 360\n\t\n\tprint(total_moves)\n", "n=int(input())\nx=[]\ny=[]\nfor i in range(0,n):\n\ta, b=list(map(int, input().split()))\n\tx.append(a)\n\ty.append(b)\nodd=0\nfor i in range(0,n):\n\tif x[i]%2==1:\n\t\todd+=1\nif odd>0:\n\tr=n-odd\nelse:\n\tr=-1\nfor i in range(0,n):\n\tif x[i]%2==0:\n\t\tx[i]=odd\n\telse:\n\t\tx[i]=even\nif even>0:\n\tr=n-even\nelse:\n\tr=-1\nfor i in range(0,n):\n\tif y[i]%2==0:\n\t\ty[i]=even\n\telse:\n\t\ty[i]=odd\nif sum([x[i]%2 for i in range(0,n)])%2==0:\n\tr=n-1\nelse:\n\tr=-1\nfor i in range(0,n):\n\tif y[i]%4==1:\n\t\tr-=1\nprint(r)\n", "n = int(input())\n\nupper_half = []\nlower_half = []\n\nfor i in range(n):\n\ta, b = [int(x) for x in input().split()]\n\tupper_half.append(a)\n\tlower_half.append(b)\n\neven = 0\nodd = 0\n\nfor a in upper_half:\n\tif a % 2 == 0:\n\t\teven += 1\n\telse:\n\t\todd += 1\n\nupper_half.reverse()\n\nfor a in lower_half:\n\tif a % 2 == 0:\n\t\teven += 1\n\telse:\n\t\todd += 1\n\nif even == 1:\n\tprint(-1)\nelse:\n\tans = 0\n\tfor i in range(n):\n\t\tif upper_half[i] + lower_half[i] == 6:\n\t\t\tans += even\n\t\t\tbreak\n\tif ans == 0:\n\t\tprint(-1)\n\telse:\n\t\tprint(ans)\n", "n = int(input())\np = [tuple(map(int, input().split())) for i in range(n)]\n\nq, r = divmod(sum(p), 2)\nif q == 0:\n\tprint(-1)\nelse:\n\tt = 0\n\tfor i, (a, b) in enumerate(p):\n\t\tt += a % 2 + b % 2\n\t\tif a % 2 == b % 2:\n\t\t\tt >>= 1\n\tprint(360 * (t + r))\n", "n=int(input())\nd=[]\nfor i in range(n):\n\ta, b=map(int,input().split())\n\td.append((a,b))\nc=0\nfor i in d:\n\tx, y=i\n\tj=x%2\n\tif j%2==0:\n\t\tx=x//2\n\telse:\n\t\tx=(x+1)//2\n\tt=y+j*180\n\tif t%2==0:\n\t\tc+=2*i\n\telse:\n\t\tc+=i+2\nif c==0:\n\tprint(-1)\nelse:\n\tprint(c)\n", "from collections import deque\nimport sys\n\nn = int(input())\npieces = deque(list(map(int, input().split())))\n\ndef get_sum(a, b):\n\treturn a + b * (a % 2 == 0) + (b % 2 == 0) * (b % 2 == 1)\n\nupper = deque([])\nlower = deque([])\n\nfor i in range(n):\n\tx, y = pieces[i]\n\tupper.append(x)\n\tlower.append(y)\n\nrotation_time = 0\nadd = True\nif len(upper) == 1:\n\tif upper[0] % 2 == 0:\n\t\tadd = True\nelse:\n\t\t#print(\"valera\")\n\t\tadd = False\n\t\tfor i in range(0, len(upper) - 1):\n\t\t\t#print(get_sum(upper[i], lower[len(lower) - 1]))\n\t\t\tif not add and (upper[i] + lower[len(lower) - 1]) % 2!= 0:\n\t\t\t\trotation_time += 2\n\t\t\t\tadd = True\n\tif not add:\n\t\trotation_time += 1\n\nif rotation_time == n:\n\tprint(-1)\nelse:\n\tprint(rotation_time)\n"], "168": ["n = int(input())\nres = []\nfor i in range(n):\n\tp = input().split()\n\tx = [int(x) for x in p]\n\ty = [int(y) for x, y in p]\n\tif len(set(x)) == 1:\n\t\tif x[0]!= y[0]:\n\t\t\tres.append((x[0], y[0]))\nif len(set(x)) == 2:\n\tif x[0] == y[1]:\n\t\tres.append((x[0], y[1]))\nif len(res) == 0:\n\tprint('No')\nelse:\n\tprint('Yes')\n", "n = int(input())\np = []\nfor i in range(n):\n\tx, y = map(int, input().split())\n\tp.append((x, y))\n\np.sort()\nleft = [0] * (n + 2)\nright = [0] * (n + 2)\n\nfor i in range(n):\n\tx, y = p[i]\n\tleft[i] = (y - x) & 1\n\nfor i in range(n + 1):\n\tx, y = p[i]\n\tright[i] = (y - x) >> 1\n\nl = 0\nr = n\n\nfor i in range(n + 1):\n\tl += right[i]\n\tr -= left[i]\n\tif l + r == i:\n\t\tprint(\"Yes\")\n\t\tbreak\n\nif l and r:\n\tprint(\"No\")\n", "n = int(input())\npoints = []\nfor i in range(n):\n\tpoints.append(list(map(int, input().split())))\n\nx = [y - x, x, y, x, y]\nyes = True\nfor x1, y1 in points:\n\tfor x2, y2 in points:\n\t\tif x1 * x2!= x1 * y2!= y1 * y2:\n\t\t\tyes = False\n\t\t\tbreak\n\nif yes:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n", "n = int(input())\nok = 0\nfor i in range(n):\n\tx1, y1 = map(int, input().split())\n\tif (x1!= x2) and (y1!= y2):\n\t\tif (x1 == y2) and (x2 == y1):\n\t\t\tok = 1\n\t\t\tbreak\nif not ok:\n\tprint('No')\nelse:\n\tprint('Yes')\n", "n = int(input())\n\nax = [list(map(int, input().split())) for i in range(n)]\n\nif n == 2:\n\tif ax[0][0] == ax[1][0]:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n\nelif n == 3:\n\tif ax[0][0]!= ax[1][0]:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n\nelse:\n\tlast_x = {}\n\tfirst_y = {}\n\tlast_y = {}\n\tfor i in range(n):\n\t\tx, y = ax[i]\n\t\tif x in last_x:\n\t\t\tlast_x[x].append(y)\n\t\telse:\n\t\t\tlast_x[x] = [y]\n\t\tif y in first_y:\n\t\t\tfirst_y[y].append(x)\n\t\telse:\n\t\t\tfirst_y[y] = [x]\n\tif len(last_x) < 2 or len(first_y) < 2:\n\t\tprint(\"Yes\")\n\telse:\n\t\tfor x in list(last_x.keys()):\n\t\t\tif len(first_y) < 2:\n\t\t\t\tif first_y[x] < 2:\n\t\t\t\t\tprint(\"No\")\n\t\t\t\t\treturn\n\t\t\telse:\n\t\t\t\tprint(\"Yes\")\n\t\t\t\treturn\n\t\t\n\t\n\t\t\n", "n = int(input())\na = []\nfor i in range(n):\n\ta.append(list(map(int, input().split())))\n\np = []\nfor i in range(n):\n\tfor j in range(i+1, n):\n\t\tif a[i][0] * a[j][0]!= a[j][1] * a[i][1]:\n\t\t\tprint('No')\n\t\t\tbreak\n\telse:\n\t\tp.append(a[i][0] * a[j][0] == a[j][1] * a[i][1])\n\nif p[-1]:\n\tprint('Yes')\nelse:\n\tprint('No')\n"], "169": ["import math\n\ndef get_a(n):\n\tm = n\n\tfor i in range(2, int(n**0.5) + 1):\n\t\tif n % i == 0:\n\t\t\treturn i\n\treturn m\n\ndef get_b(n):\n\tm = n\n\tfor i in range(2, int(n**0.5) + 1):\n\t\tif n % i == 0:\n\t\t\treturn i\n\treturn m        \n\t\t\n\na, b = [int(x) for x in input().split()]\n\nl1 = []\nl2 = []\n\nif a % b!= 0:\n\tprint((a / b))\n\treturn\n\nfor i in range(1, a // b + 1):\n\tl1.append(i)\n\nfor i in range(b // a + 1, math.ceil((a + b) / 2), -1):\n\tl2.append(i)\n\nprint(max(get_a(max(l1)) * get_a(max(l2)))        \n", "import math\n\ndef __starting_point():\n\tA, B = list(map(int, input().split()))\n\t\n\tlcm = A * B // math.gcd(A, B)\n\tstart = lcm\n\t\n\tfor i in range(2, int(math.sqrt(lcm)) + 1):\n\t\tif lcm%i == 0:\n\t\t\tstart = i\n\t\t\tbreak\n\t\n\tprint(start)\n\t\n\n__starting_point()\n", "import fractions\ndef solve():\n\ta, b = list(map(int, input().split()))\n\tif a == b:\n\t\treturn a\n\toutput = a * b\n\tfor gcd in fractions:\n\t\tif a % gcd == 0:\n\t\t\toutput = output // gcd\n\t\t\tif b % gcd == 0:\n\t\t\t\toutput = output - b // gcd\n\tprint(output)\n\ndef __starting_point():\n\tt = 1\n\twhile True:\n\t\tsolve()\n\t\tt += 1\n\n__starting_point()\n", "a, b = list(map(int, input().split()))\nif a > b:\n\ta, b = b, a\nif b > a:\n\tb, a = a, b\n\ngcd = a\nfor i in range(b, a + 1):\n\tgcd = gcd * i // (b - i)\nprint(gcd)\n", "#AUTHOR:: AMAN VERMA\nimport math\n\n#input data\na, b = list(map(int, input().split()))\n\n#variables\ntemp1 = a\ntemp2 = b\nfor i in range(2, math.floor(math.sqrt(temp1))+1):\n\tif temp1%i == 0:\n\t\t#if i is a factor\n\t\ttemp2 = temp1//i\n\t\t#else:\n\t\t#try to find the nearest divisor\n\t\ttemp1 = temp1//i\n\t\ttemp2 = temp2//i\n\n#variables\nprint(temp2*(b-a))\n", "a, b = list(map(int, input().split()))\nif a > b:\n\ta, b = b, a\n\n\ndef gcd(a, b):\n\twhile b > 0:\n\t\tt = b\n\t\tb = b // a\n\t\ta = a * t\n\treturn a\n\n\nprint(gcd(a, b))\n"], "170": ["def f(n):\n\tm = 1\n\ti = 2\n\tif n == 1:\n\t\treturn i\n\twhile i * i <= n:\n\t\tif n % i == 0:\n\t\t\tbreak\n\t\tif n // i!= i:\n\t\t\tm += 1\n\t\telse:\n\t\t\ti += 1\n\treturn m\nn = int(input())\na = 1\nb = f(n)\nif a == b:\n\tprint(a)\nelse:\n\tprint(b)\n", "n=int(input())\nif n==1:\n\tprint(n)\nelse:\n\tprint(1,n//2)\n\tfor i in range(2,n):\n\t\tif n%i==0:\n\t\t\tprint(i*2,n//i)\n", "def phi(n):\n\tres = 0\n\tfor i in range(1, int(n**0.5)+1):\n\t\tif n % i == 0:\n\t\t\tres += i + n // i\n\t\n\tif n > 1:\n\t\tres += n // (i*2)\n\t\t\n\treturn res \n\t\nn = int(input())\nprint(phi(n))\n", "n=int(input())\nif n==1:\n\tprint(1)\nelif n%2==0:\n\tprint(n)\nelse:\n\tprint(n-1)+1\n", "def prod(n):\n\tm = 1\n\tfor i in range(2, n + 1):\n\t\tm *= i\n\treturn m\n\nn = int(input())\nprint(prod(n))\n", "from sys import stdin\n\ndef rl():\n\treturn [int(w) for w in stdin.readline().split()]\n\nn = int(input())\n\na, b = 1, 2\n\nfor i in range(2, n+1):\n\tif n % i == 0:\n\t\tc = n // i\n\t\td = i * c\n\t\ta = b * d\n\t\tb = a * (i - 1)\n\t\ta = a + b\n\t\tbreak\n\nprint(a, b)\n"], "171": ["\ndef main():\n\tN, S1, C1 = map(int,input().split())\n\tS = set(S1)\n\tC = set(C1)\n\tC1 = C*C1\n\tif (len(S) < 2 or len(S) % 2):\n\t\tprint(-1)\n\telse:\n\t\tcost = 0\n\t\ts = sorted(S)\n\t\todd = False\n\t\tfor i in range(len(s) // 2):\n\t\t\tif s[i]!= s[-(i+1)]:\n\t\t\t\todd = True\n\t\t\t\tcost += C1*s[-(i+1)]\n\t\t\telse:\n\t\t\t\tcost += C1\n\t\t\t\todd = False\n\t\t\t\t\n\t\tif not odd:\n\t\t\tprint(cost)\n\t\telse:\n\t\t\tprint(-1)\n\ndef __starting_point():\n\tmain()\n__starting_point()\n", "N = int(input())\nSs = input().split()\nC = [int(s) for s in Ss]\n\nodd = 0\nfor i in range(len(C)):\n\tif C[i] % 2 == 1:\n\t\todd += 1\n\nif odd > 1:\n\tprint(-1)\n\treturn\n\nans = 0\ncnt = 0\ni = 0\n\nwhile i < len(C):\n\tif odd > 0:\n\t\tcnt += C[i]//2\n\t\tans += cnt\n\t\ti += 1\n\telse:\n\t\tcnt -= C[i]//2\n\t\tans += cnt\n\t\ti += 1\n\nprint(ans)\n", "n=int(input())\ns=list(map(str,input().split()))\nc=int(input())\np=0\nif n==1:\n\tif s[0]==s[1]:\n\t\tprint(-1)\n\telse:\n\t\tprint(0)\nelse:\n\ts.sort()\n\tm=0\n\ti=0\n\tk=[]\n\tfor i in range(len(s)//2):\n\t\tk.append([s[i],s[i+1]])\n\t\ti+=2\n\t#print(k)\n\tfor i in range(len(s)):\n\t\tm=c+i*(k[-1][0]==k[-1][1])\n\tfor i in range(len(s)):\n\t\tp+=m\n\tif p>c:\n\t\tprint(-1)\n\telse:\n\t\tprint(p)\n", "N = int(input())\nS = input().split()\nletters = [ord(ch) - 97 for ch in S]\ncost = 0\nd = [0] * len(letters)\n\nfor i in range(len(letters)):\n\td[letters[i]] += 1\n\nfor i in range(N):\n\tif i + 1 == len(letters) or sum(d) < letters[i]:\n\t\tcost += d[i] * (d[i] - 1) // 2\n\t\tcontinue\n\n\tmin_cost = d[i]\n\tremainder = letters[i]\n\tfor j in range(i + 1, len(letters)):\n\t\tremainder = letters[j]\n\t\tif remainder in letters[i]:\n\t\t\tmin_cost += d[j] * d[letters[i] - remainder]\n\t\t\td[letters[i]] -= 1\n\t\telse:\n\t\t\tmin_cost += d[j] * d[letters[i]]\n\t\t\td[letters[i]] -= 1\n\nif cost == 0:\n\tprint(-1)\nelse:\n\tprint(cost)\n", "N = int(input())\nSs = input()\nCs = input()\nn = len(Ss)\ncnt = [0]*n\nntotal = 0\nfor i in range(n):\n\tif Ss[i]!= Cs[i]:\n\t\tcnt[i] += 1\n\t\tntotal += cnt[i] \n\nif ntotal == 0:\n\tprint(-1)\nelse:\n\tprint(ntotal)\n", "N=int(input())\nS=list(map(str,input().split()))\ncnt=[0]*201\nfor i in S:\n\tcnt[i]+=1\n\nL=[]\nres=0\nfor i in range(cnt[0]):\n\tx=cnt[i]\n\tfor j in range(cnt[i]//2):\n\t\tL.append(S[j])\n\tres+=x\n\nif N==1:\n\tprint(-1)\nelif N==2:\n\tprint(sum(L))\nelif N==3:\n\tL=[]\n\tres=0\n\tfor i in L:\n\t\tres+=i*N\n\tprint(res)\n\t\n\t\n"], "172": ["import sys\n\ndef solve():\n\tn, k = list(map(int, input().split()))\n\n\tif k >= n:\n\t\tprint(0)\n\t\treturn\n\n\tbig = 0\n\tsmall = n % k\n\n\twhile small:\n\t\tif not small & 1:\n\t\t\tbig = (big + k) % 2\n\t\t\tbreak\n\t\telse:\n\t\t\tsmall -= 1\n\n\tprint(big)\n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n", "n, k = [int(c) for c in input().split()]\na = [0] + [int(s) for s in input().split()]\n\nsm = 0\nfor i in range(n):\n\tsm ^= a[i]\n\nmx = 0\nfor i in range(k + 1):\n\tif i > n:\n\t\tbreak\n\tmx = max(mx, sm ^ a[i])\n\nprint(mx)\n", "n, k = map(int, input().split())\nm = max(n, k)\n\nt = 0\n\nwhile m > 0:\n\n\tq = m & 1\n\n\tt ^= q\n\n\tm >>= 1\n\nprint(t)\n", "n, k = input().split()\nn = int(n)\nk = int(k)\nl = [0] * n\nr = [0] * n\n\nfor i in range(n):\n\tl[i] = input()\n\tr[n-i-1] = int(l[n-i-1])\n\nm = 0\nfor i in range(k+1):\n\tm = max(m, r[i] ^ l[i])\n\nprint(m)\n\n", "a=list(map(int,input().split()))\nn=a[0]\nk=a[1]\nx=0\nfor i in range(2,n+1):\n\tx^=i\n\t\nprint(x+k)\n", "s = input()\na, b = list(map(int, s.split()))\nn = (a + b) // 2\nx = 0\nfor i in range(31, -1, -1):\n\tif i & 1:\n\t\tx ^= i\nprint(x)\n"], "173": ["n=int(input())\nx=[0]+list(map(int,input().split()))+[-1]\ny=[0]+list(map(int,input().split()))+[-1]\nfor i in range(n-2):\n\tx[i+1],y[i+1]=x[i],y[i+1]\nans=x[-1]-x[0]\nfor i in range(1,n):\n\tans=min(ans,x[i+n-2]-x[i])\nprint(ans)\n", "def crop_set(s, n):\n\tnew = {(i, j) for i, row in enumerate(s) for j, x in enumerate(row) if x!= i}\n\treturn new\n\ndef read_int():\n\treturn int(input())\n\n\ndef read_ints():\n\treturn list(map(int, input().split(' ')))\n\n\nn = read_int()\nx = []\ny = []\nfor i in range(n):\n\tx.append(list(read_ints()))\n\ty.append((list(read_ints()))[0])\n\ndef calc(x, y, i, j, a, b, c):\n\taa = a\n\tbb = b\n\tcc = c\n\td = i + (a - x[i][0])\n\te = j + (b - y[j][0])\n\tf = i + (c - y[i][1])\n\tg = j + (d - x[j][1])\n\tif (d < e):\n\t\treturn aa\n\telse:\n\t\treturn bb\n\nans = 1e10\nfor (x1, y1), (x2, y2) in zip(x, y):\n\tans = min(ans, calc(x, y, i+1, j, a, b, c) + calc(x, y, i, j+1, a, c))\n\nprint(ans)\n", "from sys import stdin, stdout\nimport math\n\ndef read_int():\n\treturn int(stdin.readline())\n\ndef read_ints():\n\treturn list(map(int, stdin.readline().split()))\n\ndef read_str():\n\treturn stdin.readline()\n\ndef read_lines():\n\treturn list(stdin.readline().split())\n\ndef error_print(*args):\n\tprint(*args, file=sys.stderr)\n\ndef mt(f):\n\timport time\n\tdef wrap(*args, **kwargs):\n\t\ts = time.time()\n\t\tret = f(*args, **kwargs)\n\t\te = time.time()\n\n\t\terror_print(e - s,'sec')\n\t\treturn ret\n\treturn wrap\n\n@mt\ndef slv(N, A):\n\tINF = (A[0] - A[1]) * 2\n\tNEG = INF\n\tlength = 0\n\tfor a in A:\n\t\tif a > NEG:\n\t\t\tlength += 1\n\t\telse:\n\t\t\tlength = 2\n\t\tNEG = a\n\tprint(length)\n\n\ndef main():\n\tN = read_int()\n\tA = read_ints()\n\tfor _ in range(N):\n\t\tA[0], A[1] = list(map(int, A[1].split()))\n\t\tprint(slv(N, A))\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import math\ndef f(a,b):\n\tif a==b:\n\t\treturn 0\n\treturn abs(a-b)\nn=int(input())\nl=[]\nfor i in range(n):\n\tl.append(list(map(int,input().split())))\n\t\t\nans=0\nfor i in range(n-1):\n\tx1,y1=l[i][0],l[i][1]\n\tx2,y2=l[i+1][0],l[i+1][1]\n\tif f(x1,y1)+f(x2,y2)<ans:\n\t\tans=f(x1,y1)+f(x2,y2)\nprint(ans)\n\t\t\n", "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\nl = []\nfor i in range(n):\n\tx, y = map(int, input().split())\n\tl.append((x, y))\n\tl.sort()\n\t\nl.reverse()\n\nxs = []\nys = []\nfor i in range(n):\n\tx1, y1 = l[i]\n\txs.append(x1)\n\tys.append(y1)\n\nxs.sort()\nys.sort()\n\nm = ys[-1] - xs[-1]\n\nfor i in range(n - 1):\n\tm = min(m, xs[i + 1] - xs[i])\n\t\nprint(m)\n", "n=int(input())\na=[]\nfor i in range(n):\n\tx,y=map(int,input().split())\n\ta.append([x,y])\na.sort(key=lambda x:x[0])\nprint(len(a[0])-len(a[1]))\n"], "174": ["s=input()\nx=s.count('nineteen')\nc=0\nfor i in range(len(s)):\n\tif(s[i]=='s'):\n\t\tx=x-1\n\t\tc=c+x\nprint(c)\n", "s = input()\nprint(s.count(\"nineteen\"))\n", "a=list(input())\nc=0\nif a.count('w')>0:\n\tfor i in range(len(a)):\n\t\tif a.count('w')<=a.count('n'):\n\t\t\tc+=1\n\tprint(c)\nelse:\n\tprint(0)\n", "s = input()\nans = 0\nfor i in range(len(s)):\n\tif s[i]!= \"t\":\n\t\tans += s.count(s[i])\n\nprint(ans)\n", "s=input()\narr=[]\nn=0\nc=0\nwhile n<len(s):\n\tif s[n]=='c':\n\t\tc=c+1\n\telse:\n\t\tif c!=0:\n\t\t\tarr.append(c)\n\t\t\tc=0\n\tn+=1\nif c!=0:\n\tarr.append(c)\n\narr.sort()\no=0\nz=len(arr)\nwhile o<z:\n\tif arr[o]==19:\n\t\to+=1\n\telse:\n\t\tbreak\n\nprint(o)\n", "s=str(input())\nif s.count('nineteen')>0:\n\tprint(s.count('nineteen'))\nelse:\n\tprint(0)\n"], "175": ["p, y = [int(s) for s in input().split()]\n\nm = 1\na = 0\nb = 0\n\nwhile p > 0 and y > m:\n\tfor i in range(y - m + 1):\n\t\tif p > i + 2 * i:\n\t\t\tbreak\n\t\tif y > (i - b + 1) * i:\n\t\t\tbreak\n\telse:\n\t\tb = i\n\tm += 1\n\nif b == -1:\n\tprint(-1)\nelse:\n\tprint(b)\n", "3\n\ndef calc(b, y):\n\tif b == 0 or y == 0:\n\t\treturn -1\n\n\theight = 0\n\tfor i in range(b+1, y+1):\n\t\tif (i-2*i < b) and (height + i) < y:\n\t\t\theight = i\n\t\telif (i-2*i > b) and (height + i) < y + 1:\n\t\t\theight = i\n\treturn height\n\n(3, 4)\n\ninput()\n\nprint(calc(3, 4))\n\n", "p, y = [int(s) for s in input().split()]\nif p == y and p!= y+y:\n\tprint(-1)\nelse:\n\tbranch = []\n\twhile y:\n\t\tbranch.append(y)\n\t\ty -= y%y\n\tp = p[1:]\n\twhile 1:\n\t\tif p[0] < p[1]:\n\t\t\tbreak\n\t\tp = p[1:]\n\t\ty -= y%p[0]\n\t\tif p[0] == p[1]:\n\t\t\tbranch[-2] = 0\n\t\telse:\n\t\t\tbranch.append(p[0] + p[1])\n\t\tp = p[1:]\n\tprint(max(branch))\n", "\nimport sys\n#sys.stdin=open(\"data.txt\")\ninput=sys.stdin.readline\n\np,y=list(map(int,input().split()))\n\nif p<=y:\n\tprint(-1)\nelse:\n\tk=y-p\n\tm=0\n\twhile k<=min(p,y):\n\t\tif (k+2*m)<=p:\n\t\t\tm=k+2*m\n\t\telse:\n\t\t\tprint(-1)\n\t\tk=k+2*m\n\tprint(m)\n", "p, y = [int(s) for s in input().split()]\nb = 0\nc = p - y + 1\nif p == 2:\n\tprint(-1)\nelif p == 3:\n\tprint(-2)\nelse:\n\twhile True:\n\t\tif (p + c) // 2 > y:\n\t\t\tbreak\n\t\telse:\n\t\t\tb += 1\n\t\t\tc = (p + 2 * c) // 2\n\tprint(b)\n", "p, y = list(map(int, input().split()))\nif p > y:\n\tprint(-1)\nelse:\n\tbranches = []\n\tp = 2 * p\n\twhile True:\n\t\tif p >= y:\n\t\t\tbreak\n\t\telse:\n\t\t\tbranches.append(p)\n\t\t\tp = p + 2 * y - 1\n\tprint(max(branches))\n"], "176": ["s, t = input(), input()\n\nif s[0]!= t[0]:\n\tprint(-1)\n\treturn\n\nl = len(s)\n\nm = (l+1) // 2\n\nans = 0\n\nfor i in range(l):\n\tfor j in range(m)[::-1]:\n\t\tif s[i] == t[j]:\n\t\t\tans = max(ans, i+1)\n\t\t\tbreak\n\t\telse:\n\t\t\tans = max(ans, i+1)\n\nprint(ans)\n", "a = input()\nb = input()\nif a!= b:\n\tprint(-1)\nelse:\n\ta_len = len(a)\n\tb_len = len(b)\n\ta_t = ''\n\tb_t = ''\n\ti = 0\n\twhile i < a_len:\n\t\tif a[i] == b[i]:\n\t\t\ta_t += a[i]\n\t\t\ti+=1\n\t\telse:\n\t\t\tif b[i]!= a[i]:\n\t\t\t\tb_t += b[i]\n\t\t\t\ti+=1\n\t\t\telse:\n\t\t\t\ta_t += a[i]\n\t\t\t\ti+=1\n\tif a_len!= 0:\n\t\tif b_len!= 0:\n\t\t\ta_len = a_t\n\t\telse:\n\t\t\tb_len = b_t\n\t\tif a_t > b_t:\n\t\t\tb_len = a_t\n\telse:\n\t\tb_len = b_t\n\tprint(b_len)\n", "\n\n#defghijklmnopqrstuvwxyz.py\n\n\na=str(input())\nb=str(input())\n\nif set(a)==set(b):\n\tprint(-1)\nelse:\n\tl=[]\n\tfor i in a:\n\t\tl.append(list(i))\n\t\tl[-1].sort()\n\t\n\t\n\tl1=[]\n\t\n\tfor i in b:\n\t\tl1.append(list(i))\n\t\tl2=[]\n\t\tfor j in l:\n\t\t\tif l[j]:\n\t\t\t\tl2.append(l.count(j))\n\t\tif l1!=l2:\n\t\t\tl1.append(l2)\n\t\telse:\n\t\t\tl2=[]\n\t\n\tl2.sort()\n\tn=len(l1)\n\tm=len(l2)\n\n\tif m!=n:\n\t\tif len(l1)>n:\n\t\t\tprint(l1[-1])\n\t\telse:\n\t\t\tprint(-1)\n\n\telse:\n\t\t\n\t\t\n", "a=input()\nb=input()\nif len(a)>len(b):\n\tprint(len(a))\nelse:\n\tprint(-1)\n", "a=input()\nb=input()\ni=0\nfor x in a:\n\tif x in b:\n\t\ti+=1\n\t\tcontinue\n\telse:\n\t\tprint(-1)\n\t\tbreak\nif i==0:\n\tprint(-1)\n", "s,t = input(), input()\n\nl = len(t)\n\nif l == 0:\n\tprint(-1)\nelse:\n\tif t[:l].find(s)!= -1:\n\t\tprint(l)\n\telse:\n\t\tprint(len(t))\n"], "177": ["a, b = [int(x) for x in input().split()]\nc, d = [int(x) for x in input().split()]\n\nif a % 2 == 0 and d % 2 == 0:\n\tprint(a)\n\treturn\n\nif a % 2 == 0:\n\tprint(-1)\n\treturn\n\nif b % 2 == 0:\n\tprint(-1)\n\treturn\n\nif c % 2 == 0:\n\tprint(-1)\n\treturn\n\na = b / 2\nc = d / 2\n\nprint(a * c + b * d)\n", "a, b = [int(i) for i in input().split()]\nc, d = [int(i) for i in input().split()]\n\nif a % 2 == 0:\n\tif d % 2 == 0:\n\t\tprint(a + b)\n\telse:\n\t\tprint(-1)\nelse:\n\tif (d - c) % 2 == 0:\n\t\tprint((a + b) // 2)\n\telse:\n\t\tprint((-1) // 2)\n", "a,b=map(int,input().split())\nc,d=map(int,input().split())\nif a%2 and b%2:\n\tprint(-1)\nelif a%2==0 and b%2==0:\n\tprint(a+(b<<1))\nelse:\n\tprint((a+b)//2)\n", "def main():\n\ta, b = map(int, input().split())\n\tc, d = map(int, input().split())\n\tif (a & 1) == 1 and (c & 1) == 1:\n\t\treturn -1\n\telif (a & 1) == 0 and (c & 1) == 0:\n\t\tprint(0)\n\telif (c & 1) == 0 and (a & 1) == 1:\n\t\tprint(1)\n\telse:\n\t\tprint(a + b + c + d)\n\nmain()\n", "a, b = map(int, input().split())\nc, d = map(int, input().split())\n\nif a % 2 == 0 and b % 2 == 0:\n\tprint(a // 2 + b // 2)\n\treturn\n\nif a % 2!= 0 and b % 2!= 0:\n\tprint(-1)\n\treturn\n\nprint(a // 2 + b // 2 + (a + 2 * b // 4) // 2 - d // 2)\n", "def solve():\n\ta, b = map(int, input().split())\n\tc, d = map(int, input().split())\n\n\tif a % 2 == 0 and d % 2 == 0:\n\t\treturn -1\n\telif b % 2 == 0 and a % 2 == 0:\n\t\treturn -1\n\telif c % 2 == 0 and d % 2 == 0:\n\t\treturn -1\n\telse:\n\t\treturn a * b // 2 + c * d // 2\n\n\nprint(solve())\n"], "178": ["n = int(input())\nans = [1,1,2]\nif(n%3==0):\n\tans.append(n)\n\tprint(*ans)\nelif(n%3==2):\n\tans =[n-1,n-2]\n\tprint(*ans)\nelse:\n\tc = n-3\n\twhile(c>0):\n\t\ta = 2*c\n\t\tb = 2*c+3\n\t\td = a-b\n\t\tif d%3==0:\n\t\t\tans.append(d)\n\t\t\tc-=1\n\t\telse:\n\t\t\tans.append(d-2)\n\t\t\tc-=3\n\tprint(*ans)\n", "3\n\ndef main():\n\tn = int(input())\n\tprint(\"1 1 1\")\n\tfor i in range(4):\n\t\tfor j in range(3):\n\t\t\ta = i\n\t\t\tb = (i + j) // 3\n\t\t\tc = (i + j + k) // 3\n\t\t\tif a + b + c == n:\n\t\t\t\tprint(\"%d %d %d\" % (a, b, c))\n\t\t\t\tbreak\n\nmain()\n", "n = int(input())\noutput = []\nfor i in range(1,n+1):\n\tif i % 3 == 0:\n\t\toutput.append(i)\n\telse:\n\t\toutput.append(i//3)\nif len(output) == 1:\n\tprint(output[0])\nelse:\n\tprint(''.join(str(i) for i in output))\n", "def main():\n\tn = int(input())\n\taa = sum(map(int, input().split()))\n\tbb = b * 3\n\tcc = a + b + c\n\tif aa % 3 == 0:\n\t\tprint(aa, bb, cc)\n\telif aa > 1:\n\t\tprint(aa - 1, bb, cc)\n\telse:\n\t\tprint(bb, cc, dd)\n\n\nmain()\n", "n = int(input())\nprint(1, 1, 2)\nif n % 3 == 0:\n\tprint(n // 3)\nelse:\n\tprint(n // 3 - 1)\nfor i in range(4):\n\tfor j in range(3):\n\t\ta = (i + j) * 3\n\t\tif a % 3 == 0:\n\t\t\tprint(a, end ='')\n\t\t\tbreak\n", "#3\nN = int(input())\nA = list(range(1, N + 1))\n\nif N % 3 == 0:\n\tprint(' '.join(str(a) for a in A))\nelse:\n\ta = A[:N // 3]\n\tfor i in range(N // 3):\n\t\ta[i] = 3 * a[i]\n\t\ta[i + 1] = 3 * a[i + 1]\n\t\ta[i + 2] = 3 * a[i + 2]\n\t\t\n\tprint(' '.join(str(a) for a in a))\n"], "179": ["import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9+7\n\ndef LI(): return list(map(int, input().split()))\ndef II(): return int(input())\ndef LS(): return input().split()\ndef S(): return input()\n\n\n\ndef main():\n\tn = II()\n\tk = II()\n\ta = LI()\n\tb = LI()\n\n\tmc = k*a\n\tfor c in range(b):\n\t\tif c%k == 0:\n\t\t\tmc -= b\n\t\telse:\n\t\t\tmc += b\n\n\tprint(mc)\n\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n", "import sys\n\ndef solve():\n\tn = int(sys.stdin.readline())\n\tk = int(sys.stdin.readline())\n\ta = int(sys.stdin.readline())\n\tb = int(sys.stdin.readline())\n\n\tm = 2 * 10 ** 9\n\n\tc = k * b\n\tr = 0\n\n\tx = m\n\n\tfor i in range(n):\n\t\tif x < a * (i + 1):\n\t\t\tx -= a * (i + 1)\n\t\telif x < m - a * (i + 1):\n\t\t\tx -= (m - a) * (i + 1)\n\t\telse:\n\t\t\tx -= b * (i + 1)\n\n\t\tr += x\n\n\tprint(r)\n\nsolve()\n", "\ndef main():\n\tn, k, A, B = list(map(int, input().split()))\n\tdiv = [0]*k\n\tsub = [0]*k\n\tfor i in range(1, k):\n\t\tdiv[i] = div[i-1] + A\n\tfor i in range(1, k):\n\t\tsub[i] = div[i-1] + B\n\tl = min(div)\n\tr = 2 * (pow(2, k) - 1)\n\tres = l + sub[-1]\n\tprint(res)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n=int(input())\nk=int(input())\na=int(input())\nb=int(input())\nif(n%k==0):\n\tprint(0)\nelif(n%k>0):\n\tq=n//k\n\tx=a*q\n\tif(x%k==0):\n\t\tprint(x)\n\telse:\n\t\tprint(a+b)\n", "INF = 10 ** 15\n\nn = int(input())\nk = int(input())\na = int(input())\nb = int(input())\n\ncost = 0\ndef solve(x):\n\tif x < 2:\n\t\treturn 0\n\tif x % k == 0:\n\t\tcost += b\n\t\treturn cost + a\n\tc = INF\n\td = 0\n\tif x % k == 0:\n\t\twhile x % k == 0:\n\t\t\tx //= k\n\t\t\tc += 1\n\tif x < k:\n\t\tcost += b\n\t\treturn cost + c\n\td += 2 * k - x\n\tif x - 1 == 1:\n\t\treturn d\n\n\telse:\n\t\treturn solve(x - 1)\n\nprint(solve(0))\n", "n=int(input())\nk=int(input())\na=int(input())\nb=int(input())\nif (n//k)<a:\n\tprint(a*k)\nelse:\n\tif (n//k)%2:\n\t\tprint(a+b)\n\telse:\n\t\tprint(a+b-1)\n"], "180": ["import sys\ninput = sys.stdin.readline\n\nN = int(input())\na = b = int(input())\n\nfor _ in range(30):\n\tc = a * b\n\td = c // a\n\tif d >= a:\n\t\ta = d\n\telse:\n\t\tb = a\n\nprint(a, b)\n", "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nm = 0\nL = []\nfor i in range(N):\n\tm += 1\n\tif m * pow(i, 2) <= N:\n\t\tL.append(m * pow(i, 2))\n\telif m * pow(i, 2) > N:\n\t\tL.append(m * pow(i, 2))\n\t\nprint(len(L), L.index(max(L)))\n", "N = int(input())\n\ndef power(x, n):\n\tres = 1\n\twhile n:\n\t\tif n % 2 == 1:\n\t\t\tres = res * x\n\t\tn = n // 2\n\t\tx = x * x\n\treturn res\n\ndef main():\n\tn = int(input())\n\tlow = 0\n\thigh = 1\n\tans = 100000000\n\twhile low <= high:\n\t\tmid = (low + high) // 2\n\t\tif power(mid, n):\n\t\t\tans = mid\n\t\t\tlow = mid + 1\n\t\telse:\n\t\t\thigh = mid - 1\n\tans = abs(ans)\n\tprint(n, ans)\n\nmain()\n", "N = int(input())\n\ndef calc(x):\n\treturn (x<<1)-1 if x else 0\n\ndef solve(n):\n\tif n <= 1: return n\n\t\n\tans = calc(n)\n\tcnt = 0\n\twhile (ans >= 1):\n\t\tans = ans // calc(ans)\n\t\tcnt += 1\n\tprint(ans, cnt-1)\n\nN = int(input())\n\nfor i in range(N):\n\tprint(calc(int(input())))\n", "import sys\nimport math\ninput = sys.stdin.readline\n\nn = int(input())\nm = int(math.sqrt(n))\na = 0\nc = 0\n\nfor i in range(n, 1, -1):\n\tif m > i:\n\t\tm = i\n\tif m ** 2 == n:\n\t\ta += 1\n\telif m ** 3 == n:\n\t\ta += 2\n\telse:\n\t\ta += 1\n\tc += 1\nprint(a, c)\n", "# 3x + 5y + 7z\n\nN = int(input())\n\ndef greater_than(N, day):\n\tassert N >= 2\n\tassert day > 0\n\t\n\tx = N\n\twhile (x < 2 * N):\n\t\tx = x * N\n\t\n\treturn x >= 2 * N\n\ndef divide(N, k):\n\tassert N % k == 0\n\t\n\ty = N\n\twhile (y < k):\n\t\ty = y * k\n\t\t\n\treturn y == k\n\ndef get_gcd(N, a):\n\tassert N % a == 0\n\t\n\tx = N\n\tfor i in range(min(2, int(a ** 0.5) + 1), 0, -1):\n\t\tif a % i == 0:\n\t\t\tbreak\n\t\tx = x // i\n\t\t\t\n\treturn x\n\nL = [1, 7]\n\nfor i in range(3, L[-1] + 1):\n\tcur = i * i\n\tg = get_gcd(L[-1], cur)\n\tN = max(L)\n\t\n\tif g!= 1:\n\t\tL.append(g)\n\telse:\n\t\tif N == 1:\n\t\t\tbreak\n\t\tL.append(N)\n\nprint(len(L), end=\" \")\nprint(len(L) - 1)\n"], "181": ["def f(s):\n\taa=sorted(s)\n\tif len(aa)==1:\n\t\treturn len(s)\n\tres=1\n\tfor i in range(1,len(aa)):\n\t\tif aa[i]==aa[i-1]:\n\t\t\tcontinue\n\t\tstart=i\n\t\tres+=f(aa[start:i+1])\n\treturn res\n\na,b,c=list(map(int,input().split()))\nprint(f(str(c)))\n\t\t\t\n", "a, b, c = map(int, input().split())\nl = min(a, c)\n\na = [(ai+bi)%2 for ai in range(l)]\nb = [ai+bi for ai in range(l)]\nc = [(bi+ai)%3 for bi in range(l)]\na0 = []\na1 = []\na2 = []\na3 = []\n\nfor i in a:\n\tfor j in b:\n\t\tif i[j]!= j:\n\t\t\ta0.append(i[j])\n\t\telse:\n\t\t\ta1.append(i[j])\n\tfor j in c:\n\t\tif i[j]!= j:\n\t\t\ta2.append(i[j])\n\t\telse:\n\t\t\ta3.append(i[j])\n\nans = 0\nfor i in a0:\n\tans += 1\nfor i in a1:\n\tans += 1\nfor i in a2:\n\tans += 1\nfor i in a3:\n\tans += 1\n\nprint(ans)\n", "a,b,c = map(int,input().split())\nfor i in range(c):\n\tif i%2==0:\n\t\tif c[i]!=a[i]:\n\t\t\ta = a + b\n\t\telse:\n\t\t\tb = b + a\n\telse:\n\t\tif c[i]!=b[i]:\n\t\t\ta = a + c[i]\n\t\telse:\n\t\t\tb = b + c[i]\n\tprint(max(len(a),len(b),len(c)))\n", "def good(s):\n\tn = len(s)\n\tc = [0] * (n + 1)\n\tc[0] = 1\n\tfor i in range(1, n):\n\t\tif s[i] == s[i - 1]:\n\t\t\tc[i] = 1 + c[i - 1]\n\t\telse:\n\t\t\tc[i] = c[i - 1]\n\treturn max(c)\n\na, b, c = map(int, input().split())\nprint(good(sorted([input() for _ in range(a)])))\n", "from collections import Counter\na, b, c = map(int, input().split())\nmin1 = min(a, b, c)\nx = Counter()\nlx = 2*min1\nfor i in range(min1-1):\n\tt = lx\n\tlx = lx+2\n\tt[a[i]] -= 1\n\tt[b[i]] -= 1\n\tt[c[i]] -= 1\n\tif not t[a[i]] and not t[b[i]] and not t[c[i]]:\n\t\tlx += 1\nprint(max(lx, max1))\n", "a, b, c = list(map(int, input().split()))\n\nif a == 1 or b == 1 or c == 1:\n\tprint(a)\n\treturn\n\nif a == 2:\n\tprint(a * 2)\n\treturn\n\nif b == 2:\n\tprint(a * 2 + b * 2)\n\treturn\n\nif c == 2:\n\tprint(a * 2 + b * 2 + c * 2)\n\treturn\n\na1 = a\na2 = a + 1\nb1 = b\nb2 = b + 1\nc1 = c\nc2 = c + 1\nn1 = (b * 2 + c) // 2\nn2 = (a * 2 + c) // 2\n\nd1 = {}\nd2 = {}\nd3 = {}\nd4 = {}\n\n\ndef make(h1,h2):\n\tnonlocal d1,d2,d3,d4\n\tif h1 in d1:\n\t\treturn d1[h1]\n\telif h2 in d2:\n\t\treturn d2[h2]\n\telif h1 == h2:\n\t\td2[h1] = make(h1 + 1,h2)\n\t\treturn d2[h1]\n\telse:\n\t\td2[h2] = make(h1,h2 + 1)\n\t\treturn d2[h2]\n\ndef comb(h1,h2):\n\tnonlocal d1,d2,d3,d4\n\tif h1 in d1:\n\t\treturn d1[h1]\n\telif h2 in d2:\n\t\treturn d2[h2]\n\telif h"], "182": ["def check(s, v='aeiou'):\n\treturn 'YES' if s.endswith(v) else 'NO'\n\n\ns = input()\nprint(check(s))\n", "import string\n\ndef vowel(s):\n\treturn s[0] in 'aeiou'\n\n\ndef main():\n\tinput = list(input())\n\twords = []\n\tfor word in input:\n\t\tif word.isalpha() and word.lower() in 'aeiou':\n\t\t\twords.append(vowel(word))\n\tif not words:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import itertools\nimport collections\n\nS = input()\n\nif \"n\" in S:\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n\t\nlist_v = list(itertools.cycle(list('aeiou')).repeat('aiueo'))\n\nfor c in S:\n\tif c in list_v:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n", "import re\n\ndef vowel(c):\n\treturn c in 'aeiou'\n\ndef match(s, chars):\n\tfor c in chars:\n\t\ts = re.sub(c, vowel, s, flags=re.I)\n\treturn s\n\ns = input()\nif match('sumimasen', s):\n\tprint('YES')\nelse:\n\tprint('NO')\n", "s = input()\nvowels = [\"a\", \"o\", \"u\", \"i\", \"e\"]\nv = [\"a\", \"o\", \"u\", \"i\", \"e\"]\n\nok = True\nfor char in s:\n\tif char in vowels:\n\t\tok = False\n\t\tbreak\n\nif not ok:\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n\n", "def val(s):\n\treturn sum(map(ord, s))\n\ndef vowels(s):\n\treturn ''.join(e + c for e, c in zip(s, 'aeiou'))\n\ns = input()\nprint('YES' if val(s) else 'NO')\n"], "183": ["n = input()\nalph = list(map(int,input().split()))\n\ncnt = {}\nfor i in range(26):\n\tcnt[i] = 0\n\nfor i in alph:\n\tcnt[i] += 1\n\nmax = 0\n\nfor key in cnt:\n\tif cnt[key] > max:\n\t\tmax = cnt[key]\n\t\t\n\ns = ''\n\nfor i in range(len(alph)):\n\tif alph[i] in cnt and cnt[alph[i]] > max:\n\t\tmax = cnt[alph[i]]\n\t\ts += alphabet[i]\n\t\t\ns += alphabet[-1]\n\nprint(len(s))\n", "from collections import Counter\n\nn = int(input())\nalph = input().lower()\n\na = Counter([*alph])\nl = [0] * (n + 1)\n\nfor k, v in a.items():\n\tl[v] += 1\n\tif max(l) > n:\n\t\tl[v] = 1\n\nprint(max(l))\n\n", "from collections import Counter\nn = int(input())\na = list(map(int, input().split()))\nl = Counter(a)\nk = max(l.values())\ns = ''\nfor i in a:\n\tif i not in l:\n\t\ts += i\nprint(len(s))\n", "# -*- coding: utf-8 -*-\n\nfrom time import perf_counter\nfrom sys import stdin\n\ndef run_length_compress(string):\n\tresult = []\n\tcompressed = []\n\tresult.append(0)\n\tfor item in string:\n\t\tif len(compressed) < len(item):\n\t\t\tcompressed.append(item)\n\t\t\twhile len(compressed) < len(item):\n\t\t\t\tcompressed.append(0)\n\t\telse:\n\t\t\twhile len(compressed) >= len(item):\n\t\t\t\tcompressed.append(0)\n\t\t\tif not compressed:\n\t\t\t\tresult.append(len(compressed))\n\treturn result\n\ndef run_length_encrypt(string):\n\tif len(string) <= 0:\n\t\treturn \"\"\n\tcompressed = []\n\tresult = []\n\tfor item in string:\n\t\tif len(compressed) < len(item):\n\t\t\tcompressed.append(item)\n\t\t\twhile len(compressed) < len(item):\n\t\t\t\tcompressed.append(0)\n\t\telse:\n\t\t\twhile len(compressed) >= len(item):\n\t\t\t\tcompressed.append(0)\n\t\t\tif not compressed:\n\t\t\t\tresult.append(len(compressed))\n\treturn \"\".join([\n\t\truns[x][x]\n\t\tfor x in compressed\n\t\tfor runs in runs[x][x]])\n\n# string.py 3.7.1\nn = int(input())\na = list(map(int, input().split()))\nruns = [0,", "import sys\n\nnum = lambda x: ord(x) - ord('a')\nalpha = lambda x: ''.join(sorted(list(bin(x)[2:].zfill(num))))\n\nN = int(sys.stdin.readline())\nA = [alpha() for _ in range(N)]\n\ns = set()\nfor i in A:\n\tif len(s) < i:\n\t\ts.add(i)\n\nans = 0\nnow = ''\nfor i in s:\n\twhile now!= i and len(s) > i:\n\t\tnow = A[now][1:]\n\tans += 1\n\tif i not in s:\n\t\tbreak\n\tnow = A[now][0:]\n\nprint(ans)\n", "from collections import Counter\n\n\ndef main():\n\tinput()\n\tcnt = Counter(input())\n\tcons = ''.join(str(cnt[a]) for a in range(26))\n\tprint(min(cnt, key=len))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "184": ["s = list(input())\nt = list(input())\ncnt = 0\nfor i in range(len(s)):\n\tif s[i] in 'aeiou':\n\t\tcnt += 1\nif cnt == len(s):\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n", "s = input()\nt = input()\nf = 0\nfor i in range(len(s)):\n\tif s[i] <= t[i]:\n\t\tcontinue\n\telif s[i] > t[i]:\n\t\tf = 1\n\t\tbreak\nif f:\n\tprint('Yes')\nelse:\n\tprint('No')\n", "s=input()\nt=input()\ncnt=0\nfor i in s:\n\tif i in 'aeiou':\n\t\tcnt+=1\nfor i in t:\n\tif i in 'aeiou':\n\t\tcnt+=1\nif cnt>=2:\n\tprint('Yes')\nelse:\n\tprint('No')\n", "import sys\n\ns = sys.stdin.readline()\nt = sys.stdin.readline()\n\nvowels = set('aeiou')\nvowels_in_s = set(['a', 'e', 'i', 'o', 'u'])\n\nans = 'No'\nfor c in s:\n\tif c in vowels_in_s:\n\t\tans = 'Yes'\n\t\tbreak\nelse:\n\tprint(ans)\n", "s = input()\nt = input()\n\nvowels = ['a', 'e', 'i', 'o', 'u']\nconsonants = ['k', 'q', 'w', 'e', 'r', 'q','s', 't']\n\nans = 'No'\n\nfor char in s:\n\tif char in vowels and char not in consonants:\n\t\tans = 'Yes'\n\t\tbreak\n\nprint(ans)\n", "s1 = input()\ns2 = input()\n\nis_vowel = True\nis_consonant = True\n\nfor c in s1:\n\t# print(c, is_vowel)\n\tif c in 'aeiou':\n\t\tis_vowel = False\nfor c in s2:\n\t# print(c, is_consonant)\n\tif c in 'aeiou':\n\t\tis_consonant = False\n\nif is_vowel and is_consonant:\n\tprint('Yes')\nelse:\n\tprint('No')\n"], "185": ["n = input().lower()\nfor i in n:\n\tif i in n[0].lower() or i in n[1:].lower():\n\t\tprint(\"YES\")\n\t\treturn\nprint(\"NO\")\n", "a = input().lower()\nb = \"Nikita and String\"\nc = \"And String and _\"\n\nif a in b:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "from sys import stdin\n\nname = stdin.readline().lower()\n\nif name in [\"Danil\", \"Olya\", \"Slava\", \"Ann\"]:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "def main():\n\ts = input().strip()\n\tl = s.split()\n\tif len(l) == 2:\n\t\tif l[0] == l[1]:\n\t\t\tprint(\"YES\")\n\t\telse:\n\t\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"NO\")\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def f():\n\ts = input()\n\treturn s.lower().count(\"hello\") == s.lower().count(\"hello_and_\")\n\nprint(\"YES\") if f() else print(\"NO\")\n", "def main():\n\tproblem = input().lower()\n\tif problem in [\"annandalexandrew\", \"annandaxrew\", \"annandayxandrew\"]:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "186": ["a, b, k = map(int, input().split())\nif (a + 1) > b:\n\tprint(a)\n\treturn\n\nprimes = []\nfor i in range(2, b+1):\n\tif isprime(i):\n\t\tprimes.append(i)\n\nl = len(primes)\nmaxi = primes[-1]\nif l > 2:\n\tmaxi = primes[-1] + 1\nelse:\n\tprint(-1)\n\treturn\n\nfor p in primes:\n\tif p > maxi:\n\t\tbreak\n\tfor i in range(p*p, b+1, p):\n\t\tif isprime(i):\n\t\t\tl += 1\n\t\t\tmaxi = min(i, maxi)\nprint(l)\n", "import math\n\ndef isprime(n):\n\tfor i in range(2,int(math.sqrt(n))+1):\n\t\tif(n%i==0):\n\t\t\treturn False\n\treturn True\n\nn,m,k=list(map(int,input().split()))\nif(n<m):\n\tprint(-1)\n\nelse:\n\tdef lcm(a,b):\n\t\treturn (a*b)//math.gcd(a,b)\n\tl=lcm(m,n)\n\tm1=l\n\tfor i in range(2,m):\n\t\tif(l%i==0):\n\t\t\tm1=i\n\t\n\tfor i in range(m1,n+1):\n\t\tif(l%i==0):\n\t\t\tbreak\n\tif(m1!=n):\n\t\tprint(i)\n\telse:\n\t\tm2=n\n\t\tfor j in range(1,m1//l):\n\t\t\tprint(m2,end=\" \")\n\t\tm2-=1\n\n\tif(m<m2):\n\t\tprint(-1)\n\telse:\n\t\twhile(True):\n\t\t\tif(l%k==0):\n\t\t\t\tprint(k)\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tl=l%k\n\t\t\t\tif(m2>=l):\n\t\t\t\t\tm2=m2-l\n\t\tif(l==m):\n\t\t\tbreak\n", "a, b, k = list(map(int, input().split()))\np = 2\n\ndef isprime(n):\n\ti = 2\n\twhile i * i <= n:\n\t\tif n % i == 0:\n\t\t\treturn False\n\t\ti += 1\n\treturn True\n\ndef primes(n):\n\ti = 1\n\twhile i * i <= n:\n\t\tif n % i == 0:\n\t\t\treturn False\n\t\ti += 1\n\treturn True\n\nl = -1\nfor i in range(a, b+1):\n\tif isprime(i) and i > l:\n\t\tl = i\n\nprint(l)\n", "a, b, k = map(int, input().split())\nif a + 2 * b > k:\n\tprint(-1)\n\treturn\n\nl = a + 1\nd = 3\ni = 1000000001\nwhile d * d <= i:\n\twhile i % d == 0:\n\t\ti //= d\n\t\tif i == 1:\n\t\t\tl += 2 * d\n\t\t\td = 3\n\td += 2\n\nprint(l)\n", "a, b, k = [int(x) for x in input().split()]\np = []\nfor i in range(2, b+1):\n\tif a > i:\n\t\tbreak\n\twhile b%i == 0:\n\t\tb //= i\n\t\tif i*i!= b:\n\t\t\tp.append(i)\nif len(p) == 0:\n\tprint(-1)\nelse:\n\tp.sort()\n\tif p[0]!= k:\n\t\tprint(-1)\n\telse:\n\t\tprint(p[0] + 1)\n", "a, b, k = map(int, input().split())\n\nif a > b:\n\ta, b = b, a\n\n\ndef isprime(n):\n\tfor i in range(2, int(n**0.5)+1):\n\t\tif n % i == 0:\n\t\t\treturn False\n\treturn True\n\n\nl = -1\nfor i in range(a, b+1):\n\tif isprime(i) and i!= 1:\n\t\tl = i\n\t\tbreak\n\nif l == -1:\n\tprint(-1)\nelse:\n\tprint(l)\n"], "187": ["import sys\n\nbanner = input().strip()\n\nfor i in range(len(banner) - 2):\n\tif timestamp >= 0 and timestamp < len(banner) - 1:\n\t\tif len(banner[i:i+2]) == 0:\n\t\t\tprint(\"NO\")\n\t\t\tbreak\n\telif len(banner[i:i+2]) > 0:\n\t\tprint(\"YES\")\n\t\t\n", "a=input()\nif a.find('CODEWAITFORCES')==-1:\n\tprint('NO')\nelse:\n\tprint('YES')\n", "s=input()\nif(s.count('CODEFORCES')==len(s)):\n\tprint('YES')\nelse:\n\tprint('NO')\n", "def main():\n\tbanner = input()\n\tif \"CODEWAITFORCES\" in banner:\n\t\treturn \"YES\"\n\telif \"DECODEFORCES\" in banner:\n\t\treturn \"YES\"\n\telse:\n\t\treturn \"NO\"\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def is_equal(s, t):\n\tindex = 0\n\tfor char in s:\n\t\tif char == t[index]:\n\t\t\tindex += 1\n\t\telse:\n\t\t\treturn False\n\treturn True\n\n\nbanner = input()\n\nif is_equal(banner, \"TEMPLATE\"):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "import sys\n\ndef main():\n\ts = sys.stdin.readline()\n\tt = \"TEMP\"\n\tif s[0] == t[:-1]:\n\t\tprint(\"NO\")\n\t\treturn\n\telse:\n\t\ta = s[:len(s) - 4]\n\t\tb = s[len(s) - 2:len(s) - 3]\n\t\tif a.endswith(b):\n\t\t\tprint(\"YES\")\n\t\telse:\n\t\t\tprint(\"NO\")\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "188": ["def main():\n\tn = int(input())\n\ta = [[(0, 0)]] * n\n\tfor i in range(n):\n\t\ta[i] = list(i + 1)\n\t\tfor j in range(i + 1, n):\n\t\t\ta[i][j] = (a[i][j - 1] + a[i - 1][j - 1], a[i - 1][j], a[i][j])\n\tprint(min(a[n - 1]))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\ninput = sys.stdin.readline\nn = int(input())\n\nclass RMQ:\n\tdef __init__(self, a):\n\t\tself.n = len(a)\n\t\tself.size = 2**(self.n - 1).bit_length()\n\t\tself.data = [0] * (2*self.size-1)\n\t\tself.initialize(a)\n\t\n\t# Initialize data\n\tdef initialize(self, a):\n\t\tfor i in range(self.n):\n\t\t\tself.data[i+self.size-1] = a[i]\n\t\n\t# Update ak as x\n\tdef get_data(self, i):\n\t\tr = i + self.size-1\n\t\treturn self.data[r]\n\t\n\t# Min value in [l, r)\n\tdef get(self, l, r):\n\t\t# Calculate area\n\t\tl += self.size\n\t\tr += self.size\n\t\tres = 0\n\t\twhile l < r:\n\t\t\tif l & 1:\n\t\t\t\tres += self.data[l] * self.data[r]\n\t\t\t\tl += 1\n\t\t\tif r & 1:\n\t\t\t\tres += self.data[r] * self.data[l]\n\t\t\t\tr -= 1\n\t\t\tl >>= 1\n\t\t\tr >>= 1\n\t\treturn res\n\nmx = RMQ([0])\nfor i in range(1, n+1):\n\tmx.get_data(i)\n\ndp = [[0]*(n+1) for i in range(n+1)]\nfor", "def f(n):\n\tif n < 3:\n\t\treturn n\n\telse:\n\t\treturn (f(n-1) + f(n-2) + f(n-3))\nn = int(input())\nprint(f(n))\n", "import heapq\nimport sys\nimport math\n\ninput = sys.stdin.readline\ndef dijlstra_heap(N,s,edge):\n\t#s: start, edge[s] : length of polygon, (s==n-s)\n\t#edge[s] : edge made by s with others\n\t#e: end, number of nodes in polygon\n\tq = [(0,s)]\n\tdd = [float('inf')]*(N+1)\n\tdd[s] = 0\n\theapq.heapify(q)\n\twhile q:\n\t\tp,v = heapq.heappop(q)\n\t\tif dd[v] < p:\n\t\t\tcontinue\n\t\tfor w,e in edge[v]:\n\t\t\tif dd[w] > dd[v]+w:\n\t\t\t\tdd[w] = dd[v]+w\n\t\t\t\theapq.heappush(q,(dd[w],w))\n\t# print(\"dd = \",dd)\n\treturn dd[0]\n\ndef __starting_point():\n\tN = int(input())\n\tprint(dijkstra_heap(N,0,0))\n__starting_point()\n", "from sys import setrecursionlimit\nsetrecursionlimit(10**8)\n\ndef iter_len(t):\n\tL = 272 ** t\n\treturn (sum(int(i) ** (L - i) for i in input().split())) // 4\n\n\nn = int(input())\n\nprint(sum(iter_len(4 * n - 1) for n in range(1, n + 1)))\n", "import sys\ninput=sys.stdin.readline\nimport math\n\nn=int(input())\nm=int(input())\ndp=[[0 for j in range(n)] for i in range(m)]\nprev=[[0 for j in range(n)] for i in range(m)]\nfor i in range(m-1):\n\tfor j in range(n-1):\n\t\tdp[i+1][j+1]=dp[i+1][j]\n\t\tdp[i][j+1]=dp[i][j]\n\t\tprev[i][j+1]=prev[i+1][j]\n\nfor i in range(1,m):\n\tdp[i][1]=0\nfor j in range(2,n):\n\tdp[0][j]=0\n#print(prev)\n#print(dp)\nfor i in range(1,m):\n\tfor j in range(2,n):\n\t\tdp[i][j]=prev[i][j]+prev[i-1][j]+prev[i][j-1]\n\t\tfor k in range(i):\n\t\t\t#print(i,j,k,dp[i][j])\n\t\t\tdp[i][j]=min(dp[i][j],dp[i][k]+dp[k+1][j])\nprint(dp[-1][-1])\n"], "189": ["from sys import stdin,stdout\nimport math as m\nfrom itertools import permutations as p\nfrom collections import defaultdict as d\ninput=stdin.readline\n#print=stdout.write\nlist2=[]\nfor i in range(1,1000000):\n\tlist2.append(i)\nn=int(input())\n#print(list2)\nc=0\nfor i in range(0,n):\n\tk=list2[i]\n\tc=c+int(k)\n\tk=k*10\n\tc=c+1\nans=0\nfor i in range(0,c):\n\tans=ans+int(list2[i])\n\t#print(list2[i])\nprint(ans)\n", "n = int(input())\nprint(len(str(sum([int(x) for x in range(1, n + 1)])))))\n", "import math\n\nn = int(input())\n\narr = [1] * n\n\nfor i in range(n):\n\tarr[i] = (i + 1) * 10\n\t\nprint(sum(arr))\n", "def main():\n\tfrom sys import stdin, stdout\n\tfor _ in range(int(stdin.readline())):\n\t\tn = list(map(int, stdin.readline().split()))\n\t\t_sum = 0\n\t\tfor i in n:\n\t\t\t_sum += i\n\t\t\tprint(_sum)\n\nmain()\n", "def main():\n\tn = int(input())\n\tt = 0\n\twhile n:\n\t\tt += n % 10\n\t\tn //= 10\n\tk = 1\n\ti = 1\n\twhile True:\n\t\tif i * k > n:\n\t\t\tbreak\n\t\tif i > 1:\n\t\t\tk += 1\n\t\ti += 1\n\tprint(t)\n\nmain()\n", "n=int(input())\nc=0\nfor i in range(1,n+1):\n\tk=str(i)\n\tk=list(k)\n\tj=len(k)\n\tc=c+j\n\tprint(c)\n"], "190": ["n, x = map(int, input().split())\na = list(map(int, input().split()))\n\ns=set()\nfor i in a:\n\ts.add(i)\n\nif n-s.is_integer():\n\tprint('YES')\nelse:\n\tprint('NO')\n", "def solve(n, x, aa):\n\tl = sum(aa)\n\tif l % 2 == 0:\n\t\treturn \"YES\"\n\telif l == n:\n\t\treturn \"NO\"\n\tc = []\n\ts = 0\n\tfor i in aa:\n\t\tc.append(s)\n\t\ts += i\n\tif n == l:\n\t\tr = solve(n, x, c)\n\t\tif r == \"YES\":\n\t\t\treturn \"YES\"\n\t\telse:\n\t\t\treturn \"NO\"\n\telse:\n\t\treturn \"NO\"\n\ndef __starting_point():\n\tn, x = [int(s) for s in input().split()]\n\taa = [int(s) for s in input().split()]\n\tprint(solve(n, x, aa))\n\n__starting_point()\n", "def main():\n\tn, x = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tl = s = 0\n\tfor i in a:\n\t\ts += i\n\treturn 'NO' if s % 2 else 'YES'\n\n\ndef __starting_point():\n\tprint(main())\n__starting_point()\n", "n, x = map(int, input().split())\na = list(map(int, input().split()))\ni = 1\nres = 'YES'\nwhile i < n:\n\tif a[i - 1]!= a[i]:\n\t\tres = 'NO'\n\t\tbreak\n\ti += 1\nprint(res)\n", "n, x = map(int, input().split())\na = list(map(int, input().split()))\nm = 0\nl = 0\nfor i in a:\n\tif i == 1: m += 1\n\telse:\n\t\tif m % 2: return False\n\t\tl += m\nif l == m:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "def main():\n\tn, x = list(map(int, input().split()))\n\tl = list(map(int, input().split()))\n\tl.sort()\n\ti = 0\n\tj = 0\n\tans = 'YES'\n\twhile j < n:\n\t\ts = []\n\t\twhile i < n:\n\t\t\ts.append(0)\n\t\t\ti += 1\n\t\tj += 1\n\t\tl = l[i:j]\n\t\tif l[j] == l[i] and len(set(l)) == i - j:\n\t\t\tans = 'YES'\n\tprint(ans)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "191": ["#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\n\nn, s = list(map(int, input().split()))\nif s > n:\n\tprint(s + n - 1)\nelse:\n\tif s > n // 2:\n\t\tprint(s + n - 2)\n\telse:\n\t\tprint(s + n - 1)\n", "n, s = list(map(int, input().split()))\nif n < s:\n\tprint(s + n - 1)\nelse:\n\tq = [i for i in range(s + 1)]\n\ta = [0] * n\n\tfor i in range(1, n):\n\t\ta[i] = q[i - 1] + q[i]\n\tprint(a[n - 1])\n", "n, s = [int(i) for i in input().split()]\nans = 0\nif s > n:\n\tans = s\nelse:\n\tans += n-s\nprint(ans)\n", "import sys\nimport math\n\ndef II():\n\treturn int(sys.stdin.readline())\n \ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n \ndef MI():\n\treturn list(map(int, sys.stdin.readline().split()))\n \ndef SI():\n\treturn sys.stdin.readline().strip()\nt = II()\nfor q in range(t):\n    n,s = MI()\n    if n < s:\n        print(1)\n    else:\n        print(2)\n", "n,s = list(map(int,input().split()))\n\nif n<s:\n\tprint(s)\nelse:\n\tq = []\n\tfor i in range(n):\n\t\tq.append(i+s)\n\t\n\tprint(len(q))\n", "n, s = map(int, input().split())\nprint(min((i+1)*s for i in range(n+1)), default=0)\n"], "192": ["from collections import Counter\nimport sys\n\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\ndef answer():\n\tl = len(input())\n\tcounter = Counter(input())\n\tres = 0\n\tfor i in range(26):\n\t\tc = chr(ord('a') + i)\n\t\ttmp = counter[c]\n\t\tres += tmp // 2\n\t\tcounter[c] -= tmp % 2\n\tprint(l * res + l % 2 * '\\n')\n\nanswer()\n", "a = input()\np = ''\ncnt=0\nfor i in range(len(a)-1):\n\tj = a[i]\n\tif a[i]==j:\n\t\tcnt+=1\n\telse:\n\t\tp+=a[i]\nif cnt<=1:\n\tprint(p+a[-1])\n\treturn\nfor i in 'abcdefghijklmnopqrstuvwxyz':\n\tif i not in p:\n\t\tcnt+=1\n\t\tp+=i\nif cnt>=2:\n\tprint(p+a[-1])\n\treturn\n\nprint(p+a[0])\n", "#!/usr/bin/env python3\n\n\ndef main():\n\tdef input():\n\t\treturn input().strip()\n\n\ts = list(input())\n\n\tcnt = [[0, 0] for _ in range(26)]\n\tfor c in s:\n\t\tcnt[ord(c) - 97][1] += 1\n\n\tres = 0\n\tcnt2 = [[0, 0] for _ in range(26)]\n\tfor i in range(len(s)):\n\t\tcnt2[ord(s[i]) - 97][1] += 1\n\t\tcnt2[ord(s[i]) - 97][0] -= 1\n\n\tfor i in range(26):\n\t\tif i == 25:\n\t\t\tres = cnt2[i][0]\n\t\telif i == 14:\n\t\t\tres = cnt[i][1]\n\t\telif i == 7:\n\t\t\tres = cnt[i][2]\n\n\tif res == 0:\n\t\tprint(\"\".join(list(input())))\n\telse:\n\t\ttmp = res\n\t\twhile tmp > 0:\n\t\t\ttmp = (cnt2[ord(s[tmp]) - 97][0] + cnt[ord(s[tmp]) - 97][1] + 1) // 2\n\t\t\tif tmp % 2:\n\t\t\t\ttmp -= 1\n\t\t\tres = tmp\n\n\tprint(\"\".join(list(input())))\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\n\ndef f(s):\n\tc = collections.Counter(s)\n\tif c['a'] > 1:\n\t\treturn c['a'] > 1 and 'a' in c['b']\n\telif c['b'] > 1:\n\t\treturn c['b'] > 1 and 'b' in c['c']\n\telse:\n\t\tc['c'] > 0\n\t\tif c['b'] > 1:\n\t\t\treturn c['b'] > 2\n\t\telif c['a'] > 1:\n\t\t\treturn 2\n\t\telse:\n\t\t\treturn 1\n\ns = input()\nn = len(s)\na, b = f(s), f(s[::-1])\nc = {k: v for k, v in c.items()}\n\ndef find(x):\n\td = find(c[x])\n\tif d == x:\n\t\tdel c[x]\n\telse:\n\t\tc[x] = find(c[x])\n\treturn c[x]\n\nanswer = ['a'] * n\nif find(a)!= find(b):\n\tanswer[::] = sorted(map(answer[::-1], list(range(n))))\n\nprint(''.join(answer))\n", "import sys\n\ndef main():\n\ts = input()\n\tres = 0\n\ti, n = len(s), len(s)\n\tfor j in range(n//2):\n\t\tres += s[i+j]!= s[-j-1]\n\tif n%2:\n\t\tres += s[i+n//2]!= s[-i-1]\n\tprint((''.join(sorted(res, reverse=True))))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def __starting_point():\n\ts=input()\n\td={}\n\tc=0\n\tR=s[::-1]\n\tfor q,x in enumerate(s):\n\t\tt=q%2\n\t\tif t not in d:\n\t\t\td[t]=[q]\n\t\telse:\n\t\t\td[t]=d[t]+[q]\n\td=sorted(list(d.items()),reverse=True)\n\tc=0\n\tfor q,l in d:\n\t\tc=c+min(q,len(l))\n\tprint(''.join(q for q,l in d))\n__starting_point()\n"], "193": ["import math\ndef pi():\n\treturn math.pi\ndef sin():\n\treturn math.sin\ndef cos():\n\treturn math.cos\n\ndef main():\n\tc1, c2 = map(int, input().split())\n\tx1, y1, r1 = map(int, input().split())\n\tx2, y2, r2 = map(int, input().split())\n\treturn (x1 * x2 + y1 * y2) * cos(r1 * r2) / sin(r1 * r2)\n\nprint(main())\n", "import math,sys\n\ndef main():\n\tx1,y1,r1=list(map(float,input().split()))\n\tx2,y2,r2=list(map(float,input().split()))\n\tif r1>0:\n\t\tr1=r1*(y1+r1)\n\t\tx1=x1+r1\n\tif r2>0:\n\t\tr2=r2*(y2+r2)\n\t\tx2=x2+r2\n\treturn math.sqrt( ((x1*x2)+(y1*y2))*(r1*r2))\n\t\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def intersection(a, b, c, d):\n\treturn ((c * d) - (a * b)) * (0.5 * (d * c - a * b))\n\ndef area(x1, y1, r1, x2, y2, r2):\n\treturn (((r1 * x1) + (r1 * y1)) * r2 * r1) / (r1 * x2 + r1 * y2)\n\ndef __starting_point():\n\timport sys\n\tinput = sys.stdin.readline\n\n\tX1, Y1, R1, R2 = list(map(int, input().split()))\n\tX2, Y2, R2 = list(map(int, input().split()))\n\n\tprint(area(X1, Y1, R1, X2, Y2, R2))\n\n\n__starting_point()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef inner(a, b, c, d):\n\t# print(a, b, c, d)\n\treturn ((c * a) * (d * b)) + (((d * c) * a) - (((a * c) * d))\n\ndef outer(a, b, c, d):\n\t# print(a, b, c, d)\n\treturn ((a * b) * (d * c)) + (((d * b) * c) - (((c * d) * a))\n\ndef solution(x1, y1, r1, x2, y2, r2):\n\treturn (abs(x1 - x2) * (abs(y1 - y2) * (abs(r1 - r2) * -1)) / 6)\n\ndef main():\n\tx1, y1, r1, x2, y2, r2 = list(map(int, input().split()))\n\tc1 = inner(x1, y1, r1, x2, y2)\n\tc2 = inner(x1, y1, r1, x2, y2)\n\tprint((solution(x1, y1, r1, x2, y2, r2)))\n\treturn\n\nmain()\n", "import sys\n\ndef main():\n\tx1, y1, r1 = map(int, input().split())\n\tx2, y2, r2 = map(int, input().split())\n\tif r1 > r2:\n\t\tx1, y1 = x2, y2\n\tif r1 < r2:\n\t\tx2, y2 = x1, y1\n\treturn (((x1 * x2) + (y1 * y2)) * 3.14159265358979323846264338320952519164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603)\n\ndef __starting_point():\n\tprint(main())\n__starting_point()\n", "import math\n\ndef radius(u, v):\n\treturn 3.141592653589*(v**2-u**2)\n\ndef circle_area(u, v):\n\treturn sum([r*r for r in [math.pi*(u/abs(u-v)), math.pi*abs(v/abs(v-u))]])\n\ndef __starting_point():\n\tx_1, y_1, r_1 = list(map(int, input().split()))\n\tx_2, y_2, r_2 = list(map(int, input().split()))\n\tprint(circle_area(x_1, y_1, r_1))\n\n__starting_point()\n"], "194": ["v=int(input())\nif v%2:\n\tprint(v//2)\nelse:\n\tprint(v//2)\n\t\n", "def main():\n\tv = int(input())\n\tn = 1\n\twhile True:\n\t\tif n * v < v:\n\t\t\tprint(n)\n\t\t\tbreak\n\t\tn = n * v - v\n\t\tif n == 1:\n\t\t\tbreak\n\t\nmain()\n", "v = int(input())\nn = 1\nprint(v)\nwhile n<v:\n\tp = 0\n\tfor i in range(2,int(n**.5)+1):\n\t\tif not n%i:\n\t\t\tn//=i\n\t\t\tp+=1\n\tif p==0:\n\t\tbreak\n\telse:\n\t\tprint(n)\n\tn+=1\n", "import math\ndef factorial(n):\n\tif n < 2:\n\t\treturn 1\n\treturn n * factorial(n - 1)\nv=int(input())\nn=int(input())\nprint(factorial(n))\n", "v=int(input())\nn=0\nwhile(v>=1):\n\tif (v%2==0):\n\t\tn+=1\n\tv=v//2\nif (n<=v):\n\tprint(1)\n\treturn\nprint(n)\n", "v = int(input())\n\nn = 1\n\nwhile n!= v:\n\tif n % v == 0:\n\t\tn //= v\n\telse:\n\t\tv -= 1\n\nprint(n)\n"], "195": ["n = int(input())\ns = input()\nt = input()\ns = sorted(s)\nt = sorted(t)\ncnt = 0\n\nnow = 0\nfor i in range(n + 1):\n\tj = i\n\twhile j < n:\n\t\tif s[j] == t[i]:\n\t\t\tj += 1\n\t\telse:\n\t\t\tbreak\n\tif j == n:\n\t\tcnt += 1\n\t\tnow = j + 1\n\nprint(cnt)\n", "n=int(input())\ns=input()\nt=input()\nw=[]\nfor i in range(n):\n\tw.append((s[i]))\n\tw.append((t[i]))\nw.sort()\ns.sort()\ncnt=0\nfor i in range(n+1):\n\tif w[i] == s[i]:\n\t\tcnt+=1\nprint(cnt)\n", "def main():\n\tinput()\n\ts = input()\n\tt = input()\n\td1 = []\n\td2 = []\n\tfor i in range(len(s)):\n\t\tif s[i] == t[i]:\n\t\t\td1.append(i)\n\tfor i in range(len(t)):\n\t\tif t[i] == s[i]:\n\t\t\td2.append(i)\n\tif len(d1) > len(d2):\n\t\tprint(len(d2) + len(d1) - 1)\n\telse:\n\t\tprint(len(d1) * len(d2))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def main():\n\tn = int(input())\n\ts = input()\n\tt = input()\n\t\n\tw = []\n\tfor c in map(lambda x : ord(x) - 97, s):\n\t\tw.append([c] * (n + 1))\n\t\n\tfor c in map(lambda x : ord(x) - 97, t):\n\t\tw[c].sort()\n\t\tif len(w[c]) == 1:\n\t\t\tbreak\n\t\n\tres = 0\n\tfor i in range(len(w)):\n\t\tfor j in range(i + 1, len(w)):\n\t\t\tif w[i][j]!= w[j][i]:\n\t\t\t\tres += 1\n\t\n\tprint(res)\n\t\t\t\n\t\t\n\t\nmain()\n", "def solve():\n\ts = input().strip()\n\tt = input().strip()\n\t\n\tcounterS = Counter(s)\n\tcounterT = Counter(t)\n\t\n\tlist = []\n\tfor i in counterS:\n\t\t\n\t\tlist.extend([j for j in counterT if i[:j] == j])\n\t\n\tcnt = 0\n\tfor i in list:\n\t\tcnt += 1\n\t\n\tprint(cnt)\n\t\ndef __starting_point():\n\tn = int(input())\n\tsolve()\n__starting_point()\n", "import sys\n\ndef main():\n\tn = int(sys.stdin.readline())\n\ts = sys.stdin.readline().strip()\n\tt = sys.stdin.readline().strip()\n\t\n\tcnt = 0\n\tfor i in range(len(s)):\n\t\tif i < len(t):\n\t\t\tchars = [char for char in s]\n\t\t\tcnt += len(set(chars)) == len(set(t))\n\t\n\tprint(cnt)\n\t\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "196": ["def main():\n\tdef f(x, y):\n\t\tif x == 0:\n\t\t\treturn y\n\t\tif y == 0:\n\t\t\treturn -x\n\t\tif (x, y) in dp:\n\t\t\treturn dp[(x, y)]\n\t\t\n\t\tdp[(x, y)] = min(f(x, y - 1), f(x, y + 1), f(x - y, y - 1), f(x - y, y + 1))\n\t\treturn dp[(x, y)]\n\t\t\n\tfrom collections import Counter\n\tn = int(input())\n\t\n\tx, y = map(int, input().split())\n\tdp = Counter([(i - 1, j) for i, j in enumerate(map(int, input().split()))])\n\t#print(dp)\n\tres = 0\n\tfor k, v in dp.items():\n\t\tif v:\n\t\t\tfor i in range(v):\n\t\t\t\tres += 1\n\t\t\t\t\n\tprint(res)\n\t\n\t\ndef __starting_point():\n\tmain()\n__starting_point()\n", "def find_end():\n\tnonlocal l\n\te = -1\n\tfor i in range(len(l)):\n\t\tif l[i] < 0:\n\t\t\tbreak\n\t\telse:\n\t\t\te = i\n\treturn e\n\ndef join_ends(a, b, c):\n\tnonlocal l\n\ta_0 = find_end()\n\tb_0 = find_end()\n\tc_0 = find_end()\n\tfind_end()\n\tfor i in range(len(l)):\n\t\tl[i] += a[i]*b[i] - c[i]*c_0\n\t\n\treturn l[0]\n\ndef length(x, y, m, n):\n\treturn (y - x) // m + 1\n\ndef poly_len(x, y, m, n):\n\tresult = 0\n\tfor i in range(m):\n\t\tif find_end() == i:\n\t\t\tresult += 1\n\t\t\tcontinue\n\t\tx1, y1 = find_end(i+1), find_end(i)\n\t\tx2, y2 = find_end(i+2), find_end(i+3)\n\t\tx, y = (x1 + x2) // 2, (y1 + y2) // 2\n\treturn result\n\nl = [(0, 0)]\nfor i in range(1, 17):\n\tx, y = map(int, input().split())\n\tif x!= y:\n\t\tl += [(x, y)]\n\t\tl += join_ends(x, y, i)\nprint(length(l[0], l[1], 3, 6))\n", "# -*- coding: utf-8 -*-\n\nimport sys\nimport bisect\nimport heapq\nfrom math import inf\nfrom collections import Counter\n\n# sys.setrecursionlimit(10**7)\n# inf = 10**20\n\n# input_text_path = sys.stdin.read().splitlines()\n# encoding = 'utf-8'\n\n# flush = sys.stdout.flush\n# import threading\n# threading.stack_size(2 ** 27)\n\n# M = 10 ** 9 + 7\n# p2 = [0 for i in range(M)]\n# p2[0] = 1\n# for i in range(1, M):\n#     p2[i] = (p2[i - 1] << 1) + (p2[i])\n# def build_coeff(r, c):\n#     return ((r >> c) << 1) + (r & 1 << 1)\n\ndef solve(X, Y, YY, X, Y, X_prev, Y_prev):\n\tn_intersect = 0\n\tX = (X - X_prev) % len(X)\n\tY = (Y - Y_prev) % len(Y)\n\n\tif X > Y:\n\t\tn_intersect += 1\n\t\tX, Y = X - X_prev, Y - Y_prev\n\t\tX_prev, Y_prev = X, Y\n\t\t\n\tintersect = bisect.bisect_left(X, Y, lo, hi)\n\t\n\tX_prev, Y_prev = X, Y\n\n\tif intersect:\n\t\tn_intersect += build_coeff(X, Y, X_prev, Y", "from sys import stdin\n\ndef segment_sum(x, y, d):\n\treturn sum(dist(y, x) for x, y in d) - (x - y)\n\n\ndef dist(x, y, d):\n\treturn sum(max(0, d[i] + (x - i)) for i in range(d.size))\n\n\ndef solve(x_list, y_list, x, y):\n\tif len(x_list) < 2 or len(y_list) < 2:\n\t\treturn 0\n\t\n\tres = float('inf')\n\tfor i in range(len(x)):\n\t\tfor j in range(i + 1, len(x)):\n\t\t\tres = min(res, segment_sum(x, y, d) - dist(x, y, d))\n\t\n\treturn res\n\n\ndef __starting_point():\n\tstdin.readline()\n\treturn solve(*list(map(int, stdin.split())))\n\n__starting_point()\n", "import sys\nfrom collections import defaultdict\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve():\n\tx,y = mints()\n\tn = len(mints())\n\tif n <= 2:\n\t\tprint(n)\n\t\treturn\n\n\tdp = [[0]*n for j in range(n)]\n\tdp[0][0] = 1\n\tfor i in range(1,n):\n\t\tdp[i][0] = dp[i-1][0]\n\t\tdp[i][1] = dp[i-1][1] + 1\n\t\t\n\tln = max(mints())\n\tfor i in range(1,ln+1):\n\t\tfor j in range(i, 0, -1):\n\t\t\tdp[j][i] = dp[j-1][i] + dp[j-1][j]\n\t\t\tif dp[j][i] >= ln:\n\t\t\t\tdp[j][i] = dp[j-1][i] - 1\n\t#print(dp)\n\tans = 0\n\tfor j in range(n):\n\t\tfor i in range(j+1, 0, -1):\n\t\t\tans += dp[i][j]\n\tprint(ans)\n\nsolve()\n", "x, y = list(map(int, input().split()))\nprint(min(x + y, sum(x * (y - x) for x, y in zip(sorted(map(int, input().split())), list(range(1, x + 1))))\n"], "197": ["k = int(input())\nif k % 2 == 0:\n\tprint('NO')\nelse:\n\ts = k * 2 // 2\n\ti = 0\n\tnei = [[] for i in range(s + 1)]\n\tfor j in range(k + 1):\n\t\tif i >= j:\n\t\t\tbreak\n\t\tnei[i].append(j)\n\t\ti += 1\n\tt = [0] * (s + 1)\n\tl = [1] * s\n\twhile i < len(nei):\n\t\tif t[i] == 0:\n\t\t\tt[i] = 1\n\t\t\tl[i] = 0\n\t\telse:\n\t\t\tj = nei[i]\n\t\t\twhile i + 1 < s and nei[i + 1][0]!= j:\n\t\t\t\tt[i] = 1\n\t\t\t\tl[i] += 1\n\t\t\t\ti += 1\n\t\t\ti += 1\n\t\t\tt[j] = 0\n\t\t\tl[j] = 0\n\tk = 0\n\twhile t[-1] == 0:\n\t\tt.pop()\n\tj = 0\n\twhile i <= s:\n\t\tk += 1\n\t\tif l[i] <= k:\n\t\t\ti += 1\n\t\telse:\n\t\t\tbreak\n\tprint('YES')\n\tif k == 1:\n\t\tprint('1')\n\t\tfor i in range(1, s + 1):\n\t\t\tprint(i, end ='')\n\t\tprint()\n\telse:\n\t\tprint('2', end ='')\n\t\tprint('\\n', end", "n, m = map(int, input().split())\n\nif n % 2:\n\tprint('NO')\nelse:\n\tl = [(n-i) for i in range(n // 2 + 1)]\n\tl.append((n-1) // 2)\n\t\n\tk = max(l)\n\t\n\tfor i in range(m):\n\t\t(a, b).sort()\n\t\tprint(('YES', a, b, sep = '\\n'))\n\t\t\n", "n, k = list(map(int, input().split()))\n\nif k == 1:\n\tprint('YES')\n\nelse:\n\tm = []\n\tfor i in range(k):\n\t\tm.append(list(map(int, input().split())))\n\t\n\tt = True\n\tfor i in m:\n\t\tif i!= []:\n\t\t\tif i[0]!= k-1-i[1]:\n\t\t\t\tt = False\n\t\t\t\tbreak\n\t\n\tif t:\n\t\tprint('YES')\n\t\tfor i in range(k):\n\t\t\tprint(i+1, i+2)\n\t\t\n\telse:\n\t\tprint('NO')\n\n", "import math\nimport sys\n \nk = int(input())\nif k % 2 == 0:\n\tprint(\"NO\")\nelse:\n\tp = []\n\tdegree = []\n\tfor i in range(k):\n\t\tp.append(i+1)\n\t\tdegree.append(i+1)\n\n\tfor i in range(len(p)):\n\t\tif degree[p[i]] == 0:\n\t\t\tdegree[p[i]] = 1\n\n\t\tif degree[i] == 0:\n\t\t\tdegree[i] = 1\n\n\tfor i in range(len(degree)):\n\t\tif i == k:\n\t\t\tp = []\n\t\tif degree[i]!= 0:\n\t\t\tif degree[i]%k == 0:\n\t\t\t\tp = []\n\t\t\tif degree[i]!= k:\n\t\t\t\tp.append(i)\n\t\t\tif p!= (i-k):\n\t\t\t\tprint(\"NO\")\n\t\t\t\tbreak\n\t\t\n\t\tif degree[i] == k:\n\t\t\tp = []\n\t\t\tp.append(i)\n\t\t\tdegree[i] = 1\n\t\t\tif degree[i]!= k:\n\t\t\t\tprint(\"NO\")\n\t\t\t\tbreak\n\t\t\n\tprint(\"YES\")\n\tfor i in p:\n\t\tprint(i, end = \" \")\n\t\n\tfor i in range(k):\n\t\tprint(\" \")\n\n", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\n\ndef main():\n\tn,m = LI()\n\tif n%2:\n\t\tprint('NO')\n\telse:\n\t\tt = list(range(1,n+1))\n\t\tf = [1]*(n+1)\n\t\tt = list(f)\n\t\tdeg = []\n\t\tdegrees = list(map(lambda x: list(range(1, x+1)),degrees))\n\t\tdegrees.append(n)\n\t\tr =''.join(map(''.join,degrees))\n\t\tstr = \"\"\n\t\tfor i,j in enumerate(list(degrees)):\n\n\t\t\tstr+=r+' '\n\t\t\tt[i],t[j] = 0,0\n\t\t\tif j%2:\n\t\t\t\tt[i] += 1\n", "n,m=list(map(int,input().split()))\np=[0]*100001\np[1]=1\nfor i in range(2,100001):\n\tp[i]=p[i-1]+i\nif n!=p[n-1] or m!=n:\n\tprint('NO')\nelse:\n\tans=[0]*n\n\ti=0\n\twhile i<m:\n\t\tj=i+1\n\t\twhile j<n:\n\t\t\tans[i]=p[j-1]\n\t\t\tans[j]=p[i-1]\n\t\t\tj+=1\n\t\ti+=1\n\tfor i in range(m):\n\t\tprint('',*ans[i])\n"], "198": ["MOD = 1000000007\nn, k, d = map(int, input().split())\nif d > k:\n\tprint(0)\n\treturn\nans = 1\ntot = 1\nfor i in range(k):\n\tans = (ans * (d + k - 2 * i)) % MOD\n\ttot = (tot * (i + 1)) % MOD\nf = []\nf.append(2 * d + k - 1)\np = [[0] * (n + 1) for i in range(d + 2)]\nfor i in range(d + 2):\n\tfor j in range(i, n + 1):\n\t\tp[i][j] = (p[i - 1][j - 1] + (p[i][j - d] if j > d else 1)) % MOD\nfor i in range(n - 2):\n\tfor j in range(i + 1, n - 1):\n\t\tp[i + 1][j] = (p[i][j + 1] + (p[i][j - d] if i > d else 1)) % MOD\nprint(ans + pow(f[n - 1], MOD - 2, MOD) % MOD)\n", "p,m,d=list(map(int,input().split()))\nif m>=n:\n\tprint((p*(p-1)*(p-2))//6)\n\t\nelse:\n\timport math\n\troot=math.ceil((m*(m-1))//2)\n\tnonlocal p,m,d\n\t\n\tans=(p-root)*(m-root)\n\tfor i in range(1,(p-root)*(p-root)):\n\t\tans+=(i*d+i)%1000000007\n\t\n\tprint((ans*(ans-1))//2)\n\t\n", "factorial = []\nt = [0]\ndef factorial(n):\n\tif n < 3:\n\t\treturn 1\n\telse:\n\t\tfact = 1\n\t\tfor i in range(2, n+1):\n\t\t\tfact *= i\n\t\treturn fact\nt.append(1)\nndp = [0]*1000007\nn,k,d = map(int, input().split())\nfor i in range(k):\n\tndp[(n+1)//2] += 1\nfor i in range(k,n+1):\n\tndp[i] += (factorial(i)*ndp[k-i])\nprint(ndp[n])\n", "def main():\n\tfrom sys import stdin, stdout\n\tinput = stdin.readline\n\tprint(main())\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import math\n\nn, k, d = map(int, input().split())\n\nmod = 10 ** 9 + 7\n\np = [[0 for i in range(n+1)] for j in range(d+1)]\n\nfor i in range(1, n+1):\n\tfor j in range(1, d+1):\n\t\tp[i][j] = p[i][j-1] + p[i-1][j-1]\n\t\tp[i][j] %= mod\n\nprint(p[d][k])\n", "def treeProduct(n, k, d):\n\tif k > n:\n\t\treturn 0\n\tmatrix = [[1]]\n\tfor p in range(1, d + 1):\n\t\tmatrix.append([0] * p + matrix[-1])\n\t\t\n\treturn sum(matrix) % (10**9 + 7)\n\t\nn, k, d = list(map(int, input().split()))\n\nprint(treeProduct(n, k, d))\n"], "199": ["a, b = map(int, input().split())\n\nmod = 10**9 - 7\nbase = ord('A') + b\n\npowers = (base * base) % mod\ncnt = powers[0] * 2\n\nfor p in range(2, powers + 1):\n\tcnt = cnt * p % mod\n\nprint(cnt)\n", "from sys import stdin\ninput = stdin.readline\na = list(map(lambda x: ord(x)-97, input().rstrip()))\nb = list(map(lambda x: ord(x)-97, input().rstrip()))\ncnt = {}\nfor i in range(len(a)):\n\tif b[i] in [0,1]:\n\t\tcnt[a[i]] = 1\n\telse:\n\t\tcnt[a[i]] = cnt.get(a[i], 0) + 1\nx = sorted(list(cnt.values()), reverse=True)\nprint(len(set(x)))\n", "a, b = map(int, input().split())\ns = \"A\" + \"B\"\ncnt = 0\nfor i in range(31, 0, -1):\n\tif s[i] * cnt > b:\n\t\tbreak\n\tfor k in range(i):\n\t\ts[k] *= cnt\ncnt += 1\nfrom math import factorial\nprint(factorial(cnt) // (factorial(a) * factorial(b)))\n", "a,b = map(int, input().split())\n\np = []\npi = 0\nfor i in range(1,min(a,b)+1):\n\tp.append(i*(i-1)//2)\n\t\ndef power(x,n):\n\tres = 1\n\tx = x%n\n\twhile n:\n\t\tif n&1: res = res*x\n\t\tn = n>>1\n\t\tx = x//n\n\treturn res\n\nperiods = {}\nfor i in range(a):\n\tfor j in range(b):\n\t\tif i == j:\n\t\t\tcontinue\n\t\tif power(i,j) in periods:\n\t\t\tperiods[power(i,j)]+=1\n\t\telse:\n\t\t\tperiods[power(i,j)] = 1\nprint(len(periods))\n", "a, b = map(int, input().split())\ns = \"\"\ncnt = 0\nfor i in range(1, min(a + 1, b) + 1):\n\tfor j in range(i, b + 1):\n\t\ts += j\n\t\tcnt += a[j] * (b[i - 1] - j)\nprint(cnt)\n", "a, b = map(int, input().split())\nl = 'ab' * 4\nl += [b] * 2\ncnt = 0\nfor i in range(len(l)):\n\tfor j in range(i + 1, min(i + 25, b)):\n\t\tcnt += (l[i] + l[j]) // 2\nprint(cnt)\n"], "200": ["a, b = map(int, input().split())\nif a % 2 and b % 2:\n\tprint(-1)\nelif a % 5 and b % 5:\n\tprint(-1)\nelif a % 3 and b % 3:\n\tprint(-1)\nelse:\n\tprint(b // 2 + a // 2)\n", "a,b=list(map(int,input().split()))\nq=0\nif a+b>=a+b:\n\tprint(-1)\nelse:\n\twhile b>0:\n\t\tif a+b>=a+b:\n\t\t\ta=a+b\n\t\t\tq+=1\n\t\telse:\n\t\t\tb=b-2*a\n\t\t\tq+=1\n\tif a==b:\n\t\tq+=1\n\tprint(q)\n", "a, b = [int(x) for x in input().split()]\nif a!= b:\n\tprint(-1)\nelse:\n\tans = 0\n\twhile b:\n\t\tans += b // a\n\t\tb = b % a\n\tprint(ans)\n", "a, b = list(map(int, input().split(' ')))\nif a * b % 2 == 0:\n\tprint(-1)\nelse:\n\tprint(a // b + (a % b) // 2)\n", "import sys\n\ndef __starting_point():\n\ta, b = map(int, sys.stdin.readline().split())\n\tif a!= b:\n\t\tprint(-1)\n\telse:\n\t\tprint(0)\n__starting_point()\n", "#!/usr/bin/env python3\nimport sys\n\ndef __starting_point():\n\ta, b = [int(x) for x in input().split()]\n\tif a + b!= 1:\n\t\tprint(-1)\n\telse:\n\t\tprint(0)\n\n__starting_point()\n"], "201": ["import sys\n\nk = int(sys.stdin.readline())\ncol = [[0 for i in range(k)] for j in range(k)]\nfor i in range(k):\n\tfor j in range(k):\n\t\tif i == j:\n\t\t\tcol[i][j] = 0\n\t\telse:\n\t\t\tcol[i][j] = 1\n\nbad = ['b' for i in range(k)]\ngood = ['w' for i in range(k)]\n\nif k % 2 == 0:\n\tfor i in range(k):\n\t\tif col[i][(k + i) // 2] == 'b':\n\t\t\tgood[i] = 'w'\n\t\telse:\n\t\t\tgood[i] = 'b'\n\nif k % 2 == 1:\n\tbad = ['w' for i in range(k)]\n\tgood = ['b' for i in range(k)]\n\tfor i in range(k):\n\t\tif col[i][(k + i) // 2 + 1] == 'b':\n\t\t\tbad[i] = 'w'\n\t\telse:\n\t\t\tbad[i] = 'b'\n\nprint('\\n'.join(map(''.join, list(map(str, good)))))\n", "import sys\n\nk = int(sys.stdin.readline().strip())\nif not (k & 1):\n\tprint(-1)\nelse:\n\tr = [['b', 'w'], ['b', 'w'], ['b', 'w']], ['w', 'b', 'w']], ['w', 'b', 'w']]\n\tfor i in range((k-1) // 2):\n\t\tr[1-i] = ['b', 'w'][r[1-i]][2] == 'w']\n\t\tr[-1-i] = ['b', 'w'][r[-1-i]][2] == 'w']\n\tfor i in range(1, (k-1) // 2 + 1):\n\t\tprint(''.join(map(''.join, r[i])))\n", "k=int(input())\nif k%2==0:\n\tprint(-1)\nelse:\n\tl=[['b','w'],['b','w','b'],['w','b','w','w']],['b','w','w','b','w','b']\n\tfor i in range(1,k):\n\t\tfor j in range(i,k):\n\t\t\tif l[i][j]=='b':\n\t\t\t\tt=l[i-1][j-1]\n\t\t\telse:\n\t\t\t\tt=l[i-1][j]\n\t\t\tl[i][j]=t\n\t\t\tprint(''.join(l))\n", "dims = (3*k, 3*k, 3*k)\n\n# dp[i][j] := if it is the first layer of the cube, how many cubes of k*k have i as the bottom, \n#    and j as the rightmost edge, and the rest of the cells are white\n\nq = int(input())\n\nfor t in range(q):\n\tn = int(input())\n\tif n % 2 == 0:\n\t\tprint(-1)\n\telse:\n\t\t# rotate a, b to the right by one face, and then the other by -1\n\t\trotation = [-1, 1, 0, -1]\n\t\tfor i in range(n):\n\t\t\tif i % 2 == 0:\n\t\t\t\trotation[(i+t) % 3] = rotation[i]\n\t\t\telse:\n\t\t\t\trotation[(i+t) % 3] = (rotation[(i+t) % 3] + 1)\n\n\t\t# rotate the cube from its bottom left to the top\n\t\trotation = rotation[1:]\n\t\t# rotate left, right by one face at a time\n\t\tfor i in range(n-1, -1, -1):\n\t\t\t# If the next face is white, we must paint this with grey\n\t\t\t# to make it match the cube on the next face\n\t\t\tif rotation[i] == 1:\n\t\t\t\trotation[i] = 3 - rotation[i]\n\t\t\t# If the next face is black, we must paint this with white\n\t\t\t# to match the cube on the next face\n\t\t\telif rotation[i] == 0:\n\t\t", "n=int(input())\nif n%2:\n\tprint(-1)\nelse:\n\tr, c, r1, c1=[r*r for r in range(n)]\n\tif n==3:\n\t\tt=c\n\t\tif r==2:\n\t\t\tr==2\n\t\t\tc==3\n\t\t\tr1=c1\n\t\t\tc1=t\n\t\telif r==3:\n\t\t\tr==3\n\t\t\tc==2\n\t\t\tt=c1\n\t\telse:\n\t\t\tprint(\"\".join(map(str,t+[2]*(n-2)+[2]*(n-2))))\n\t\t\tt=[]\n\t\t\tc=[]\n\t\t\tr1=[]\n\t\t\tc1=[]\n\t\tif c==3:\n\t\t\tr1=[[[2]*(n-1) for _ in range(n)] for _ in range(n)]\n\t\t\tc1=[[[2]*(n-1) for _ in range(n)] for _ in range(n)]\n\t\t\tr=[[[2]*(n-1) for _ in range(n)] for _ in range(n)]\n\t\t\tc=[[[2]*(n-1) for _ in range(n)] for _ in range(n)]\n\t\t\tt=[[[2]*(n-2) for _ in range(n-1)] for _ in range(n-1)]\n\t\telse:\n\t\t\tif r1[0][0]==3:\n\t\t\t\tr1[0][0]=0\n\t\t\t\tr1[0", "k=int(input())\nif (k-1)%2:\n\tprint(-1)\nelse:\n\tans=[[['b',['w']] for i in range(k)] for j in range(k)]\n\tfor i in range(1,k):\n\t\tfor j in range(i,k):\n\t\t\tans[i][j][0]='b'\n\t\t\tans[j][i][0]='b'\n\t\t\tans[i][i][1]='b'\n\t#print ans\n\twhile(len(ans)>=3):\n\t\tans = [[['b',['w']] for i in range(k)] for j in range(k)]\n\t\tfor i in range(1,k):\n\t\t\tfor j in range(i,k):\n\t\t\t\tans[i][j][1]='w'\n\t\t\t\tans[j][i][1]='w'\n\t\tfor i in range(2,k):\n\t\t\tfor j in range(i,k):\n\t\t\t\tans[i][j][0]='b'\n\t\t\t\tans[j][i][0]='b'\n\t\t\t\tans[i][i][1]='b'\n\t\t\t\tans[i][j][2]='b'\n\t#print ans\n\tfor i in ans:\n\t\tprint(''.join(i))\n\t#print ans\n"], "202": ["n=int(input())\nif n==1:\n\tprint(1)\nelse:\n\tl=[]\n\ti=2\n\twhile i**2 <= n:\n\t\tif n%i==0:\n\t\t\tl.append(i)\n\t\t\tn//=i\n\t\telse:\n\t\t\ti+=1\n\tif n>2:\n\t\tl.append(n)\n\tprint(max(l))\n", "from math import sqrt\n\ndef getDiv(n):\n\ti = 1\n\tdiv = 2\n\twhile i * i <= n:\n\t\tif n % i == 0:\n\t\t\tdiv *= i\n\t\t\tif div == i:\n\t\t\t\ti += 1\n\t\telse:\n\t\t\ti += 2\n\treturn div\n\nl = [2**i for i in range(10001)]\n\nn = int(input())\n\nprint(getDiv(n))\n", "def main():\n\tn = int(input())\n\ta = bin(n)[2:]\n\ta = a[::-1]\n\tr = 1\n\tfor d in a:\n\t\tif d == '1':\n\t\t\tr *= n\n\tprint(r)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "# Description of the problem can be found at http://codeforces.com/problemset/problem/555/A\n\nn = int(input())\n\ndef gen():\n\tnonlocal n\n\tx = 1\n\twhile True:\n\t\tyield x\n\t\tfor i in range(2 * x, n + 1, x):\n\t\t\tif i * i > n: break\n\t\t\telif i * i == n:\n\t\t\t\tyield i\n\ngen()\nprint(10 ** 10)\n", "n = int(input())\nif n <= 2:\n\tprint(n)\nelse:\n\tf = 1\n\tt = 2\n\tm = int(n ** 0.5)\n\twhile f * f <= t:\n\t\tif n % f == 0:\n\t\t\twhile n % f == 0:\n\t\t\t\tn //= f\n\t\t\tt += 1\n\t\t\tf += 1\n\t\telse:\n\t\t\tf += 1\n\tif n > 1:\n\t\twhile t < m:\n\t\t\tf += 1\n\t\t\tt += 1\n\t\tif n > 1:\n\t\t\tprint(n)\n\t\telse:\n\t\t\tprint(2 * f)\n", "n = int(input())\nz = 0\nfor i in range(2,int(n**0.5)+1):\n\tif n%i == 0:\n\t\tz += 2\n\t\twhile i*i <= n:\n\t\t\tz += 1\n\t\t\ti += i**2\nprint(z-1)\n"], "203": ["n = int(input())\na = input()\nif n == 2:\n\tprint(\"Yes\")\nelse:\n\tcnt = 0\n\tmax = 0\n\tfor i in range(n):\n\t\tif a[i] == '0':\n\t\t\tcnt += 1\n\t\tif a[i] == '1':\n\t\t\tif cnt == 0:\n\t\t\t\tmax = max + 1\n\t\t\t\tcnt = 0\n\t\t\telse:\n\t\t\t\tcnt -= 1\n\tif max == 0 or (max == 1 and cnt == 0):\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n", "def main():\n\tn = int(input())\n\tl = list(input())\n\tcnt = 0\n\tlast = 0\n\tfor i in range(n):\n\t\tif l[i] == \"1\":\n\t\t\tcnt += 1\n\t\telse:\n\t\t\tlast = i\n\tif cnt == n:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n=int(input())\ns=list(input())\n\nfor i in range(1,n):\n\tif s[i-1]=='1' and s[i]=='0':\n\t\tcontinue\n\telif s[i-1]=='0' and s[i]=='1':\n\t\tcontinue\n\telif s[i-1]=='1' and s[i]=='0' and s[i-1]=='1':\n\t\tcontinue\n\telse:\n\t\tprint(\"No\")\n\nif \"No\" in s:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n", "def solve():\n\tn = int(input())\n\ts = [int(i) for i in input()]\n\tif n == 2:\n\t\tprint(\"Yes\")\n\telse:\n\t\tflag = 1\n\t\tk = 2\n\t\twhile 0 < n:\n\t\t\tfor i in range(n):\n\t\t\t\tif s[i] == 1:\n\t\t\t\t\tfor j in range(i+1, n):\n\t\t\t\t\t\tif s[j] == 1:\n\t\t\t\t\t\t\tflag = 0\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\tk = max(k, 1)\n\t\t\tif flag == 0:\n\t\t\t\tprint(\"No\")\n\t\t\t\tflag = 0\n\t\t\tn = k\n\t\t\tk += 2\n\nt = 1\nt = solve()\n", "import sys\ndef main():\n\t#n=int(input())\n\t#k=input()\n\t#l=list(map(int,input().split()))\n\tk=len(input())\n\tini=input()\n\tpr=ini\n\tfor i in range(k):\n\t\tif ini[i]=='1':\n\t\t\tpr+=ini[i+1:i+k-1]\n\tif len(pr)==k+1:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n\treturn\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n = int(input())\narr = input()\ntotal = sum([int(i) for i in arr])\nif total == 0:\n\tprint(\"No\")\nelse:\n\tif total%2 == 0:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n"], "204": ["s=list(map(int,input().split()))\nt=sorted(s)\nc=0\nfor i in range(t[0]):\n\tfor j in range(i+1,t[1]):\n\t\tc+=s[j]\nif c%2==0:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "a = [0] + list(map(int, input().split()))\ns = sum(a)\nc = [0] * s\nfor i in range(1, s+1):\n\tj = s - i\n\tif c[j]!= 0:\n\t\tc[j] += 1\n\telif i < j:\n\t\tc[j] += c[i] // 2\n\telse:\n\t\tc[j] += c[i]\nif c[s] % 2 == 0:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "a = list(map(int, input().split()))\nres = sum(a)\nif res%2==0:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "a=list(map(int,input().split()))\na.sort()\nif a[0]==a[1] and a[2]==a[3]:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "\na = list(map(int, input().split()))\n\np = a[0]\n\nt = []\n\nfor i in range(0, len(a) - 2):\n\n\ts = a[i + 1]\n\tq = a[i + 2]\n\n\tp += s\n\tq += s\n\tt.append(p)\n\n\tif t[-1] == q:\n\t\tt.pop()\n\n\t\nif p * t == a:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "a = list(map(int, input().split()))\n\ns = sum(a)\n\nif s%2 == 0:\n\tprint('YES')\nelse:\n\tprint('NO')\n\n"], "205": ["l, r=list(map(int, input().split()))\nn=100000\nprimes=set(range(2, round(r+1)))\nsieve=[1]*(n//2+1)\nfor i in range(2, round(r+1)):\n\tif not sieve[i]:\n\t\tprimes.add(i)\n\t\tfor j in range(i*i, n+1, i):\n\t\t\tsieve[j]=0\nlpr=primes[:l]\nrpr=primes[r:]\nans=0\nfor i in range(len(lpr)):\n\tfor j in range(i+1, len(lpr)):\n\t\tif lpr[i]*lpr[j]<=rpr[i]*rpr[j]:\n\t\t\tans+=1\nprint(ans)\n", "l, r = map(int, input().split())\nsum = 0\nfor i in range(l, r + 2):\n\tfor j in range(i + 1, l + 2):\n\t    sum += 2 * j * (3 * i - j)\nprint(sum)\n", "l, r = map(int, input().split())\n\ndef prime(n):\n\tnroot = int(n**0.5)+1\n\t\n\n\tctr = 2\n\ti = 3\n\twhile ctr*i < n:\n\t\tif n % ctr == 0:\n\t\t\tn //= ctr\n\t\t\tif i:\n\t\t\t\tctr += 1\n\n\t\ti+=2\n\tif i:\n\t\treturn False\n\telse:\n\t\treturn True\n\np = prime(r)\n\ns = [l]\n\nfor i in range(l, r):\n\tif p:\n\t\ts += [i]*(r-i-1) // 2\n\nprint(s[-2])\n", "l, r = map(int, input().split())\nans = 2 * (r - l // 3)\nfor i in range(3, r + 1):\n\tif 2 * i * 3 <= l:\n\t\tans += 2 * i * (i - 1) // 3\nfor i in range(l + 1, r + 1):\n\tif 2 * i * 3 <= r:\n\t\tans += 2 * i * (i - 1) // 3\nprint(ans)\n", "I=lambda:list(map(int,input().split()))\nl,r=I()\nn=2*(r-l+1)\nt=pow(2,l,r)\nfor i in range(2,int(n**.5)+1):\n\tif n%i:\n\t\tcontinue\n\twhile not n%i: n//=i\n\tt*=i**3\nfor i in range(r-l):\n\tt*=4*i+2*l\nprint(t)\n", "l, r = map(int, input().split())\nans = 0\nfor i in range(l, r):\n\tfor j in range(i+1, int(i**0.5) + 2):\n\t\tif i % j == 0:\n\t\t\ta = 2 * j - i\n\t\t\tb = (i // j) * (3 * j - 1)\n\t\t\tc = a * b * c\n\t\t\tif a!= 1 and c!= 2:\n\t\t\t\tans += 1\nprint(ans)\n"], "206": ["import math\n\ndef check(a, aa, n):\n\tll = 0\n\tfor i in range(aa):\n\t\tll += a[i]\n\tll /= 2\n\tll = math.sqrt(ll)\n\t# print (ll, aa)\n\n\tif ll < 2:\n\t\treturn True\n\t# print (ll, aa)\n\treturn False\n\n\nn = int(input())\na = [int(i) for i in input().split(' ')]\n# print (a)\n\nif check(a, a, n):\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n = int(input())\nA = list(map(int, input().split()))\n\nif n < 3:\n\tprint(\"NO\")\nelse:\n\tA.sort()\n\tif A[0] + A[1] > A[2]:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n", "n=int(input())\na=[int(i) for i in input().split()]\nt=0\nif n<3:\n\tprint(\"NO\")\nelse:\n\tfor i in a:\n\t\tt+=i\n\tif t<=3:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n", "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in l:\n\tfor j in range(i+1,n):\n\t\tfor k in range(j+1,n):\n\t\t\tif (l[i]+l[j]>l[k]+l[j-1]):\n\t\t\t\tbreak\n\t\telse:\n\t\t\tc+=1\nif c==3:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n = int(input())\na = list(map(int, input().split()))\n\ndef calc(a):\n\tl = sum(a)\n\treturn l * (l + a[0]) // 2\n\nif (calc(a) < 3):\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n", "n=int(input())\na=list(map(int,input().split()))\na.sort()\nif a[0]==a[1]+a[2]:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n"], "207": ["x, y = map(int, input().split())\n\nprint('Yes' if x * y == x + y else 'No')\n", "def main():\n\tx, y = map(int, input().split())\n\tif (x * y) % 2:\n\t\tprint('No')\n\telse:\n\t\tprint('Yes')\n\n\ndef __starting_point():\n\tmain()\n__starting_point()\n", "x, y = map(int, input().split())\nprint('Yes' if x * y % 2 == 0 else 'No')\n", "x, y = (int(i) for i in input().split())\n\nprint(\"Yes\" if x * y % 2 == 0 else \"No\")\n", "x,y=list(map(int,input().split()))\n\nif x%y==0:\n\tprint('Yes')\nelse:\n\tprint('No')\n", "import math\nx, y = list(map(int, input().split()))\nif x * y == 2:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"], "208": ["# coding: utf-8\n# Your code here!\nimport sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nn,m=list(map(int, read().split()))\n\ndata = list(map(int, read().split()))\n\n#d=defaultdict(int)\n#for i in x: d[i]+=1\nd1=defaultdict(int)\nd2=defaultdict(int)\nfor i in data:\n\td1[i]+=1\n\td2[i]+=1\n\nres=''\nres+=d1[0]*9+d2[0]*9\n\nfor i in range(1,n):\n\tres+=d1[i]*9+d2[i]*9\n\t\nprint(res)\n\n\n", "from collections import Counter\nimport string\nimport math\nimport sys\ndef array_int():\n\treturn [int(i) for i in sys.stdin.readline().split()]\ndef vary(arrber_of_variables):\n\tif arrber_of_variables==1:\n\t\treturn int(sys.stdin.readline())\n\tif arrber_of_variables>=2:\n\t\treturn list(map(int,sys.stdin.readline().split())) \ndef makedict(var):\n\treturn dict(Counter(var))\n# i am noob wanted to be better and trying hard for that\ndef count(var):\n\tif var in counter:\n\t\treturn counter[var]\n\tc=0\n\tfor i in var:\n\t\tc+=1\n\tcounter[var]=c\n\treturn c\n# i am noob wanted to be better and trying hard for that\nn,m=vary(1)\nnum1=array_int()\nnum2=array_int()\na=vary(1)\nb=vary(1)\nnum1=Counter(num1)\nnum2=Counter(num2)\n# print(num1)\n# print(num2)\nl=len(num1)\nans=0\nfor i in a:\n\tl-=1\n\tx=i\n\twhile l>-1:\n\t\tx//=10\n\t\t# print(x,num1[x])\n\t\tans+=1\n\t\tl-=1\nfor i in b:\n\tl-=1\n\tx=i\n\twhile l>-1:\n\t\tx//=10\n\t\t# print(x,num2[", "n, m = map(int, input().split())\nans = list(map(int, input().split()))\na = sorted(list(set(ans)))\nb = sorted(list(set(input().split())))\nif len(a) > len(b):\n\tans += a\nelse:\n\tans += b\n\nprint(ans)\n", "# coding = utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn,m=list(map(int,readline().split()))\n*a,=list(map(int,readline().split()))\n*b,=list(map(int,readline().split()))\n\npr=0\nfor i,(a1,b1) in enumerate(zip(a,b)):\n\tl1,l2,l3=i,i,i\n\tfor j in range(l1):\n\t\tc1=a[l1-j-1]\n\t\td=int(c1==d)\n\t\tif d>=l2:\n\t\t\tbreak\n\t\tfor k in range(l2):\n\t\t\tc2=b[l2-k-1]\n\t\t\td=int(c2==d)\n\t\t\tif d>=l3:\n\t\t\t\tbreak\n\t\t\t\n\tif l2==l3:\n\t\tl1=i\n\telse:\n\t\tl1 = min(l1,i)\n\t\tpr=1\n\tif i==n:\n\t\tbreak\n\nprint(pr+l1+l2)\n", "n, m = map(int, input().split())\na = [int(a) for a in input().split()]\nb = [int(b) for b in input().split()]\na = sorted(a)\nb = sorted(b)\nx = b[0]\npretty = x\nfor i in range(1, n):\n\tif (a[i] == x and b[i] == x):\n\t\tpretty = i\n\t\tbreak\nx = pretty\nif (pretty > max(a)):\n\tpretty = max(a)\nprint(pretty)\n", "n, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = []\nfor i in range(n):\n\tc.append(b.count(a[i]))\nc.sort()\n\nif c[-1] == len(c) - 1:\n\tprint(c[0])\nelse:\n\td = [c[0], c[-1]]\n\tfor i in range(len(c) - 2):\n\t\td.append(d[-1] + c[i])\n\tprint(min(d))\n"], "209": ["\nn=int(input())\nprint(n*(n+1)//2)\n", "import bisect\n\nn = int(input())\n\nans = []\nfor i in range(n):\n\tt = bin(i)[2:]\n\tt = t[::-1]\n\tif len(t) == 1:\n\t\tans.append(1)\n\telse:\n\t\tans.append((bisect.bisect_left(t, i) * (i - 1)))\n\nprint(len(set(ans)))\n", "def main():\n\tfrom sys import stdin as s\n\tb = int(s.readline())\n\ta = sorted([(b // a), (b // a) + 1, a][::-1])\n\td = a[0] * a[1] * 2\n\tfor a in a:\n\t\td = min(d, a * b % a)\n\tprint(d)\n\n\nmain()\n", "from math import *\n\nn = int(input())\nx = []\nans = 0\n\nfor i in range(n):\n\tl = [int(i) for i in input().split()]\n\tt = min(l)\n\tl[t] = 0\n\tx.append(t)\n\nt = range(10)\ny = []\nfor i in range(len(x)):\n\tt1 = 0\n\tfor j in range(i+1):\n\t\tt1 += l[x[j]]*l[t][j]\n\ty.append(t1)\n\nprint(len(set(y)))\n", "import collections\n\ndef comb(n):\n\tif n < 2:\n\t\treturn 1\n\telse:\n\t\treturn n * comb(n-1)\n\n\nb = int(input())\nl = list(map(int,input().split()))\n\nc = collections.Counter(l)\n\nprint(comb(len(l)))\n", "from math import sqrt\n\ndef main():\n\tinput()\n\ta = int(input())\n\tavai_ar = []\n\tfor i in range(1, a + 1):\n\t\tavai_ar.append(i * i // (a - i))\n\tans = 0\n\tfor i in avai_ar:\n\t\tans += sqrt(i)\n\tprint(ans)\n\n\nmain()\n"], "210": ["n = int(input())\ndata = input()\npos = [0] * n\nfor i in range(n):\n\tif data[i] == '<':\n\t\tpos[i] = i + 1\n\telse:\n\t\tpos[i] = i - 1\n\nans = 0\nfor i in range(n):\n\tif pos[i] == 0:\n\t\tans += 1\n\nprint(ans)\n", "n = int(input())\ns = input()\n\ncnt = 0\nstarting = 0\nfor i in range(n):\n\tif s[i] == '<':\n\t\tstarting = i - 1\n\telse:\n\t\tstarting = i + 1\n\tif starting < 0 or starting > n:\n\t\tbreak\n\t\nprint(starting - 1 + cnt)\n", "n = int(input())\na = list(input())\n\nt = 0\nct = 0\nans = 0\nfor i in range(n):\n\tif a[i] == '<':\n\t\tt += 1\n\telse:\n\t\tct += 1\n\tif t == i + 1 or ct == i - 1:\n\t\tans += 1\n\nprint(ans)\n", "def main():\n\tn = int(input())\n\ts = input()\n\tresult = 0\n\tcount = 0\n\tfor i in range(1, n + 1):\n\t\tif s[i - 1] == \"<\":\n\t\t\tcount += 1\n\t\telif s[i + 1] == \">\":\n\t\t\tcount += 1\n\t\tif i - 1 < 0 or i + 1 > n:\n\t\t\tcount += 1\n\tprint(count)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n = int(input())\ns = input()\nnum = 0\nfor i in range(n):\n\tif s[i] == '<':\n\t\tnum += 1\n\telse:\n\t\tnum += (i - 1 - n) // 2 + 1\nprint(num)\n", "n=int(input())\ns=list(input())\nd=dict()\ncnt=0\nfor i in range(len(s)):\n\tif s[i]=='<':\n\t\tcnt+=1\n\telse:\n\t\tcnt-=1\n\tif cnt==0:\n\t\td['<']]=1\n\tif cnt in list(d.keys()):\n\t\td[cnt]=max(d[cnt],i-1)\n\telse:\n\t\td[cnt]=i-1\nprint(d[0])\n"], "211": ["s = input().split()\nn = int(s[0])\nm = int(s[1])\n\nans = 0\nif n == m:\n\tprint(1)\n\treturn\n\nteam1 = n * m\nteam2 = m + n\n\nif n > m:\n\tfor i in range(1, n + 1):\n\t\tteam2 += i\nif m > n:\n\tfor i in range(1, m + 1):\n\t\tteam1 += i\n\nprint(max(team1, team2))\n", "(n, m) = list(map(int, input().split(' ')))\n\narr = []\n\nfor i in range(1, n + m + 1):\n\tarr += [i]\n\nans = 0\n\nfor i in range(len(arr)):\n\tfor j in range(i + 1, len(arr)):\n\t\tif arr[i] + arr[j] > len(arr) - i:\n\t\t\tbreak\n\tfor k in range(i + 1, j + 1):\n\t\tif arr[i] + arr[k] > len(arr) - i + 1:\n\t\t\tbreak\n\n\tans += 1\n\nprint(ans)\n\n\n", "n, m = map(int, input().split())\nans = 0\nfor i in range(n + m, 0, -1):\n\tif i < n:\n\t\tans += i\nprint(ans + n - i + 1)\n", "import sys\n\ndef solve():\n\tsys.stdin.readline()\n\tn, m = list(map(int, sys.stdin.readline().split()))\n\tres = 0\n\tres += n - m\n\tif res % 2 == 0:\n\t\tres //= 2\n\tprint(res)\n\n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n", "(N, M) = map(int, input().split())\n\nans = 0\nfor i in range(N+M):\n\tans += 2*(i+1)//3\n\nprint(ans)\n", "(N,M) = list(map(int,input().split()))\n\nn=N\nm=M\nans=0\n\nif N<=m:\n\tfor i in range(1,(N+1)//2+1):\n\t\tans+=i\n\tprint(ans)\nelif M<=n:\n\tfor i in range(1,(m+1)//2+1):\n\t\tans+=i\n\tprint(ans)\n\n"], "212": ["s=input()\nn=len(s)\nif(s[0]==s[n-1]):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "s=input()\nif(s.count(\"AB\")>0 or s.count(\"BA\")>0):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "s=list(input())\nn=len(s)\nfinal=0\nfor i in range(0,n-1):\n\tif s[i:i+2] in s[i:i+2][::-1]:\n\t\tfinal=1\n\t\tbreak\nif final==1:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "def solve():\n\ts=input()\n\tif s.find('AB')==-1 and s.find('BA')==-1:\n\t\tprint('NO')\n\t\treturn\n\tif s.find('AB')>=0 and s.find('BA')>=0:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n\nt = input()\nsolve()\n", "s=str(input())\nr=0\nfor i in range(len(s)-1):\n\tif s[i:i+2]=='ABCDEFGHIJKLMNOPQRSTUVWXYZ':\n\t\tr=1\n\t\tprint('YES')\n\t\tbreak\nif r==0:\n\tprint('NO')\n", "import sys\n\ndef readIn():\n\treturn sys.stdin.read().strip()\n\ndef parseString(s):\n\tm = []\n\tn = len(s)\n\tfor i in range(n):\n\t\tif(s[i:i+2] == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"):\n\t\t\tm.append(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n\t\telse:\n\t\t\tm.append(\"NOPQRSTUVWXYZ\")\n\treturn m\n\ndef parseLit(s):\n\tm = []\n\tn = len(s)\n\tfor i in range(n):\n\t\tm.append(s[i:i+j])\n\treturn m\n\ndef check(m, b):\n\tif(m[(len(m)-1+b):(len(m)-1+b+1)] == m):\n\t\treturn \"YES\"\n\telse:\n\t\treturn \"NO\"\n\ns = input()\nif(check(parseString(s), \"B\")):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n"], "213": ["R, B = map(int, input().split())\n\nspaces = []\nfor i in range(B):\n\tspaces.append(list(map(int, input().split())))\n\ngraph = {}\nfor pos, spaces in spaces:\n\tif pos in graph:\n\t\tgraph[pos].append(spaces.index(pos))\n\telse:\n\t\tgraph[pos] = [spaces.index(pos)]\n\nbase_count = 0\nfor pos, count in list(graph.items()):\n\tfor base in count:\n\t\tif base[1] == pos:\n\t\t\tbase_count += 1\n\nif base_count == R:\n\tprint('Yes')\nelse:\n\tprint('No')\n", "import math\nimport sys\nR, B = map(int, input().split())\nmat = []\nfor _ in range(B):\n\tx, y = map(int, input().split())\n\tmat.append([x, y])\ndef isPossible(mat, y):\n\tfor i in range(len(mat)):\n\t\tif not ((mat[i][0]!= y[i]) and (mat[i][1]!= y[i])):\n\t\t\treturn False\n\treturn True\n\nif isPossible(mat, 1):\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n", "r, b = [int(i) for i in input().split()]\n\nspaces = []\nfor _ in range(b):\n\tspaces.append([int(i) for i in input().split()])\n\ndef find_spaces(x, y):\n\treturn spaces[x][y]\n\n\ndef union_spaces(x, y):\n\ts = find_spaces(x, y)\n\tt = find_spaces(s[0], s[1])\n\tif s == t:\n\t\treturn\n\telse:\n\t\tspaces[s[0]][s[1]] = s[1]\n\nfor x in spaces:\n\tif not find_spaces(x[0], x[1]):\n\t\tprint(\"No\")\n\t\tquit()\n\nprint(\"Yes\")\n", "r, b = map(int, input().split())\n\nmatrix = []\nfor _ in range(b):\n\tmatrix.append(list(map(int, input().split())))\n\nparent = [-1] * r\ndef find(a):\n\tif parent[a] == -1:\n\t\treturn a\n\telse:\n\t\tparent[a] = find(parent[a])\n\t\treturn parent[a]\n\ndef union(a, b):\n\ta = find(a)\n\tb = find(b)\n\tif a!= b:\n\t\tparent[b] = a\n\nfor i in range(r):\n\tfor j in range(i + 1, r):\n\t\tmatrix[i][j] = matrix[j][i] = 1000000001\n\nresult = True\nfor i in range(r):\n\tfor j in range(i + 1, r):\n\t\tif find(i) == find(j) and len(matrix[i]) == len(matrix[j]):\n\t\t\tresult = result or union(i, j)\n\nif result:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n", "a, b = list(map(int, input().split()))\nls = []\nfor i in range(b):\n\tls.append(list(map(int, input().split())))\nls.sort()\n\nd = {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 0: 0}\nst = [i for i in range(b)]\nfor i in range(8):\n\tfor j in range(i+1, b):\n\t\tif ls[j][0] in d[i]:\n\t\t\td[i] += 1\n\t\t\tif d[i] > a:\n\t\t\t\tbreak\n\t\tif ls[j][1] in d[i]:\n\t\t\td[i] -= 1\n\t\t\tif d[i] < 0:\n\t\t\t\tbreak\n\tif i == b - 1:\n\t\tprint(\"Yes\")\n\t\tbreak\nelse:\n\tprint(\"No\")\n", "r, b = [int(i) for i in input().split()]\ndef solve(matrix, r):\n\t#print(matrix)\n\tvisited = {tuple(matrix)}\n\n\twhile len(visited)!= r:\n\t\tfor i in range(len(matrix)):\n\t\t\tx, y = tuple(matrix[i])\n\t\t\tif x in visited or y in visited:\n\t\t\t\tcontinue\n\t\t\tif not 0 <= x < r or not 0 <= y < b:\n\t\t\t\tcontinue\n\t\t\tvisited.add(tuple(x))\n\t\t\tvisited.add(tuple(y))\n\t\t\tmatrix[i][x] = 0\n\t\t\tmatrix[i][y] = 0\n\t\tr -= 1\n\treturn\n\n\nfor i in range(b):\n\tmatrix = []\n\tx, y = [int(j) for j in input().split()]\n\tmatrix.append(x)\n\tmatrix.append(y)\n\tif solve(matrix, b):\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n"], "214": ["from collections import Counter\nn,m=map(int,input().split())\nc=Counter([abs(x-y)for x,y in zip(list(range(1,n+1)),list(range(1,m))])\nif(c[0]>=0):\n\tprint(n-c[0])\nelse:\n\tprint(n+m-c[0])\n", "n, m = input().split()\nn = int(n)\nm = int(m)\n\nans = 0\ni = 0\n\nwhile i < 100000:\n\tif n == m:\n\t\tans += 1\n\t\ti += 1\n\telif n > m:\n\t\tans += m - n\n\t\ti += 1\n\telse:\n\t\ti += 1\n\nprint(ans)\n", "a, b = input().split()\nassert(len(a) == 2)\n\ncnt = 0\n\nwhile a[1]!= b:\n\ta, b = b, a[1]\n\tcnt += 1\n\nprint(cnt)\n", "#!/usr/bin/env python3\n\ndef main():\n\tn, m = list(map(int, input().split()))\n\tprev = 1\n\tmult = 1\n\twhile True:\n\t\tif m == n: break\n\t\tif m < n:\n\t\t\tm = m * 2 - 1\n\t\tif m < prev:\n\t\t\tmult = mult + 1\n\t\tprev = m\n\tprint(mult)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "m,n=list(map(int,input().split()))\na=m\nc=1\nwhile a>=n:\n\ta=a//2\n\tc+=1\nprint(c)\n", "m,n = [int(i) for i in input().split()]\nl=[]\nwhile m>=n:\n\tif m>n:\n\t\tm=m-n\n\tl.append(m)\n\tn=n-m\nif l[0]==0:\n\tprint(len(l))\nelse:\n\tprint(len(l))\n"], "215": ["def main():\n\tfrom sys import stdin, stdout\n\tinput = stdin.readline\n\tprint = stdout.write\n\t\n\tn = int(input())\n\tr = list(map(int, input().split()))\n\tans = 0\n\ts = [0] * 10000001\n\tfor i in r:\n\t\ts[i - 1] += 1\n\t\tif s[i - 1] > 100:\n\t\t\ts[i - 1] = s[i] + 100\n\tl = [0] * 10000001\n\tcnt = 0\n\tfor i in range(n):\n\t\tl[r[i] - 1] = 1\n\t\tif l[r[i] - 1] > 100:\n\t\t\tl[r[i] - 1] = l[r[i]] + 100\n\t\tcnt = max(cnt, s[i])\n\t\tif cnt == 0:\n\t\t\tans = i + 1\n\tprint(ans)\n\n\nmain()\n", "n=int(input())\nA=list(map(int,input().split()))\nm=0\nfor i in range(n):\n\tA[i]=A[i]+A[i]\n\tif A[i]>100:\n\t\tm=i+1\n\t\t\nif m==0:\n\tprint(0)\nelse:\n\tprint(m)\n", "from collections import defaultdict\nn = int(input())\nr = [int(x) for x in input().split()]\nc = defaultdict(lambda:0)\ns = 0\nq = []\nans = 0\nfor i in range(n):\n\tt = 0\n\trv = r[i]\n\twhile s + t < rv:\n\t\ts += 1\n\t\tq.append(s)\n\t\tt = rv // t\n\tif t - s > 100:\n\t\tans = max(ans, (t - s) % 1440)\n\tc[rv] += 1\nprint(ans)\n", "def main():\n\tfrom sys import stdin, stdout\n\tinput = stdin.readline\n\tprint = stdout.write\n\tfor _ in range(int(input())):\n\t\tr = list(map(int, input().split()))\n\t\tls = [0] * 100005\n\t\tcnt = [0] * 200001\n\t\tfor i, r in enumerate(r):\n\t\t\tls[r] += 1\n\t\t\tcnt[r] += 1\n\t\tans = 0\n\t\tfor i in range(1, 200001):\n\t\t\tif ls[i] < i:\n\t\t\t\tans = max(ans, cnt[i])\n\t\tans = max(ans, max(cnt))\n\t\tprint(ans)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "from sys import stdin\ninput = stdin.readline\n\nn = int(input())\nr = map(int, input().split())\nl = [0] * n\n\ndp = [0] * 1000000\ncs = [0] * n\ncnt = [0] * 1000000\n\nfor i in r:\n\tcs[i] += 1\n\tcnt[i] += 1\n\nmax_cnt = 0\ns = 0\nfor i in range(n - 1):\n\tif cs[i + 1]!= cs[i]:\n\t\ts += 1\n\tif s + cnt[i] > 1000000:\n\t\tmax_cnt = max(max_cnt, cnt[i])\n\t\n\tif cnt[i] > max_cnt:\n\t\tmax_cnt = cnt[i]\n\t\t\ns = 0\ncs = [0] * n\ncnt = [0] * 1000000\n\nfor i in range(n - 1, -1, -1):\n\tif cs[i + 1]!= cs[i]:\n\t\ts += 1\n\tif s + cnt[i] > 1000000:\n\t\tmax_cnt = max(max_cnt, cnt[i])\n\t\n\tif cnt[i] > max_cnt:\n\t\tmax_cnt = cnt[i]\n\t\n\nprint(max_cnt)\n", "# -*- coding: utf-8 -*-\n\nimport sys\nfrom bisect import bisect_left\n\nn = int(sys.stdin.readline())\ns = list(map(int, sys.stdin.readline().split()))\n\nm = 100000000\npre = [0] * m\nprev = [0] * m\n\nfor i in range(n):\n\ta = s[i]\n\ti += 1\n\tpre[i] = bisect_left(prev, a)\n\tprev[i] = a\n\nans = 0\ncnt = 0\nfor i in range(m - 1, -1, -1):\n\tcur = pre[i]\n\tif cur > m:\n\t\tans += 1\n\tif prev[i] - cur > 100:\n\t\tans += 1\n\tcnt += 1\n\tif cnt == m:\n\t\tans += 1\n\nprint(ans)\n"], "216": ["# cook your dish here\n\ndef getCombinations(arr, n, d):\n\tarr.sort()\n\tarr2 = []\n\ttotal = 0\n\tfor i in range(n):\n\t\tfor j in range(i+1, n+1): \n\t\t\t#print(arr[i], arr[j])\n\t\t\ttotal += arr[i] + arr[j]\n\t\tarr2.append(total)\n\treturn arr2\n\ndef main():\n\tN, X, D = list(map(int, input().split()))\n\tarr = [0]*(N+1)\n\tA = [0]*(N+1)\n\tfor i in range(N):\n\t\tarr[i+1] = int(input())\n\t\tA[i+1] = arr[i]\n\tans = 0\n\tfor i in range(N+1):\n\t\tans += getCombinations(arr, i, D)\n\tprint(ans)\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n, d = map(int, input().split())\np = []\na = list(map(int, input().split()))\nfor i in range(n):\n\tp.append(a[i] + d)\n\np.sort()\ns = n * (n - 1) // 2\nans = n * s\nfor i in p:\n\tans -= i * d\nprint(ans)\n", "N,D=map(int,input().split())\np=[]\na=list(map(int,input().split()))\nfor i in range(N):\n\tp.append((a[i]+D,i+1))\np.sort()\ns=0\nt=0\nfor i in range(len(p)):\n\tif p[i][0]==1:\n\t\ts+=p[i][1]\n\telse:\n\t\tt+=p[i][1]\nif s<t:\n\tprint((-1))\nelse:\n\timport sys\n\tinput=sys.stdin.readline\n\tprint(t-s)\n", "from math import factorial\nn,k=map(int,input().split())\ns=list(map(int,input().split()))\nk=k-(n)\nx=factorial(n)//(factorial(n-k)*factorial(k))\nfor i in range(n):\n\tif i<k:\n\t\tbreak\n\ts[i]+=x\nprint(s.count(0))\n", "def get_dp():\n\tN, D = map(int, input().split())\n\tdp = [[0 for i in range(N)] for j in range(N)]\n\tdp[0][0] = 1\n\tfor i in range(1, N):\n\t\tdp[i][0] = 1\n\t\tfor j in range(1, N):\n\t\t\tdp[i][j] = dp[i-1][j-1] + dp[i-1][j]\n\treturn N - D * sum(dp[N-1])\n\nN, D = map(int, input().split())\nget_dp()\nprint(get_dp())\n", "import math\ndef comb(n):\n\treturn n**2 // math.factorial(n)\n\t\nN,D = list(map(int,input().split()))\na = list(range(N+1))\nans = 0\nfor i in a:\n\tif i + D <= N:\n\t\tans += comb(i + D)\n\telse:\n\t\tbreak\nans += (D * (i + D))\nprint(ans)\n"], "217": ["s=bin(int(input()))\nans=0\nn=len(s)\nfor i in range(n-1,-1,-1):\n\tif(s[i]=='0'):\n\t\tcontinue\n\tans+=1\n\ts=s[:i+1]+'1'+s[i+1:]\nif(s[0]=='1'):\n\tans-=1\nprint(ans)\n", "s = bin(input())\n\nok = 0\nfor i in range(1, len(s)):\n\tif s[i] == '0':\n\t\tok += 1\n\nif ok == 0:\n\tprint(0)\nelse:\n\ti = 0\n\tok = 0\n\twhile i < len(s):\n\t\tif s[i] == '1':\n\t\t\tok += 1\n\t\ti += 1\n\tprint(ok - 1)\n", "s = input()\nn = len(s)\nc = 0\nfor i in range(n):\n\tif(s[i] == '0'):\n\t\tcontinue\n\tc += 1\n\tfor j in range(i+1, n):\n\t\tif(s[j] == '1'):\n\t\t\tbreak\n\t\tif(s[i]!= s[j]):\n\t\t\tc += 1\nprint(c)\n", "# -*- coding: utf-8 -*-\n\nimport bisect\nimport heapq\nimport math\nimport random\nimport sys\nfrom collections import Counter, defaultdict, deque\nfrom decimal import ROUND_CEILING, ROUND_HALF_UP, Decimal\nfrom functools import lru_cache, reduce\nfrom itertools import combinations, combinations_with_replacement, product, permutations\nfrom operator import add, mul, sub\n\nsys.setrecursionlimit(100000)\n\n\ndef read_int():\n\treturn int(input())\n\n\ndef read_int_n():\n\treturn list(map(int, input().split()))\n\n\ndef read_float():\n\treturn float(input())\n\n\ndef read_float_n():\n\treturn list(map(float, input().split()))\n\n\ndef read_str():\n\treturn input().strip()\n\n\ndef read_str_n():\n\treturn list(map(str, input().split()))\n\n\ndef error_print(*args):\n\tprint(*args, file=sys.stderr)\n\n\ndef mt(f):\n\timport time\n\n\tdef wrap(*args, **kwargs):\n\t\ts = time.time()\n\t\tret = f(*args, **kwargs)\n\t\te = time.time()\n\n\t\terror_print(e - s,'sec')\n\t\treturn ret\n\n\treturn wrap\n\n\n@mt\ndef slv(S):\n\te = 0\n\tfor k in range(32):\n\t\tif S[k] == '1':\n\t\t\te += 1\n\treturn e + sum(1 << k for k in range(30, -1, -1))\n\n\ndef main():\n\t", "s=int(input())\nc=0\nfor i in range(len(s)):\n\tif s[i]==\"1\":\n\t\tfor k in range(10):\n\t\t\tif s[i:i+k]==\"0\":\n\t\t\t\tbreak\n\t\t\tc+=1\nprint(c)\n\n", "s = input()\nans = 0\nfor i in range(len(s)):\n\tif s[i] == '0': continue\n\tif s[i] == '1':\n\t\tans += 1\n\t\tcontinue\n\tc = int(s[i: i+2])\n\tif c == 1:\n\t\tans += 1\nprint(ans)\n"], "218": ["import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\na = [list(map(int, input().split())) for i in range(n)]\n\ncnt = 1\nb = [[a[i][j] for i in range(m)] for j in range(n)]\nprev = [[0 for i in range(m)] for j in range(n)]\nfor i in range(n):\n\tfor j in range(m):\n\t\tif i == 0 and j == 0:\n\t\t\tb[i][j] = cnt\n\t\telif i == 0:\n\t\t\tb[i][j] = cnt\n\t\telif j == 0:\n\t\t\tb[i][j] = cnt\n\t\telse:\n\t\t\tcnt += 2\n\t\t\tb[i][j] = cnt\n\nif m % 2 == 0:\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif i%2 == 0:\n\t\t\t\tif b[i][j] == prev[i][j]:\n\t\t\t\t\tb[i][j] -= 1\n\t\t\telse:\n\t\t\t\tif b[i][j] == prev[i][j+1]:\n\t\t\t\t\tb[i][j] -= 2\n\t\t\tprev[i][j] = b[i][j]\nif m == 1:\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif i%2 == 1:\n\t\t\t\tif b[i][j] == prev[i][j]:\n\t\t\t\t\t", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nfrom collections import defaultdict\n\n\ndef solve(n, m, a):\n\td = defaultdict(int)\n\tr = iter(a)\n\tfor i in range(n):\n\t\td[r[i].count(1)] += 1\n\tc = iter(r)\n\thalf = list(range(1, 2 * n + 1))\n\tfor i in half:\n\t\tc.append(i)\n\tc.extend(r)\n\tr = [c[0]]\n\tfor i in range(1, n):\n\t\tr.append(r[-1][c[i]] + c[i])\n\tif any(s for s, _ in d.items() if s):\n\t\treturn 1\n\n\treturn sum(n * m for n, m in zip(r, r[1:] + [half]))\n\n\ndef __starting_point():\n\tn, m = list(map(int, input().split()))\n\ta = list(map(int, input().split()))\n\tprint(solve(n, m, a))\n\n__starting_point()\n", "def read_int():\n\treturn int(input())\n\n\ndef read_ints():\n\treturn list(map(int, input().split(' ')))\n\n\nn, m = read_ints()\na = []\nfor i in range(n):\n\ta.append(read_int())\n\na.sort()\n\ndef comp(a[i][j], a[i][-j-1]):\n\treturn i + j if a[i][i] == a[i][-j-1] else -i + j\n\n\ni = 1\nj = 2\nans = n\nwhile i <= n:\n\twhile i <= n - i - 1 and j <= m - j - 1:\n\t\tans -= 2\n\t\ti += 1\n\t\tj += 2\n\ti += 1\n\tj += 2\n\nprint(ans)\n", "n, m = map(int, input().split())\nr = c = d = 0\nfor _ in range(n):\n\tt = list(map(int, input().split()))\n\tr += len(t)\n\tc += len(t) + 1\n\tif c % 2:\n\t\td += 1\n\tif r % 2:\n\t\td += 1\nprint(r + d)\n", "n, m = list(map(int, input().split()))\na = []\nfor i in range(n):\n\ta.append(list(map(int, input().split())))\n\nk = 2 * n\n\nfor i in range(n):\n\tfor j in range(m):\n\t\tif a[i][j] % 2 == 1:\n\t\t\tk -= 1\n\nk //= 2\n\nc = [[0] * k for i in range(n)]\n\nfor i in range(n):\n\tfor j in range(m):\n\t\tc[i][j] = a[i][j]\n\nfor i in range(n):\n\tfor j in range(m - 1):\n\t\tc[i + 1][j] += c[i][j + 1] - c[i + 1][j]\n\nfor i in range(n):\n\tfor j in range(m - 2, -1, -1):\n\t\tc[i][j] += c[i + 1][j] - c[i][j]\n\nc *= 2\n\nfor i in range(n):\n\tfor j in range(m):\n\t\tif c[i][j] == k:\n\t\t\tbreak\n\nprint(j * m // 2)\n\n", "import sys\n\ndef readline():\n\treturn list(map(int,sys.stdin.readline().split()))\n\nn,m=readline()\na=[]\nfor i in range(n):\n\ta.append(list(readline()))\na.append([0]*(m+2))\nc=0\nfor i in range(n):\n\tfor j in range(m):\n\t\tc+=1\n\t\tif a[i][j]==1:\n\t\t\ta[i][j]*=-1\nprint(c)\n"], "219": ["#!/usr/bin/env python3\nimport sys\n\ndef input():\n\treturn sys.stdin.readline().strip()\n\ndef main():\n\tn = int(input())\n\tl_time = list(map(int, input().split()))\n\tr_time = list(map(int, input().split()))\n\tl_end, r_end = [], []\n\tfor i in range(n):\n\t\tl_time[i], r_time[i] = l_time[i], r_time[i]\n\t\tl_end.append(l_time[i])\n\t\tr_end.append(r_time[i])\n\tl_time = list(set(l_time))\n\tr_time = list(set(r_time))\n\tr_time = sorted(r_time)\n\tend = 0\n\tres = 0\n\tfor i in range(n):\n\t\tif l_time[i] <= r_time[i]:\n\t\t\tres += 1\n\t\t\tend = i + 1\n\t\tif i!= end:\n\t\t\tend = i\n\tprint(res)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def solve(l, r):\n\tn = len(l)\n\tdp = [0 for i in range(n + 1)]\n\t\n\tfor i in range(n):\n\t\tl[i], r[i] = map(int, input().split())\n\t\t\n\t\tif l[i] > r[i]:\n\t\t\tdp[i+1] = dp[i] + 1\n\t\telse:\n\t\t\tdp[i+1] = dp[i]\n\t\n\treturn dp[n]\n\t\ndef __starting_point():\n\tn = int(input())\n\tl = list(map(int, input().split()))\n\tr = list(map(int, input().split()))\n\tprint(solve(l, r))\n__starting_point()\n", "# https://codeforces.com/problemset/problem/555/A\nfrom sys import stdin\n\n__author__ = 'artyom'\n\n\ndef read_int():\n\treturn list(map(int, stdin.readline().strip().split()))[0]\n\n\ndef read_int_ary():\n\treturn map(int, stdin.readline().strip().split())\n\n\nn = read_int()\n\nres = 0\n\nfor i in range(n):\n\tl, r = read_int_ary()\n\top = 0\n\tif r < l:\n\t\top += 1\n\tif op == n:\n\t\tbreak\n\tres += 1\n\nprint(res)\n", "from sys import stdin\ninput=stdin.readline\nfrom collections import defaultdict as dd\nimport math\ndef geti(): return list(map(int, input().split()))\ndef getl(): return list(map(int, input().split()))\ndef gets(): return input()\ndef geta(): return int(input())\ndef print_s(s): stdout.write(s+'\\n')\n\ndef solve():\n\tn=geta()\n\tnum=dd(int)\n\tans=0\n\tfor i in range(n):\n\t\tl,r=geti()\n\t\tif num[(l,r)]:\n\t\t\tnum[(l,r)]+=1\n\t\t\tans=max(ans,num[(l,r)])\n\treturn ans+1\n\ndef __starting_point():\n\tprint_s('solve()')\n\n__starting_point()\n", "n = int(input())\norder = [list(map(int, input().split())) for i in range(n)]\n\nstart_time = []\nfinish_time = []\n\nfor i in range(n):\n\tl, r = order[i]\n\tstart_time.append(l)\n\tfinish_time.append(r)\n\nmax_order = 0\nsame_time = 0\nfor t in start_time:\n\tif t == finish_time[-1]:\n\t\tsame_time = 1\n\telse:\n\t\tmax_order = max(max_order, same_time+1)\n\t\tsame_time = 1\n\nfor i in range(2, n+1):\n\tl, r = order[i]\n\tstart_time.append(l)\n\tfinish_time.append(r)\n\tif start_time[i] == finish_time[i]:\n\t\tsame_time += 1\n\telse:\n\t\tmax_order = max(max_order, same_time)\n\t\tsame_time = 1\n\nprint(max_order)\n", "n=int(input())\ny=[]\nfor i in range(n):\n\tl,r=map(int,input().split())\n\ty.append([l,r])\ny.sort()\ns=0\nj=0\nfor i in range(n):\n\tif y[i][0]>=y[i][2]:\n\t\ts+=1\n\t\tj=i\n\t\tbreak\nprint(s)\n"], "220": ["# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/19 21:52\n\nLet's make a new table: P^(n) = min_X\n\"\"\"\n\nN = 1000003\nsieve = [True] * (N + 1)\nfor i in range(2, int(N ** 0.5) + 1):\n\tif sieve[i // 2]:\n\t\tsieve[i*i // 2::i] = [False] * ((N-i*i-1) // (2*i) + 1)\n\nX = [i for i in range(N)]\ns = [0, 1]\n\ndef merge(L, R):\n\ta, b = min(L), max(R)\n\tNewL = l[:]\n\tNewR = r[:]\n\tfor i in NewL:\n\t\tfor j in NewR:\n\t\t\ta = bisect.bisect_left(NewL, i)\n\t\t\tb = bisect.bisect_right(NewR, j)\n\t\t\tif a == b:\n\t\t\t\tNewL[a], NewR[b] = i, j\n\t\t\telse:\n\t\t\t\tNewL[a], NewR[b] = NewR[b], i\n\treturn NewL\n\ndef prime(N):\n\tfor i in range(2, int(math.sqrt(N)) + 1):\n\t\tif N % i == 0:\n\t\t\treturn False\n\treturn True\n\nprime_index = [i for i", "from math import sqrt\n\ndef factorize(n):\n\tf = {}\n\tfor i in range(2, int(sqrt(n))+1):\n\t\tif n % i == 0:\n\t\t\tf[i] = 0\n\t\t\tf[n//i] = 1\n\treturn f\n\n\nn = int(input())\n\nif n == 1:\n\tprint(1)\nelse:\n\tprint(factorize(n)[n-1])\n", "N = 1000003\nprimes = [2,3,5,7,11,13,17,19,23,29]\n\ndef find_exact(n):\n\tfor i in primes:\n\t\tif i * 2 > n:\n\t\t\tbreak\n\t\tif n % i == 0:\n\t\t\treturn i\n\treturn n\n\nm = N\np = 1000003\nx = int(input())\nprint(find_exact(x))\n", "from math import sqrt\n\ndef factorize(n):\n\tf = []\n\tfor i in range(2, int(sqrt(n)) + 1):\n\t\tif n % i == 0:\n\t\t\tf.append(i)\n\t\t\tif len(f) > 2:\n\t\t\t\tbreak\n\treturn f\n\n\nn = int(input())\nx0 = int(sqrt(n))\n\nf0 = factorize(n)\nf1 = factorize(n // factorize(n // factorize(n))))\n\nif len(f0) == 1:\n\tprint(f0[0])\nelif len(f0) == 2:\n\tprint(f0[0] + f1[0])\nelif len(f1) == 1:\n\tprint(f1[0])\nelse:\n\tf0.sort()\n\tf1.sort()\n\tprint(f0[0] + f1[0])\n", "def select_next(n):\n\tn = n // 2\n\ttemp = n\n\tif n == 1:\n\t\treturn temp\n\tif n % 2 == 0:\n\t\tn = n - 1\n\tfor j in range(3, int(n ** 0.5) + 1):\n\t\tif n % j == 0:\n\t\t\tn = n // j\n\t\t\ttemp = j\n\tif n == 1:\n\t\treturn temp\n\treturn temp - 1\n\n\nn = int(input())\nprint(select_next(n))\n", "x = int(input())\n\nl = []\n\nfor i in range(2, x):\n\tif x % i == 0:\n\t\tl.append(i)\n\nl.sort()\n\nm = l[0]\n\nidx = 0\n\nans = 0\n\nfor i in range(1, len(l)):\n\ttemp = 1\n\twhile l[idx] < l[i]:\n\t\ttemp *= i\n\t\tif temp < m:\n\t\t\tm = temp\n\t\t\tidx = i\n\tans += i - m\n\nprint(ans)\n"], "221": ["n, k = map(int, input().split())\nnum = str(input())\ncnt, a = 0, 0\nfor i in range(len(num)):\n\ta += 1\n\tif num[i] == '0':\n\t\tcnt += 1\n\t\tif a > k:\n\t\t\tbreak\n\tcnt -= 1\nans = num[0]\nfor i in range(1, len(num)):\n\tans += num[i]\n\tif a > k:\n\t\tbreak\nprint(ans)\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\n# sys.stdin = open('input.txt', 'r')\n# sys.stdout = open('output.txt', 'w')\n\nn,k=list(map(int,input().split()))\ns=input().strip()\nans=\"\"\nfor i in range(len(s)):\n\tif(s[i]=='0'):\n\t\tcontinue\n\telse:\n\t\tans+=s[i]\nif(len(s)>0 and ans!=\"\":\n\t\tans+=\"0\"\nprint(int(ans))\n", "n, k = map(int, input().split())\ns = input()\ncnt = 0\nans = 0\nfor d in range(1, min(10, 10**(k-1)) + 9):\n\tfor i in range(10):\n\t\tif s[i] == '0':\n\t\t\tcnt += 1\n\t\t\tif cnt > k:\n\t\t\t\tbreak\n\t\telse:\n\t\t\tans += d*(10**(k-cnt-1))\n\t\t\tbreak\nans += s[0] * (n-len(s))\nprint(ans)\n", "n, k = map(int, input().split())\n\ns = str(input())\n\nl = len(s)\n\nfor i in range(l):\n\tfor j in range(10):\n\t\ts = s[:i+1] + str(j) + s[i+1:]\n\t\tif s.count('0') > k:\n\t\t\tbreak\n\nprint(int(s))\n", "n, k = list(map(int, input().split()))\ns = input()\nc = 0\ni = 0\n\nwhile i < n:\n\tif s[i] == '0':\n\t\tc += 1\n\t\ti += 1\n\t\tcontinue\n\tc = 0\n\tif i + 1 < n and s[i + 1] == '0':\n\t\ti += 2\n\ni = n\nwhile i < n:\n\tif s[i] == '0':\n\t\tc += 1\n\t\ti += 1\n\t\tcontinue\n\tc = 0\n\tif i + 1 < n and s[i + 1]!= '0':\n\t\ti += 2\n\nprint(s[-c:])\n", "from sys import stdin\nn, k = map(int, stdin.readline().split())\ns = str(stdin.readline())\ncnt = 0\nf = True\nans = []\nfor i in range(len(s)):\n\tcnt += 1\n\tch = s[i]\n\tif ch == '0':\n\t\tf = False\n\t\tans.append(cnt)\n\t\tcnt = 0\n\t\tif len(s) > i + 1:\n\t\t\tch = s[i + 1]\n\t\t\tans.append(cnt)\nans.reverse()\nif not f:\n\tprint(0)\nelse:\n\ti = 0\n\twhile i < len(ans) and ans[i]!= 0:\n\t\ti += 1\n\tprint(ans[i])\n"], "222": ["from math import gcd\nfrom collections import deque\nimport heapq\n\nnumbers = tuple(map(int, input().split()))\n\nque = [[] for i in range(max(numbers)+2)]\nfor i in range(2, len(numbers)):\n\tif numbers[i] == 1:\n\t\tque[0].append(i)\n\nfor i in range(len(que)):\n\tprime = deque[0].pop()\n\tfor a in que:\n\t\tif gcd(a, prime) == 1:\n\t\t\tbreak\n\t\telse:\n\t\t\tque[a].append(prime)\n\npairs = set()\nfor i in range(len(que)):\n\tfor j in range(len(que[i])):\n\t\tif i < j and numbers[i] * numbers[j] in pairs:\n\t\t\tcontinue\n\t\tpairs.add(numbers[i] * numbers[j])\n\nans = 0\nfor i in range(len(que)):\n\tans += que[i][0]\n\tfor j in range(i+1, len(que)):\n\t\tif que[j][0] == que[i][0]:\n\t\t\tans += que[j][1]\n\t\telse:\n\t\t\tbreak\n\nprint(ans)\n\n\t\n\t\n\n", "import sys\n\ndef prime(n):\n\ti = 3\n\tif n == 2:\n\t\treturn True\n\tif n % 2 == 0:\n\t\treturn False\n\tsqr = int(n ** 0.5) + 1\n\tfor j in range(2, sqr):\n\t\tif n % j == 0:\n\t\t\treturn False\n\treturn True\n\nn1, n2, x, y = list(map(int, sys.stdin.readline().split()))\n\np = [i for i in range(1, x + 2)]\n\ndef divide(p, i):\n\tresult = 0\n\tfor j in p:\n\t\tresult += i // j\n\treturn result\n\nps = sorted(list(set(p)))\n\ndef presents(x, y):\n\tdelta = y - x\n\treturn ps[delta // 2] + x\n\ntotal = presents(n1, n2) + divides(n1, n2)\n\nsys.stdout.write(str(total))\n", "\nn1 = input()\nn2 = input()\nc1 = [int(i) for i in n1.split(' ')]\nc2 = [int(i) for i in n2.split(' ')]\n\nn = 3\nok = False\nwhile n <= 4:\n\tif len(c1) < 2:\n\t\tok = True\n\t\tbreak\n\ti = 2\n\twhile i * i <= n:\n\t\tif n % i == 0:\n\t\t\ti += 2\n\t\telse:\n\t\t\tn //= i\n\t\t\tif i!= 2:\n\t\t\t\tok = False\n\t\t\tbreak\n\ti += 1\n\nif not ok:\n\tprint(2 * c1[0] + c2[1])\nelse:\n\t#print(c1, c2)\n\tcur = 0\n\tfor i in range(2, 4):\n\t\tif i * i > n:\n\t\t\tbreak\n\t\tif not cur:\n\t\t\tcur += 1\n\t\telif i % 2 == 0:\n\t\t\tc1[i] += 1\n\t\telse:\n\t\t\tc2[i] += 1\n\tprint(n - max(c1[-1], c2[-1]))\n", "cnt1 = [0]*100000\ncnt2 = [0]*100000\ncnt1[1] = 1\nfor i in range(2,100000):\n\tif cnt1[i]:\n\t\tfor j in range(i*i,100000,i):\n\t\t\tcnt1[j] += 1\n\t\tcnt2[i] += 1\n\nn = int(input())\nfor i in range(n):\n\tprint(cnt1[i]+cnt2[i])\n", "from math import gcd, sqrt\ncnt1, cnt2, x, y = map(int, input().split())\nlcm = x*y//gcd(x,y)\n\ndef mix(arr,i,n):\n\tres = 1\n\tfor j in range(i, n//i):\n\t\tres*=arr[j]\n\tfor j in range(i, n//i+1):\n\t\tres*=arr[j]\n\treturn res\n\nd = {}\nfor i in range(2, int(sqrt(lcm))+1):\n\td[i] = 0\n\tif not lcm%i:\n\t\td[i] = 1\n\nfor i in range(2, cnt1+1):\n\tg = mix(cnt1, i, cnt1)\nfor i in range(2, cnt2+1):\n\tg = mix(cnt2, i, cnt2)\n\tif g in d:\n\t\tcontinue\n\td[g] = 1\n\nk = max(cnt1, cnt2)\nresult = 0\nfor i in range(k, 2*k+1):\n\tif d[i] == 0:\n\t\tresult += i\n\nprint(result)\n", "import sys\n\ndef debug(x, table):\n\tfor name, val in table.items():\n\t\tif x in val:\n\t\t\tprint('DEBUG:{} -> {}'.format(name, val[x]))\n\t\t\treturn None\n\ndef solve():\n\tcnt1, cnt2, x, y = list(map(int, input().split()))\n\tsmall_primes = [x]\n\tlarge_primes = []\n\tfor p in range(2,15):\n\t\tif p*p > y:\n\t\t\tbreak\n\t\tif not any(p%x for x in small_primes):\n\t\t\tsmall_primes.append(p)\n\t\tif not any(p%y for x in large_primes):\n\t\t\tlarge_primes.append(p)\n\tdebug('small_primes', small_primes)\n\tdebug('large_primes', large_primes)\n\tlpn, pln = len(small_primes), len(large_primes)\n\tres = list(large_primes) + [1]*(lpn-len(small_primes))\n\t# print(res)\n\n\tfor friend in range(len(large_primes)-1):\n\t\tx = (cnt1-cnt2+cnt1) // (x-1) \n\t\tres[friend] = x\n\t\t# debug(x, 'large_primes', x)\n\t\tlpn -= 1\n\t\tif lpn == 0:\n\t\t\tbreak\n\n\t# print(res)\n\tfor friend in range(len(small_primes)-1):\n\t\ty = (cnt2-cnt1"], "223": ["from math import gcd\n\nn = int(input())\nw = [int(x) for x in input().split()]\n\nw.sort()\nq = w[len(w)-1]\n\nif gcd(q, w[0]) == 1:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "n = int(input())\nw = [int(x) for x in input().split()]\n\nok = True\nif w[0]!= 200:\n\tok = False\nfor i in range(1, n):\n\tif w[i]!= 200:\n\t\tok = False\n\t\tbreak\n\nif ok == True:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "n = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nif a[-1] > a[0]:\n\tprint('NO')\nelse:\n\tprint('YES')\n", "n = int(input())\nw = [int(i) for i in input().split()]\nprint(\"YES\" if sum(w) // 2 == sum(w) // 2 else \"NO\")\n", "#!/usr/bin/env python3\nimport re\n\ndef __starting_point():\n\tn = int(input().strip())\n\tw = list(map(int, input().strip().split()))\n\t\n\tmatches = re.findall(r'(?i)(WEIGHT|OFCOM|CENT)',''.join(w))\n\tif matches:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n__starting_point()\n", "#!/usr/bin/env python3\n\ndef main():\n\tn = input()\n\tw = list(map(int, input().split()))\n\t\n\tthreshold = w[0]\n\tleft = 0\n\tright = len(w) - 1\n\t\n\twhile left < right:\n\t\tmid = (left + right) // 2\n\t\t\n\t\tif sum(w[mid:]) <= threshold:\n\t\t\tthreshold -= sum(w[mid:])\n\t\t\tleft = mid + 1\n\t\telse:\n\t\t\tright = mid\n\t\n\tif threshold >= 0:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "224": ["def main():\n\tn, a, b = list(map(int, input().split()))\n\ta -= 1\n\tm = b // a + 2\n\td = m // b - 1\n\tif m & a:\n\t\tprint(d)\n\telse:\n\t\tprint(d + 1)\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n, a, b = [int(x) for x in input().split()]\ndelta = []\nfor i in range(n):\n\tdelta.append(n - i)\nans = -delta[0] + delta[1]\nfor i in range(len(delta)):\n\tif delta[i] > b:\n\t\tans = i\n\t\tbreak\nprint(ans)\n", "def main():\n\tn, a, b = list(map(int, input().split()))\n\tentrance = b + (n + 2) // 3\n\treturn entrance\n\ndef __starting_point():\n\tprint(main())\n\n__starting_point()\n", "from sys import stdin\n\ndef simplex(n, a, b, op):\n\tr = 0\n\tfor i in range(n):\n\t\tif op(i, b):\n\t\t\tr += 1\n\t\telse:\n\t\t\top(i, b - 1)\n\treturn r\n\ndef main():\n\tn, a, b = [int(x) for x in stdin.readline().split()]\n\tl = b + a - 1\n\tprint(simplex(n, a, b, l))\n\nmain()\n", "def main():\n\tn, a, b = list(map(int, input().split()))\n\tturn = (n + 1) // 2\n\tr = 1 + b * turn\n\tc = turn\n\twhile c:\n\t\tr += a\n\t\tif r < n:\n\t\t\tturn = (n - r) // 2\n\t\telse:\n\t\t\tbreak\n\tprint(r)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def main():\n\tn, a, b = list(map(int, input().split()))\n\tl = list(range(1, n + 1))\n\tentrance = (n + 1) // 2\n\tleft, right = 0, Entrance - a * 2\n\twhile left < Entrance:\n\t\tif l[left] == a:\n\t\t\tright = Entrance - left\n\t\t\tbreak\n\t\telif l[left] < Entrance and (left + 1) % 2 == 0:\n\t\t\tleft += 1\n\t\telse:\n\t\t\tright = Entrance - (left - 1)\n\t\t\tleft = Entrance\n\tprint(right)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "225": ["n, k = map(int, input().split())\n\ns = input().strip()\n\ncount = 0\nfor c in s:\n\tif c == 'a':\n\t\tcount += 1\n\nans = 0\ni = 0\nwhile count <= k and i < n:\n\tcur = s[i]\n\tcnt = 0\n\tj = i + 1\n\twhile j < n:\n\t\tif s[j] == cur:\n\t\t\tcnt += 1\n\t\telse:\n\t\t\tbreak\n\t\tj += 1\n\tif j < n:\n\t\tans = max(ans, cnt)\n\ti += 1\n\nprint(ans)\n", "n, k = map(int, input().split())\ns = input()\n\nlo, hi = 0, len(s) - 1\nwhile lo < hi:\n\tx = s[lo: hi + 1]\n\tcnt = 0\n\tfor c in x:\n\t\tif c == 'a':\n\t\t\tcnt += 1\n\t\telif c == 'b':\n\t\t\tcnt -= 1\n\tif cnt > k:\n\t\tlo = hi + 1\n\telse:\n\t\thi = lo\n\nprint(lo)\n", "n, k = map(int, input().split())\ns = input().strip()\ncnt = 0\nm = 99\nfor i in range(n):\n\tif s[i] == 'b':\n\t\tcnt += 1\n\telse:\n\t\tif cnt <= k:\n\t\t\tpass\n\t\telse:\n\t\t\tcnt -= 1\n\t\t\tm = min(m, cnt)\nif m <= 97:\n\tprint(n)\nelse:\n\tprint(97 + m)\n", "# coding: utf-8\n# Your code here!\nimport sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nn,k = list(map(int,readline().split()))\n\ns = input()\n\nans = ''\n\ncnta = 0\ncntb = 0\n\nfor each in s:\n\tif each=='a':\n\t\tcnta+=1\n\telif each=='b':\n\t\tcntb+=1\n\t\t\nans = max(ans,cnta)\n\nif k>=n:\n\tprint(ans)\n\treturn\n\nnow = 0\nans = max(ans,now)\nfor i in range(1,n):\n\n\tif s[i]==s[i-1]:\n\t\tnow+=1\n\telse:\n\t\tans = max(ans,now)\n\t\tnow = 0\n\t\t\nprint(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n", "n, k = map(int, input().split())\n\ns = input()\n\ncnt = [0] * n\n\nfor c in s:\n\tcnt[ord(c) - ord('a')] += 1\n\nmx = 0\n\nfor i in range(n):\n\tif cnt[i] > k:\n\t\tmx += 1\n\t\tbreak\n\nprint(mx)\n", "n, k = map(int, input().split())\ns = input()\nres = 0\ncnt = 0\nfor i in range(n):\n\tif s[i] == 'a':\n\t\tcnt += 1\n\telse:\n\t\tres = max(res, cnt)\n\t\tcnt = 0\nres = max(res, cnt)\nprint(res)\n"], "226": ["def main():\n\tn = int(input())\n\tif n == 1:\n\t\tprint(1)\n\t\tprint(1)\n\t\treturn\n\tr = 1\n\tfor i in range(2, n + 1):\n\t\tif n // i > 0:\n\t\t\tr += 2 * i\n\tprint(r)\n\tr = main()\n", "n = int(input())\n\nif n % 2 == 0:\n\tprint(2)\nelse:\n\tprint(n//2 + 1)\n\nfor i in range(n//2):\n\tx = i * (i + 1) // 2\n\tif n % i == 0:\n\t\tprint(x)\n\telse:\n\t\tprint(i)\n", "import math\n\ndef CountFrequency(my_list): \n  \n\t# Creating an empty dictionary  \n\tfreq = {} \n\tvec = []\n\tfor item in my_list: \n\t\tif (item in freq): \n\t\t\tfreq[item] += 1\n\t\telse: \n\t\t\tfreq[item] = 1\n\tvec.append(freq)\n\treturn vec\n\t\t\t\nn = int(input())\nans = []\nif (n == 1):\n\tprint(1)\nelse:\n\tfor x in CountFrequency(range(1,n+1)):\n\t\tans.append(x)\n\tprint(len(ans))\n\tfor x in ans:\n\t\tprint(x,end=' ')\n", "n = input()\nif n == 1:\n\tprint(1)\nelse:\n\tprint(2)\n\tfor i in range(3, n + 1):\n\t\tprint(i, end ='')\n\tfor i in range(2, n + 1):\n\t\tprint(i, end ='')\n", "n = int(input())\narr = []\nfor i in range(1, n+1):\n\tarr.append(i)\n\tm = i\n\tc = 1\n\twhile i > 1:\n\t\tif i % 2 == 0:\n\t\t\tm += i\n\t\t\ti = i // 2\n\t\telse:\n\t\t\tc += 1\n\t\t\ti = i // 2\n\tif c == n:\n\t\tarr.append(m)\n\t\tm += 1\n\tprint(m)\nfor i in arr:\n\tprint(i, end ='')\n", "import math\n\ndef CountFrequency(my_list): \n      \n\t# Creating an empty dictionary  \n\tfreq = {} \n\tvec = []\n\tfor item in my_list: \n\t\tif (item in freq): \n\t\t\tfreq[item] += 1\n\t\telse: \n\t\t\tfreq[item] = 1\n\t\n\tfor value in freq.values():\n\t\tvec.append(math.ceil(value/len(my_list)))\n\t\t\t\n\treturn vec\n\t\t\t\n\t\t\ndef main():\n\tn = int(input())\n\tmy_list = [int(i) for i in input().split()]\n\tvec = CountFrequency(my_list)\n\tprint(len(vec))\n\tif len(vec) > 0:\n\t\tfor i in range(len(vec)):\n\t\t\tprint(vec[i], end=\" \")\n\t\tprint()\n\t\n\telse:\n\t\tif n == 1:\n\t\t\tprint(1)\n\t\t\treturn\n\t\t\n\t\tprint(1)\n\t\treturn\n\t\t\n\t\n\t\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "227": ["n = int(input())\nm = int(input())\np = 2 ** n\n\nprint(p % m)\n", "import math\ndef solve():\n\tn = input()\n\tm = int(input())\n\tx = 1\n\ty = 1000000007\n\tans = 0\n\tfor i in range(2, int(math.sqrt(y)) + 1):\n\t\tif y % i == 0:\n\t\t\tx = x * 2\n\t\t\ty = int(y / i) * x\n\t\t\tans = 2 * ans + y\n\tprint(ans)\n\nt = input()\nt = input()\nt = tuple(t)\nsolve()\n", "def oper(a,b):\n\tif b==0:\n\t\treturn a\n\telse:\n\t\treturn b\nn=int(input())\na=list(map(int,input().split()))\nfor i in range(len(a)):\n\tfor j in range(i,len(a)):\n\t\ta[i]=oper(a[i],a[j])\nprint(a[-1][-1])\n", "def main():\n\tn, m = map(int, input().split())\n\tl = [0] * (m + 1)\n\tfor p in range(2, n + 1):\n\t\tl[p] = 2 * l[p - 1]\n\t\tq = p * 2\n\t\twhile q < m:\n\t\t\tl[q] = (l[q] + l[p - 1]) % m\n\t\t\tq = (q + 1) % m\n\tprint(l[n])\n\n\ndef __starting_point():\n\tmain()\n__starting_point()\n", "n = input()\nprint(int(n[:-1]) * 2**int(n[-1]))\n", "a=input()\nb=input()\nc=0\nd=0\ne=0\nimport math\nfor i in range(len(a)):\n\tif a[i]=='0' and b[i]=='0':\n\t\tc=1\n\t\tcontinue\n\telif a[i]=='1' and b[i]=='1':\n\t\td=1\n\t\tcontinue\n\telif a[i]=='2':\n\t\te=i\n\t\tc=i\n\telif a[i]=='3':\n\t\tf=i\n\t\td=2**(f-1)\n\telif a[i]=='4':\n\t\tg=i\n\t\te=2**(g-1)\n\tif c==0 and d==0 and e==0:\n\t\tbreak\nk=math.pow(2,e)\nm=2**e\nprint(m%k)\n"], "228": ["def correct(s, cap):\n\tprev = ''\n\tres = ''\n\tfor c in s:\n\t\tif c in 'aeiouAEIOU':\n\t\t\tprev = c\n\t\t\tif len(prev) > 0:\n\t\t\t\tres += prev[0]\n\t\telse:\n\t\t\tres += c\n\treturn res + cap\n\nn = int(input())\ns = input()\nprint(correct(s, ''.join(list(map(str, list(range(len(s)) - len(prev)))))))\n", "n = int(input())\ns = input().strip()\nvowels = ['a', 'e', 'i', 'o', 'u', 'y']\n\nfor i in range(len(s)):\n\tif s[i] in vowels:\n\t\ts = s[:i] + ''.join(c for c in s[i+1:] if c in vowels) + s[i]\n\nprint(s)\n", "def conv(c):\n\treturn ''.join(['_' if i in 'aeiou' else i for i in c])\nn = int(input())\ns = input()\nconv_s = conv(s)\n\ndef correct(w):\n\treturn ''.join(w[i - conv_s.index(c):i] for i in range(len(w)))\n\nprint(correct(s))\n", "#!/usr/bin/env python3\n\ndef __starting_point():\n\tn = input()\n\ts = input().strip()\n\t\n\tvowels = set(['a', 'e', 'i', 'o', 'u', 'y'])\n\t\n\tvowels = vowels.difference(set(s))\n\t\n\tprint(''.join([\n\t\tx if x in vowels else x\n\t\tfor x in s\n\t]))\n\n__starting_point()\n", "n = int(input())\ns = input()\nfor i in range(n):\n\tif (s[i] in 'aeiouyAEIOUY'):\n\t\ts = s.replace(s[i], 'a')\n\t\t\nprint(s)\n", "n=int(input())\ns=input()\ns=s.replace(\"a\",\"\")\ns=s.replace(\"e\",\"\")\ns=s.replace(\"i\",\"\")\ns=s.replace(\"o\",\"\")\ns=s.replace(\"u\",\"\")\ns=s.replace(\"y\",\"\")\nprint(s)\n"], "229": ["r=int(input())\nfor i in range(r):\n\tif((2**i)%2==1):\n\t\tprint(1,end=\" \")\n\telse:\n\t\tprint(2,end=\" \")\n", "r=int(input())\nif r%2==0:\n\tprint(\"NO\")\nelse:\n\tans=0\n\tfor i in range(r):\n\t\tans=2**i+ans-1\n\t\t\n\tif ans<=((r+1)//2):\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n", "def change_of_name(n):\n\treturn str(n + 1)[::-1]\n\ndef find_smaller(n):\n\tsmaller = n.bit_length()\n\tx = 1 << smaller\n\twhile True:\n\t\tif x == n:\n\t\t\tbreak\n\t\ta = change_of_name(x)\n\t\tif a!= n:\n\t\t\tif smaller > n - a:\n\t\t\t\treturn a\n\t\t\tx = a\n\t\telse:\n\t\t\tsmaller -= 1\n\treturn 'NO'\n\nr = int(input())\nprint(find_smaller(r))\n", "n = int(input())\n\nx = 1\n\nfor i in range(n):\n\tx *= 2\n\t\nif x == 1:\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n\t\n\t\t\t\n", "n=int(input())\nfor i in range(n):\n\ta=int(input())\n\tif a%2!=0:\n\t\tprint(\"NO\")\n\telse:\n\t\tx=a//2\n\t\tif a%2!=0:\n\t\t\tprint(\"NO\")\n\t\telse:\n\t\t\tprint(x,end=\" \")\n\t\t\t\n", "r=int(input())\nif(r==2):\n\tprint(\"1 8\")\nelif(r==3):\n\tprint(\"1 2\")\nelse:\n\tprint(\"NO\")\n"], "230": ["n=int(input())\na=list(map(int,input().split()))\nb=[]\nfor i in range(n):\n\tm=0\n\tfor j in range(2,int(i**0.5)+1):\n\t\tif i%j==0:\n\t\t\tm+=1\n\tif m>0:\n\t\tb.append(i)\n\t\tm=0\nif m>0:\n\tb.append(i)\nprint(len(b))\nfor i in b:\n\tprint(i,end=' ')\n", "def main():\n\tn = int(input())\n\tl = list(map(int, input().split()))\n\tr = [i for i in range(n + 1)]\n\tl.sort()\n\tresult = []\n\tfor i in range(2, n + 1):\n\t\tif l[i]!= 1:\n\t\t\tcontinue\n\t\tk = []\n\t\tfor j in range(i ** 2, n + 1, i):\n\t\t\tk.append(l[j])\n\t\tif len(k) > 0:\n\t\t\tresult.append(k)\n\tprint(len(result))\n\tprint(' '.join(str(i) for i in result))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n=int(input())\nlis=list(map(int,input().split()))\n\nsize=[]\nfor i in range(n):\n\tfor j in range(i+1,n):\n\t\tif lis[i]+lis[j]>2:\n\t\t\tsize.append(lis[i]+lis[j])\nlis.sort()\n\nlis2=[0]*(n-size[0])\nfor i in range(n-size[0]):\n\tlis2[i]=lis[i]+lis2[i-1]\n\nans=[]\nfor i in lis:\n\tfor j in range(i+1,n):\n\t\tans.append(lis2[j])\n\nprint(len(ans))\nprint(*ans)\n", "N = 10 ** 6 + 7\nn = int(input())\na = list(map(int, input().split()))\na.sort()\np = [False] * N\nm = 0\nfor i in range(N):\n\tif p[i]:\n\t\tm += 1\n\t\tk = i\n\t\twhile k + i < N:\n\t\t\tp[k + i] = True\n\t\t\tk += i\nif m > 0:\n\tprint(m)\n\tprint(' '.join(list(map(str, a)) + ['1']]))\n\treturn\nk = N\nm1 = [False] * N\nfor i in range(N):\n\tif a[i]:\n\t\tm1[i] = True\n\t\tk -= 1\ni1 = 0\nwhile i1 < N:\n\tif not m1[i1]:\n\t\tm1[i1] = True\n\t\ti1 += 1\n\tk += i1\ni2, a1 = i1, a[i1]\nm2, b1 = k, b[i2]\nif m1[k]:\n\tm1[k] = [a1]\n\tm1 += a1\nif m2[k]:\n\tm2[k] = b1\n\tm2 += b1\n\nprint(m1[0] + m2[0])\nif not m1[0]:\n\tprint(m1[1])\n\treturn\nprint(m1[1] + m2[1])\n", "import math\n\ndef prime(n):\n\tm = math.ceil(math.sqrt(n))\n\tfor i in range(2, m + 1):\n\t\tif n % i == 0:\n\t\t\treturn False\n\treturn True\n\nn = int(input())\na = list(map(int, input().split()))\n\nif prime(n):\n\ta.extend([2] * (n - 1))\nelse:\n\ta.extend([2] + [2 * i for i in range(3, n + 1, 2)])\n\na = sorted(a)\nprint(len(a))\nif len(a) > 0:\n\tprint(' '.join(str(i) for i in a))\nelse:\n\tprint(' '.join([str(i) for i in a]))\n", "N = 100000\na = [0] + list(range(N))\n\ndef sieve(n):\n\tstart = next(i for i in range(2, n) if a[i] == 1)\n\tprimes = {p for p in range(start, n + 1) if a[p] == 1}\n\treturn set(primes)\n\nsieve(1000)\nprint(1)\nfor i in range(1, N):\n\tprint(i, sieve(i))\n\n\n"], "231": ["n=int(input())\nif n==1:\n\tprint('1')\nelse:\n\tans=0\n\tfor i in range(2,int(n**0.5)+1):\n\t\tk=0\n\t\twhile n%i==0:\n\t\t\tk+=1\n\t\t\tn//=i\n\t\tif k+i>ans:\n\t\t\tans=k+i\n\tprint(ans)\n", "n=int(input())\np=bin(n)\nq=len(p)\nfor i in range(q-1):\n\tif p[i]=='1':\n\t\te=i+1\n\t\tfor j in range(i,e+1,i):\n\t\t\tif p[j]=='1':\n\t\t\t\tp[j:j]='0'\n\t\t\telse:\n\t\t\t\tbreak\n\t\tf=p[:e]\n\t\tg=p[e:]\n\t\tp=f+p[:e]\n\telse:\n\t\te=i+1\n\t\tfor j in range(i,e+1,i):\n\t\t\tif p[j]=='1':\n\t\t\t\tp[j:j]='0'\n\t\t\telse:\n\t\t\t\tbreak\nprint(2**e)\n", "def main():\n\tn = bin(input())\n\tk = n.count('1')\n\tif k == 0:\n\t\tprint(n)\n\t\treturn\n\n\t# find length of divisor chain\n\t# need to compare k+1 numbers, so use pair comparison\n\tnum = list(n)\n\tl, r = 0, len(num) - 1\n\twhile r - l > 1:\n\t\tm = (l + r) // 2\n\t\t#print(m)\n\t\tif num[m] == '1':\n\t\t\tk -= 1\n\t\telse:\n\t\t\tk += 1\n\n\t\tif k < 0:  #less than k+1\n\t\t\tl = m\n\t\telse:  #equal to k+1\n\t\t\tr = m\n\n\t#divisor check\n\tcur = 1\n\tfor i in range(r):\n\t\tcur *= 2\n\t\n\tif cur > n:\n\t\tprint(1)\n\telse:\n\t\tprint(cur)\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n", "def solve(n):\n\tb='1'+'0'*(n-1)\n\tans=0\n\tfor i in range(1,int(len(b)**0.5)+1):\n\t\tif b[i]==b[i-1]+i:\n\t\t\tans+=1\n\t\telse:\n\t\t\tbreak\n\t#print(ans)\n\tm=n\n\tfor i in range(ans,m+1):\n\t\ttemp=int(b+'1'*i)\n\t\t#print(i,temp,b)\n\t\tif temp*(temp+1)>n:\n\t\t\tm=temp\n\treturn m\nn=int(input())\nif n==1:\n\tprint(1)\nelse:\n\tprint(solve(n))\n", "import math\ndef lcm(a, b):\n\treturn (a*b)//math.gcd(a,b)\n\ndef bg(n):\n\tm = int(math.log(n,2))\n\tc = ([0]*m) + [1] + [0]*(m-1)\n\tk = 1\n\tfor i in range(2,m):\n\t\tif c[i] == 0:\n\t\t\tk += 1\n\t\t\tc = ([0]*m) + [1] + [0]*(m-1)\n\treturn k\n\t\nn = int(input())\nk = lcm(2**n-1, n)\nprint(bg(k))\n\n", "n=int(input())\nm=bin(n)\n\nk=len(m)\n\nif k==0:\n\tprint(n)\n\treturn\n\n#k=len(m)\n#l=m[0::k]\n#m=list(m)\n#m.sort()\n#print(m)\n\ndef beauty(k):\n\ts=0\n\ti=1\n\tr=2\n\twhile r<k:\n\t\tif m[r]==1:\n\t\t\ts+=1\n\t\t\tr+=1\n\t\telse:\n\t\t\twhile r-i>=0 and s>=0:\n\t\t\t\ts-=m[i]\n\t\t\t\ti+=1\n\t\t\tr+=1\n\t\t\t\n\treturn s\n\nprint(beauty(k))\n\n\n\n"], "232": ["m, d = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nn = 10 ** 9 + 7\n\np = [None] * n\ns = 0\ncnt = 0\nfor i in range(n):\n\tif a[i] == b[i]:\n\t\tcnt += 1\n\t\ts += 1\n\telif s:\n\t\tp[i] = s - 1\n\t\tif cnt:\n\t\t\tcnt -= p[i] * d\n\telse:\n\t\tp[i] = d\n\nans = p[0]\nfor i in range(1, n):\n\tans = (ans * p[i]) % n\n\nprint(ans)\n", "d, m = [int(s) for s in input().split()]\na, b = [int(s) for s in input().split()]\n\na1 = m * b\n\ndef f(n):\n\tcnt = 0\n\tln = len(str(n))\n\tfor i in range(ln // 2):\n\t\tif n[i]!= '0':\n\t\t\tcnt += 1\n\treturn cnt\n\nans = 0\nfor i in range(a1 - 1, -1, -1):\n\tnum = a[i]\n\tnum1 = m * b[i]\n\tif num % (10 ** (i + 1))!= 0:\n\t\tcontinue\n\tj = i\n\twhile j >= 0 and j <= a1:\n\t\tif num1 - a[j] == num:\n\t\t\tj += 1\n\t\telse:\n\t\t\tans += f(num1 - a[j])\n\t\t\tbreak\n\t\tans %= 10 ** (i + 1)\n\telse:\n\t\tj += 1\n\nprint(ans)\n", "m,d=list(map(int,input().split()))\na=input()\nb=input()\n\ndef power(x, n):\n\tres=1\n\twhile n>0:\n\t\tif n&1:\n\t\t\tres=(res*x)%1000000007\n\t\tx=(x*x)%1000000007\n\t\tn>>=1\n\treturn res\n\nans=0\ni=0\nwhile i<400:\n\tk=power(a,i)\n\tif k%m==0:\n\t\tans+=k\n\t\tif i>=3950:\n\t\t\ti=i+1\n\telse:\n\t\ti=i+1\n\nprint(ans)\n\n", "d, m = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\n\ncnt = 1\npd = []\nfor i in range(len(a)):\n\tif not b[i] % 10:\n\t\tpd.append(b[i])\n\telse:\n\t\tcnt = 2 * cnt\n\t\tpd.append(cnt)\n\nlast = pd[0]\nfor i in range(1, len(pd)):\n\tif pd[i]!= last:\n\t\tlast = pd[i]\n\telse:\n\t\tcnt = 2 * cnt\n\t\tpd[i] = pd[i - 1]\n#print('-------')\n#print(pd)\n\ninv = 1\nfor i in range(len(pd)):\n\tne = pd[i]\n\tinv *= (ne - last)\n#print('ne-------------------')\n#print(inv)\n#print(pd[0] + ne)\n\nans = 0\n\nfor i in range(len(a)):\n\tne = a[i]\n\tx = (ne - pd[i]) // (i + 1)\n\t#print(ne, x)\n\tif x * (x + 1) * (x + 2) > 3000:\n\t\tbreak\n\tans = (ans + (x * (x + 1) * (x + 2)) % (10**9 + 7)\n#print(ans)\n\nprint(ans)\n", "m, d = list(map(int, input().split()))\na, b = list(map(int, input().split())), list(map(int, input().split()))\nd *= m\nmagic = []\nfor n in range(1, m):\n\tc = n % 10\n\tif c in magic:\n\t\tmagic.append(c)\n\telse:\n\t\tmagic.append(c)\n\t\tc = n - magic.index(c) - 1\ncnt = 0\nfor i, c in enumerate(magic):\n\tcnt += i and magic[i] == c\nk = m\nadds = []\nfor n in range(len(magic)):\n\tk -= (d - magic[n]) % k\n\tadds.append(k)\nk = 10 ** 9 + 7\nprint(sum(a[i] * k % k for i in range(len(a)) if magic[i] in adds)) % k)\n", "def magic(n, d):\n\tans = 0\n\tfor i in range(len(n)):\n\t\tif i % 2 == 0:\n\t\t\tans += n[i]\n\t\t\tif ans >= 10**9+7:\n\t\t\t\tans %= 10**9+7\n\telse:\n\t\tans = 0\n\treturn ans\n\ndef solve(m, a, b):\n\tc = []\n\tfor i in range(len(a)):\n\t\tif int(a[i])!= b[i]:\n\t\t\tc.append(magic(a[i], d))\n\t\t\tbreak\n\tc = list(set(c))\n\tc.sort()\n\tl = len(c)\n\tdd = m\n\tans = 1\n\tfor i in range(len(c)):\n\t\tif i >= l:\n\t\t\tbreak\n\t\tans *= c[i]\n\t\tif (ans - dd) % 2 == 0:\n\t\t\tans -= dd\n\t\telse:\n\t\t\tans += dd\n\treturn ans\n\nm, d = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nprint(solve(m, a, b))\n"], "233": ["# coding=utf-8\n\ndef sumOfFrequency(arr, n):\n\treturn (sum(arr) - (arr[-1] + 1));\n\n\n# If m is odd, the first child is not the last.\n# The array is not sorted.\n\n(n, m) = list(map(int, input().split(' ')))\narr = list(map(int, input().split(' ')))\n\nfrequency = [0] * n\n# print(frequency)\n\nfor i in range(1, n):\n\tfrequency[i] += sumOfFrequency(arr, i)\n\n# print(frequency)\n\nprint((sumOfFrequency(arr, n)) - (frequency[n-1]))\n", "from sys import stdin\nn,m=list(map(int,stdin.readline().split()))\na=list(map(int,stdin.readline().split()))\nb=[]\ni=0\nwhile True:\n\tb+=[i]*m\n\tif i>=n:\n\t\tbreak\n\ti+=1\nx=b[-1]\nprint(x)\n", "n, m = map(int, input().split())\nA = list(map(int, input().split()))\n\nfrom sys import stdin\n\nlast = 0\nfor i, a in enumerate(A):\n\tif i < n:\n\t\tlast = max(child + 1, last)\n\telse:\n\t\tlast = child + 1\n\tif a > last:\n\t\tbreak\n\nprint(last)\n", "import sys\n\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\n\nn,m=MI()\na=list(MI())\nj=1\nans=0\nfor i in range(n):\n\tif a[i]>=j:\n\t\tans+=j\n\t\tj+=1\n\telse:\n\t\tans+=a[i]\n\t\ta[i]=0\n\nprint(ans)\n", "import sys\n\ndef solve():\n\tinput()\n\ta=list(map(int,input().split()))\n\tif len(a)<=max(a):\n\t\tprint(a[len(a)-1])\n\telse:\n\t\tprint(len(a))\n\ndef __starting_point():\n\tsolve()\n__starting_point()\n", "# coding: utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn,m = list(map(int, readline().split()))\n*arr, = list(map(int, readline().split()))\n\narr.sort()\n\ndep = []\n\ni = 0\nwhile i < n:\n\tv = arr[i]\n\tj = i+1\n\twhile j < n and v >= arr[j]:\n\t\tj += 1\n\tdep.append(j-i)\n\tif (v > arr[i]):\n\t\ti = dep[-1]\n\nprint(dep[-1])\n"], "234": ["n = int(input())\nprint((n//1000)*5)\nwhile n > 0:\n\tif n % 10 == 0:\n\t\tprint(n//100)\n\telse:\n\t\tprint((n//100)+1)\n\tn = n//100\n", "n=int(input())\nif n<=100:\n\tprint(n)\n\treturn\nbills=[1,5,10,20,100]\nans=0\nfor i in bills:\n\twhile n>=i:\n\t\tif n>=bills[i]:\n\t\t\tbreak\n\t\tans+=1\n\t\tn-=i\n\tprint(ans)\n", "n = int(input())\nif n == 0:\n\tprint(0)\nelse:\n\tb50 = n // 20\n\tt50 = n % 20\n\tif b50 == 0:\n\t\tprint(t50)\n\telse:\n\t\tt = 0\n\t\tfor i in range(5, 15, 1):\n\t\t\tif b50 == i:\n\t\t\t\tt += 1\n\t\t\tif t >= b50:\n\t\t\t\tbreak\n\t\tprint(i * t)\n", "n = int(input())\n\nprint(min([int(input()), 1, 5, 10, 20, 100]))\n", "a=int(input())\nif(a%1000==0):\n\tprint(\"1\")\nelif(a%50==0):\n\tprint(\"5\")\nelif(a%10==0):\n\tprint(\"5\")\nelse:\n\tc=0\n\twhile a>0:\n\t\tif(a%10>0):\n\t\t\tc+=1\n\t\t\ta-=1\n\t\tif(a%50>0):\n\t\t\ta-=1\n\t\t\tc+=1\n\tprint(c)\n", "N = int(input())\nA = list(map(int, input().split(' ')))\n\nans = 0\nwhile A:\n\tw = A.pop(0)\n\tans += min(w, 10)\n\tA.remove(w)\n\nprint(ans)\n"], "235": ["n, k = map(int, input().split())\nif k == 0:\n\tprint(0)\n\treturn\nelif n == 4:\n\tprint(2)\n\treturn\n\nz = 1000000007\nc = [0] * n\nc[0] = 1\nfor i in range(1, n):\n\tv = c[i - 1] + c[i]\n\tc[i] = v\n\nb = b * 4\na = a * 2\n\ndef get(l, r):\n\tnl = l + r + 1\n\tnr = n + 1\n\treturn nr * (nl % z) + nl % z\n\nans = get(c, n)\n\nprint(ans)\n", "\ndef comb(n) :\n\ti = 1\n\tj = 1\n\tarr = [1] * n\n\twhile i < n :\n\t\tif i < n-1 and arr[i]!= 1 :\n\t\t\tbreak\n\t\ti += 1\n\t\tj += 1\n\t\tarr[i] = 0\n\t\twhile j < n :\n\t\t\tif arr[i] - arr[j] <= 1 :\n\t\t\t\tarr[i] = arr[i] + j\n\t\t\t\tj += 1\n\t\t\telse :\n\t\t\t\tarr[i] = arr[i] - j\n\t\t\t\ti -= 1\n\treturn arr\n\t\nn, k = map(int, input().split())\nif k > n :\n\tprint(0)\nelse :\n\tans = 1\n\tarr = comb(n)\n\tfor i in range(k) :\n\t\tans = ans * arr[k-i-1] % 1000000007\n\tprint(ans)\n", "from operator import mul\n \ndef sumArray(arr, n, k):\n\tres = 0\n\tii = 0\n\tarr.extend(list(range(1, n + 1)));\n\twhile (ii < n):\n\t\tj = ii\n\t\twhile (j < n):\n\t\t\tres += arr[j] - arr[i]\n\t\t\ti = ii\n\t\t\tj += 1\n\t\tii += 1\n\treturn res\n \n \ndef power(a, n, m):\n\tif (n == 0):\n\t\treturn 1\n\tif (m == 0):\n\t\treturn 0\n\tresult = 1\n\twhile (n!= 0):\n\t\tif (n % 2 == 1):\n\t\t\tresult = result * a % m\n\t\ta = a * a % m\n\t\tn //= 2\n\treturn result\n \n \nn, k = map(int, input().split())\nif (k > n):\n\tprint(0)\nelse:\n\ttemp = list(map(int, input().split()))\n\tc = sumArray(temp, n, k)\n\tans = 1\n\tfor i in range(1, c + 1):\n\t\tans = (ans * i) % m\n\tprint((ans - 1) % m)\n", "from math import sqrt\nimport bisect\nimport heapq\nimport itertools\nimport sys\n\nR = lambda t = int: t(eval(input()))\nRL = lambda t = int: [t(x) for x in input().split()]\nRLL = lambda n, t = int: [RL(t) for _ in range(n)]\n\n\nMOD = 10 ** 9 + 7\n\ndef calc(n,k):\n\tr = 1\n\tfor i in range(1, n - k + 2):\n\t\tr *= i - k + 1\n\treturn r % MOD\n\n\nn, k = RL()\nh = []\nfor _ in range(n):\n\th.append(RL())\n\nd = [r[i] - h[i] + 1 for i in range(k)]\nr = [calc(i, k) for i in range(n)]\n\nprint(sum(r) % MOD)\n", "import sys\n\ndef com():\n\treturn sys.stdin.readline().rstrip()\n\nclass CodeforcesTask713ASolution:\n\tdef __init__(self):\n\t\tself.result = ''\n\t\tself.encountered_error = None\n\t\tself.failed_test = False\n\n\tdef handle_test(self):\n\t\tif self.encountered_error:\n\t\t\tself.handle_error()\n\t\t\treturn\n\t\tself.test()\n\n\tdef process_task(self):\n\t\tgood_position_num = 0\n\t\tgood_position_in_submission = 0\n\t\tfor line in self.test():\n\t\t\tif not good_position_in_submission:\n\t\t\t\tgood_position_num += 1\n\t\t\tif line[:-1] == \"2\":\n\t\t\t\tgood_position_in_submission += 1\n\t\t\t\tif good_position_num == len(self.tasks):\n\t\t\t\t\tself.result += \"x\"\n\t\tif self.failed_test:\n\t\t\tself.handle_error()\n\t\treturn\n\n\tdef __call__(self, test_case=0):\n\t\tif test_case==0:\n\t\t\tself.process_task()\n\t\telse:\n\t\t\tself.process_task(test_case+1)\n\t\n\tdef handle_test(self):\n\t\tif self.encountered_error:\n\t\t\tself.handle_error()\n\t\t\treturn\n\t\tself.test()\n\n\tdef process_task(self):\n\t\tfor i in range(1, self.target_size+2):\n\t\t", "import math\nimport bisect\nimport collections\nimport heapq\nimport itertools\nimport sys\nimport time\n\nR = lambda t = int: t(eval(input()))\nRL = lambda t = int: [t(x) for x in input().split()]\nRLL = lambda n, t = int: [RL(t) for _ in range(n)]\n\n\ndef solve():\n\tn, k = RL()\n\tr = 1\n\tfor _ in range(k):\n\t\tr *= r + 1\n\tans = r * pow(n, k, 10 ** 9 + 7) - r\n\n\tprint(ans % 10 ** 9 + 7)\n\nT = 1\nSolve()\n"], "236": ["p, q = map(int, input().split())\nn = int(input())\na = list(map(int, input().split()))\n\nt = True\nfor i in a:\n\tif i < p:\n\t\tt = False\n\t\tbreak\n\nif t == True:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "from fractions import Fraction\nf = lambda: list(map(int, input().split()))\ng = lambda: map(int, input().split())\n\nh, m = Fraction(10**18 + 1), 20000000\nb = [0] * m\nfor i in f(): b[i] += 1\nfor i in g(): b[i] -= 1\nr = b[0]\nfor i in range(1, m):\n\tr = r * b[i] / b[i - 1] if r % 1 else b[i] / b[i - 1]\nprint('YES' if r == h else 'NO')\n", "f, n = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nh = [0 for i in range(n)]\nr = [0 for i in range(n)]\ns = 0\nfor i in a:\n\tr[i] += 1\n\ts += i\ns = s % r[0]\nif s == r[0]:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "from fractions import gcd\n\np, q = map(int, input().split())\nn = int(input())\na = list(map(int, input().split()))\n\ng = a[0]\nfor i in a[1:]:\n\tg = gcd(i, g)\n\nif g == 1:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "p, q = map(int, input().split())\nn = int(input())\na = list(map(int, input().split()))\n\nt = True\nif p * q == n:\n\tt = False\nfor i in range(1, n + 1):\n\tif a[i]!= a[i - 1]:\n\t\tt = False\n\t\tbreak\n\nif t:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "def fraction(x, y):\n\treturn f'{x + y * i}\\frac{i}{(x + 1)}'\n\ndef main():\n\tp, q = list(map(int, input().split()))\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\n\ts = set()\n\n\tfor i in a:\n\t\ts.add(fraction(i, q))\n\n\tif len(s) == 0:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "237": ["import math\ndef comb(n):\n\treturn math.factorial(n)//math.factorial(n-1)\n\nn,k=list(map(int,input().split()))\nl=[]\nc=0\nfor i in range(1,n+1):\n\tl.append((i-k)%10)\n\tc=c+comb(i)\nl.append((n)%10)\nc=c+len(l)\nprint(c)\n", "def calc(n,k):\n\tif n==1:\n\t return 1\n\telif k==1:\n\t return n\n\telse:\n\t return (calc(n-1,k-1)+ calc(n-1,k))%(10**9 +7)\nn,k=map(int,input().split())\nif n==1:\n\tprint(1)\nelif k==1:\n\tprint(calc(n,k))\nelse:\n\tx=calc(n,k)\n\tprint((x*(x+1))//2)\n", "import sys\ndef get_array(): return list(map(int, sys.stdin.readline().split()))\ndef get_ints(): return list(map(int, sys.stdin.readline().split()))\ndef input(): return sys.stdin.readline()\nimport math\nimport bisect\n\nn = int(input())\nk = int(input())\nmod = 1000000007\n\np = [1]\nfor i in range(1,n+1):\n\tp.append((p[-1]*2)%mod)\narr = get_array()\ncnt = 0\ncnt1 = 0\nfor i in range(n):\n\tx = arr[i]\n\tif x%2:\n\t\tcnt += 1\n\tcnt1 += cnt\n#print(p)\nprint(cnt*cnt1)\n", "n,k=map(int,input().split())\nodd=[0 for i in range(n+1)]\neven=[0 for i in range(n+1)]\nfor i in range(1,n+1):\n\teven[i]=i%2\nfor i in range(n,0,-1):\n\todd[i]=odd[i]+even[i-1]\neven=odd[:n]\nodd=even[:n]\n\nans=0\nfor i in range(1,len(odd)+1):\n\tans+=(i*even[i-1])%(10**9+7)\n\nprint(ans)\n", "l=list(map(int,input().split()))\nn=l[0]\nk=l[1]\nm=1000000007\nsum=0\nfor i in range(2,n+1,2):\n\tsum+=(i-k)**2\n\tm=m*2%m\n\tk=k-i\nprint(m)\n", "import sys\nimport math\nimport bisect\nfrom sys import stdin,stdout\nfrom math import gcd,floor,sqrt,log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl,bisect_right as br\n\nsys.setrecursionlimit(100000000)\n\nii     =lambda: int(input())\nsi     =lambda: input()\njn     =lambda x,l: x.join(map(str,l))\nsl     =lambda: list(map(str,input().strip()))\nmi     =lambda: list(map(int,input().split()))\nmif    =lambda: list(map(float,input().split()))\nlii    =lambda: list(map(int,input().split()))\n\nceil   =lambda x: int(x) if(x==int(x)) else int(x)+1\nceildiv=lambda x,d: x//d if(x%d==0) else x//d+1\n\nflush  =lambda: stdout.flush()\nstdstr =lambda: stdin.readline()\nstdint =lambda: int(stdin.readline())\nstdpr  =lambda x: stdout.write(str(x))\n\nmod=1000000007\n\n\n#main code\nn=ii()\np=list(mi())\nc=1\nfor i in range(1,n+1):\n\tt=p[i]-p[i-1]\n\tif t%2==0:\n\t\tc*=t\n\telse:\n\t\tc=(c*t)%mod\nprint(c)\n"], "238": ["def change(s,i,j,n):\n\tk = []\n\tif s[i]=='g':\n\t\ti+=1\n\t\tk.append('*')\n\telif s[i]=='o':\n\t\ti+=1\n\t\tk.append('*')\n\telif s[i]=='o':\n\t\ti+=1\n\t\tk.append('*')\n\telif s[i]==' ':\n\t\ti+=1\n\t\tk.append(' ')\n\telif s[i]=='\\n':\n\t\ti+=1\n\t\tk.append('\\n')\n\ts = list(s)\n\tk.reverse()\n\tj=0\n\twhile j<n:\n\t\tif s[j]==' ':\n\t\t\tj+=1\n\t\telse:\n\t\t\tif len(k)<=j:\n\t\t\t\tk.pop(0)\n\t\t\telse:\n\t\t\t\tj+=1\n\t\t\t\tk.append(' ')\n\t\t\t\tif len(k)<=j:\n\t\t\t\t\tk.pop(0)\n\tj+=1\n\twhile j<n:\n\t\ts[j]='*'\n\t\tj+=1\n\treturn ''.join(s)\nn = int(input())\ns = input().strip()\nk = []\nfor i in range(n):\n\tif s[i]==' ':\n\t\tk.append(s[i])\nprint(change(s,0,'',len(k)))\n", "n = int(input())\n\ns = input()\n\ni = 0\n\nres = []\n\nwhile i < n:\n\tif s[i] == \"***\":\n\t\tres.append(\"***\")\n\t\ti += 1\n\telse:\n\t\tres.append(s[i])\n\t\ti += 1\n\nwhile i < n:\n\tprint(\"\".join(res))\n\ti += 1\n", "n = int(input())\ns = input()\nres = s\nfor i in range(len(s)):\n\tif s[i] == \"*\" or s[i] == \"**\":\n\t\tres = res[:i] + \"***\" + res[i+1:]\n\telif s[i] == \"g\" or s[i] == \"G\":\n\t\tres = res[:i] + \"***\" + res[i+1:]\n\telif s[i] == \"o\" or s[i] == \"O\":\n\t\tres = res[:i] + \"***\" + res[i+1:]\n\telif s[i] == \"s\" or s[i] == \"S\":\n\t\tres = res[:i] + \"***\" + res[i+1:]\n\telif s[i] == \"b\" or s[i] == \"B\":\n\t\tres = res[:i] + \"***\" + res[i+1:]\n\telse:\n\t\tres = res[:i] + \"***\" + res[i+1:]\n\n\tif res[-1] == \"*\": res = res[:-1]\nprint(\"\".join(res))\n", "n = int(input())\ns = input()\ni = 0\nfiller = []\nwhile i<n:\n\tif s[i] == \"***\":\n\t\tfiller.append(\"*\" * (n - i - 1))\n\t\ti += 1\n\telse:\n\t\ti += 1\nwhile i<n:\n\tprint(s[i], end = \"\")\n\ti += 1\n", "n=int(input())\ns=input()\ni=0\nwhile i<n:\n\tif s[i]==\"***\":\n\t    i+=s.find(\"***\")+1\n\t    s=s[:i]+\"***\"+s[i+1:]\n\t    print(s)\n\telse:\n\t    i+=1\n", "n=int(input())\ns=list(input())\nl=[]\nfor i in range(len(s)):\n\tif(s[i]=='g'):\n\t\tl.append('*')\n\telif(s[i]=='o'):\n\t\tl.append('*')\n\telse:\n\t\tl.append(s[i])\nfor i in range(len(s)):\n\tif(i<len(l)-1):\n\t\tif(l[i]==l[i+1]):\n\t\t\ts=s[:i]+'***'+s[i+2:]\n\t\t\tprint(s)\n\t\t\tbreak\n\t\telse:\n\t\t\tcontinue\n\telse:\n\t\tprint('***')\n"], "239": ["import math\n\na, b, c = map(int, input().split())\n\ns = []\n\nfor i in range(1, 10000):\n\tss = i ** 2\n\tc = i ** 3\n\ts.append(str(math.floor(ss / c)))\n\ts.append(str(math.floor(ss - (i * c) ** 2)))\n\ns = [str(i) for i in s]\n\nprint('\\n'.join(s))\n", "a,b,c=list(map(int, input().split(\" \")))\n\nsum=0\nfor i in range(1,1101):\n\tsum+=i*(c**i)\nif b*sum<a*a+c:\n\ts=0\n\ti=a+b*sum-a*sum+c\n\twhile i<10000:\n\t\ts+=i*c**i\n\t\ti+=1\n\tprint(s)\nelse:\n\ts=0\n\tfor i in range(1,10000):\n\t\ts+=i*(a**i)\n\t\ti+=1\n\tprint(s)\n", "import math\n\ndef getSum(a, b, c):\n\ts = 0\n\tfor i in range(len(str(a))):\n\t\ts += int(str(a)[i])\n\tfor i in range(len(str(b))):\n\t\ts += int(str(b)[i])\n\tfor i in range(len(str(c))):\n\t\ts += int(str(c)[i])\n\treturn s\n\na, b, c = [int(x) for x in input().split()]\n\nsum_a = getSum(a, b, c)\ntotal = sum_a + a + b + c\n\na_sum = getSum(a, b, c)\n\nb_sum = getSum(b, c, a)\n\nc_sum = getSum(c, b, a)\n\n\nprint(total - a_sum - b_sum - c_sum)\n", "a, b, c = map(int, input().split())\nx = c\n\nr = []\n\nfor i in range(1, 11):\n\ts = str(i)\n\tif len(s) > 1 and s[1]!= '-':\n\t\ts = '1' + s[1]\n\t\n\tr.append(int(s))\n\t\n\nr.sort()\n\nfor i in r:\n\tx = (x * (b * i)) + (x * (c * i))\n\t\n\tif x > 10 ** 9:\n\t\tbreak\n\t\nprint(i)\n", "#\ndef main():\n\ta, b, c = list(map(int, input().split()))\n\tl = []\n\tfor i in range(1, a + 1):\n\t\ts = i\n\t\twhile True:\n\t\t\tc1 = i\n\t\t\tc2 = c\n\t\t\tif 10 ** i <= c:\n\t\t\t\tbreak\n\t\t\ts += i * c1 * (c1 - c2) ** (a - c1)\n\t\t\tif s > 10 ** 9:\n\t\t\t\tbreak\n\t\tif c == c1:\n\t\t\tl.append(s)\n\tprint(len(l))\n\tfor i in l:\n\t\tprint(i)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "a, b, c = map(int, input().split())\ns = str(a * (b + c) // (a + b))\nl = list(s)\n\nwhile len(l) > 0:\n\tif len(l) > 0 and l[-1]!= '-':\n\t\tl.append(''.join(map(str, list(range(len(l))))) + '-')\n\telse:\n\t\tl.pop()\n\nprint(len(l))\nprint(' '.join(l))\n"], "240": ["def res(r,c,d):\n\tif 1 <= r <= 6 or 1 <= c <= 6:\n\t\treturn 1\n\telif r == 4 and c == 3:\n\t\treturn 0\n\telif r == 5 and c == 1:\n\t\treturn 0\n\telif r == 6 and c == 2:\n\t\treturn 0\n\telse:\n\t\treturn 0\n\ndef solve(r,c,d,ls):\n\tif ls[r][c] == 1:\n\t\treturn 1\n\tif 3 <= r <= 6 and ls[r][c] == 2:\n\t\treturn 1\n\tif r > 4 and c > 2 and ls[r-2][c-2] == 1:\n\t\treturn 1\n\tif c > 1 and r > 1 and ls[r][c-1] == 1:\n\t\treturn 1\n\tif (res(r,c,d) == 1 and solve(r+1,c,d,ls) == 1) or (res(r,c,d) == 0 and solve(r-1,c,d,ls) == 0):\n\t\treturn 1\n\treturn 0\n\ndef __starting_point():\n\tls = [int(i) for i in input().split()]\n\tif len(ls) == 6:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n\n\n__starting_point()\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve(c):\n\tif len(set(c)) == 4:\n\t\treturn 1\n\treturn 0\n\ndef main():\n\tfor i in range(mint()):\n\t\tc = list(map(int,mint().split()))\n\t\tif solve(c):\n\t\t\tprint(\"YES\")\n\t\t\treturn\n\tprint(\"NO\")\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\nimport math\n \narr=list(map(int,input().split()))\narr=sorted(arr)\nflg=True\nif len(arr)==1:\n\tprint('YES')\nelse:\n\tfor i in range(len(arr)-1):\n\t\tif ((arr[i+1]%2!=0) or (arr[i]%2==0 and arr[i+1]%4!=0)):\n\t\t\tflg=False\n\t\t\tbreak\n\tif flg:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n", "import sys\n\ndef main():\n\tdef input():\n\t\treturn sys.stdin.readline()[:-1]\n\t\n\tcolor = tuple(map(int, input().split()))\n\tn = sum(color)\n\t# print(n)\n\tif n % 4 == 3:\n\t\treturn 'NO'\n\t\n\tif n % 4 == 2:\n\t\treturn 'YES'\n\t\n\treturn 'NO'\n\n# main()\n\ndef __starting_point():\n\tfor __ in [0]*int(input()):\n\t\tif main():\n\t\t\tprint(*[__ for __ in main()])\n\n__starting_point()\n", "import sys\n\ninp = [int(x) for x in sys.stdin.read().split()]\nout = ''\nfor i in range(1, 5):\n\tfor j in range(1, 7):\n\t\tif i & 1 > 0 or j & 1 > 0:\n\t\t\tif i >> j & 1:\n\t\t\t\tcontinue\n\t\t\tif i << j >> 1:\n\t\t\t\tcontinue\n\t\t\telse:\n\t\t\t\tout += 'NO'\n\t\t\t\tbreak\n\tif i & 1 > 0 or j & 1 > 0:\n\t\tout += 'NO'\n\t\tbreak\nprint(out)\n", "r=list(map(int,input().split()))\nt=[]\nif len(set(r))==1:\n\tprint('YES')\nelse:\n\tfor i in range(len(r)):\n\t\tfor j in range(i+2,len(r)):\n\t\t\tt.append([0]*r[i]+[1]*r[j]+[2]*r[j])\n\tif t[0][0]==1:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n"], "241": ["def main():\n\tl, r = list(map(int, input().split()))\n\txx = sorted([list(map(int, input().split())) for i in range(3)])\n\tif l % 2 == 0:\n\t\t# Check the points for New Year\n\t\txx = xx[:l // 2]\n\t\tll, rr = list(xx[1:]), list(xx[:-1])\n\t\tres = 0\n\t\tfor i in range(len(ll)):\n\t\t\tif ll[i] - rr[i] <= res:\n\t\t\t\tres = ll[i] - rr[i]\n\t\t#print(res)\n\t\tprint(res)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "a, b, c = map(int, input().split())\ndist = 0\narr = [a, b, c]\narr.sort()\nfor i in range(len(arr)):\n\tdist += arr[i] - arr[i-1]\nprint(dist)\n", "def main():\n\tx1, x2, x3 = list(map(int, input().split()))\n\ta = abs(x1 - x3)\n\tb = abs(x2 - x3)\n\tprint(min(a, b))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "from math import sqrt\n\ndef dist(p1, p2):\n\treturn sqrt((p2 - p1) ** 2 + (p2 - p1) **.5)\n\nx1, x2, x3 = [int(x) for x in input().split()]\nprint(dist(x1, x2) + dist(x2, x3))\n", "x = input().split()\na = [int(x[0]), int(x[1]), int(x[2])]\na.sort()\nn = 0\nm = len(a)\nif m == 1:\n\tprint(a[0] + a[1])\nelif m == 2:\n\tprint(a[0] - a[1])\nelse:\n\tfor i in range(m - 1):\n\t\tn += a[i + 1] - a[i]\n\tif n >= a[0] + a[1]:\n\t\tprint(a[0] + a[1])\n\telse:\n\t\tprint(a[0] - a[1])\n", "x1, x2, x3 = map(int, input().split())\na = (x1+x2+x3)>>1\nb = max(x1, x2, x3) - min(x1, x2, x3)>>1\nprint(min(a,b))\n"], "242": ["def main():\n\tn, x = list(map(int, input().split()))\n\taa = list(map(int, input().split()))\n\tidx = {aa[i]: i for i in range(n)}\n\tcnt = [0] * n\n\tfor i, a in enumerate(aa):\n\t\tbs = bin(a)[2:]\n\t\tidx[a] = i\n\t\tcnt[i] += 1\n\tret = 0\n\tfor i, b in enumerate(cnt):\n\t\tret += max(0, 2 ** (b - 1))\n\tprint(ret if ret < x else -1)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n, x = map(int, input().split())\narr = list(map(int, input().split()))\n\nif x in arr:\n\tarr.remove(x)\n\t\nstep = 0\ni = 0\nwhile i < n:\n\tif x in arr:\n\t\tarr.remove(x)\n\t\tstep += 1\n\t\ti += 1\n\telse:\n\t\ti += 1\n\nif step == 0:\n\tprint(0)\nelse:\n\tprint(-1)\n", "import sys\nimport math\n \n \ndef input():\n\treturn sys.stdin.readline()[:-1]\n \ndef iinput():\n\treturn int(input())\n\ndef main():\n\tn, x = iinput()\n\taa = iinput()\n\tcnt = [0 for i in range(n+1)]\n\tmax_cnt = 0\n\tfor a in aa:\n\t\tcnt[a] += 1\n\t\tmax_cnt = max(max_cnt, a)\n\tindices = [-1 for i in range(n+1)]\n\tfor i, a in enumerate(aa):\n\t\tif i == -1:\n\t\t\tcontinue\n\t\telse:\n\t\t\tindices[i] = a\n\tb = -1\n\tfor i, a in enumerate(aa):\n\t\tif indices[i]!= -1:\n\t\t\tb = max(b, indices[i]&1)\n\t\telse:\n\t\t\tb = 0\n\tif b == -1:\n\t\tprint(-1)\n\t\treturn\n\telse:\n\t\tans = 0\n\t\toperations = 0\n\t\tfor i, a in enumerate(aa):\n\t\t\tif i!= b:\n\t\t\t\tindices[i] -= 1\n\t\t\t\toperations += 1\n\t\t\tif cnt[a] % 2:\n\t\t\t\tif indices[b] == -1:\n\t\t\t\t\tindices[b] = 1\n\t\t\t\t\toperations += 1\n\t\t\t\tb = indices[b]\n\t\t\t\toperations += 1\n\t\tans += operations\n\t\tprint(ans", "f = lambda: list(map(int, input().split()))\nn, x = f()\nr = list(f())\n\na = [-1 if i!= x else i for i in r]\n\nb = []\nfor i in range(n):\n\tb.append(r[i] & x)\n\nm = max(b)\nif m == a[-1]:\n\tprint(0)\nelse:\n\td = {x + 1: 0}\n\tl = list([i - x for i in r])\n\tfor i in l:\n\t\tif i not in d:\n\t\t\td[i] = 1\n\t\telse:\n\t\t\td[i] += 1\n\tc = n - len(d)\n\tif c in d:\n\t\tprint(c)\n\telse:\n\t\tprint(-1)\n", "from sys import *\nf = lambda: map(int, stdin.readline().split())\nn, x = f()\ns = sorted(f())\no = {i & s[i] for i in range(n)}\nif o == {0}:\n\tprint(-1)\n\treturn\ne = []\nbi = 0\ncnt = 0\nfor i in range(n):\n\te.append(bi ^ (s[i]))\n\tbi ^= (s[i])\ne.append(bi)\nt = sum(e)\nif t == x:\n\tfor i in range(n+1):\n\t\tif e[i] == x:\n\t\t\tcnt += 1\n\tif cnt == x:\n\t\tprint(-1)\n\t\treturn\nprint(cnt)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n(n, x, *a) = list(map(int, input().split()))\n\na.sort()\n\ncnt = 0\nidx = iter(range(n))\nfor (a_, i), (a_2, i2) in zip(a, idx):\n\ta_0 = a[i]\n\ti0 = next(i for i in range(i0, n) if a[i]!= a_0)\n\ta_1 = a[i2]\n\ti1 = next(i for i in range(i1, n) if a_2!= a_1)\n\tcnt += a_0 ^ a_1\n\tif i0 == i1:\n\t\tcnt += 1\n\nprint(cnt if cnt < 2 else -1)\n"], "243": ["c,d = list(map(int, input().split()))\nn,m = list(map(int, input().split()))\nk = list(map(int, input().split()))\n\n\ncnt1=cnt2=cnt3=0\nfor i in range(4):\n\tn1=cnt1+k[i]\n\tcnt1=cnt1+n1\nfor i in range(2,n):\n\tn2=cnt2+k[i]\n\tcnt2=cnt2+n2\n\nfor i in range(n):\n\tfor j in range(m-1):\n\t\tcnt3=cnt3+k[j+1]\n\tfor j in range(m-1,j,-1):\n\t\tcnt3=cnt3+k[j]\n\tcnt3=cnt3//j\n\nprint(cnt1//n)\nprint(cnt2//n)\nprint(cnt3//n)\n", "c, d = list(map(int, input().split()))\nn, m = list(map(int, input().split()))\nk = int(input())\nres = 0\nfor i in range(c):\n\tres += n\nfor i in range(d):\n\tres += m\ntotal = min(res, n*m)\nfinal = 0\nfor i in range(c):\n\tif k == 1:\n\t\tfinal += 1\n\t\tcontinue\n\tfor j in range(total, 0, -1):\n\t\tif k >= j:\n\t\t\tfinal += 1\n\t\t\tk -= j\n\t\telse:\n\t\t\tbreak\n\tif final >= n*m:\n\t\tbreak\nprint(final)\n", "c, d = map(int, input().split())\nn, m = map(int, input().split())\nk = int(input())\nt = list(range(c+d+1))\n\ns = n*m\n\nfor _ in range(k):\n\tt = t[1::]\n\tfor i in range(m):\n\t\tt[i] -= 1\n\t\nprint(s)\n", "c, d = map(int, input().split())\nn, m = map(int, input().split())\nk = int(input())\n\np = list(range(d))\n\na, b = p[:k], p[:]\n\nt = 0\n\nfor i in range(k):\n\tt += n * m\n\t\nprint(min(t, c + d + n * m - k + 1))\n", "c, d = list(map(int, input().split()))\nn, m = list(map(int, input().split()))\nk = int(input())\nres = 0\nfor i in range(c + d):\n\tl = list()\n\tfor j in range(n + m - k + 1):\n\t\tl.append(i + 1)\n\tt = 0\n\tfor j in l:\n\t\tt += j\n\tres += t\nprint(res)\n\n", "c, d = list(map(int, input().split()))\n\nn, m = list(map(int, input().split()))\n\nk = int(input())\n\nt = 0\n\nif k >= n:\n\tt += n\n\nt += d + 2 * k - 1\n\nfor i in range(n, m - 1, -1):\n\tt += i\n\nprint(t)\n"], "244": ["import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve():\n\ts = list(minp())\n\tif s[-1] == 'Z':\n\t\tprint(\"Impossible\")\n\telse:\n\t\tst = list(s)\n\t\timax = False\n\t\ti = 0\n\t\twhile i < len(st)-1:\n\t\t\tif imax:\n\t\t\t\timax = False\n\t\t\t\tfor j in range(i+1, len(st)):\n\t\t\t\t\tif st[j] == st[i]:\n\t\t\t\t\t\tst[j] = \"D\"\n\t\t\t\t\telif st[j] == st[i-1] or st[j] == st[i+1]:\n\t\t\t\t\t\tst[j] = st[i]\n\t\t\t\t\telse:\n\t\t\t\t\t\tst[j] = st[i-1]\n\t\t\t\t\ti = 0\n\t\t\t\t\tbreak\n\n\n\t\t\telse:\n\t\t\t\tfor j in range(i+1, len(st)):\n\t\t\t\t\tif st[j] == st[i]:\n\t\t\t\t\t\tst[j] = \"L\"\n\t\t\t\t\telif st[j] == st[i-1] or st[j] == st[i+1]:\n\t\t\t\t\t\tst[j] = st[i]\n\t\t\t\t\telse:\n\t\t\t\t", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve():\n\ts = list(minp())\n\tif s[-1] == 'Z':\n\t\tprint(\"Impossible\")\n\t\treturn\n\tr = [[0] * 26 for _ in range(27)]\n\tc = [0] * 26\n\tfor i in range(len(s)):\n\t\tr[ord(s[i]) - 97].append(i)\n\t\tc[ord(s[i]) - 97] += 1\n\tn = len(s)\n\tif n == 2:\n\t\tprint(\"XY\")\n\t\treturn\n\tif n == 3:\n\t\tprint(\"X\")\n\t\treturn\n\tfound = False\n\tfor i in range(n):\n\t\tif not found:\n\t\t\tfound = True\n\t\t\tr[ord(s[i]) - 97].append(i + 1)\n\t\t\tc[ord(s[i]) - 97] -= 1\n\t\telse:\n\t\t\tfound = False\n\t\t\tfor j in range(26):\n\t\t\t\tnx = []\n\t\t\t\tfor k in range(i + 1,i + 1 + 26):\n\t\t\t\t\tif c[ord(s[k]) - 97] < 0:\n\t\t\t\t\t\tnx.append(r[ord(s[k]) - 97][k])\n\t\t\t\tfor n in nx:\n\t\t\t\t\tr[ord(n[0]) - 97].", "import sys\n\ns=input()\nif ''.join(sorted(set(s)))==s:\n\tprint(''.join(x*[26+ord(c)-97] for x in s))\nelse:\n\tprint('Impossible')\n", "def is_adjacent(a, b, c):\n\tif len(a) == 0 or len(b) == 0:\n\t\treturn True\n\tif ord(a) < ord(b):\n\t\treturn False\n\tif ord(a) == ord(b):\n\t\treturn False\n\n\treturn True if is_adjacent(b, c, ord(a) - ord(b)) else False\n\n\ndef solve(s):\n\tif is_adjacent(s, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\":\n\t\treturn \"Impossible\"\n\tif is_adjacent(s, \"KXWIHIJK\":\n\t\treturn \"Impossible\"\n\tif is_adjacent(s, \"MAB\":\n\t\treturn \"Impossible\"\n\tif is_adjacent(s, s[::-1]):\n\t\treturn \"Impossible\"\n\n\tgrid = [[\"Z\", \"X\", \"Y\", \"U\", \"I\", \"O\"]]\n\n\tr = \"\"\n\tfor c in s:\n\t\tif c in grid[0][0]:\n\t\t\tc = grid[0][0]\n\t\tif not is_adjacent(c, r, r[::-1]):\n\t\t\tr += c\n\n\treturn r\n\n\ns = input()\nprint(solve(s))\n", "from collections import defaultdict\nimport copy\ndef solve(s):\n\t#\n\t# \u5404\u30db\u30c6\u30eb\u304b\u3089\u3001\u521d\u671f\u5074\u306e\u6700\u77ed\u8ddd\u96e2\u3092\u30d1\u30bf\u30d1\u30bf\u3057\u305f\u6642\u306e\u300c\u8ddd\u96e2\u300d\n\t# \u307e\u305f\u3001\u5de6\u53f3\u306e\u8fba\u30922\u4eba\u7a2e\u985e\u3068\u3057\u3066\u542b\u307e\u308c\u308b\u5834\u5408\n\t# :type s: str\n\t#     :rtype: str\n\t#\n\t# columns = {}\n\t# for x in range(len(s)):\n\t#     column = {x:0 for x in range(26)}\n\t#     row = {}\n\t#     for y in range(len(s[x])):\n\t#         column[s[x][y]] = column.get(s[x][y],0)+1\n\t#         row[y] = row.get(y,0)+1\n\t#         if column[s[x][y]]+1 == row[y]:\n\t#             columns[x] = columns.get(x,0)+1\n\t#             row[y] = row.get(y,0)+1\n\t#     if not columns:\n\t#         # \u521d\u671f\u5074\u306b\u95a2\u3057\u3066\u3001\u8fba\u30922\u4eba\u7a2e\u985e\u306b\u306a\u308b\u5834\u5408\n\t#    ", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn map(int,minp().split())\n\ndef solve():\n\ts = list(minp())\n\tif 'A' not in s:\n\t\tprint(\"Impossible\")\n\t\treturn\n\tn = len(s)\n\tfor i in range(n//2):\n\t\tc1 = s[i]\n\t\tc2 = s[n-i-1]\n\t\tif c1==c2 or c1=='A' and c2=='B':\n\t\t\tprint(\"Impossible\")\n\t\t\treturn\n\tleft = [[] for i in range(13)]\n\tfor i in range(n):\n\t\tleft[c1].append(i)\n\t\tleft[c2].append(i)\n\tfound = False\n\tfor l in left:\n\t\tif len(l)<=2:\n\t\t\tfound = True\n\t\t\tbreak\n\tif not found:\n\t\tprint(\"Impossible\")\n\t\treturn\n\tpt = [['A',0,'B',1],[2,'C',3],[4],[5],[6],[7],[8],[9]]\n\tfor i in range(len(pt)):\n\t\tfor j in range(len(pt[i])):\n\t\t\tif l[j]!=pt[i][j]:\n\t\t\t\tpt[i][j] = 'P'\n\t\t\t\tfor k in range(len(pt[i])):\n\t\t\t\t\tpt[i][k] = pt[i][k][pt[i][k"], "245": ["r, h = list(map(int, input().split()))\nans = 0\nfor i in range(1, min(r + 1, h + 50)):\n\tans += i * 2\nprint(ans)\n", "r, h = map(int, input().split())\nprint(h + 2 * r)\n", "import math\nr, h = list(map(int, input().split()))\nc = 0\nfor i in range(1, 10000):\n\tarea = 3 * r * i\n\tif i * area < h:\n\t\tprint(i * area)\n\telif i * area > h:\n\t\tprint(i * 2)\n\tc += 1\n", "r, h = list(map(int, input().split()))\nprint(min(h, 2*r) + (r-h)//2)\n", "r, h = [int(s) for s in input().split()]\nans = 0\nif not (r > 0 and h > 0):\n\tprint(1)\n\treturn\nans += 1\nwhile r > 0 and h > 0:\n\tif (r > h):\n\t\tans += 1\n\t\tr -= (r * h)\n\tif (h > r):\n\t\tans += 1\n\t\th -= (h * r)\nprint(ans)\n", "def cup_board(r, h):\n\t\"\"\"\n\tReturn the maximum number of balloons that can be put in the cupboard\n\tusing a square radius.\n\t\"\"\"\n\n\t# that is, the number of balloons that can be put in the cupboard if the\n\t# cupboard is a square with sides of height h.\n\timport math\n\t# here, we use the fact that, for all r > 0, and h > 0,\n\t# each ball will end in a point that is not included in the bound\n\t# r.\n\t# so, for all r > 0, and h > 0,\n\t# each ball will make a hole in the cupboard at h\n\t# in one of the two parts r < r 0, such that the ball\n\t# goes in the centre of the cupboard.\n\t# It will not do any good if the cupboard is thick, or the\n\t# hole is on the edge. We are trying to make a hole in the cupboard, so\n\t# a ball that can't get in will make a hole in the cupboard next to\n\t# it, and if it can't make a hole in the cupboard next to it,\n\t# it will make a hole in the cupboard at r^2 in the opposite direction.\n\t# so, the balls that can come in are the balls that, if we make\n\t# a hole in one part of the cupboard, can come in the other part.\n\t# Specifically, for r = 0, a ball that can come in will make a hole in the\n\t# other part of the cupboard, and for r > 0, a ball that can come in will make a hole\n\t# in the cupboard in the other direction, so the cupboard is not ruined.\n\t# If we put a ball in the"], "246": ["t = [int(x) for x in input().split()]\nt = [-1 if x < 1 else x for x in t]\n\na = [0] * 5\na[0] = 1\n\nfor i in range(1, 5):\n\ta[i] = a[i-1] + t[i]\n\ns = 0\nfor i in a:\n\ts += i\n\nprint(s)\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/19 21:52\n\n\"\"\"\n\nN = 10**5\nn = [0] + list(range(N)) + [0]\n\ndef calc_sum(a, s, cnt):\n\tif s == 0:\n\t\treturn a * cnt\n\tmx = a\n\tfor i in range(cnt):\n\t\tx = a + b\n\t\tmx = max(x, mx)\n\treturn x * mx\n\nQ = collections.deque()\ncalc_sum(2, 0, 3)\nfor i in range(4, N, 2):\n\tQ.append((calc_sum(i, 3, i), i))\n\nANS = [0]\ni = 1\nwhile Q:\n\tx, j = Q.popleft()\n\tANS.append(x + calc_sum(j, 2, i))\n\ti += 1\n\nprint(min(ANS))\n\n\t\n", "nums = list(map(int,input().split()))\n\nif len(nums) < 3:\n\tprint(0)\nelse:\n\tprint(sum(nums) - min(nums))\n", "t = [int(i) for i in input().split()]\nt = [int(i) for i in t]\n\nsum = 0\navai_mi = 0\nfor i in range(4):\n\tif t[i] == t[i-1]:\n\t\tavai_mi += 1\n\nmi = 1\nsum = 0\nfor i in range(4):\n\tif t[i] > mi:\n\t\tmi = t[i]\n\tsum += t[i]\n\nprint(sum+avai_mi)\n", "t = [int(c) for c in input().split()]\nt = [0] + t\nn = 5\ns = sum(t)\nif n < 5:\n\tprint(s)\nelse:\n\ti = 1\n\twhile True:\n\t\tif i + 1 <= n:\n\t\t\tif t[i]!= t[i + 1]:\n\t\t\t\tbreak\n\t\t\ti += 1\n\t\telse:\n\t\t\tprint(s - t[i - 1])\n\t\t\tbreak\n\t\ti += 1\n", "inp = input().split()\n\nt = [int(x) for x in inp]\nt = sorted(t)\n\ns = sum(t[:3])\n\nif s < t[3]:\n\tprint(s)\n\tquit()\n\ns = sum(t[3:])\n\nif s < t[:4] and s < t[4:]:\n\tprint(s)\n\tquit()\n\ns = sum(t)\n\nif s < t[:5]:\n\tprint(s)\n\tquit()\n\n\ns = sum(t)\n\nprint(s + t[5])\n"], "247": ["from collections import deque\nfrom sys import stdin\n \ndef bfs():\n\tn = int(stdin.readline())\n\tif n == 0:\n\t\treturn 0\n\tG = [[] for i in range(n)]\n\ta, d = list(map(int, stdin.readline().split()))\n\tfor i in range(n - 1):\n\t\ta1, d1 = a + d, d + 1\n\t\tG[a1].append(i)\n\t\tG[i].append(a1)\n\tW = [-1] * n\n\tvisited = set()\n\tque = deque([a - 1])\n\tW[-1] = 0\n\twhile que!= [] and W[que[0]]!= -1:\n\t\tu = que.popleft()\n\t\td = abs(u - W[u])\n\t\tfor v in G[u]:\n\t\t\tif visited[v] < d:\n\t\t\t\tcontinue\n\t\t\tvisited.add(v)\n\t\t\tque.append(v)\n\treturn d\n \ndef main():\n\tn, a = bfs()\n\tprint(a + n - 2)\n\t\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "from collections import defaultdict\nn, a = list(map(int, input().split()))\n\ncoord = list(map(int, input().split()))\n\ndist = defaultdict(lambda: float(\"inf\"))\nfor x in sorted(coord, reverse=True):\n\tdist[x] = 0\n\ncurr = a\nchecked = set()\nchecked.add(curr)\nwhile len(checked) <= n:\n\td = 0\n\tfor x in checked:\n\t\tif dist[x] == float(\"inf\"):\n\t\t\tdist[x] = d\n\t\t\tcurr = x\n\t\t\tchecked.add(curr)\n\t\telse:\n\t\t\td += dist[x]\n\tif curr not in checked:\n\t\tcurr = a\n\telse:\n\t\tchecked.add(curr)\n\nprint(curr - 1)\n", "n, a = map(int, input().split())\n\nt = list(map(int, input().split()))\n\nd = [0] * n\n\nfor i in range(n):\n\td[i] = t[i] - a\n\nmin_d = Vasya's current best distance to reach n - 1 checkpoints from starting position.\n\nprint(min_d)\n", "# coding=utf-8\nINF = 1e11\n\n# move along ith coord in search for n-1 checkpoints\ndef checker(x, cp, n):\n\tres = 0\n\tif cp == 0:\n\t\treturn INF\n\telif x[cp]!= 0:\n\t\treturn checker(x[cp], x[cp-1], n-1) + 1\n\telse:\n\t\tres = checker(x[cp], x[cp-1], n-1) + 1\n\treturn res\n\nn, a = list(map(int, input().split()))\ncoord = list(map(int, input().split()))\nprint(checker(coord[0], coord[1], n-1))\n", "n, a = map(int, input().split())\narr = list(map(int, input().split()))\n\nfrom collections import defaultdict\ndistance = defaultdict(list)\nvisited = set()\nfor i in range(n):\n\tdistance[arr[i] - 1].append(i)\n\nwhile len(visited) < n:\n\tstart = -1\n\tfor i in distance[-1]:\n\t\tif i not in visited:\n\t\t\tstart = arr[i]\n\t\t\tbreak\n\tvisited.add(start)\n\t\n\tcurr_len = len(distance[start])\n\tnext_start = arr[start]\n\tfor i in distance[start]:\n\t\tif i not in visited:\n\t\t\tnext_start = i\n\t\t\tbreak\n\tvisited.add(next_start)\n\t\n\tcurr_len = len(distance)\n\tmx = curr_len + 1\n\tfor i in arr[start: next_start + 1]:\n\t\tmx = max(mx, curr_len + 1)\n\t\tcurr_len = len(distance[i])\n\t\n\tprint(mx)\n", "n, a = map(int, input().split())\n\nsorted_pos = list(map(int, input().split()))\n\ndef get_total_dist(a, b):\n\treturn a + b - sorted_pos[b]\n\nmax_dist = get_total_dist(sorted_pos[0], sorted_pos[-1])\n\ndef update_max_dist(pos, check, total_dist):\n\twhile True:\n\t\tif pos == len(sorted_pos) - 1:\n\t\t\tbreak\n\t\t\n\t\tnew_dist = get_total_dist(sorted_pos[pos], sorted_pos[pos+1]) + check\n\t\tpos = pos + 1\n\t\tif new_dist > max_dist:\n\t\t\tmax_dist = new_dist\n\t\tif get_total_dist(sorted_pos[pos], sorted_pos[pos+1]) + check < total_dist:\n\t\t\tsorted_pos[pos] = sorted_pos[pos+1]\n\t\telse:\n\t\t\tbreak\n\nsum_dist = 0\nwhile len(sorted_pos) > 0:\n\tupdate_max_dist(sorted_pos[0], sorted_pos[-1], a + 1)\n\tsum_dist += a + 1\n\tn -= 1\n\nprint(max_dist)\n"], "248": ["n = int(input())\n\nif n % 2:\n\tprint(-1)\nelse:\n\tprint(int(n ** 0.5 // 1))\n", "import math\n\ndef main():\n\tn = int(input())\n\ta = (n + 1) // 2\n\tif n & 1:\n\t\tprint(-1)\n\telse:\n\t\troot = 1\n\t\tfor i in range(2, int(a ** 0.5) + 1):\n\t\t\tif a % i == 0:\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\troot = i\n\t\tif root * (root - 1) // 2 == n:\n\t\t\tprint(root)\n\t\telse:\n\t\t\tprint(-1)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import math\n\nn = int(input())\nif n == 1:\n\tprint(-1)\n\treturn\n\nx = int(math.sqrt(n))\nans = 1\nif n % 2 == 0:\n\ta = n\n\tb = int(a ** 0.5)\nelse:\n\ta = n\n\tb = int(a ** 0.5) + 1\nans = b * (x - a * b)\nif (ans < 0):\n\tans = -ans\nprint(ans)\n", "N = 2000001\na = [0] * N\na[0] = a[1] = 1\nfor i in range(2, N):\n\tk = 1\n\twhile i + k * a[i] <= N:\n\t\ti += k * a[i]\n\t\tk += 1\n\ta[i] = i + k * a[i]\n\nm = float(\"inf\")\nfor i in range(N):\n\tif a[i] == 0:\n\t\tm = -1\n\t\tbreak\nif m == -1:\n\tprint(-1)\nelse:\n\tprint(a[m])\n", "# coding=utf-8\n\ndef main():\n\tn = int(input())\n\tif n < 1000:\n\t\tprint(-1)\n\n\ts = 0\n\tfor i in range(1, 1000):\n\t\ts += i * 1000 ** i\n\t\n\t# a = list(map(int, input().split()))\n\ta = [1000]\n\ta.extend(list(map(lambda x: int(x) - 1, input().split())))\n\t\n\t# print(a)\n\t# def b(s):\n\t#     p = 1000\n\t#     q = -1\n\t#     if s > q:\n\t#         return q\n\t#     while p < q:\n\t#         s += p\n\t#         q -= 1\n\t#         if s < p:\n\t#             p = p + 1\n\t#         else:\n\t#             return q\n\t#     if s == a[len(a) - 1]:\n\t#         return -1\n\t#     elif s < 0:\n\t#         return b(s)\n\t#     else:\n\t#         return a[len(a) - 1]\n\n\tb(s)\n\tif b(s) < 0:\n\t\tprint(-1)\n\telse:\n\t", "\nn = int(input().strip())\n\nif n < 0:\n\tprint(-1)\nelse:\n\ta = 0\n\tfor i in range(1, int(n ** 0.5 + 1)):\n\t\tif (i ** 2) % 10 == 0:\n\t\t\ts = (i ** 2) // 10\n\t\t\ta += s * (i + 1)\n\t\t\tif a > 0:\n\t\t\t\tbreak\n\tif a > 0:\n\t\tprint(a)\n\telse:\n\t\tprint(-1)\n"], "249": ["def convert_time(time):\n\th, m = map(int, time.split(':'))\n\treturn h * 3600 + m * 60 + 60 * (m > 0)\n\ndef answer():\n\tprint('{:02d}:{:02d}'.format(convert_time(time), convert_time(time).split(':')))\n\nanswer()\n", "# -*- coding: utf-8 -*-\n\nimport time\n\ndef timestamp(time):\n\ttime = time.split(':')\n\th = int(time[0])\n\tm = int(time[1])\n\treturn (h*60 + m) % 60\n\ns = input()\nt = input()\n\nprint(timestamp(time))\n", "#!/usr/bin/env python3\n\ndef solve(s, t):\n\th, m = list(map(int, s.split(':')))\n\treturn f'{h + 60 * m}:{m * 60}'\n\ndef main():\n\tfrom sys import stdin, stdout\n\tfor _ in range(int(stdin.readline())):\n\t\ts, t = [x.strip() for x in stdin.readline().split(':')]\n\t\tprint(solve(s, t))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\ndef time_to_minutes(time):\n\th, m = time.split(':')\n\th, m = int(h), int(m)\n\treturn h * 60 + m\n\ntime = input().split(':')\ntime = [time[i] for i in range(0, len(time))]\ntime = time[2::2]\n\ndef time_to_minutes(time):\n\th, m = time.split(':')\n\th, m = int(h), int(m)\n\treturn h * 60 + m\n\n\nprint(time_to_minutes(time))\n", "#!/usr/bin/env python3\n\ndef main():\n\th, m = input().split(':')\n\th, m = int(h), int(m)\n\tif h == m:\n\t\treturn '00:06'\n\treturn \"{}:{}\".format((h - m) % 24 or 12, 60 * 60)\n\ndef __starting_point():\n\ttry:\n\t\tfor i in range(int(input())):\n\t\t\tmain()\n\texcept:\n\t\tpass\n\n\n\n__starting_point()\n", "time = input()\ntime = time.split(':')\ntime = list(map(int,time))\n\nif time[2] == 0:\n\tprint(str(time[0])+':'+str(time[1]))\nelse:\n\tprint(str(time[0])+':'+str(time[1]))\n"], "250": ["import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\n\nn=int(input())\nA=list(map(int,input().split()))\n\nC=[defaultdict(int) for i in range(n)]\nfor i in range(n):\n\tC[A[i]].append(i+1)\n\t\nif max(C.values())>sum(A)/2:\n\tprint(max(C.values())+1)\n\treturn\n\n# print(C)\n\nans=0\nC_max=C.items()[0][1]\n# print(len(C_max))\nfor i in range(len(C_max)):\n\tlength=len(C_max[i])\n\tans=max(ans,abs(C_max[i][0]-i+1))\n\t# print(i,ans,length)\n\nprint(ans)\n", "n = int(input())\na = list(map(int,input().split()))\na.append(0)\nsuma = 0\ndura = 0\nans = 0\nb = [0]*n\nfor i in range(n):\n\tsuma += a[i]\n\tdura = max(dura,a[i]-a[i-1])\n\tans = max(ans,dura/suma)\n\tb[i] = dura\nif suma*n < (a[n-1]-a[0]):\n\tprint(1)\nelse:\n\tprint(n)\n", "n=int(input())\na=list(map(int,input().split()))\ne=[]\nmx=0\nth=0\nfor i in range(n):\n\tt=a[i]\n\tmx+=t\n\tth+=t//a[i]\n\te.append([mx,th])\nmx=0\nth=0\nfor i in range(n-1,-1,-1):\n\tt=a[i]\n\tmx+=t\n\tth+=t//a[i]\n\te.append([mx,th])\nmx=0\nth=0\nfor i in range(n):\n\tt=a[i]\n\tmx+=t\n\tth+=t//a[i]\n\te.append([mx,th])\nmx=0\nth=0\nfor i in range(n-1,-1,-1):\n\tt=a[i]\n\tmx+=t\n\tth+=t//a[i]\n\te.append([mx,th])\nprint(max([e[-1][0],e[-1][1]]))\n", "def solve():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tmx = 0\n\ttotal = 0\n\td = 0\n\tfor i, ai in enumerate(a):\n\t\ts = sum(ai)\n\t\tcur = cur_sum = 0\n\t\tfor j in range(i, n):\n\t\t\tcur += ai[j]\n\t\t\tcur_sum += ai[j]\n\t\t\tmx = max(mx, cur_sum / (j - i + 1))\n\t\t\tif cur > mx:\n\t\t\t\tmx = cur\n\t\t\td = max(d, cur)\n\tprint(n - d)\n\n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n", "n = int(input())\na = list(map(int, input().split()))\n\ndef max_arithmetic_mean(a, mean):\n\tmax_num = 0\n\tcurrent_num = 0\n\tfor i in range(len(a)):\n\t\tif i < len(a) - 1:\n\t\t\tcurrent_num += a[i]\n\t\telse:\n\t\t\tcurrent_num = a[i]\n\t\tmean = float(mean)\n\t\tif mean > max_num:\n\t\t\tmax_num = mean\n\t\tif current_num * (i + 1) < a[i]:\n\t\t\tcurrent_num = a[i]\n\treturn max_num\n\nmax_num = max_arithmetic_mean(a, sum(a) / (len(a) - 1))\n\nprint(max_num)\n", "def solve(A,n):\n\tmax_ = 0\n\tcurr_ = 0\n\ttotal = 0\n\tmean = 0\n\tfor i in range(n):\n\t\ttotal += A[i]\n\t\tmean = (mean + A[i]) / float(n)\n\t\tif mean < curr_:\n\t\t\tcurr_ = mean\n\t\t\tmax_ = i+1\n\t\telif mean > curr_:\n\t\t\tmax_ = max(max_,i-curr_)\n\treturn max_\nn = int(input())\nA = list(map(int,input().split()))\nprint(solve(A,n))\n"], "251": ["def main():\n\tfrom sys import stdin, stdout\n\tmod = 998244353\n\tn, m, k = [int(_) for _ in stdin.readline().split()]\n\tif k == 0:\n\t\tprint(n)\n\t\treturn\n\telif k == 1:\n\t\tprint(m)\n\t\treturn\n\telif n == m:\n\t\tprint((1)**k)\n\t\treturn\n\telif m > n:\n\t\tm, n = n, m\n\n\tdp = [[0]*(k+2) for _ in range(n+2)]\n\tdp[0][0] = 1\n\tfor i in range(1, n+2):\n\t\tfor j in range(1, k+1):\n\t\t\tdp[i][j] += dp[i-1][j-1]*(2*j+1)\n\n\tsumm = 0\n\tfor i in range(1, n+2):\n\t\tsumm += dp[-1][i]\n\n\tprint(summ%mod)\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def main():\n\tfrom sys import stdin, stdout\n\tmod = 998244353\n\tn, m, k = list(map(int, stdin.readline().split()))\n\tcolor = [0] * m\n\tfor _ in range(k):\n\t\tcolor[0] = 1\n\t\t# color[1] = 3 if brick1 is painted in two different colors\n\t\t# else it will be 1\n\tfor brick in range(1, n + 2):\n\t\tcolor[brick] = 3\n\t\tif brick > n:\n\t\t\tbreak\n\t\tfor c in range(1, m):\n\t\t\tif color[c] == color[brick - 1]:\n\t\t\t\tcolor[c] = 3 * color[brick]\n\t\t\telse:\n\t\t\t\tcolor[c] = color[brick - 1] * 2\n\t\tk -= 1\n\tans = 0\n\tfor brick in range(n, 0, -1):\n\t\tans += color[brick]\n\t\tif brick > n:\n\t\t\tbreak\n\t\tans %= mod\n\tprint(ans)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\ndef fin(): return sys.stdin.readline().strip()\n\nmod = 998244353\n\ndef main():\n\tn, m, k = map(int, fin().split())\n\tif k == 0:\n\t\tprint(1)\n\t\treturn\n\telif k == 1:\n\t\tprint(2)\n\t\treturn\n\tb = [c % mod for c in (0, 1)]\n\tnb = m - 1\n\tfor c in b[1:]:\n\t\tnb -= 1\n\t\tnb //= 4\n\tc = b[0] * nb\n\n\tprint(c)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "MOD = 998244353\n\nn, m, k = list(map(int, input().split()))\n\nif k == 0:\n\tprint(1)\n\treturn\n\nif k == 1:\n\tprint(2)\n\treturn\n\ns = n\nt = m\nans = s\n\nwhile t > 0:\n\tif t % 2 == 0:\n\t\tans = ans * (s - 1) % MOD\n\ts -= 1\n\tt //= 2\n\ndef c(i):\n\tr = 1\n\tfor j in range(i, 0, -1):\n\t\tr *= i + j\n\treturn r\n\nprint(c(m) - c(k) + (m - 1) * t % MOD)\n", "from itertools import accumulate\n\nMOD = 998244353\n\nn, m, k = map(int, input().split())\ns = set()\nfor i in range(1, min(m + k, n + 1)):\n\ts.add(i % MOD)\n\nif n == m:\n\tprint(1)\n\treturn\n\ndp = [[0 for i in range(n + 1)] for j in range(k + 1)]\ndp[0][0] = 1\nfor i in range(1, k + 1):\n\tfor j in range(1, n + 1):\n\t\tdp[i][j] = (dp[i - 1][j - 1] + (0 if i == j else dp[i - 1][j])) % MOD\n\nprint(sum(dp[-1]) % MOD)\n", "def power(x, y):\n\tif y == 0:\n\t\treturn 1\n\telif x == 0:\n\t\treturn 0\n\tif y % 2 == 0:\n\t\treturn power(x, y // 2) * power(x, y // 2)\n\n\treturn power(x, y // 2) * (x * power(x, y // 2) - x)\n\n\nmod = 998244353\n\nn, m, k = list(map(int, input().split()))\n\nr = [0, 1]\n\nfor i in range(1, (m - 1) // 2 + 1):\n\tr.append((r[-1] * (k - 1)) % mod)\n\nprint(r[k])\n"], "252": ["n = input()\nif (n[0]!= '0' and n[1:]) == '14':\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n = int(input())\n\nl = list(range(1, n+2))\n\nif n in l:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n=int(input())\nif n==1:\n\tprint('YES')\nelse:\n\tl=len(str(n))\n\tif n[0]=='0':\n\t\tprint('NO')\n\telse:\n\t\ta=['1','14','14']\n\t\tfor i in range(l-1):\n\t\t\tif n[i]!=a[-1]:\n\t\t\t\tb=list(n)\n\t\t\t\tbreak\n\t\t\ta=a[:i]+a[i+1:]\n\t\t\tfor j in b:\n\t\t\t\tif j=='0':\n\t\t\t\t\tprint('NO')\n\t\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tprint('YES')\n", "def magic(s):\n\tn = len(s)\n\treturn '1' * n + '14' * (n - 1) + '14' * (n - 2) > s\n\ndef solve(n):\n\tif magic(n):\n\t\treturn 'YES'\n\treturn 'NO'\n\n\nn = int(input())\nprint(solve(n))\n", "n = int(input())\nr = 0\nfor i in range(len(str(n)) - 1):\n\tif not (n & (i + 1)):\n\t\tr += 1\nif r > 0:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n = input()\nif n[0]!= '0' and n[1:].isdigit() and int(n[1:]) <= 6:\n\tprint('YES')\nelse:\n\tprint('NO')\n"], "253": ["n, x = list(map(int, input().split()))\ntable = [0] * (n + 1)\nfor i in range(1, n + 1):\n\tif i * j > x:\n\t\ttable[i * j] = 0\n\telse:\n\t\ttable[i * j] += 1\n\nprint(sum(x * (k - 1) for k in range(1, n + 1)) // (n - 1)\n", "n, k = map(int, input().split())\nm = n * k // 2\nprint(m + 1)\n", "import sys\n\ndef solve(n, x):\n\tleft = 1\n\tright = 2 * n\n\tcenter = 2 * n - 1\n\tassert (left >= right):\n\t\treturn 0\n\tassert (left + right >= 2 * n):\n\t\treturn 0\n\t# print(left, right, x)\n\tcount = 0\n\tfor i in range(n):\n\t\trow = i * n + right\n\t\tif row * i == x:\n\t\t\tcount += 1\n\t\t\t# print(i, row)\n\t\tright -= 1\n\treturn count\n\n\ndef __starting_point():\n\tn, x = list(map(int, sys.stdin.readline().split()))\n\tassert (x > 0):\n\t\tsys.stdin.readline().split()\n\t\ta = tuple(map(int, sys.stdin.readline().split()))\n\t\tassert (len(a) == 4):\n\t\t\tprint(solve(n, a))\n\n__starting_point()\n", "import sys\n\ndef fout(s, end='\\n'): sys.stdout.write(str(s) + end)\ndef main():\n\tn, x = map(int, input().split())\n\tc = 0\n\tfor i in range(1, n + 1):\n\t\tfor j in range(1, i + 1):\n\t\t\tif x * j in [1, i * j + 1, i * j * 2 + 1]:\n\t\t\t\tc += 1\n\tprint(c)\n\t\ndef __starting_point():\n\tmain()\n__starting_point()\n", "import sys\n\ndef main():\n\tsys.setrecursionlimit(1500000)\n\tinput()\n\tmatrix = list(map(int, input().split()))\n\tcnt = 0\n\tfor i, r in enumerate(matrix):\n\t\tfor j, v in enumerate(range(i, i + r * len(matrix), r)):\n\t\t\tif matrix[j] * v == i * j:\n\t\t\t\tcnt += 1\n\tprint(cnt)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n, x = map(int, input().split())\nm = n * (n + 1) // 2\na = 0\nfor i in range(1, m + 1):\n\tfor j in range(1, m + 1):\n\t\tif x * i % j == 0:\n\t\t\ta += 1\nprint(a)\n"], "254": ["n,k = map(int,input().split())\nnew = ''.join(sorted(list(str(input())))+[''])\nif len(new)%k==0:\n\tprint(new)\nelse:\n\tdef _check(a,b):\n\t\ti = 0\n\t\tj = 0\n\t\twhile i<len(a)-1:\n\t\t\tif a[i]!=a[j]:\n\t\t\t\treturn False\n\t\t\tj+=1\n\t\t\ti+=1\n\t\treturn True\n\n\tdef _is_valid(a,b):\n\t\ti = 0\n\t\tj = 0\n\t\twhile i<len(a)-1:\n\t\t\tif a[i]!=a[j]:\n\t\t\t\treturn False\n\t\t\tj+=1\n\t\t\ti+=1\n\t\treturn True\n\t\n\tfor v in range(k):\n\t\tif _is_valid(new,'abcdefghijklmnopqrstuvwxyz'):\n\t\t\t_check(_new,'abcdefghijklmnopqrstuvwxyz')\n\t\tif _is_valid(new,'ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\t\t\t_check(_new,'ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\tprint(_new)\n", "#!/usr/bin/env python3\n\ndef main():\n\tn, k = list(map(int, input().split()))\n\tpassword = []\n\tfor i in range(n):\n\t\tpassword.append(input())\n\tpassword.sort()\n\tfor i in range(n):\n\t\tfor j in range(26):\n\t\t\tif password[i+1][j]!= password[i][j+1]:\n\t\t\t\tpassword[i+1] = password[i][j+1]\n\t\t\t\tbreak\n\tfor i in range(k):\n\t\tif len(password)!= 2**(i+1) - 1:\n\t\t\tprint(''.join(password[i:]))\n\nmain()\n\n", "import sys\nfrom collections import Counter\nreadline = sys.stdin.readline\n\ndef main():\n\tn, k = map(int, readline().split())\n\tcnt = Counter(readline().strip())\n\tflag = True\n\tl = len(cnt)\n\tfor i in range(l - 1):\n\t\tif len(cnt[i+1])!= 2:\n\t\t\tflag = False\n\tif flag:\n\t\tprint(''.join(list(set(list(cnt.keys())))))\n\telse:\n\t\treturn\n\n\ndef __starting_point():\n\tmain()\n__starting_point()\n", "import sys\n\ndef solve():\n\tn, k = map(int, input().split())\n\tal = 'abcdefghijklmnopqrstuvwxyz'\n\tl = len(al)\n\tif n!= l:\n\t\tprint(''.join([al[i:i+2] for i in range(0, n-l+1)]))\n\telse:\n\t\tj = 0\n\t\twhile j < 26:\n\t\t\tx = al[j]\n\t\t\tq1 = set([x])\n\t\t\tq2 = set([x+al[i] for i in range(1, l)])\n\t\t\tif len(q1) == k:\n\t\t\t\tprint(x+al[i])\n\t\t\t\treturn\n\t\t\tq1.add(x)\n\t\t\tj += 1\n\t\tprint(x+al[i] for i in range(0, n-l+1))\n\nt = 1\nfor _ in range(t):\n\tsolve()\n", "def main():\n\tn, k = list(map(int, input().split()))\n\tcnt = [0] * 26\n\tfor i in input():\n\t\tcnt[ord(i) - 97] += 1\n\tinp = \"\".join(cnt)\n\tif len(inp)!= n + k:\n\t\tprint(inp)\n\t\treturn\n\tfor i in range(n - len(inp) + 1):\n\t\tif cnt[ord(inp[i]) - 97]!= 0:\n\t\t\tcnt[ord(inp[i]) - 97] -= 1\n\t\t\tif cnt[ord(inp[i]) - 97] == 0:\n\t\t\t\tdel cnt[ord(inp[i]) - 97]\n\tprint(inp)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\nfrom collections import defaultdict as dd\ninput = sys.stdin.readline\nI = lambda : list(map(int,input().split()))\n\nn,k = I()\nd = dd(int)\nfor i in range(26):\n\td[I()][i] = 1\ns = sorted([ord(i)-97 for i in I()])\nif n == s:\n\tprint(\"\".join([chr(97+i) for i in range(n)]))\n\treturn\nfor i in range(n-1):\n\tc = s[i]\n\td[I()][i+1] = 1\n\td[I()][i] = 1\ns1 = [I() for i in range(k)]\ns2 = [I() for i in range(k)]\nif len(s1)!= len(s2):\n\tfor i in range(k):\n\t\tc = s1[i]\n\t\td[I()][i] = 1\ns3 = [I() for i in range(k)]\nD = dd(int)\ncnt = len(d)\ncnt1 = len([j for i,j in enumerate(sorted([ord(i)-97 for i,j in enumerate(s1)]) if j!=d[i]])\nfor i in range(k):\n\tcnt[s1[i]] -= 1\n\tcnt[s2[i]] -= 1\n\tcnt[D(s1[i])+D(s2[i])+1] += 1\nprint(\"\".join([chr(97+i) for i in range(cnt1)]))\n"], "255": ["n, a, b = list(map(int, input().split()))\n\nl = []\nfor i in range(n):\n\tl.append(list(map(int, input().split())))\n\nl.sort(key=lambda tup: tup[0] * tup[1])\n\nimpressions = []\nlast = l[0][1] - l[0][0] + 1\nfor impression in l:\n\tif last <= impression[0] * impression[1] and last > 0:\n\t\timpressions.append((last, impression[1]))\n\t\tlast = impression[1]\nif not impressions:\n\tprint(0)\n\treturn\n\nmax_area = 0\nfor start, end in impressions:\n\tmax_area = max(max_area, end * (end - start) + start * (start - end))\n\nprint(max_area)\n", "#!/usr/bin/env python3\nfrom itertools import islice\n\ndef __starting_point():\n\tn, a, b = map(int, input().split())\n\tl = []\n\tfor _ in range(n):\n\t\tx, y = map(int, input().split())\n\t\tl.append((x, y))\n\t\n\td = [x*y for x, y in islice(l, 1, None)]\n\td.sort()\n\t# print(d)\n\ti = 0\n\tresult = 0\n\twhile i < len(d):\n\t\tresult += min(d[i], d[i+1])\n\t\ti += 2\n\tprint(result*2)\n__starting_point()\n", "#!/usr/bin/env python3\nn, a, b = list(map(int, input().split()))\n\np = []\nfor i in range(n):\n\tt = list(map(int, input().split()))\n\tp.append((t[0], -t[1]))\n\np.sort()\n\n\n\nmaxim = 0\n\nfor i in range(n-1):\n\tfor j in range(i+1, n):\n\t\tt = p[i]\n\t\theight = (max(t[1] - t[0], a) * (b - a))\n\t\twidth = max(t[0] - t[1], b) * (n - j - 1)\n\t\timprint = (maxim - height + width)\n\t\tif imprint > maxim:\n\t\t\tmaxim = imprint\n\nprint(maxim)\n", "def max_area(x, y, t):\n\t# t = 0 for i <= 0\n\t# t = 1 for i <= 10\n\t# for i in range(n):\n\t#     x1, y1 = input().split()\n\t#     x2, y2 = input().split()\n\t#     # O(n2)\n\t#     if (x1 == '1' and y1 == '1') or (x2 == '1' and y2 == '1'):\n\t#         print(\"O(n2)\")\n\t#         return 0\n\t#     t = -t if (x1 == '1' and y1 == '0') else t\n\t#     if (x1 == '1' and y1 == '1') or (x2 == '1' and y2 == '1'):\n\t#         print(\"O(n3)\")\n\t#         return 0\n\t#     t = -t if (x1 == '1' and y2 == '1') else t\n\tx = max(x, x1)\n\ty = max(y, y1)\n\tt = -t\n\t# print(\"X\")\n\t# print(\"y\")\n\t# print(\"t\", t)\n\tlt = [(x, y)]\n\tlt.sort()\n\t# print(\"xyt(lt)\", lt)\n\ttot = 0\n\tfor i in range(n):\n\t\t# t = 0\n\t\t# t = 1 if (lt[-1][1", "n=int(input())\na=list(map(int,input().split()))\nb=[]\nc=[]\nfor i in range(n):\n\tb.append(list(map(int,input().split())))\n\t\nb.sort()\ncount=0\nleng=len(b)\nfor i in range(0,leng):\n\tif b[i][0]>a[i][1]:\n\t\tcount+=1\n\telse:\n\t\tleng-=1\n\t\tcount+=1\n\t\nif count>0:\n\tprint(a*(a[leng]-a[0]))\nelse:\n\tprint(0)\n", "from itertools import compress\nfrom collections import defaultdict\nfrom operator import itemgetter\nimport sys\nimport math\n\ndef ria():\n\treturn list(map(int, input().split()))\ndef ri():\n\treturn int(input())\ndef ria_to_s(a):\n\treturn''.join([str(s) for s in a])\n\n\ndef small(a, b):\n\ts = set(a)\n\tif len(s) < 2:\n\t\treturn 0\n\tif len(s) == 2:\n\t\ta, b = s\n\t\treturn a * b\n\tc = max(a, b)\n\td = c - small(a, b) * 2\n\te = small(a, d) * c\n\tf = small(b, d) * d\n\treturn max([e, f, a * b * c])\n\n\ndef __starting_point():\n\tn, a, b = ria()\n\tarea = defaultdict(int)\n\tfor _ in range(n):\n\t\tx, y = ria()\n\t\tarea[x, y] = min(area[x, y-1], area[x-1, y], area[x, y+1])\n\tprint(area[b, a-1])\n\n\n__starting_point()\n"], "256": ["import sys\n\ninput = sys.stdin.readline\n\nn = int(input())\nx = []\ny = []\nfor i in range(n):\n\tx.append(list(map(int, input().split())))\n\ty.append(list(map(int, input().split())))\n\ndx = [0, 1, 0, -1]\ndy = [1, 0, -1, 0]\nfor xi, yi in zip(x, y):\n\tif xi in x and yi in y:\n\t\tdx[0] += 1\n\t\tdx[1] += dy[0]\n\t\tdy[0] = -dy[1]\n\telif xi in x or yi in y:\n\t\tdx[0] += dy[0]\n\t\tdx[1] -= dx[0]\n\telse:\n\t\tdx[0] = dy[0]\n\t\tdy[1] = -dy[1]\n\nprint(*dx)\n", "import sys\nimport math\nimport heapq\n\ndef main():\n\tdef input():\n\t\treturn sys.stdin.readline()[:-1]\n\tn = int(input())\n\tn *= 4\n\tpoints = [[] for i in range(n)]\n\tfor i in range(n):\n\t\tx, y = list(map(int, input().split()))\n\t\tpoints[x].append(y)\n\tfor c in range(n):\n\t\tfor y in points[c]:\n\t\t\tpoints[c].append(y)\n\td = {}\n\ttot = [0 for i in range(n)]\n\tcur = 0\n\tfor x in range(n):\n\t\ttot[x] = cur\n\t\ttot[x+1] = max(cur, tot[x+1])\n\t\tcur = tot[x]\n\tdef merge(x, y):\n\t\tr = n-1\n\t\twhile r >= 0 and y > 0:\n\t\t\tr = r - 1\n\t\t\tif tot[y] < (r - x):\n\t\t\t\ttot[y] = (r-x)\n\t\t\telse:\n\t\t\t\ttot[y] = r\n\t\t\t\tr -= 1\n\t\treturn tot\n\tfor i in range(n-1):\n\t\tx, y = points[i]\n\t\tcur = merge(x, y)\n\t\tif cur!= d.get(d.get(x), -1):\n\t\t\td[x] = cur\n\t\t\ttot[x] += 1\n\tprint(\" \".join(map(str,d.values())))\ndef __starting_point():", "import sys\ninput=sys.stdin.readline\n\nn=int(input())\nr=[]\nfor i in range(n+1):\n\tx,y=map(int,input().split())\n\tr.append([x,y])\nr.sort()\n\nc=r[-1][0]\nd=r[-1][1]\nfor i in range(n):\n\tif not(r[i][0]<c<r[i][1]):\n\t\tc=r[i][0]\n\t\td=r[i][1]\nprint(c,d)\n", "n = int(input())\npoints = []\n\nfor i in range(n):\n\tpoints.append(list(map(int, input().split())))\n\nfor point in points:\n\tx, y = point[0], point[1]\n\tdx, dy = (x - dy, y - dx)\n\tif dx == 0 or dy == 0:\n\t\tprint(0, end=\" \")\n\telse:\n\t\tprint(dy * 2, end=\" \")\n", "def main():\n\timport sys\n\tinput = sys.stdin.readline\n\tn = int(input())\n\tif n == 2:\n\t\tprint(*[2, 1])\n\t\treturn\n\t\n\tc = [[] for i in range(n)]\n\tr = n\n\tfor i in range(n):\n\t\tx, y = map(int, input().split())\n\t\tc[x-1].append(y)\n\t\tc[y-1].append(x)\n\t\n\tt = []\n\tfor i in range(n):\n\t\tx = c[i]\n\t\tt += sorted(x)\n\t\n\tlo = 0\n\thi = n - 1\n\twhile lo < hi:\n\t\tmid = (lo + hi) // 2\n\t\tx = t[mid]\n\t\t#print(x)\n\t\tif x < lo:\n\t\t\tlo = mid + 1\n\t\tif x > hi:\n\t\t\thi = mid\n\tif hi == lo:\n\t\tprint(*[1, 1])\n\t\treturn\n\tprint(*[lo, hi])\n\t\t\n\nmain()\n", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LI_(): return list(map(int, sys.stdin.readline().split()))\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\n\n\ndef main():\n\tn = I()\n\trr = []\n\tfor _ in range(n):\n\t\tx, y = LI()\n\t\tx -= 1\n\t\ty -= 1\n\t\tif x < 0 and y > 0:\n\t\t\trr.append((x, y))\n\t\telif x > 0 and y < 0:\n\t\t\trr.append((x, y))\n\t\telif x > 0:\n\t\t\trr.append((x, y-1))\n"], "257": ["import sys\nimport math\n\ndef main():\n\tinput = sys.stdin.readline\n\t\n\tn = int(input())\n\t\n\tdigits = [int(i) for i in str(n)]\n\tprod = 1\n\t\n\tfor i in range(1, len(digits)):\n\t\tprod *= digits[i]\n\t\n\tans = []\n\t\n\tfor i in range(len(digits)):\n\t\tans.append(prod)\n\t\n\tans = [str(i) for i in ans]\n\t\n\tprint(\"\".join(ans))\n\nmain()\n", "n = int(input())\n\narr = [0] * n\n\nfor i in range(n):\n\tarr[i] = 9 * (ord(str(i)) - 48)\n\nans = 1\nfor i in range(n):\n\tans *= arr[i]\n\nprint(ans)\n", "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nall = [0]\n\nfor i in range(1, 10):\n\tall.append(all[-1] * i)\n\nall.reverse()\n\ndp = [0 for _ in range(n+1)]\n\nfor i in range(n):\n\tfor c in str(i):\n\t\tdp[int(c)] = max(dp[int(c)], all[-1] * dp[int(c)])\n\nprint(dp[-1])\n", "n = int(input())\n\narr = list(map(int,str(n)))\n\ns = []\n\nfor i in arr:\n\ts += [i]\n\ns.sort(reverse=True)\n\nans = 1\n\ni = 0\nwhile i < len(s):\n\tans *= s[i]\n\ti += 1\n\nwhile i < len(s):\n\tans *= 10 ** i\n\ti += 1\n\nprint(ans)\n", "n = int(input())\nprint(''.join(str(int(i)**2 for i in str(n)))\n", "import sys\n\ninput=sys.stdin.readline\n\nn=int(input())\n\nc=1\nwhile n>0:\n\ti=1\n\tm=10**i\n\twhile n>0:\n\t\tif m%i==0:\n\t\t\tn-=1\n\t\t\tm=m//i\n\t\telse:\n\t\t\ti+=1\n\tc*=i\n\t\n\tprint(c)\n\t\n"], "258": ["a = input()\ns = 'abcdefghijklmnopqrstuvwxyz'\nt = 0\ni = 0\nn = len(a)\nwhile (n > 0):\n\tif a[i]!= s[i]:\n\t\tt += 1\n\t\ti += 1\n\tn -= 1\nprint(t)\n", "from collections import Counter\nn = input()\ncnt = dict(Counter(list(n)))\nprev = (0,0,0,0)\nfor c in 'abcdefghijklmnopqrstuvwxyz':\n\td = dict(Counter(list(c)))\n\tcnt[c] -= 1\n\tif d[c] == 0:\n\t\tprev = (d[c], c, 0, 1)\n\telse:\n\t\tprev = (d[c], c, 1, 0)\nn = len(cnt)\nans = 0\nwhile n:\n\t# print(prev)\n\tcnt = dict(Counter(list(prev)))\n\tind = 0\n\tdel_set = set()\n\tfor ind, c, i, j in prev:\n\t\td[c] -= 1\n\t\tif d[c] == 0:\n\t\t\tind = ind + 1\n\t\t\tdel_set.add((c, i, j))\n\t\telse:\n\t\t\tif not del_set:\n\t\t\t\tans += 1\n\t\t\telse:\n\t\t\t\tbreak\n\tn = len(del_set)\n\tprev = (0,0,0,0)  # delete me\n\t# print(ind)\n\tfor ind, c, i, j in prev:\n\t\td[c] -= 1\n\t\tif d[c] == 0:\n\t\t\tind = ind + 1\n\t\t\tdel_set.add((c, i, j))\n\t\telse:\n\t\t\tif not del_set:\n\t\t\t\tans += 1\n\t\t\telse:\n\t\t\t\tbreak\n\t# print(ans)\n\tans +=", "s=input()\nn=len(s)\nc=0\nfor i in range(n-1):\n\tif s[i]!=s[i+1]:\n\t\tc+=1\nprint(c)    \n", "import sys\n\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\ndef input_split():\n\treturn [int(i) for i in input().split()]\n\npoints = [\n\t'a',\n\t'b',\n\t'c',\n\t'd',\n\t'e',\n\t'f',\n\t'g',\n\t'h',\n\t'i',\n\t'j',\n\t'k',\n\t'l',\n\t'm',\n\t'n',\n\t'o',\n\t'p',\n\t'q',\n\t'r',\n\t's',\n\t't',\n\t'u',\n\t'v',\n\t'w',\n\t'x',\n\t'y',\n\t'z'\n]\n\nset_point = {tuple(point): 0}\n\ndef delete_all_possible(set, point):\n\tif len(set) == 0:\n\t\treturn\n\tfor point in set[point]:\n\t\tdelete_all_possible(set, point)\n\tset[point] = -1\n\ndef all_possible(set):\n\tif len(set) == 0:\n\t\treturn False\n\n\tfor point in set:\n\t\treturn all_possible(set - {point})\n\t\nn = input_split()\nn = list(map(int, n))\ndelete_set = {tuple(point): 0}\nnot_delete_set = set_point\nfor i in range(len(n)):\n\tset_point[tuple(n[i])] = i + 1\n\tdelete_set[tuple(n[i])] = -1\n\tif i > 0:\n\t\tif all_", "abc=\"abcdefghijklmnopqrstuvwxyz\"\n\npi=3.141592653589793238\n\nn = input().strip().split(\" \")\ncount = 0\noper = 1\nj = 0\nfor i in n:\n\tj += 1\n\tif (i == pi):\n\t\tcount += 1\n\t\toper += 1\n\telif (i<pi):\n\t\tmi = 1\n\t\twhile (j<len(n) and n[j]!= i+j-1):\n\t\t\tj += 1\n\t\t\tif (j==len(n)):\n\t\t\t\tbreak\n\t\t\tmi += 1\n\t\t\toper += 1\n\t\telse:\n\t\t\toper += 1\n\t\t\tcount += mi-(2*mi+1)\n\telse:\n\t\tmi = 2*pi-(1 if (i<pi) else 0)\n\t\twhile (j<len(n) and n[j]!=i+j-1):\n\t\t\tj += 1\n\t\t\tif (j==len(n)):\n\t\t\t\tbreak\n\t\t\tmi += 1\n\t\t\toper += 1\n\t\telse:\n\t\t\toper += 1\n\t\t\tcount += mi-(2*mi+2)\n\t#print(i,j,oper,count)\n\nif (count==0):\n\tprint(0)\nelif (count > 10**6):\n\tprint(count)\nelse:\n\tprint(oper)\n", "s = input()\nc = set()\nfor i in range(len(s)-1):\n\tx = s[i]\n\tc.add(tuple(s[i+1:]))\n\nde = []\nto_delete = set()\nfor i in range(len(s)):\n\tif i not in to_delete:\n\t\tstk = []\n\t\tfor j in c:\n\t\t\tx = j[0]\n\t\t\ty = j[1]\n\t\t\tif (x,y) not in to_delete and (x,y) not in stk:\n\t\t\t\tstk.append((x,y))\n\t\t\t\tde.append(i)\n\t\tif len(stk) >= 2:\n\t\t\tbreak\n\t\tif len(to_delete) == 0:\n\t\t\tto_delete.add(i)\n\nprint(len(de))\n\n\n\n\n"], "259": ["n = int(input())\na = list(map(int,input().split()))\n\nd = {}\n\ni = 0\ns = 0\n\nwhile i < n:\n\n\tj = i\n\twhile j < n:\n\t\td[a[j]] = 0\n\t\tj += 1\n\n\ti += 1\n\n\t#print(d)\n\n\tif i < n - 1:\n\t\tk = n - 1\n\t\ts += i * n \n\n\t\twhile k > i:\n\t\t\tif a[k] * a[i] > a[i]:\n\t\t\t\tk -= 1\n\t\t\telse:\n\t\t\t\ts += 1\n\t\t\t\t#print(\"as\",a[i],a[k])\n\n\t\t\ti += 1\n\t\t\t#print(\"i=\",i)\n\t\t\t\t#print(\"k=\",k)\n\t\t\n\telse:\n\n\t\t#print(a,i)\n\t\ts += n \n\ti += 1\n\t#print(\"s=\",s)\n\n\nprint(s)\n\n", "3\nn = int(input())\na = list(map(int, input().split()))\n\nm = n // 2\nans = 0\nfor i in range(m):\n\tfor j in range(i + 1, m):\n\t\tfor k in range(j + 1, m):\n\t\t\tif i * a[i] * a[j] * a[k] == a[i] * a[j] * a[k]:\n\t\t\t\tans += 1\n\nprint(ans)\n", "n = int(input())\nA = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n\tfor j in range(i+1, n):\n\t\tfor k in range(j+1, n):\n\t\t\tif A[i]*A[j]*A[k]<A[i]*A[j]*A[k]:\n\t\t\t\tbreak\n\t\telse:\n\t\t\tans+=1\nprint(ans)\n", "N = 1000003\na = [0] * N\nn = int(input())\nfor i in range(n):\n\ta[i], i = list(map(int, input().split()))\n\ta[i] += 1\n\nm = 10 ** 9\ncnt = [0] * N\natoi = {}\nfor i in range(N):\n\tj = atoi[a[i]]\n\tcnt[j] += 1\n\tif j > 0:\n\t\tatoi[a[i]] = j\n\nfor i in range(N):\n\tfor j in range(i + 1, N):\n\t\tcnt[atoi[a[i] * a[j]]] += 1\n\nans = 0\nfor i in range(N):\n\tans += cnt[0] * (cnt[0] - 1) // 2\n\tfor j in range(i + 1, N):\n\t\tans += cnt[atoi[a[i] * a[j]]] * (cnt[atoi[a[i] * a[j]] - 1) // 2\n\nprint(ans)\n", "n = int(input())\nA = list(map(int, input().split()))\n\nA.sort()\nl = 0\nr = n-1\nans = 0\n\nwhile r>l:\n\tif A[l]*A[r]<=A[l]:\n\t\tans+=(r-l+1)*(r-l)//2\n\t\tl += 1\n\telse:\n\t\tr-=1\n\nprint(ans)\n", "n = int(input())\narr = list(map(int, input().split()))\n\na = sorted(arr)\nans = 0\n\nfor i in range(n):\n\tfor j in range(i+1, n):\n\t\tfor k in range(j+1, n):\n\t\t\tif arr[i]*arr[j]*arr[k] < a[i]*a[j]*a[k]:\n\t\t\t\tans += 1\n\nprint(ans)\n"], "260": ["n=int(input())\nif n==1:\n\tprint(0)\nelse:\n\tnum=1\n\tfor i in range(1,n+1):\n\t\tif i%2==0:\n\t\t\tnum=num*2\n\t\telse:\n\t\t\tnum=num*2+1\n\tif num%1==0:\n\t\tprint(num//2)\n\telse:\n\t\tprint((num//2)+1)\n", "import math\nn = int(input())\nr = 0\nfor i in range(1, n + 1):\n\td = (2 * i - 1) ** 2 + (i - 1) ** 2\n\tif d > 2:\n\t\tr += i - 2\n\telse:\n\t\tr = i\nprint(r)\n", "import sys\nimport math\nfrom collections import defaultdict,deque\nimport heapq\n\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef I(): return int(sys.stdin.readline().rstrip())\ndef LS():return list(sys.stdin.readline().rstrip().split())\ndef S(): return sys.stdin.readline().rstrip()\ndef IR(n):\n\treturn [I() for i in range(n)]\ndef LIR(n):\n\treturn [LI() for i in range(n)]\ndef SR(n):\n\treturn [S() for i in range(n)]\ndef LSR(n):\n\treturn [LS() for i in range(n)]\n\n\n\n#A\n\"\"\"\nk=5\n10\n\ntrue=1\nfalse=0\n1\n\nif k=2:\n\tprint(true)\n\treturn\n\"\"\"\n\n#B\n\"\"\"\nk=7\n10\nif k%2==0:\n\tprint((k+1))\n\treturn\nprint(false)\n\"\"\"\n\n#C\n\"\"\"\nk=3\n10\ndef triangle(a,b):\n\treturn ((a+b)*(a+b-a))/2\n\n\"\"\"\n\n#D\n\"\"\"\nk=4\n10\ndef fact(x):\n\tif x==1:\n\t\treturn 1\n\telse:\n\t\treturn x*fact(x-2)\n\ndef counter(number):\n\tc = 1\n\tfor i in range(2,number):\n\t\tc+=i\n\treturn c\n\ndef div(a,b):\n\treturn a//b\n\ndef MI():\n\treturn list(", "n = int(input())\n\ndef gcd(a, b):\n\tif not b:\n\t\treturn a\n\telse:\n\t\treturn gcd(b, a % b)\n\nnum = n\nfor i in range(2, num + 1):\n\tif num % i == 0:\n\t\tbreak\nn //= i\nq = (num + 1) // i\nif n % q == 0:\n\tq2 = (n // q)\nelse:\n\tq2 = q * (n // q) - 1\nk = n // q2\nremain = q2 - k\ncut = 0\nfor i in range(0, cut + 1):\n\tfor j in range(0, i + 1):\n\t\tif remain == 0 and q2 + j * cut < k:\n\t\t\tremain = q2 + j * cut\n\t\t\tcut = i\n\tif not cut:\n\t\tbreak\n\tfor j in range(cut, i + 1):\n\t\tq2 = (q2 + j) // i\n\t\tif q2 % i == 0:\n\t\t\tbreak\nif cut == k:\n\tprint(0)\nelse:\n\tprint(cut)\n", "#!/usr/bin/env python3\nimport collections, itertools, fractions, functools, math\n\ndef solve():\n\n\tn = int(input())\n\ta = [int(x) for x in input().split()]\n\tm = len(a)\n\n\tif m == 1:\n\t\tprint(n)\n\t\treturn\n\n\tupper = [a[0]]\n\tfor i in range(1,m):\n\t\tif a[i] > upper[-1]:\n\t\t\tupper.append(a[i])\n\tfor i in range(m-2, -1,-1):\n\t\tif a[i] > upper[-1]:\n\t\t\tupper.append(a[i])\n\t\n\tdef gcd(a, b):\n\t\tif a == 0:\n\t\t\treturn b\n\t\treturn gcd(b % a, a)\n\n\tr = 1\n\tfor i in range(m):\n\t\tr *= gcd(upper[i], a[i])\n\t\n\tct = [0]*(n+1)\n\tfor i in range(m):\n\t\tct[r] += (a[i] - b[i])**2\n\n\tprint(ct[0])\n\n\ndef __starting_point():\n\tsolve()\n\n\n__starting_point()\n", "import math\n\ndef gcd(a, b):\n\tif a == 0:\n\t\treturn b\n\treturn gcd(b % a, a)\n\n\nn = int(input())\na = [math.floor(math.sqrt(n)) for _ in range(n)]\nnum = 0\nfor i in a:\n\tnum += i // gcd(i, num)\n\nprint(num)\n"], "261": ["n = int(input())\nprint(0 if n<0 else n%10+int(str(n)[-1])\n", "n = int(input())\nif n < 0:\n\tprint(\"-\")\nelse:\n\tif n == 0:\n\t\tprint(\"0\")\n\telse:\n\t\tprint((n-1)*\"9\")\n", "n=int(input())\nif n<-1:\n\tprint(-1)\nelse:\n\tfor i in range(len(str(n))-1,-1,-1):\n\t\tif n!=int(str(i)[-1]):\n\t\t\tprint(-1)\n\t\t\tbreak\n\telse:\n\t\tprint(0)\n", "a = 0\n \nx = input()\n \nif '-' in x:\n\tx = x.split('-')\n\tdel x[-1]\n\ta = a - sum(int(i) * 10**(len(x)) for i in x)\nelse:\n\ta = -a\nprint(a)\n", "a = int(input())\nq = [a]\nfor i in range(a):\n\tb = list(str(input()))\n\tif b.count(str(i)) < 2:\n\t\tprint('0')\n\t\tbreak\n\telif len(b) > 1 and b[-1] == b[-2]:\n\t\tprint('-',end='')\n\t\tq.append(a)\n\t\ta = 0\n\telse:\n\t\tfor x in b:\n\t\t\tif x!= '-':\n\t\t\t\tq.append(int(x))\n", "def main():\n\tn = int(input())\n\tres = []\n\tfor i in range(1, 10):\n\t\tres.append(i * 10)\n\t\tif i % 10 == 0:\n\t\t\tres[-1] = 0\n\tn = res[::-1]\n\tres = [-1] * len(n)\n\tfor i in range(len(n)):\n\t\tif i and n[i]!= -1:\n\t\t\tres[i] = res[i - 1]\n\t\t\tcontinue\n\t\telif not (i and n[i]) and n[i]!= -1:\n\t\t\tres[i] = -res[i - 1]\n\t\t\tcontinue\n\t\telse:\n\t\t\tres[i] = res[i - 1] + 1\n\tprint(\"\".join(map(str, res)))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "262": ["a,k=list(map(int,input().split()))\n\nif k>len(str(a)):\n\tprint(a)\n\treturn\n\n\ndef swap(s,t,m):\n\tl=list(s)\n\tr=list(t)\n\tif len(l)<len(r):\n\t\tl=r+l\n\t\tr=l\n\tt=list(s)\n\ti=0\n\twhile i<len(t):\n\t\tif t[i]=='0':\n\t\t\tt[i]='9'\n\t\t\tswap(l,r,k)\n\t\t\tm=k-1\n\t\t\ti+=1\n\t\telse:\n\t\t\tt[i]='0'\n\t\t\tswap(l,r,k)\n\t\t\tm+=1\n\t\t\ti+=1\n\t\t\t\n\twhile i<len(l):\n\t\tt[i]='9'\n\t\tswap(r,l,k)\n\t\tm=k-1\n\t\ti+=1\n\nswap(list(range(10)),list(range(10)),10)\n\t\n  \n\nprint(a*pow(10,len(str(a))-k))\n", "\n\na=list(map(int,input().split()))\nk=k\n\nm=10**18+8\nv=0\nfor i in range(len(a)):\n\tl=a[i]%10\n\td=l<v\n\tif d:\n\t\tv=l\n\t\tk-=d\n\nprint(v+k)\n", "a, k = map(int, input().split())\nfor i in range(k):\n\tb = str(a)\n\tif i < len(b) - 1:\n\t\tb = b[1:] + b[0]\n\t\t\n\tout = ''\n\tl = 0\n\tfor c in b:\n\t\tif c!= '0':\n\t\t\tout += c\n\t\t\tl += 1\n\tif l < k:\n\t\tout += '0' * (len(b) - l)\n\t\n\tprint(out)\n", "from itertools import groupby\n\na, k = list(map(int, input().split()))\nl = list(bin(a))\n\ndef max_recursive(k):\n\tif k == 0:\n\t\treturn a\n\tn = len(l)\n\tans, i = 0, 0\n\twhile i < n:\n\t\tj = i\n\t\twhile l[i] == j:\n\t\t\ti += 1\n\t\t\tj += 1\n\t\tl = l[1:]\n\t\tj = i\n\t\twhile l[i] == j:\n\t\t\ti += 1\n\t\t\tj += 1\n\t\tif j - i + 1 < k:\n\t\t\tans = (j-i+1) * 10 + (a % (10**(j-i)-10))\n\treturn ans\n\nans = 0\nfor i in range(k):\n\tif i <= len(l):\n\t\tans += max_recursive(i)\n\t\t\nprint(ans)\n", "#!/usr/bin/env python3\n\ndef main():\n\ta, k = list(map(int, input().split()))\n\tswap_left = 1\n\twhile swap_left <= k and a[-1]!= '0':\n\t\ttmp = a[-1]\n\t\ta = a[:-1]\n\t\tswap_left += swap_left & 1\n\n\ttotal = sum( int(c) * 10 ** i for i, c in enumerate(reversed(a)))\n\n\td = {0 : 0}\n\tfor i, c in enumerate(reversed(a)):\n\t\tif c == '0':\n\t\t\td[i] = total - d[-1] + 1\n\t\telse:\n\t\t\td[i] = d[-1] + 10 ** i\n\n\tr = a[0]\n\tfor k, v in list(d.items()):\n\t\tif k >= v:\n\t\t\tr = k * 10 + r % 10\n\tprint(r)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\na=list(map(int, input().split()))\nk=0\n\nwhile k:\n \n\t#print(a, k)\n\tif len(a)==0:\n\t\tbreak\n\tc=a[0]\n\td=a[1]\n\ta=a[1:]\n\tfor i in range(0, len(a)):\n\t\tif a[i]==c+d:\n\t\t\ta[i]=d\n\t\t\tk-=1\n\t\t\td=c+d\n\t\telse:\n\t\t\tbreak\n\nprint(''.join(map(str, a)))\n"], "263": ["def next(n,n1,n2,n3):\n\tif n == n1:\n\t\treturn n2\n\tif n == n2:\n\t\treturn n3\n\tif (n - n1) % (n2 - n1) == 0:\n\t\treturn n2 + n3\n\treturn 42\n\nl = input().split()\na = []\nb = []\nc = 0\nfor i in range(int(l[0])):\n\ta.append(int(l[i]))\n\tb.append(int(l[i+1]))\nfor i in range(int(l[0]) + 1,int(l[1]) + 1):\n\tc += (b[i] - a[i])\nfor i in range(int(l[0]) - 1):\n\tfor j in range(int(l[1]) - 1):\n\t\tif (a[i] + b[j]!= 1):\n\t\t\ta = a[:i] + [b[j] - a[i]] + a[i + 1:]\n\t\t\tb = b[:j] + [a[i] - b[j]] + b[j + 1:]\n\t\t\tbreak\nprint(next(a,b,c))\n", "a=[int(i) for i in input().split()]\nif a[0]==1 and a[1]==2:\n\tprint(-1)\nelif a[0]!=1 and a[1]==1:\n\tprint(-1)\nelif a[0]!=1 and a[1]%2==0:\n\tprint(-1)\nelse:\n\tprint(a[0]+(a[1]-1)//2)\n", "l=list(map(int,input().split()))\nd=[]\nc=[]\nfor i in range(1,1001):\n\td.append(i*l[i])\nfor i in range(len(d)-1):\n\tc.append(d[i+1]-d[i])\nif all(x in c for x in l):\n\tprint(l[-1])\nelse:\n\tprint('-12')\n", "import sys\ninput = sys.stdin.readline\n\narr=list(map(int,input().split()))\nn=len(arr)\nif arr[0]!=1 or arr[-1]!=1:\n\tprint(\"42\")\n\treturn\n\ndp=[0]*(n+2)\ndp[0]=arr[0]\nfor i in range(1,n-1):\n\tdp[i]=arr[i+1]-arr[i]\na=arr[-1]\nb=arr[0]\nc=a+b\nfor i in range(n-2):\n\tx=arr[i]\n\ty=arr[i+1]\n\tif x!=a and y!=b:\n\t\tc=arr[i+1]-arr[i]\n\tif x==a+b-c:\n\t\tdp[i+2]=c\n\telse:\n\t\tdp[i+2]=abs(a-x)+abs(b-y)\nprint(dp[-1])\n", "n = input().split()\nval = [int(i) for i in n]\n\ndef isProgression(arr, n):\n\tlenArr = len(arr)\n\tconnected = False\n\tfor i in range(lenArr - 1):\n\t\ta = arr[i]\n\t\tb = arr[i + 1]\n\t\tif (a - b)!= 0:\n\t\t\tif not connected:\n\t\t\t\treturn False\n\t\t\tif connected and (a - b!= 1):\n\t\t\t\treturn False\n\t\t\tconnected = True\n\treturn True\n\nif isProgression(val, n):\n\tprint(val[-1])\nelse:\n\tprint(42)\n", "a=list(map(int,input().split()))\nif a[1]+a[2]!=a[0]:\n\tprint(-1)\nelse:\n\tprint(a[0]+a[1])\n\t\n"], "264": ["n=int(input())\nc=list(input())\ni=0\nwhile(len(c)>1):\n\td=list(c)\n\tc=c[0:i]+c[i+1:]\n\ti=i+1\nif len(c)==1:\n\tprint(\"B\")\nelif len(c)==2:\n\tprint(\"G\")\nelse:\n\ti=0\n\td=0\n\tfor i in range(0,len(c)-1):\n\t\tif c[i]==c[i+1]:\n\t\t\tpass\n\t\telse:\n\t\t\td=1\n\t\t\tbreak\n\tif d==0:\n\t\tif c[len(c)-2]==\"B\":\n\t\t\td=1\n\t\telif c[len(c)-2]==\"G\":\n\t\t\td=1\n\t\telse:\n\t\t\td=1\n\tif i==0:\n\t\tprint(\"B\")\n\telse:\n\t\tprint(\"G\")\n", "n = int(input())\nc = input().upper()\ni = 0\nfor ch in c:\n\tif i == n:\n\t\ti = i + 1\n\t\tcontinue\n\tif ch == 'B':\n\t\ti = i + 1\n\telif ch == 'G':\n\t\ti = i + 2\n\telse:\n\t\ti = i + 1\n\tif i == n:\n\t\tbreak\nprint(\"\".join([\"B\", \"G\", \"R\"]+[c[i]]*i))\n", "n = int(input())\na = [list(input()) for i in range(n)]\nb = sorted(a, key=lambda x: (x[0], -x[1]))\nprint(''.join(b[0]))\n", "import collections\nfrom collections import Counter\nn=int(input())\ns=input()\na=Counter(s)\nprint(''.join(list(a[col] for col in ['B','G','R'])))\n", "n = int(input())\nc = input()\nres = \"\"\nfor i in range(len(c)):\n\tif i%2 == 0:\n\t\tres+=\"B\"\n\telse:\n\t\tres+=\"G\"\n\tif i < (len(c)-2):\n\t\tres+=\"R\"\nprint(res)\n", "def main():\n\tn = int(input())\n\ta = list(input())\n\tfor i in range(n):\n\t\ta[i] = ['B', 'G', 'R'][(i + 1) % 3]\n\tprint(''.join(a))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "265": ["l = input().split()\na = int(l[0])\nb = int(l[1])\nc = int(l[2])\nif a > b:\n\ta, b, c, d = b, a, c, d\nif (b == c) and (d!= b):\n\tprint('Yes')\nelse:\n\trot45 = (b * 45) % 45\n\ttrans = a * 90 + c * 45\n\tif not rot45 % 15:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\n", "a = list(map(int, input().split()))\nb = [c-d for d in [a[0], a[1], a[2], a[3]]]\nc = a[4]\nd = a[5]\n\nif c == d:\n\tprint(\"Yes\")\nelse:\n\trot = [90, 270]\n\tprint(\"Yes\" if rot[0] * rot[1] == a[0] * a[1] + b[0] * b[1] + c[0] * c[1] + d[0] * d[1] else \"No\")\n", "def res(a, b, c, d, e, f):\n\tif a == e:\n\t\treturn False\n\tif a == f:\n\t\treturn True\n\tif b == e:\n\t\treturn True\n\tif c == f:\n\t\treturn True\n\tif d == e:\n\t\treturn True\n\tif res(a, b, c, d, e, f) == True:\n\t\treturn False\n\telse:\n\t\treturn res(b, c, d, e, f)\n\na, b, c, d, e, f = list(map(int, input().split()))\nif res(a, b, c, d, e, f):\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n", "t = input().split()\na = list(map(int,t))\nb = list(map(int,t))\nc = list(map(int,t))\nif (a[0]==0 or a[1]==0 or b[0]==0 or b[1]==0 or c[0]==0 or c[1]==0):\n\tprint(\"No\")\nelse:\n\td = dict()\n\td[0] = (b[0]-a[0], b[1]-a[1])\n\td[1] = (c[0]-b[0], c[1]-b[1])\n\tif ((d[0] in d and d[0]!= c[0]) or (d[1] in d and d[1]!= c[1])):\n\t\tprint(\"No\")\n\telse:\n\t\tprint(\"Yes\")\n", "a, b, c, d, e = map(int, input().split())\nf = lambda x: ([abs(c-y) * x] + [c*x + b*y]) % (360 if c==y else 90)\ng = lambda x, y: f(x) and f(y)\nh = lambda x, y, z: (abs(d-v) * x + abs(e-v) * y) % (360 if e==v else 90)\ni = lambda x: \"Yes\" if x and f(x) and g(x) and h(x, y, z) else \"No\"\nprint([\"No\", \"Yes\"][i(a, b, c, d, e)])\n", "a = list(map(int, input().split()))\na.sort()\nif (a[0] == 0 or a[1] == 0 or a[2] == 0):\n\tprint(\"No\")\nelse:\n\tprint(\"Yes\")\n"], "266": ["a, b = list(map(int, input().split()))\nif a > b:\n\tprint(a - b + 1)\nelse:\n\tprint(a + b + 1)\n", "a,b=list(map(int,input().split()))\na=a//b\nif a%b!=0:\n\tprint(a//b+1)\nelse:\n\tprint(a)\n", "a, b = map(int, input().split())\nr = a % b\nprint(r * b + r * (b - a) // 2)\n", "a,b = list(map(int,input().split()))\nans = 0\nwhile a > b:\n\ta, b = b, a%b\n\tans += 1\nprint(ans)\n", "n=list(map(int,input().split()))\nprint(n[0]*n[1])\n", "from collections import Counter\nc = Counter(input())\na, b = list(c.values())\n\nprint(a * b // (b - a))  # returns an integer\n"], "267": ["def gcd(a, b):\n\tif b == 0:\n\t\treturn a\n\telse:\n\t\treturn gcd(b, a%b)\n\nx,y = map(int, input().split())\nprint(gcd(x, y))\n", "x,y=list(map(int,input().split()))\nx=x//(y**2)\nprint(x)\nprint(y)\n", "x, y = map(int, input().split())\n\nlcm = x * y // gcd(x, y)\n\nprint(lcm)\n", "x, y = list(map(int, input().split(' ')))\nprint(x * y // gcd(x, y))\n", "import sys\n\nline = sys.stdin.readline()\nn,m = [int(i) for i in line.split()]\nif m==1:\n\tprint(1)\nelif m==2:\n\tprint(m)\nelse:\n\tgcd = [i for i in range(m)]\n\tfor i in range(2,int(m**.5)+1):\n\t\tif gcd[i]==1:\n\t\t\tgcd[i]=m-i\n\tx = 1\n\tfor i in range(m):\n\t\tx = x*(gcd[i])+f(i,m-x)\n\tprint(x)\n", "x, y = list(map(int, input().split()))\n\ngcd = x * y\n\nfor i in range(2, gcd + 1):\n\tif gcd % i == 0:\n\t\tt = i\n\t\twhile t!= gcd:\n\t\t\tt //= i\n\t\tx = t\n\telse:\n\t\tx //= i\n\nprint(x)\n"], "268": ["def solve(x0, y0):\n\tif x0 == y0: return 1\n\tm = len(x1)\n\tn = len(y1)\n\tif m * n == 3:\n\t\treturn 0\n\t\n\tl0, l1, l2 = solve(x0 + 1, y0 + 1)\n\tr0, r1, r2 = solve(x0, y0 + 1)\n\t\n\treturn (l0 * r2 + l1 * r1) % 3\n\ndef __starting_point():\n\tinp = input().split()\n\tx0 = int(inp[0])\n\ty0 = int(inp[1])\n\t\n\tprint(\"respectable\" if solve(x0, y0) == 3 else \"ugly\")\n\n__starting_point()\n", "from collections import defaultdict\n\ndef read_int():\n\treturn int(input())\n\n\ndef read_ints():\n\treturn list(map(int, input().split(' ')))\n\n\npoints = read_ints()\n\ndata = defaultdict(list)\nfor point in points:\n\tdata[point[0] - 1].append(point[1])\n\tdata[point[1] - 1].append(point[0])\n\nxs = sorted(list(data.keys()))\nys = sorted(list(data.values()))\n\ndef compare(xs, ys):\n\tres1 = xs[0] < xs[1]\n\tres2 = ys[0] < ys[1]\n\treturn res1 or res2\n\n\ndef validate(points, data, i, j, average):\n\tfor point in data[i]:\n\t\tif not compare(points, data, i, point[0], average):\n\t\t\treturn False\n\treturn True\n\ndata = sorted(list(data.items()), key=lambda x: len(x[0]))\n\nfirst = []\nlast = []\n\nfor i in range(len(data)):\n\tfor j in range(i + 1, len(data)):\n\t\tfirst.append(data[i][j])\n\t\tlast.append(data[j][i])\n\n\nif validate(first, data, 0, len(first) - 1, average):\n\tprint('respectable')\nelse:\n\tprint('ugly')\n", "import sys\nimport math\nfrom collections import defaultdict,deque\nimport heapq\ns=sys.stdin.readline\nout=lambda x:print('respectable')\nfor i in range(int(s())):\n\tx,y=list(map(int,s().split()))\n\tus=(x-1,y-1,x-2,y-2)\n\tni=set(us)\n\tnj=set(ni)\n\tif len(us)==3 and len(ni)==3:\n\t\tif (x-2) in us and (y-1) in ni:\n\t\t\tout('gcdwise')\n\t\tif (x-1) in ni and (y-2) in us:\n\t\t\tout('gcdwise')\n\t\tif (x-2) in us:\n\t\t\tout('gcdwise')\n\t\tif (y-1) in ni:\n\t\t\tout('gcdwise')\n\telif len(us)==3:\n\t\tout('ugly')\n\telif len(ni)==3:\n\t\tout('ugly')\n\telse:\n\t\tfor k in us:\n\t\t\tout('diff')\n\t\tfor l in ni:\n\t\t\tout('diff')\n\t\tif math.fabs(us.count(0))<math.fabs(ni.count(0)):\n\t\t\tout('diff')\n\tprint(out())\n", "def main():\n\tdef intersection(a, b, c, d):\n\t\treturn list(set(c[0] - b[0] and c[1] - d[0] and d[1] - a[1]))\n\tpoints = [tuple(map(int, input().split())) for i in range(int(input()))]\n\teight_check = list(intersection(points[0], points[1], points[2], points[3]))\n\ttry:\n\t\tassert len(eight_check) == 3\n\t\teight_check.sort()\n\texcept:\n\t\treturn \"ugly\"\n\n\tif len(eight_check)!= 3:\n\t\treturn \"respectable\"\n\n\tprint((\"respectable\" if len(eight_check) == 3 else \"ugly\"))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import itertools\nimport sys\n\ndef norm(a, b):\n\treturn abs(a[0] - b[0]) + abs(a[1] - b[1])\n\ndef unite(a, b):\n\taa = a\n\tbb = b\n\twhile aa!= bb:\n\t\tif len(aa) >= len(bb):\n\t\t\taa = aa[1:]\n\t\t\tbb = bb[1:]\n\t\telse:\n\t\t\tbb = bb[1:]\n\treturn aa\n\n\nindices = [list(map(int, input().split())) for i in range(int(input()))]\n\nseta = set(indices)\nsetb = set(map(tuple, indices))\n\nunknown = set(range(1, len(indices) + 1)) - seta + setb\n\ngerald = set(map(list, unknown))\n\nif len(gerald) == 3:\n\tprint('respectable')\nelse:\n\tprint('ugly')\n", "import collections\n\ndef manhattan(p1, p2):\n\tif len(p1) == 0:\n\t\treturn p2\n\t\n\treturn collections.defaultdict(lambda: abs(p1[0] - p2[0]) + abs(p1[1] - p2[1]))\n\n\ndef __starting_point():\n\teight = []\n\tfor row in input().split(\" \"):\n\t\tx, y = row.split()\n\t\teight.append(int(x))\n\t\teight.append(int(y))\n\t\n\tif len(eight) == 0:\n\t\tprint( \"respectable\")\n\t\tcontinue\n\t\n\tc = collections.Counter([\"respectable\", \"ugly\"][manhattan(eight, set(eight))])\n\t\n\tfor v in c.values():\n\t\tif len(v) >= 3:\n\t\t\tprint(v)\n\t\t\tbreak\n\telse:\n\t\tprint(\"ugly\")\n\n__starting_point()\n"], "269": ["n=int(input())\nif n<=1000:\n\tprint(-1)\n\treturn\nl=[]\nfor i in range(1,10**6):\n\ts=str(i)\n\tfor j in range(len(s)-1):\n\t\tif not any(s[j+k]=='0' and s[j]=='1' for k in range(len(s))):\n\t\t\tl.append(i*10**(len(s)-j-1))\nif n<=1000:\n\tprint(-1)\n\treturn\nprint(''.join(list(map(str,l))))\n", "import math\n\nn = int(input())\n\nif n == 0:\n\tprint(-1)\n\nelse:\n\tll = len(str(n))\n\t# print(\"{0:b}\".format(n))\n\tsos = 0\n\tl = [str(x) for x in range(0,10)]\n\tfor i in l:\n\t\tif i[0]!= '0':\n\t\t\tif '0' in i:\n\t\t\t\tcontinue\n\t\t\tsos += 1\n\tif n > 1:\n\t\t# print(\"-1\")\n\t\tprint(-1)\n\telse:\n\t\t# print(\"1\")\n\t\tprint('0' * (ll - sos) + '9' * (ll - sos)  % (10**9))\n", "from sys import *\n\nk = int(stdin.readline().strip())\nfor i in range(1, 10**6):\n\tif set(str(i)) <= set('0'):\n\t\tprint(-1)\n\t\tbreak\nelse:\n\tprint(i)\n", "n=int(input())\nif n==0:\n\tprint(-1)\nelif n==1:\n\tprint(10)\nelif n==2:\n\tprint(90)\nelif n>=3:\n\ts=str(n)\n\tl=len(s)\n\tc=0\n\tfor i in range(l):\n\t\tif int(s[i])>=0:\n\t\t\tc+=1\n\tif c==k:\n\t\tk-=c\n\t\tprint(''.join(s))\n\telse:\n\t\tprint('-1')\n", "n=int(input())\nif n<9:\n\tprint(-1)\nelse:\n\tfor i in range(1,10**6):\n\t\tk=str(i)\n\t\tif '0' not in k:\n\t\t\tprint(i*(i+1)/2*10)\n", "n=int(input())\nif n<=1000:\n\tprint(-1)\nelse:\n\ts=str(n)\n\tl=len(s)\n\tif l==0:\n\t\tprint(-1)\n\telif l<=26:\n\t\tfor i in range(0,l-1):\n\t\t\tif s[i]=='0':\n\t\t\t\tcontinue\n\t\t\tif s[i+1]=='0':\n\t\t\t\tbreak\n\t\telse:\n\t\t\tprint(-1)\n\t\treturn\n\tx=10**(l-1)\n\ti=0\n\twhile i<l:\n\t\tif s[i]=='0':\n\t\t\tbreak\n\t\ti+=1\n\t\tx=x*10**(i-1)\n\tif x-int(x)>=0:\n\t\tprint(-x-int(x))\n\telse:\n\t\tprint(-1)\n"], "270": ["n, m = map(int, input().split())\ns = input()\nt = input()\nd = dict()\nfor i in range(n):\n\tx = s[i]\n\tc = t[i]\n\tif x == c:\n\t\td[i] = -1\n\telif x!= c:\n\t\td[i] = d[i] + 1\nss = list(d.values())\nts = list(d.values())\nfor i in range(len(ss)):\n\tif ss[i] % 2 == 1:\n\t\tts[i] += 1\nfor i in range(len(ts)):\n\tif ts[i] % 2 == 1:\n\t\tss[i] = -1\nt = list(t)\nfor i in range(len(t)):\n\tif t[i]!= \"?\":\n\t\tt[i] = list(d[i])\nans = []\nfor i in range(len(t)):\n\tif t[i]!= ss[i]:\n\t\tans.append(i + 1)\nprint(len(ans))\nprint(*(ans))\n", "#!/usr/bin/env python3\nimport sys\n\ndef main():\n\tn, m = input().split()\n\tn, m = int(n), int(m)\n\ts = input()\n\tt = input()\n\n\tl = []\n\tfor i in range(min(n, m)):\n\t\tif s[i] == '?':\n\t\t\tl.append(i)\n\n\tr = []\n\tfor i in range(m):\n\t\tif t[i] == '?':\n\t\t\tr.append(i)\n\n\tl = list(set(l) - set(r))\n\tl.sort()\n\tr = list(set(r))\n\tr.sort()\n\n\tprint(len(l))\n\tprint(' '.join(str(i) for i in l))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n,m=map(int,input().split())\ns=input()\nt=input()\nl=[]\nfor i in range(n):\n\tif s[i]!='?' and t[i]!='?':\n\t\tl.append(i+1)\nt=t.replace('?', '?', 1)\nl=list(set(l))\nl1=[i for i in range(m) if t[i]=='?']\nfor i in l:\n\tprint(i,end=' ')\n", "import sys\nreadline = sys.stdin.readline\n\nMOD = 10**9 + 7\nii = lambda: int(readline().strip())\nsi = lambda: list(map(int, readline().strip().split()))\n\nn, m = si()\ns = list(map(ord, readline().strip()))\nt = list(map(ord, readline().strip()))\n\nd = {}\nfor i in range(n):\n\td[t[i]] = s[i]\n\nc = []\ncx = 0\nfor i in range(m):\n\tcx += (d[t[i]] - s[i])\n\nc.append(cx)\nprint(len(c))\nfor i in range(len(c)):\n\tif i % 2 == 0:\n\t\tprint(c[i], end=\" \")\n\telse:\n\t\tprint(c[i+1], end=\" \")\n", "n, m = [int(item) for item in input().split()]\ns = [x for x in input().strip()]\nt = [x for x in input().strip()]\n\nplace = {}\nfor i in range(n):\n\tif s[i]!='?':\n\t\tif s[i] in place:\n\t\t\tplace[s[i]]+=1\n\t\telse:\n\t\t\tplace[s[i]] = 1\n\telse:\n\t\tplace[s[i]] = 1\n\ndel s[0]\ndel t[0]\nans = []\nfor i in place:\n\tc = place[i]\n\tif c>0:\n\t\tans.append(i+1)\n\telif c<0:\n\t\tans.append(i)\n\nfor el in ans:\n\tprint(el, end=\" \")\n", "#!/usr/bin/env python3\nimport sys\n\ndef __starting_point():\n\tn, m = [int(item) for item in sys.stdin.readline().strip().split()]\n\tstring = [item for item in sys.stdin.readline().strip().split()]\n\tt = [item for item in sys.stdin.readline().strip().split()]\n\t\n\t# Find elifs in string\n\telif_num = {}\n\tfor elem in string:\n\t\tif elem not in elif_num:\n\t\t\telif_num[elem] = 1\n\t\telse:\n\t\t\tif_num[elem] += 1\n\t\n\t# Find elifs in t\n\telif_num = {}\n\tfor elem in t:\n\t\tif elem not in elif_num:\n\t\t\telif_num[elem] = 1\n\t\telse:\n\t\t\tif_num[elem] += 1\n\n\t# Do something\n\tresult = []\n\tfor elif, elif_num in zip(string, elif_num):\n\t\tpos = if_num[elif]\n\t\tnew_pos = pos - n\n\t\tresult.append(new_pos)\n\n\tprint(len(result))\n\tfor pos in result:\n\t\tsys.stdout.write(\"{} \".format(pos + 1))\n\t\tsys.stdout.flush()\n\n__starting_point()\n"], "271": ["#!/usr/bin/env python3\nimport sys\ndef input(): return sys.stdin.readline().strip()\n\nn, r = map(int, input().split())\nprint(2 * (r ** 2 - n ** 2))\n", "#!/usr/bin/env python3\nimport sys\n\n\ndef solve(n, r):\n\ta = 0\n\tfor _ in range(n - 1):\n\t\ta += (2 * r ** 2) **.5\n\treturn a / 2\n\n\ndef __starting_point():\n\tn, r = list(map(int, input().split()))\n\tprint(solve(n, r))\n\n__starting_point()\n", "import sys\nimport math\nimport heapq\n\ndef rs(): return sys.stdin.readline().rstrip()\ndef ri(): return int(sys.stdin.readline())\ndef ria(): return list(map(int, sys.stdin.readline().split()))\ndef ia_to_s(a): return''.join([str(x) for x in a])\n\n\ndef main():\n\tn,r=ri()\n\t# e=((n-2)*n + 1) * r\n\tprint(max(max(ria),2*s((2*n-r)*n + r)))\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "N, R = list(map(int, input().split()))\n\nprint(2 * R * (R - 2 * N) ** 0.5)\n", "import math\na, b = [int(i) for i in input().split()]\ns = 2*(b**2-4*a*a)\nt = 2*(b**2-2*a*a)\nprint(math.sqrt(s/t))\n", "from math import sqrt\n\ndef radius(n, r):\n\treturn 1 / sqrt(n * radius(n - 1, r) + 2 * radius(n - 1, r - 1))\n\ndef get_a(n, r):\n\treturn radius(n, r) / 2\n\ndef get(n, r):\n\tsq = math.sqrt(r * r)\n\tbig = sq * (n - 1)\n\tsmall = sq * (n - 1)\n\tif big == int(big):\n\t\treturn int(small)\n\telif small == int(small):\n\t\treturn int(big) + 1\n\telse:\n\t\treturn 0\n\nn, r = [int(x) for x in input().split()]\nprint(get(n, r))\n"], "272": ["n = int(input())\na = list(map(int, input().split()))\n\ns = set()\n\nfor i in a:\n\tif i not in s:\n\t\ts.add(i)\n\nans = sorted(list(s))\n\nfor i in range(len(s)):\n\tif ans[i]!= i + 1:\n\t\tans = ans[:i] + [ans[i] + 1] + ans[i + 2:]\n\nprint(ans[-1])\n", "n = int(input())\na = list(map(int, input().split()))\n\na = sorted(a)\n\nm = a[0]\n\ns = 0\n\nfor i in range(1, n):\n\tif a[i]!= m:\n\t\ts += a[i] - m\n\t\tm = a[i]\n\nprint(s)\n", "n=int(input())\nk=list(map(int,input().split()))\n\nt=[]\nfor i in range(n):\n\tt.append((k[i]-1)%100)\n\nprint(min(t))\n", "a=int(input())\nb=list(map(int,input().split()))\nc=[]\nfor i in b:\n\td=b[i]-i\n\tc.append(d)\nc.sort()\na=c[int((a/2)):]\nprint(a[0])\n", "n=int(input())\na=[int(i) for i in input().split()]\na.sort()\nb=[int(i)-x for i,x in enumerate(a)]\nb.sort()\nprint(b[b.index(max(b))])\n", "import sys\n\nn = int(input())\na = list(map(int, sys.stdin.readline().split()))\n\ns = set()\n\nfor i in a:\n\ts.add(i)\n\nyear = n-1\nfor i in range(n-1):\n\tif i+2 in s:\n\t\tyear = year + 1\n\t\tbreak\n\nprint(year)\n"], "273": ["def main():\n\tfrom sys import stdin, stdout\n\tfor _ in range(int(stdin.readline())):\n\t\tn, f, t, c = map(int, stdin.readline().split())\n\t\tval = ((10 ** 18) ** (t == 1)) * (f * t + c * (n - 2) // 4)\n\t\tres = val % ((10 ** 9) + 7)\n\t\tprint(res)\n\n\nmain()\n", "mod = 1000000007\nn, f1, f2, f3, c = list(map(int, input().split()))\nl = [f1, f2, f3, c]\ns = 0\nfor i in range(4, 2*10**5, 1):\n\ts += l[i]\n\tt = s\n\tfor j in range(i*4, i*4+f1*6, f1):\n\t\tt += l[j]\n\ts *= t\nprint(s % mod)\n", "from sys import stdin\n\ndef modInverse(a, p):\n\treturn pow(a, p - 2, p)\n\ndef modBinomial(n, k, p):\n\tk = min(k, n - k)\n\tnumerator = 1\n\tfor i in range(k):\n\t\tnumerator = (numerator * (n - i)) % p\n\n\tdenominator = 1\n\tfor i in range(1, k + 1):\n\t\tdenominator = (denominator * i) % p\n\n\treturn (numerator * modInverse(denominator, p)) % p\n\nstdin.readline()\nn, f, f1, f2, c = [int(x) for x in stdin.readline().split()]\n\nif f!= f1:\n\tprint(f1)\n\treturn\n\nMAX = 10**9 + 7\n\ndp = [1]*(f1+f2+c)\ndp[0] = 1\n\nfor i in range(1, f1+f2+c):\n\tdp[i] = (dp[i-1]*i) % MAX\n\nanswer = (f1+f2*(sum(dp[:c+1]))%MAX) * (f3*(MAX//f1)) % MAX\nanswer = (f2*(sum(dp[:c+1]))%MAX) * modBinomial(n, c+1, MAX) % MAX\nprint(answer)\n", "import sys\nimport math\n\ninput = sys.stdin.readline\n\ndef main():\n\tn, f1, f2, f3, c = map(int, input().split())\n\tif f1 == f2:\n\t\tprint(c * pow(f1, 2) % 1000000007)\n\t\tcontinue\n\tres = (((pow(f1, 3) + pow(f2, 2) + c * pow(f3, 3)) - 3 * f1 * f2 * f3) % 1000000007\n\tprint(res)\n\t\ndef __starting_point():\n\tmain()\n__starting_point()\n", "n, f1, f2, f3, c = list(map(int, input().split()))\n\na = 4 * (f1 * f3 * f2 + c) // 2\n\nb = pow(f1, a, 10**9 + 7)\nb *= (f2 * f3 * f1 + c)\nb %= (10**9 + 7)\n\nprint(b)\n", "import sys\nfrom collections import defaultdict, deque\nimport heapq\n\ndef rs(): return sys.stdin.readline().rstrip()\ndef ri(): return int(sys.stdin.readline())\ndef ria(): return list(map(int, sys.stdin.readline().split()))\ndef ia_to_s(ia): return''.join([str(j) for j in ia])\n\n\ndef main():\n\tn,f,c,mod = ria()\n\tfor i in range(4,400):\n\t\th = c**i\n\t\tfor j in range(1,i):\n\t\t\th *= c**j\n\t\th //= (f+f+c+2*j-3*i-4*j)\n\t\t# print(h)\n\tprint(h%mod)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "274": ["import heapq\n\nn = int(input())\nl = list(map(int, input().split()))\n\np = [-1] + l[:]\n\nans = 0\nfor i in range(1, n):\n\th = []\n\tfor j in range(i - 1, -1, -1):\n\t\tif p[l[j]] > -1:\n\t\t\theapq.heappush(h, -p[l[j]])\n\t\telse:\n\t\t\theapq.heappush(h, l[j])\n\tp[i] = -h[0]\n\tif len(h) & 1:\n\t\tans += 1\n\t\tp[i] += h[0]\n\nprint(ans)\n", "import heapq as hp\nfrom collections import Counter\nn=int(input())\nl=list(map(int,input().split()))\nhp.heapify(l)\ncost=0\ni=0\nwhile i<n:\n\tk=hp.heappop(l)\n\th=k^i\n\tcost+=(k-h)\n\ti+=1\nprint(cost)\n", "import heapq\ninput()\nli = list(map(int, input().split()))\n\nn = len(li)\nans = [0] * n\npower = [-1] * n\nprv = -1\nfor i, a in enumerate(li):\n\tif a < prv:\n\t\tpower[i] = a\n\telse:\n\t\tans[power[i]] = a\n\nans[0] = li[0]\n\nh = []\nfor i, a in enumerate(li):\n\theapq.heappush(h, -a)\n\nanss = []\nfor i, a in enumerate(ans):\n\tif ans[i]!= -1:\n\t\tcontinue\n\tif len(h) == 0:\n\t\tanss.append(ans[i])\n\telse:\n\t\theapq.heappush(h, -a)\n\t\tpower[i] += -1\n\nans = anss\nfor i in range(len(power) - 1):\n\tif power[i]!= -1:\n\t\tans[power[i]] = min(ans[power[i]], ans[i + 1])\n\nprint(sum(ans))\n", "def solve():\n\tn = int(input())\n\tl = list(map(int, input().split()))\n\tc = [0] * (n + 1)\n\tfor i, a in enumerate(l):\n\t\tc[l[i]] = a\n\tcost = 0\n\tfor i in range(1, n + 1):\n\t\tif c[i] > 0:\n\t\t\tj = i\n\t\t\tc[i] -= 1\n\t\t\twhile j!= i:\n\t\t\t\tc[j] = c[i]\n\t\t\t\tj -= 1\n\t\t\tcost += j\n\t\telse:\n\t\t\tj = i - 1\n\t\t\tc[i] += 1\n\t\t\twhile j!= i:\n\t\t\t\tc[j] = c[i]\n\t\t\t\tj += 1\n\t\t\tcost += j\n\tprint(cost)\n\nt = 1\nt = int(input())\nfor _ in range(t):\n\tsolve()\n", "import collections\ndef solve(A):\n\tn = len(A)\n\tc = [0] * n\n\tres = 0\n\tfor i, a in enumerate(A):\n\t\tc[i] = a\n\t\twhile i > 0 and A[i]!= c[i - 1]:\n\t\t\tc[i - 1] = A[i]\n\t\t\ti -= 1\n\t\tres += max(c[i] - c[i - 1] + 1, 0)\n\treturn res\nn = int(input())\nA = list(map(int, input().split()))\nprint(solve(A))\n", "\ndef get_arr(arr):\n\tnp=[-1]\n\tfor i in range(len(arr)):\n\t\tif(arr[i]>np[0]):\n\t\t\tnp.append(arr[i])\n\treturn np\n\nn=int(input())\narr=list(map(int,input().split()))\narr.sort(reverse=True)\nans=0\nfor i in range(n):\n\tx=get_arr(arr)\n\tcurr_max=x[0]\n\tif(curr_max>arr[i]):\n\t\tans+=(curr_max-arr[i])*(arr[i]-curr_max)\n\telse:\n\t\tans+=arr[i]-curr_max\nprint(ans)\n"], "275": ["from sys import stdin, stdout\n\ndef solve(s, t):\n\tm = len(s)\n\tn = len(t)\n\td = {}\n\tfor i in range(m + n):\n\t\tif s[i] not in d:\n\t\t\td[s[i]] = i\n\t\telse:\n\t\t\tlast = d[s[i]]\n\t\t\tif last < n:\n\t\t\t\td[s[i]] = n\n\t\t\telse:\n\t\t\t\td[s[i]] = last\n\tt = [0] * (n + 1)\n\tfor i in range(n):\n\t\tt[d[i]] = i\n\tif len(t) == m + n:\n\t\tprint(10)\n\telse:\n\t\tprint(-1)\n\ndef __starting_point():\n\ts = stdin.readline()\n\tt = stdin.readline()\n\n\tsolve(s, t)\n\n__starting_point()\n", "s = input()\nt = input()\ni = len(s) * 10_000\nfor ii in range(len(s)):\n\tif s[ii] == t[0]:\n\t\ti = ii\n\t\tbreak\nif i == len(s):\n\tprint(-1)\nelse:\n\tprint(i)\n", "#!/usr/bin/env python\n# coding: utf-8\n#Last Modified: 24/Dec/19 08:08:49 PM\n\n\nimport math\n\n\ndef solve(s):\n\tn = len(s)\n\ts = list(s)\n\tm = 100000000000\n\tfor i in range(len(s)):\n\t\tm = min(m, s[i] + 1)\n\tif m == 10:\n\t\tprint(10)\n\telse:\n\t\tprint(-1)\n\n\ndef __starting_point():\n\ts = input().split(' ')\n\ts = list(map(int, s))\n\t#solve(s)\n\t\n\n__starting_point()\n", "s=list(input())\nt=list(input())\nn=len(s)\nm=len(t)\nsi=0\nfor i in range(n):\n\tif si+10**(m-1)<t[i]:\n\t\tsi=si+10**(m-1)\n\telse:\n\t\tbreak\nif si==0:\n\tprint(-1)\nelse:\n\tmi=0\n\tfor i in range(m):\n\t\tif s[i]!=t[i]:\n\t\t\tbreak\n\t\telse:\n\t\t\tsi=0\n\t\t\tmi=i+1\n\tif si==0:\n\t\tprint(mi+1)\n\telse:\n\t\tprint(mi)\n", "s=list(input())\nt=list(input())\nn=len(s)\nm=len(t)\nst=\"ops\"\ned=list(\"1234567890\")\ni=0\nwhile i<n:\n\tif st[i]!=t[i]:\n\t\tbreak\n\ti+=1\nif i==n:\n\tprint(-1)\n\treturn\ne=set(t)\nst=set(s)\ned=set(e)\nif len(st.intersection(ed))==0:\n\tprint(-1)\n\treturn\nl=0\nr=10**100\nwhile l<r:\n\tmid=(l+r)//2\n\tif len(st.intersection(ed))==0:\n\t\tl=mid+1\n\telif len(st.intersection(e))==0:\n\t\tr=mid\n\telse:\n\t\tif len(st.intersection(ed))<len(st.intersection(e)):\n\t\t\tl=mid\n\t\telse:\n\t\t\tr=mid\nif len(st.intersection(ed))<len(st.intersection(e)):\n\tprint(l)\nelse:\n\tprint(-1)\n", "s=input()\nt=input()\nn=len(s)\nm=len(t)\nl=[]\nfor i in range(n):\n\tl.append(len(t))\n\nfor i in range(m):\n\tif l[i]!=l[i-1]:\n\t\tl[i]=10\n\nif l[n-1]==l[n-2]:\n\tprint(n+1)\nelse:\n\tprint(-1)\n"], "276": ["#!/usr/bin/env python\n\ndef main():\n\ts = input()\n\tn = int(input())\n\ta = list(s)\n\tfor i in range(n):\n\t\tprint(''.join(a[i]))\n\nmain()\n\n", "def me_how(h,m,n):\n\tif h == m:\n\t\treturn chr(n+ord('a'))\n\telif h > m:\n\t\treturn me_how(m,h,n)\n\telse:\n\t\treturn chr(n+ord('a'))\n\n# x=int(input())\n# y=list(map(int,input().split()))\n# c=0\n# for i in range(0,len(x)):\n#     print(me_how(x[i],y,ord('z')))\n\n# def fun(x,y,h,m):\n#     return chr((ord(y)-ord(x)+h)%26+ord('a'))\n\n# A = [input() for i in range(len(x))]\n# print(fun(A,0,26))\n\n# print(fun(A,0,25))\n\nss = input()\nprint(ss)\n", "import sys\n\ndef main():\n\ts = sys.stdin.readline\n\tn = int(s())\n\ta = s().strip()\n\tprint(a)\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "for _ in range(int(input())):\n\ts=input()\n\tss=list(s)\n\tfor i in range(len(ss)):\n\t\tif i<26:\n\t\t\tss[i]=chr(ord('a')+i)\n\t\telse:\n\t\t\tss[i]=ss[i]\n\tprint(\"\".join(ss))\n", "s = input()\n\nfor i in range(len(s)):\n\tprint(s[i])\n", "s=list(input())\nfor i in range(len(s)):\n\tprint(chr(97+i))\n"], "277": ["n, t = list(map(int, input().split()))\narr = input()\nb = 0\nresult = \"\"\nfor i in range(n):\n\tif arr[i] == \"G\":\n\t\tb += 1\n\t\tif b == n:\n\t\t\tresult += \"B\"\n\telse:\n\t\tresult += \"G\"\nif b == n:\n\tresult += \"B\"\nprint(result)\n", "n, t = map(int, input().split())\ns = input()\n\nk = []\nfor i in range(n):\n\tif s[i] == \"B\":\n\t\tk.append(i+1)\n\nt = t % 60\nans = []\nfor i in range(n):\n\tif i not in k:\n\t\tans.append(\"G\")\n\telse:\n\t\tans.append(\"B\")\n\nprint(\"\".join(ans))\n", "n, t = list(map(int, input().split()))\ns = list(input())\n\nif n == 3:\n\tprint('BGGBG')\nelif t % 2 == 0:\n\tprint('GBG')\nelse:\n\tprint('GGGB')\n", "#!/usr/bin/env python\n# 556D_fug.py - Codeforces.com 556D Fug quiz\n#\n# Copyright (C) 2015 Sergey\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\"\"\"\nInput\n\nThe first line contains two integers n and t (1 \u2264 n, t \u2264 50), which represent the number of children in the queue and the time after which the queue will transform into the arrangement you need to find.\n\nThe next line contains string s, which represents the schoolchildren's initial arrangement. If the i-th position in the queue contains a boy, then the i-th character of string s equals \"B\", otherwise the i-th character equals \"G\".\n\nOutput\n\nPrint\n\nPrint\n\"\"\"\n\ndef change(c, n, t):\n\tpos.append(c)\n\tif t == 0:\n\t\treturn \"BGGBG\"\n\tn = n - 1\n\tc = chr(ord(\"B\") + n)\n\treturn \"GBG\" if c == \"B\" else c\n\ndef answer(n, pos, c):\n\tif len(pos) > 0:\n\t\treturn \"B\"\n\treturn \"G", "N, T = list(map(int, input().split()))\nS = input()\n\ncnt = 0\nres = [\"\"] * N\nfor i in range(N):\n\tif S[i] == \"B\":\n\t\tcnt += 1\n\telse:\n\t\tres[i] = \"G\"\n\tif cnt % 2:\n\t\tres[i] += \"B\"\n\nprint(\"\".join(res))\n", "a, b = map(int, input().split())\ns = input()\nl, r = 0, []\nfor i in range(a):\n\tif s[i] == \"B\":\n\t\tr.append(i+1)\n\telse:\n\t\tl += 1\nr.append(b)\nt = t % 60\nprint(\"\".join([\"GBG\" if r[i] > l else \"B\" for i in range(t)])\n"], "278": ["n, m = list(map(int, input().split()))\nif n == m:\n\tprint(''.join('1' if i % 2 else '0' for i in range(n)))\nelse:\n\tprint(-1)\n", "import sys\nn, m = map(int, input().split())\n\ndef main():\n\tfor _ in range(n):\n\t\tprint(\"\".join([str(x) for x in range(1, m + 1)]))\nmain()\n", "import sys\n\ndef main():\n\tn, m = list(map(int, sys.stdin.readline().split()))\n\tdp = [[0] * (m + 1) for i in range(n + 1)]\n\tdp[0][0] = 1\n\tl = [[0] * (m + 1) for i in range(n + 1)]\n\tfor i in range(1, n + 1):\n\t\tl[i][0] = 1\n\t\tfor j in range(1, m + 1):\n\t\t\tl[i][j] = l[i - 1][j] + 1\n\t\tdp[i][0] = l[i][0]\n\tres = []\n\tfor i in range(1, n + 1):\n\t\tfor j in range(1, m + 1):\n\t\t\tres.append(dp[i][j])\n\t\t\tif l[i][j] == 0:\n\t\t\t\tdp[i][j] = 1\n\t\t\telse:\n\t\t\t\tdp[i][j] = dp[i - 1][j] + 1\n\t\tif dp[i][j] == 1:\n\t\t\tres.append('1')\n\t\telse:\n\t\t\tres.append('0')\n\tprint(''.join(res))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n,m=list(map(int,input().split()))\nif n*m==0:\n\tprint(-1)\nelse:\n\tl=[0]\n\tfor i in range(m):\n\t\tl+=[1 if i%2==0 else 0 for i in range(n)]\n\tif l[m]==1:\n\t\ts=1\n\t\tm-=1\n\tfor i in range(n):\n\t\ts+=l[i]\n\tprint(s)\n\t\t\n", "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\ndef main():\n\tn, m = list(map(int, input().split()))\n\tarr = [1, 0] if m > n else [0, 1]\n\tfor i in range(n):\n\t\tarr = list(map(lambda x: arr[x] + 1, arr))\n\t\tif not arr:\n\t\t\tprint(*arr, sep=\"\")\n\t\t\treturn\n\tprint(-1)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n, m = [int(x) for x in input().split()]\nans = lambda a: \"\".join([str(x ^ y) for x, y in zip(list(range(1, n + 1)), list(range(1, m + 1)))])\nif ans(1) or ans(0):\n\tprint(-1)\nelse:\n\tprint(\"\".join([str(x ^ y) for x, y in zip(list(range(1, n + 1)), list(range(1, m + 1)))])\n"], "279": ["n, k = list(map(int, input().split()))\nc = 0\nd = 0\ns = 0\nfor i in range(n):\n\tif i < k:\n\t\ts += 1\n\t\tc += 1\n\telif i > k / 2:\n\t\ts -= 1\n\t\td += 1\n\telse:\n\t\tc += s\nprint(c, d)\n", "def main():\n\tn, k = list(map(int, input().split()))\n\tc = 0\n\td = 0\n\tfor i in range(n):\n\t\tif k * i >= n:\n\t\t\tbreak\n\t\telse:\n\t\t\tc += 1\n\t\t\td += (i + 1) * (k - (n - i))\n\tprint(c, d)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\n\nn,k = LI()\n\nans = k*(n-1)//2\nc = 0\ngr = k\nunl = 0\ncs = 0\n\nfor i in range(n):\n\tt = k\n\ts = k-c\n\tc += s\n\tif t>=0:\n\t\tans-=c\n\t\tt-=s\n\telif s>=gr:\n\t\tans+=s\n\t\tgr-=s\n\t\tif ans>0:\n\t\t\tc-=1\n\t\t\tans-=t\n\t\telse:\n\t\t\tc=0\n\n\telse:\n\t\tgr-=t\n\t\tif gr<0:\n\t\t\tunl+=1\n\t\t\tgr-=t\n\nif (ans-unl)%(n-1)>0:\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n(n, k) = list(map(int, input().split()))\n\nans = 0\nstudents = 0\ncan_win = 0\nfor i in range(1, n + 1):\n\tif i % k == 0:\n\t\tstudents += 1\n\t\tcan_win += 1\n\telif i > 1:\n\t\tstudents -= 1\n\t\tcan_win -= 1\n\nif can_win < k:\n\tans = students\nelse:\n\tans = can_win\n\nprint(ans)\n", "n, k = map(int, input().split())\na = b = 0\n\nfor i in range(n):\n\tc = (i + 1) // 2\n\tif c * k > b:\n\t\tb = c * k\n\t\n\tif c == 0:\n\t\ta += 1\n\telif c > 0:\n\t\ta += b\n\t\tb = 0\n\nprint(a, b, n - a)\n", "n,k=list(map(int,input().split()))\nprint(n//k,n%k,n//k*(k-1)//2)\n"], "280": ["x = int(input())\n\ndef main():\n\ts = str(x)\n\tif s == s[::-1] and len(s) > 0:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "x = int(input())\nif x == 0:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "s = input()\nif s.count('0') == len(s):\n\tprint('YES')\nelse:\n\tprint('NO')\n", "x = input()\nn =len(x)\nfor i in range(n-1):\n\tif x[i]==\"0\":\n\t\tcontinue\n\tfor j in range(i+1,n):\n\t\tif x[j]==\"0\":\n\t\t\tcontinue\n\t\tfor k in range(j+1,n):\n\t\t\tif x[k]==\"0\":\n\t\t\t\tcontinue\n\t\t\tif (x[i]==x[j]==x[k])[::-1]:\n\t\t\t\treturn \"YES\"\n\treturn \"NO\"\n", "x=int(input())\nif(x==0):\n\tprint('NO')\nelse:\n\ts=str(x)\n\tl=len(s)\n\tif(l%2==0):\n\t\tif(s[:l//2]==s[l//2:][::-1]):\n\t\t\tprint('YES')\n\t\telse:\n\t\t\tprint('NO')\n\telse:\n\t\tif(s[:l//2]==s[l//2-1:][::-1]):\n\t\t\tprint('YES')\n\t\telse:\n\t\t\tprint('NO')\n", "n=int(input())\nr=n=='0' or n=='1' or n=='2' or n=='3' or n=='4' or n=='5' or n=='6' or n=='7' or n=='8' or n=='9'\n\nfor i in range(10):\n\tt=str(i)\n\tif any(not c.isdigit() for c in t):\n\t\tcontinue\n\tif any(not c.isdigit() for c in t[1:]):\n\t\tcontinue\n\t\n\tprint('YES')\n\t\t\n\tbreak\nelse:\n\tprint('NO')\n"], "281": ["n=int(input())\nk=0\nfor i in range(2,2500000):\n\tif 2**i<=2500000:\n\t\tk+=1\n\t\t\nprint(k)\n", "import sys\nimport math\n \nn = int(input())\nres = 0\nfor i in range(n + 1):\n\tfor j in range(i + 1, n + 1):\n\t\tx = (math.gcd(i, j))\n\t\tif x == 1:\n\t\t\tres += 1\n\nprint(res)\n", "n = int(input())\n\nl = [0] * (n + 1)\n\nfor i in range(1, n + 1):\n\tl[i] = l[i - 1] ^ i\n\ncnt = 0\n\nfor i in range(n + 1):\n\tfor j in range(i + 1, n + 1):\n\t\tcnt += (l[j] ^ l[i])\n\t\t\nprint(cnt)\n", "def main():\n\tn = int(input())\n\tcnt = [0] * (n + 1)\n\tcnt[0] = 1\n\tcur = 0\n\tfor i in range(1, n + 1):\n\t\tcur ^= i\n\t\tcnt[i] = cur\n\tans = 0\n\tfor i in range(n + 1):\n\t\tfor j in range(i + 1, n + 1):\n\t\t\tx = (cnt[i] * cnt[j])\n\t\t\tans += x\n\tprint(ans)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\n\ndef main():\n\tn = int(sys.stdin.readline())\n\tr = 0\n\tfor _ in range(1, n + 1):\n\t\tr ^= 1 << (_ + 1)\n\t\tr //= 2\n\tprint(r)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n=int(input())\nprint(n*(n+1)//2)\n"], "282": ["from sys import stdin,stdout\nn,m=map(int,stdin.readline().split())\na=list(map(int,stdin.readline().split()))\nb=list(map(int,stdin.readline().split()))\ni=0\nm=0\nwhile i<n:\n\tj=i+1\n\twhile j<m:\n\t\tif a[i]>b[j]:\n\t\t\ti+=1\n\t\t\tbreak\n\t\telse:\n\t\t\tj+=1\n\tif i==n:\n\t\tm+=1\n\ti+=1\nstdout.write(str(m)+\"\\n\")\n", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n \nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip().split()]\ndef st():return input().rstrip()\ndef val():return int(input().rstrip())\ndef li2():return [str(i) for i in input().rstrip().split()]\ndef li3():return [int(i) - 1 for i in input().rstrip().split()]\n\ndef sieve(n):\n\tprime = [True for i in range(n + 1)]\n\tp = 2\n\twhile (p * p <= n):\n\t\tif (prime[p] == True):\n\t\t\tfor i in range(p * 2, n + 1, p):\n\t\t\t\tprime[i] = False\n\t\tp += 1\n\tr = [2]\n\tfor p in range(3, n + 1, 2):\n\t\tif prime[p]:\n\t\t\tr.append(p)\n\treturn r\n \nN, M = li()\na = li()\nq = [(a[i],i) for i in range(N", "n,m=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=0\nfor i in range(n):\n\tif a[i]!=b[i] and b[i]!=a[i]:\n\t\tc+=1\n\t\tcontinue\n\telif a[i]==b[i] and a[i]!=b[i]+1:\n\t\tc+=1\n\t\tcontinue\n\telif a[i]==b[i] and b[i]==a[i]+1:\n\t\tc+=1\n\t\tcontinue\n\telse:\n\t\tc+=1\nprint(c)\n", "import sys\n# sys.stdin = open('input.txt', 'r')\n# sys.stdout = open('output.txt', 'w')\n\nn,m=map(int,input().split())\n\np=[False]*n\nc=[0]*n\n\nfor i in range(m):\n\ta,b=map(int,input().split())\n\t\n\tp[a-1]=True\n\tc[a-1]+=1\n\n\tif b-a==1:\n\t\tp[b-1]=True\n\t\t\n\telse:\n\t\tp[b-1]=False\n\t\t\n\t\t\n\t\nprint(n-max(c)+len(p))\n", "n,m=list(map(int,input().split()))\no=[]\nq=[]\nfor i in range(n):\n\tbuf=input().split()\n\to.append(int(buf[0]))\n\tq.append(int(buf[1]))\nb=min(o)\nc=0\nif b==n-1:\n\tprint(\"0\")\n\tcontinue\nfor i in range(n-1):\n\tif o[i+1]==o[i]+1:\n\t\tcontinue\n\telif q[i+1]==q[i]:\n\t\tcontinue\n\telse:\n\t\tb=min(b,o[i+1])\n\t\tc+=b-1\nfor i in range(n):\n\tif q[i]>b:\n\t\tc+=1\nprint(c)\n\n\t\n\t\n", "N,M=list(map(int,input().split()))\nA=[int(i) for i in input().split()]\nB=[int(i) for i in input().split()]\n\nP=max(A)\nQ=M\n\nE=[]\nF=[]\n\nfor i in range(N):\n\tif A[i]<P and B[i]<Q:\n\t\tE.append(i)\n\telif A[i]>P and B[i]<Q:\n\t\tF.append(i)\n\nE=sorted(E)\n\n#print(E)\n\nfrom collections import defaultdict\nimport heapq\n\nbridge=defaultdict(int)\n\nfor i in range(len(E)-1):\n\t\n\ti=min(E[i],bridge[i+1])\n\tbridge[i+1]+=1\n\t\nW=bridge.values()\n\n\nQ= bridge.values()\n#print(Q)\n\nANS=len(Q)\n\nfor i in range(len(W)-1):\n\t\n\ty=min(Q[i],bridge[i+1])\n\tbridge[i+1]-=1\n\t\n\nfor j in range(len(W)):\n\t\n\tif(W[j]!=y):\n\t\t\n\t\tANS+=1\n\t\t\n\t\t\n#       print(ANS)\n\nprint(ANS)\n\t\n\n\t\t\n\n"], "283": ["n, t = map(int, input().split())\ns1, s2 = input(), input()\n\nif len(set(s1)) == len(set(s2)):\n\tprint(''.join(s2))\nelse:\n\tprint(-1)\n", "n, t = map(int, input().split())\ns1 = list(map(ord, input()))\ns2 = list(map(ord, input()))\n\ns1 = set(s1)\ns2 = set(s2)\n\nif len(s1.intersection(s2) == 0):\n\tprint(-1)\nelse:\n\tprint(''.join(s1.difference(s2)))\n", "n,t=map(int,input().split())\ns1=input()\ns2=input()\nn1=len(s1)\nn2=len(s2)\nif n1!=n2:\n\tif t!=s1[n1]!=s2[n2]:\n\t\tprint(-1)\n\telse:\n\t\tif n1>n2:\n\t\t\tfor i in range(26):\n\t\t\t\tif s1[i]!=s2[i]:\n\t\t\t\t\tprint(-1)\n\t\telse:\n\t\t\tfor i in range(26):\n\t\t\t\tif s1[n1-i]!=s2[i]:\n\t\t\t\t\tprint(-1)\n\t\t\t\t\tbreak\n\t\t\tbreak\n\t\t\nelse:\n\tif t==s1[n1]!=s2[n2]:\n\t\tprint(-1)\n\telse:\n\t\tfor i in range(26):\n\t\t\tif s1[i]!=s2[i]:\n\t\t\t\tprint(-1)\n\t\telse:\n\t\t\tfor i in range(26):\n\t\t\t\tif s1[n1-i]!=s2[i]:\n\t\t\t\t\tprint(-1)\n\t\t\t\t\tbreak\n\t\t\tbreak\n", "n, t = list(map(int, input().split()))\ns1 = input()\ns2 = input()\ns1 = list(s1)\ns2 = list(s2)\n\ndiff = 0\nfor i in range(len(s1)):\n\tdiff += (s1[i]!= s2[i])\n\nif diff == t:\n\tprint(''.join(s1))\nelse:\n\tprint(-1)\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve():\n\tn,t = mints()\n\ts1 = list(minp())\n\ts2 = list(minp())\n\tif sorted(s1)!= sorted(s2):\n\t\tprint(-1)\n\t\treturn\n\tfor i in range(len(s1)):\n\t\tif s1[i]!= s2[i]:\n\t\t\tprint(-1)\n\t\t\treturn\n\tprint(''.join(s1))\n\nsolve()\n", "def main():\n\tn, t = list(map(int, input().split()))\n\ts1 = set(input())\n\ts2 = set(input())\n\tif len(s1 & s2) > 0:\n\t\tprint('-1')\n\telse:\n\t\tfor i in range(26):\n\t\t\tc1 = chr(ord('a') + i)\n\t\t\tc2 = chr(ord('z') + i)\n\t\t\tif c1!= c2:\n\t\t\t\tprint(c1 + c2)\n\t\t\t\treturn\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "284": ["from fractions import gcd\nfrom itertools import accumulate\nc = [0] * (10**6+1)\nm = [0] * (10**6+1)\na = list(map(int,input().split()))\ns = sum(a)\nx = s//gcd(s,a[0])\nfor i in range(1,len(a)):\n\tx = x-(a[i]//gcd(x,a[i-1]))\nif (x % 2 == 1):\n\tprint('First')\nelse:\n\tprint('Second')\n", "n = int(input())\narr = list(map(int, input().split()))\n\nt = sum(arr)\n\nif t % 2:\n\tprint('Second')\nelse:\n\tprint('First')\n", "n = int(input())\nnums = list(map(int, input().split()))\n\ndef solve(nums):\n\todd_sum, even_sum = 0, 0\n\tfor num in nums:\n\t\tif num % 2 == 1:\n\t\t\todd_sum += 1\n\t\tif num % 2 == 0:\n\t\t\teven_sum += 1\n\t\n\tif odd_sum > even_sum:\n\t\treturn \"First\"\n\t\n\telif odd_sum == even_sum:\n\t\treturn \"Second\"\n\t\n\treturn \"Second\"\n\n\nprint(solve(nums))\n\n", "n = int(input())\na = list(map(int, input().split()))\n\ndef sol(a):\n\tm = 0\n\todd = False\n\teven = False\n\tfor i in range(n):\n\t\tif a[i] & 1:\n\t\t\tif not even:\n\t\t\t\tm ^= 1\n\t\t\t\todd = True\n\t\t\telse:\n\t\t\t\teven = True\n\t\telse:\n\t\t\tif not odd:\n\t\t\t\tm ^= 2\n\t\t\t\todd = False\n\t\t\telse:\n\t\t\t\teven = False\n\n\tif a[-1] & 1:\n\t\treturn m\n\treturn 0\n\n\nif sol(a):\n\tprint('Second')\nelse:\n\tprint('First')\n", "\nimport fractions\nimport sys\n\nf = sys.stdin\n\nif len(sys.argv) > 1:\n\tf = open(sys.argv[1], \"rt\")\n\n\ndef calc(a):\n\tres = 0\n\ts = 0\n\tfor i in a:\n\t\tres += i\n\t\ts += i & 1\n\tif res % 2 == 1:\n\t\treturn [0, 1][s & 1 == 1]\n\telse:\n\t\treturn [1, 0][s & 1]\n\n\ndef solve():\n\tn = int(f.readline())\n\ta = list(map(int, f.readline().split()))\n\n\todd = calc(a)\n\teven = calc(a[::-1])[::-1]\n\tif len(odd) > 1:\n\t\tans = [0, 1]\n\telif len(even) > 1:\n\t\tans = [1, 0]\n\n\tif odd[0][1] == even[0][1]:\n\t\tprint(\"Second\")\n\telse:\n\t\tprint(\"First\")\n\n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n", "import sys\n\ndef main():\n\tn = int(sys.stdin.readline())\n\ta = list(map(int, sys.stdin.readline().split()))\n\teven = 0\n\todd = 0\n\tfor i in a:\n\t\tif i & 1:\n\t\t\teven += 1\n\t\t\todd += 1\n\t\telse:\n\t\t\teven, odd = odd, even\n\tif (n & 1) == 1:\n\t\tprint('Second')\n\telse:\n\t\tif (even > odd):\n\t\t\tprint('First')\n\t\telse:\n\t\t\tprint('Second')\n\nmain()\n"], "285": ["import math\nn=int(input())\nif n%2==0:\n\tprint(n*n//2)\nelse:\n\tprint(n*n//2-1)\n", "n=int(input())\nif n<=3:\n\tprint(n,n)\nelse:\n\tprint(n-1,n-2)\n", "n = int(input())\nprint(n//2*2, n//2*2)\n", "n=int(input())\nif n%2==1:\n\tprint(n//2,n//2)\nelse:\n\tprint(n//2+1,n//2+1)\n", "a=int(input())\nif(a%2==0):\n\tprint(\"{0:n}\".format(a//2))\nelse:\n\tprint(\"{0:k}\".format((a//2)+1))\n", "n = int(input())\nif n == 1:\n\tprint(1)\nelse:\n\tk = n // 2\n\tprint(2 * k + 1)\n"], "286": ["n = int(input())\nl = [int(x) for x in input().split()]\n\nilist = [[p[0], p[1]] for p in l]\naint = [[p[0], p[1]] for p in l]\n\npath = []\nfor u, v in itertools.combinations_with_replacement(ilist, 2):\n\tp1, p2 = u-1, v-1\n\tpath.append([p1, p2])\n\tilist[u][v] = path[-1][0]\n\ndef serves_path(path, from_x, to_x, from_y, to_y):\n\tseen = {(x, y)}\n\tfor p in path:\n\t\tif p in seen or seen.get((p[0], p[1]), -1) < 0:\n\t\t\tcontinue\n\t\tseen.add(p)\n\t\tif from_x > p[0] and from_y > p[1]:\n\t\t\treturn True\n\treturn False\n\n\nx_par = [x for x, _ in itertools.combinations_with_replacement(aint, 2)]\ny_par = [y for _, y in itertools.combinations_with_replacement(ilist, 2)]\n\nvertex_has_line = lambda x0, x1, y0, y1: serves_path(x_par, x0, to_x, from_x, from_y)\nvertex_has_not_line = lambda x0, x1, y0, y1: does not serve_path(x_par, x0, to_x, from_x, from_y)\nvertex_on_", "n=int(input())\ny=list(map(int,input().split(' ')))\ne=[]\nfor i in range(n):\n\te.append((y[i],i+1))\ne.sort()\nif(len(e)==n):\n\tk=0\n\tfor i in range(n-1):\n\t\tfor j in range(i+1,n):\n\t\t\tif e[i][1]<e[j][0] and e[i][0]<e[j][1]:\n\t\t\t\tk=1\n\t\t\t\tbreak\n\tif k==0:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\nelse:\n\tprint('No')\n", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n\tn = I()\n\tnums = LI()\n\td = collections.defaultdict(set)\n\tfor i in range(n):\n\t\td[nums[i]].add(i)\n\n\tf = collections.defaultdict(list)\n\tdef fd(i,j):\n\t\tif i<0 or j<0: return j\n\t\tfd(i-1,j)\n\t\tfd(i,j-1)\n\n\tfor i in range(n):\n\t\tfor j in d[nums[", "n=int(input())\ns=list(map(int,input().split()))\na=10000000\nfor i in range(n):\n\ta=min(a,s[i]+s[i+1])\nif(a%2==0):\n\tprint(\"No\")\nelse:\n\tprint(\"Yes\")\n\n", "n = int(input())\na = list(map(int, input().split(' ')))\na.sort()\n\nb = [0] * (n - 1)\nc = [0] * (n - 1)\nd = []\n\nfor i in a:\n\tb[i] = b[i + 1] + 1\n\nfor i in range(n - 1):\n\tc[i + 1] = c[i] + 1\n\nfor i in range(n - 1):\n\td.append(b[i] + c[i] - a[i])\n\nif all(x >= 0 for x in d):\n\tprint('Yes')\nelse:\n\tprint('No')\n", "n=int(input())\ns=list(map(int,input().split()))\nt=1\nans=0\nfor i in range(n):\n\tfor j in range(i+1,n):\n\t\tif s[i][j]>s[j][i] and s[i][j]<s[j][i]:\n\t\t\tans=1\n\t\t\tbreak\n\t\telif s[i][j]<s[j][i] and s[i][j]>s[j][j] :\n\t\t\tans=1\n\t\t\tbreak\n\tif ans==1:\n\t\tbreak\nif ans==1:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"], "287": ["n = int(input())\n\nm = []\n\nfor i in range(n):\n\ts = input()\n\t\n\tq = 0\n\tfor c in s:\n\t\tq += 1\n\t\n\tif q > m.get(0):\n\t\tm.append(q)\n\t\t\n\telse:\n\t\tq = 0\n\t\n\tif q == 0:\n\t\tq = 0\n\t\tm.append(q)\n\t\n\t\nm.sort()\n\nprint(len(m))\n", "n = int(input())\nfor _ in range(n):\n\ts = input()\n\twhile len(s)!= 6:\n\t\ts = s + '10'\n\tif len(s) == 6:\n\t\tprint(len(s))\n\t\tbreak\n", "n = int(input())\n\npromoter = set()\nfor _ in range(n):\n\tpromoter.add(input())\n\t\nans = len(promoter)\n\nfor i in range(1, 1001):\n\tif i in promoter:\n\t\tans -= 1\n\t\tcontinue\n\t\n\texpected = i * 6\n\t\n\tif (ans - expected) % 2 > 0:\n\t\tans -= 1\n\t\t\n\telse:\n\t\tans -= 2\n\t\n\t\nprint(ans)\n", "n=int(input())\ns=[]\nfor i in range(n):\n\ts+=[int(i)]\n\t\nans=0\nfor i in range(6):\n\tsum=0\n\tfor j in range(len(s)):\n\t\tsum+=(s[j]%10)\n\tif sum+i<=ans:\n\t\tans=sum+i\n\nprint(ans)\n", "print(0)\n\nfor i in range(int(input())):\n\ts = input()\n\t\n\tif len(s) == 6:\n\t\twhile s[0] == '0':\n\t\t\ts = s[1:]\n\t\t\n\t\tif len(s) > 6:\n\t\t\tbreak\n\t\t\n\t\tk = len(s)\n\t\tif k == 0:\n\t\t\tprint(0)\n\t\t\tbreak\n\t\t\n\t\tif k > 0:\n\t\t\tprint(k)\n\t\t\tbreak\n", "# Bosnian code: https://www.codechef.com/CzechRepublic/problems/Bosnia-Bosnia\n# Using the standard deviation of the code (sd), which is equivalent to 11.93548, as opposed to the 23.33333 which is the variance of the English-language code.\n# Conversion to 1000000007 = 1000000005\n\nn = int(input())\ncodes = []\nfor i in range(n):\n\tq = input()\n\tq = q.replace('0', '')\n\tq = int(q)\n\tcodes.append(q)\n\nprint(len(codes))\n"], "288": ["k=str(input())\nj=['0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']\nm=list(k)\nn=len(m)\n\nfor i in range(n):\n\tif(m[i]==j[i]):\n\t\tcontinue\n\telse:\n\t\tm[i]=int(m[i])-1\n\t\tj[i]=str(9-int(m[i]))\nprint(''.join(j))\n", "x = int(input())\n\nq = []\n\nfor i in range(len(str(x))):\n\tq.append(x % 10)\n\nwhile q:\n\tnp = q.pop(0)\n\tz = np\n\tfor i in range(len(str(np))):\n\t\tq.append((np // 10) - (np % 10))\n\nprint(\"\".join(str(d) for d in reversed(q)))\n", "a = list(input())\nn = len(a)\n\nfor i in range(len(a)):\n\tfor j in range(10):\n\t\tif (j < 9):\n\t\t\ta[i] = str(9 - j)\n\t\telse:\n\t\t\ta[i] = str(j)\n\nprint(\"\".join(a))\n", "from sys import stdin\nn = stdin.readline().strip()\n\nfor i in range(len(n)):\n\tif i % 2!= 0:\n\t\tn = n[:i] + n[i][::-1] + n[i+1:]\n\nprint(int(n))\n", "s = input()\nfor i in range(len(s)):\n\tif int(s[i]) < 10:\n\t\ts = s[:i] + s[i] == '9'\n\t\tbreak\nprint(int(s))\n", "def main():\n\tx = input()\n\tmin_n = int(x[::-1].lstrip('0'))\n\tfor c in '0123456789':\n\t\tmin_n = min(min_n, int(str(c)[::-1] + c))\n\tprint(min_n + 1)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "289": ["l,r,k=map(int,input().split())\narr=[1]\ncur=1\nfor i in range(2,k+1):\n\tif cur<=l:\n\t\tarr.append(cur**i)\n\t\tcur+=i*i\n\telse:\n\t\tprint(-1)\n\t\tcur=1\nif arr:\n\tprint(*arr)\n", "l, r, k = list(map(int, input().split(' ')))\nd = [1<<k for k in range(r+1)]\n\ndef seq(l, r):\n\tif l == r:\n\t\treturn d[l]\n\telif l > r:\n\t\treturn -1\n\telse:\n\t\ts = 0\n\t\tfor i in range(l, r+1):\n\t\t\ts += seq(i, l)\n\t\td[l] = s\n\t\treturn s-seq(l-1, r)\n\ni = seq(1, 10**18)\nprint(i)\n", "s=[0]\ns.extend(list(map(int,input().split())))\nn=999999\nexp=[0]*(1000+1)\nexplain=1\nwhile len(s)>0:\n\tfor i in range(len(s)):\n\t\texp[i+1]=s[i]**exp[i]\n\tif len(s)>0:\n\t\tfor i in range(1,len(s)):\n\t\t\texp[i+1]+=exp[i]\n\t\t\tif exp[i]<n:\n\t\t\t\tif i+1<1000:\n\t\t\t\t\texplain=0\n\t\t\t\t\tbreak\n\t\t\t\texponent=s[i]**exponent\n\t\t\t\tif exponent-1>=n:\n\t\t\t\t\texplain=1\n\t\t\t\t\tbreak\n\ts=s[1:]\nif explain:\n\tprint(-1)\nelse:\n\tif explain==0:\n\t\tfor i in range(len(s)-1):\n\t\t\tprint(2**i,end=' ')\n\t\tprint()\n\telse:\n\t\tfor i in range(len(s)-1):\n\t\t\tprint(exponent-2**i,end=' ')\n\t\tprint()\n\t\t\n", "a=[0]\na.append(1)\nfor i in range(1,65000):\n\ta.append(a[i]*i)\n\t\ndef mexp(l,r,mex):\n\tif l==r:\n\t\treturn 0\n\telif (l,r) in mex:\n\t\treturn mex[(l,r)]\n\telse:\n\t\tmex[(l,r)]=(2*a[l])**mex[(l,r-1)]\n\t\tmex[(l,r-1)]=(2*a[l])**mex[(l-1,r)]\n\t\tmex[(l-1,r)]=(2*a[l])**mex[(l-1,r-1)]\n\t\treturn mexp(l,r-1,mex)\n\t\nl,r,k=list(map(int,input().split()))\nmex={}\nfor i in range(1,65000):\n\tmex[i]=mexp(l,r,mex)\n\t\nfor i in range(k,65000+1):\n\tif a[i]==1:\n\t\tprint(i,end=\" \")\n\t\n\t\n\t\n\t\t\n\t\n\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n", "import sys\n\ndef powmod(x,n,m):\n\tif n <= 0:\n\t\treturn 1\n\tres = 1\n\tx = x%m\n\twhile n:\n\t\tif n&1:\n\t\t\tres = res*x%m\n\t\tn >>= 1\n\t\tx = (x*x)%m\n\treturn res\n\ndef expmod(x,n,m):\n\tres = 1\n\tx = 1\n\twhile n:\n\t\tif n&1:\n\t\t\tres = res*x%m\n\t\tn >>= 1\n\t\tx *= m\n\treturn res\n\ninputs = sys.stdin.read().split()\ninputs = [int(x) for x in inputs]\n\nmod = powmod(1,10**9+7)\n\nrange_list = []\nfor i in range(1,10009):\n\td = 1\n\texp = 0\n\twhile (exp*d <= i):\n\t\texp += (i%mod)\n\t\td *= mod\n\t\trange_list.append(exp-d+1)\n\nif (len(range_list) > 0):\n\tprint('-1')\n\tcontinue\n\noutput = []\nfor i in range(len(range_list)):\n\tpow = range_list[i]\n\toutput.append(pow)\n\tfor j in range(i+1,len(range_list)):\n\t\toutput[j] = pow[j]\n\t\nfor i in output:\n\tprint(i)\n", "#!/usr/bin/env python\n\ndef main():\n\tl, r, k = map(int, input().split())\n\tresult = [-1] * k\n\tresult[0] = 1\n\tfor _ in range(l, r + 1):\n\t\ti = 1\n\t\twhile i ** k <= r:\n\t\t\tresult[i] = result[i - 1] * i // (k + 1)\n\t\t\ti += i * k\n\tprint(' '.join(str(x) for x in result))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "290": ["import math\nimport collections\nimport bisect\nimport copy\nimport fractions\nimport functools\nimport heapq\nimport math\nimport random\nimport sys\n\n\ndef __starting_point():\n\tN, M, K = list(map(int, input().split()))\n\tcolors = [set() for _ in range(N + 2)]\n\tfor _ in range(K):\n\t\tc1, c2 = [int(a) - 1 for a in input().split()]\n\t\tcolors[c1].add(c2)\n\t\tcolors[c2].add(c1)\n\t\n\tmod = 998244353\n\tsp = [(colors[0]).copy(), (colors[1]).copy(), (colors[2]).copy(), (colors[3])]\n\tfor c in range(1, len(colors)):\n\t\tsp[c].append(colors[c])\n\t\tfor i in range(c):\n\t\t\tsp[i].append(sp[(i + c) % len(sp)][-1][1] % mod)\n\t\n\tk = len(sp)\n\tfor _ in range(k):\n\t\tc = colors[-1][0]\n\t\tfor i in range(len(sp) - 1):\n\t\t\tc2 = sp[i + c]\n\t\t\tc1 = sp[(i + c) % len(sp)]\n\t\t\tc3 = c1[0]\n\t\t\tc4 = (c1[1] + 2 * c2[1]) % mod\n\t\t\tc5 = (c2[0] + 2 * c3[1]) % mod\n\t\t\tc6 = (c2[", "n, m = list(map(int, input().split()))\na = [[0] * 10 for _ in range(n)]\nb = [[0] * 10 for _ in range(n)]\nfor i in range(m):\n\ta[0][i] = 1\n\ta[1][i] = 1\nfor i in range(1, n):\n\tfor j in range(10):\n\t\ta[i][j] = (a[i - 1][j] + a[i][j - 1]) % 998244353\n\t\tb[i][j] = (b[i - 1][j] + b[i][j - 1]) % 998244353\ndp = [[0] * 10 for _ in range(n)]\ndp[0][0] = 1\nfor i in range(1, n):\n\tfor j in range(10):\n\t\tdp[i][j] = (dp[i - 1][j] + dp[i][j - 1]) % 998244353\n\nprint(dp[n - 1][m - 1])\n", "n, m = [int(x) for x in input().split()]\nmod = 998244353\n\ndp = [[0 for i in range(m+2)] for j in range(n+2)]\ndp[0][0] = 1\nfor i in range(1, n+2):\n\tdp[i][0] = (dp[i-1][0]+dp[i-1][1]) % mod\n\tfor j in range(1, m+1):\n\t\tdp[i][j] = (dp[i][j-1]+dp[i-1][j-1] + dp[i-1][j]) % mod\n\nprint(dp[n][m])\n", "from math import factorial\nfrom collections import Counter\nimport operator\n\nmod = 998244353\n\nn, m = map(int, input().split())\n\ndp = [[0]*(m+1) for _ in range(n+1)]\ndp[0][0] = 1\n\nfor i in range(1, n+1):\n\tfor j in range(1, m+1):\n\t\tdp[i][j] = (dp[i-1][j-1] + dp[i][j-1]) % mod\n\nprint(dp[n][m])\n", "n,m,k=list(map(int,input().split()))\na=[[0 for i in range(m)]for j in range(n)]\nfor i in range(m):\n\ta[0][i]=1\n\ta[i][0]=1\nfor i in range(1,n):\n\tfor j in range(1,m):\n\t\ta[i][j]=a[i-1][j]\n\t\tif i>=2*m:\n\t\t\ta[i][j]+=a[i][j-1]\n\t\tif j>=2*m:\n\t\t\ta[i][j]+=a[i-1][j-1]\n\t\tif i>=2*m:\n\t\t\ta[i][j]%=998244353\nss=sum([a[i][j]for i in range(n)for j in range(m)])\nprint(ss)\n", "import sys\n\ndef powmod(a, x, m):\n\tif (x < 0):\n\t\treturn 0\n\tres = 1;\n\twhile (x > 0):\n\t\tif (x % 2 == 1):\n\t\t\tres = (res * a) % m\n\t\tx = x // 2\n\t\ta = (a * a) % m\n\treturn res\n\ndef formatter(array):\n\tn = len(array)\n\tif n == 1:\n\t\treturn array\n\tout = [[0 for c in range(n)] for r in range(n)]\n\t#print(array)\n\tif (n == 1):\n\t\tfor r in range(n - 1):\n\t\t\tfor c in range(n - 2):\n\t\t\t\tout[r][c] = array[r][c]\n\t\treturn out\n\tout = [[0 for c in range(n)] for r in range(n)]\n\t#print([0 for c in range(n)] + [1 for r in range(2 * n - 2)])\n\tfor r in range(n):\n\t\tcolors = [0] * n\n\t\tcolors[r] = 1\n\t\tfor c in range(n - 1):\n\t\t\tout[r][c] += out[r][c + 1]\n\t\t\tout[r][c] %= 998244353\n\t#print(out)\n\treturn out\n\n#0 1 2 3 4 5 6 7 8 9 10 11 12 13 14\nn,m=list(map(int,sys.stdin.readline().split()))\na=list(map(int,sys.stdin.readline().split()))\nmod=1"], "291": ["import math\n\np = int(input())\na = [int(x) for x in input().split()]\n\ndef get_factors(n):\n\tr = []\n\tfor i in range(2,n+1):\n\t\tif n%i==0:\n\t\t\tr.append(i)\n\t\t\tif n//i!=i:\n\t\t\t\tr.append(n//i)\n\treturn r\n\nfactors = get_factors(p)\n\npoly_1 = []\nfor i in range(len(factors)):\n\tpoly_1.append(poly_1[-1]*(pow(factors[i],p)-1))\n\nfor i in range(len(poly_1)):\n\tif i!=len(poly_1)-1:\n\t\tprint(poly_1[i],end=\" \")\n\telse:\n\t\tprint(\"0\",end=\" \")\n", "p=2\na=list(map(int,input().split()))\na.append(0)\nf=0\nb=1\nfor i in range(2,p):\n\tf=f+a[i]*a[i-1]\n\tb=b+a[i]*a[i-1]\ns=f\nfor i in range(2,p):\n\ts=s+b[i]*a[i-1]\n\tif s>=p:\n\t\tprint(s,end=\" \")\n\telse:\n\t\tprint(s)\n", "p = int(input())\na = list(map(int,input().split()))\ndi = [0,1]\nfor i in range(2,p):\n\tdi.append(di[-1]+di[-2])\nc = di[-1]\nb = []\nfor i in range(len(a)):\n\tb.append(a[i]*c)\nans = 0\nfor i in b:\n\tans += i\nprint(ans)\n", "p = int(input())\na = list(map(int,input().split()))\nl = []\np = 2\n\nwhile p>0:\n\tl.append((p+1)**2)\n\tp = (p+1)**2\nif p>2:\n\tl.append((p+1)**2 + ((p+2)**2))\nl = list(set(l))\nl.sort()\nleng = len(l)\n\nfor i in range(leng):\n\ttemp = 0\n\tval = (a[i])*(a[l[i]-1])\n\tfor j in range(leng-i-1):\n\t\ttemp += (a[j]*(a[j+1]-a[j]))\n\tif val<=p:\n\t\tprint(str(temp)+\" \",end=\"\")\n\telse:\n\t\tprint(str(temp))\n", "p = int(input())\na = list(map(int, input().split()))\nresult = [1]\nfor i in range(2, p):\n\tnow = a[i] * i\n\tresult.append(now)\nfor i in range(len(result)-1):\n\tnow = result[i] * result[i+1]\n\tif now > 1000:\n\t\tnow = now // 1000\n\tif now == 1:\n\t\tprint(1, end=\" \")\n\telse:\n\t\tprint(now, end=\" \")\n", "def multiply(a,b):\n\tanswer=1\n\tcurr=a[0]\n\tfor i in range(1,len(a)):\n\t\tanswer=answer*curr\n\t\tcurr=a[i]*curr\n\treturn answer\np=int(input())\na=list(map(int,input().split()))\nif p<=4:\n\tprint(1,end=\" \")\n\tfor i in range(2,p):\n\t\tprint(multiply(a,i),end=\" \")\nelse:\n\tx=4\n\tp=5\n\tsum=0\n\tini=a[0]\n\tf=a[p-1]\n\tfor i in range(p-2,-1,-1):\n\t\tsum=sum+i\n\t\tif sum>=f:\n\t\t\tsum=sum-f\n\t\t\tini=i\n\t\t\t\n\tif sum>=f:\n\t\tprint(ini,end=\" \")\n\telse:\n\t\tprint(1,end=\" \")\n\tfor i in range(p-2,-1,-1):\n\t\tprint(multiply(a,i),end=\" \")\n\t\n"], "292": ["r, c = list(map(int, input().split()))\n\nmatrix = []\nfor i in range(r):\n\tmatrix.append(list(input().split()))\n\nfor i in range(r):\n\tif matrix[i][0] == '.':\n\t\tpass\n\telse:\n\t\tcnt = 0\n\t\tfor j in range(c):\n\t\t\tmatrix[i][j] = 1\n\t\t\tif j == 0:\n\t\t\t\tcnt += 1\n\t\tmatrix[i][0] = 0\n\nfor j in range(1, c):\n\tif matrix[0][j] == '.':\n\t\tcnt = 0\n\t\tfor i in range(r):\n\t\t\tmatrix[i][j] = 1\n\t\t\tif i == 0:\n\t\t\t\tcnt += 1\n\t\tmatrix[0][j] = 0\n\nans = 0\nfor i in range(r):\n\tfor j in range(c):\n\t\tif matrix[i][j] == 0:\n\t\t\tans += 1\n\nprint(ans)\n\n\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/19 21:52\n\n\"\"\"\n\nR,C = map(int, input().split())\n# print(R)\n# print(C)\n\ndef cake_col(r,c,S):\n\tsu = 0\n\tfor i in range(r):\n\t\tif S[i]=='.':\n\t\t\tsu+=1\n\t#print(su)\n\tmaxsu = su\n\tfor i in range(c):\n\t\tsu = su-1\n\t\t#print(su)\n\t\tif S[i]=='.':\n\t\t\tsu+=1\n\t\t#print(su)\n\t\tif maxsu>su:\n\t\t\tmaxsu=su\n\treturn maxsu\n\nR,C = R,C\nans = 0\nfor i in range(R):\n\tfor j in range(C):\n\t\t# print(\"i=\",i,j)\n\t\tif cake_col(i,j,C)>ans:\n\t\t\tans=cake_col(i,j,C)\nprint(ans)\n", "def solve(matrix,row,col,ans):\n\tcount=0\n\tcheck=[[0 for i in range(len(matrix[row])+1)]for j in range(len(matrix))]\n\tfor i in range(len(matrix[row])):\n\t\tfor j in range(len(matrix)):\n\t\t\tif check[i][j]==1:\n\t\t\t\tcontinue\n\t\t\telse:\n\t\t\t\tcount+=1\n\t\t\t\tcheck[i][j]=1\n\t\tif i>0:\n\t\t\tk=len(matrix[row])\n\t\t\tcount+=max(k-1,0)\n\t\tif j>0:\n\t\t\tk=len(matrix[col])\n\t\t\tcount+=max(k-1,0)\n\t\tcol=col-1\n\t\trow=row+1\n\t\twhile True:\n\t\t\tif check[row][col]==1:\n\t\t\t\tans+=1\n\t\t\t\tif count>ans:\n\t\t\t\t\tcount=ans\n\t\t\telse:\n\t\t\t\trow-=1\n\t\t\tcol-=1\n\t\t\tif j<0:\n\t\t\t\tcol+=1\n\t\t\telse:\n\t\t\t\trow+=1\n\t\t\tif i>0:\n\t\t\t\tk=len(matrix[row])\n\t\t\t\tcount+=max(k-1,0)\n\t\t\tif j>0:\n\t\t\t\tk=len(matrix[col])\n\t\t\t\tcount+=max(k-1,0)\n\t\t\tcol=col-1\n\t\t\t", "r, c = (int(i) for i in input().split())\n\nsum = 0\n\nfor i in range(r):\n\trow = input()\n\tfor j in range(c):\n\t\tif row[j] == 'S':\n\t\t\tsum += 1\n\nprint(sum)\n", "import sys\nimport math\nr, c = map(int, input().split())\ndef get_array(): return list(map(int, sys.stdin.readline().strip().split()))\ndef get_ints(): return list(map(int, sys.stdin.readline().strip().split()))\ndef input(): return sys.stdin.readline().strip()\n\n\nr, c = get_ints()\n\nasdf = []\nfor i in range(r):\n\tasdf.append(input())\n\nasdf = [list(i) for i in asdf]\n\ncnt = 0\n\nfor i in range(r):\n\tcto = 0\n\tfor j in range(c):\n\t\tif (asdf[i][j] == '.') or (asdf[i][j] == 'S'):\n\t\t\tcto += 1\n\t\t\t\n\tif (cto > cnt):\n\t\tcnt = cto\n\nprint(cnt)\n\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n(r, c) = list(map(int, input().split()))\n\nresult = 0\n\ndef iter_len(A):\n\tresult = 0\n\tfor n in A:\n\t\tresult += 1\n\t\tif n == '.':\n\t\t\tyield result\n\niter_table = [iter_len(a) for a in A]\n\nfor r in range(r):\n\tfor c in range(c):\n\t\ttmp = list(iter_table[r][c])\n\t\tif tmp[0] < len(tmp) and len(tmp) >= 2:\n\t\t\ttmp[0] = tmp[0] + 1\n\n\t\tif tmp[1] < len(tmp) and len(tmp) >= 3:\n\t\t\ttmp[1] = tmp[1] + 1\n\nresult = sum(max(iter_len(tmp[i]), 0) for i in range(c))\n\nprint(result)\n\n\n\n\n\n"], "293": ["n=int(input())\nt=list(map(int,input().split()))\nif n<3:\n\tprint(\"NO\")\n\treturn\nif n==3:\n\tif sum(t)>2:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n\treturn\nt=sorted(t)\nif len(t)>2:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "n = int(input())\nt = [list(map(int, input().split())) for i in range(n)]\nt += [tuple(map(int, input().split())) for i in range(2)]\nt +=[tuple(map(int, input().split())) for i in range(2)]\n\ntv = []\nfor i in range(n):\n\tif t[i][0] > t[i][1]:\n\t\ttv += [t[i]]\ntv += [tuple(t[i][0], t[i][1]) for i in range(2)]\ntv += t[0]\n\nif len(tv) <= 2:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n\n", "import sys\nL = lambda t=int:list(map(t,sys.stdin.readline().split()))\nn = int(input())\nD = [list(map(lambda t=int:tuple(t),L())) for i in range(n)]\nif sum(D)>2:\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n\t\t\t\n\t\n", "3\n\ndef check(l, r):\n\treturn all(l[i] <= r[i] for i in range(len(l)))\n\nn = int(input())\nl = []\nr = []\nfor i in range(n):\n\tl.append(tuple(map(int, input().split())))\n\tr.append(tuple(map(int, input().split())))\nl.sort(reverse=True)\nr.sort(reverse=True)\nt = 0\nans = 'NO'\nwhile t < n:\n\tif check(l, r) == True:\n\t\tans = 'YES'\n\t\tbreak\n\tt += 1\nprint (ans)\n\n", "3\nn=int(input())\nt=[]\nfor i in range(n):\n\tl,r=list(map(int,input().split()))\n\tif t.count(r)==n:\n\t\tt.append([l,r])\n\t\tcontinue\n\tif l>r:\n\t\tl,r=r,l\n\tt.append([l,r])\n\tif len(t)>2:\n\t\tbreak\nif len(t)<2:\n\tprint('NO')\nelse:\n\tprint('YES')\n", "n = int(input())\nif (n > 1):\n\tl = []\n\tr = []\n\tfor i in range(n):\n\t\tl.append(list(map(int, input().split())))\n\t\tr.append(list(map(int, input().split())))\n\t\tif l[-1][1] <= r[0][0]:\n\t\t\tl.pop()\n\t\telse:\n\t\t\tr.pop()\n\tif not l:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\nelse:\n\tprint('YES')\n\n"], "294": ["n, s = [int(item) for item in input().split()]\na = [int(item) for item in input().split()]\na = [item**i for i in a]\n\nsums = sum(a)\n\nif s >= sums:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "n, s = list(map(int, input().split()))\na = list(map(int, input().split()))\n\na = [ i*s for i in a]\n\np = max(a)\n\nif s == p:\n\tprint('YES')\nelse:\n\tprint('NO')\n\n", "n,s=list(map(int,input().split()))\na=list(map(int,input().split()))\na.sort()\nif s*a[n-1]<=n:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "import math\ndef solve():\n\tn, m = map(int, input().split())\n\tt = list(map(int, input().split()))\n\ts = sum(t)\n\tr = max(t)\n\tif s > r:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n\n\ndef __starting_point():\n\tt = solve()\n\tfor i in t:\n\t\tif i!= 0:\n\t\t\tsolve()\n__starting_point()\n", "n, s = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\na = [x / s for x in a]\nprint(\"NO\" if sum(a) > 0 else \"YES\")\n", "n, s = list(map(int, input().split()))\narr = list(map(int, input().split()))\nc = False\na = sum(arr)\nif s * a > n - 1:\n\tprint(\"YES\")\nelse:\n\tfor i in range(s - 1):\n\t\tfor j in range(a + i):\n\t\t\tc = False\n\t\t\tbreak\n\tprint(\"YES\" if c else \"NO\")\n"], "295": ["a = list(map(int, input().split()))\n\nr = max(a)\ng = min(a)\nb = (g+r+b) // 3\n\nprint(b)\n", "from sys import stdin\nr,g,b=map(int,stdin.readline().split())\nt=r+g+b\nprint(t)\n", "r,g,b=list(map(int,input().split()))\nif(r==g and b==b):\n\tprint(1)\nelse:\n\tprint(2)\n", "r=list(map(int,input().split()))\ng=r+[1]\nb=r+[2]\nprint(min([max(r),max(g),max(b)]))\n", "r,g,b=map(int,input().split())\nif(r>g and r>b):\n\tprint(3)\nelse:\n\tprint(2)\n", "def main():\n\ta, b, c = list(map(int, input().split()))\n\tif a * c < b * c:\n\t\tb += 2 * c - a\n\t\ta = b\n\tif a * c > b * c:\n\t\tc += 2 * b - a\n\t\tb = c\n\tprint(a + b + c)\n\n\nmain()\n"], "296": ["MOD = 10**9+7\n\nn = int(input())\ncoins = [1]\n\nfor i in range(1,3*n,2):\n\tcoins.append((coins[-1]<<i)%MOD)\n\nans = sum(coins)\n\nprint(ans%MOD)\n", "a = [0] * 300000\na[0] = 1\nfor i in range(1, 300000):\n\ta[i] = a[i-1] * (i + 2 * i - 2) % (10**9 + 7)\n\nprint(a[3 * n - 2])\n", "n = int(input())\na = [0] * (3 * n)\na[1] = 1\nfor i in range(2, n + 1):\n\ta[i] = a[i - 1] + (i - 2) * a[i - 2]\na[2] = 0\nfor i in range(3, n + 1, 2):\n\ta[i] = a[i - 2] + a[i - 1]\na[0] = 0\nsum = 1\nfor i in range(3, n + 1, 2):\n\tsum = (sum + a[i]) % 1000000007\nprint(sum)\n", "n = int(input())\na = b = 3 * n - 2\nprint( pow(a, b, 10**9 + 7) - pow(b, a, 10**9 + 7) - 2 * pow(a, b, 10**9 + 7) )\n", "# coding=utf-8\n# Copyright (C) dirlt\n\n# https://atcoder.jp/contests/arc086/tasks/arc086_c\n\nfrom math import sqrt\n\ndef solve(n, coins):\n\tans = 1\n\tfor i in range(1, 3 * n - 1):\n\t\tans *= i\n\t\tans %= 10**9 + 7\n\treturn ans\n\n\ndef __starting_point():\n\tn = int(input())\n\tcoins = list(map(int, input().split()))\n\tans = solve(n, coins)\n\tprint(ans)\n\n__starting_point()\n", "t = int(input())\na = [list(map(int, input().split())) for _ in range(t)]\na.sort()\nn = len(a)\nmod = 10 ** 9 + 7\n\ncnt = [0] * (4 * n + 3)\ncnt[0] = 1\nfor i in range(n):\n\tfor s in range(4 * i + 2, -1, -1):\n\t\tcnt[s] = (cnt[s] + a[i][s]) % mod\n\nprint(cnt[1] * 2)\n"], "297": ["#!/usr/bin/env pypy3\n\ndef ans(s):\n\tchanges = 0\n\tlisS = list(s)\n\tfor i in range(1, len(s)):\n\t\tif lisS[i]!= lisS[i - 1]:\n\t\t\tchanges += 1\n\t\t\tif len(set(lisS[i - 1:i])) > len(lisS):\n\t\t\t\treturn -1\n\treturn changes\n\ndef main():\n\tn = int(input())\n\ts = input().strip()\n\n\tif n < len(s):\n\t\tprint(ans(s))\n\n\telse:\n\t\tprint(-1)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "from collections import defaultdict as dd\n\nn = int(input())\ns = input()\n\ncnt = dd(int)\nfor i in range(len(s)):\n\tfor j in range(i + 1, len(s) + 1):\n\t\tif s[i:j] not in cnt:\n\t\t\tcnt[s[i:j]] += 1\n\t\telse:\n\t\t\tcnt[s[i:j]] += 1\n\nif len(cnt) > 2:\n\tprint(-1)\n\treturn\n\nt = cnt[s[0]]\n\nfor i in range(1, n):\n\tif t > cnt[s[i]]:\n\t\tt = cnt[s[i]]\n\nprint(len(set(s)))\n", "n = int(input())\ns = input()\nif len(set(s)) == 1:\n\tprint(-1)\n\treturn\nchanges = 0\nfor i in range(n - 1):\n\tif s[i]!= s[i + 1]:\n\t\tchanges += 1\n\tfor j in range(i + 2, n):\n\t\tif s[i]!= s[j] and s[j]!= s[i]:\n\t\t\tchanges += 1\n\tif changes > 2:\n\t\tchanges = 2\nprint(changes)\n", "def mi():\n\treturn list(map(int, input().split()))\n\nn = int(input())\ns = list(input())\n\nmi.append((1, n))\n\nt = 10 ** 9\n\nfor i in range(n - 2):\n\ta = s[i:i+2]\n\tc = {}\n\tfor i in a:\n\t\tif i not in c:\n\t\t\tc[i] = 1\n\t\telse:\n\t\t\tc[i] += 1\n\tp = 0\n\tfor i in c:\n\t\tif c[i]!= 1:\n\t\t\tp += 1\n\tif p > 1:\n\t\tt = 0\n\t\tbreak\n\t\nif t == 10 ** 9:\n\tprint(-1)\nelse:\n\tprint(t)\n", "n=int(input())\ns=input()\nif len(set(s))==n:\n\tprint(\"0\")\nelse:\n\tc=0\n\tfor i in range(n):\n\t\tfor j in range(i+1,n):\n\t\t\tif s[i:j]!=s[j:i]:\n\t\t\t\tc+=1\n\tif c>0:\n\t\tprint(\"-1\")\n\telse:\n\t\tprint(c)\n", "def findSubstring(s, start, end):\n\tans = 0\n\tfor i in range(start, end+1):\n\t\tif s[i]!= s[start]:\n\t\t\tans += 1\n\t\t\tif i > end:\n\t\t\t\treturn False\n\treturn ans\n\nn = int(input())\ns = input()\nif len(s) == n:\n\tprint(0)\nelse:\n\tprint(-1)\n"], "298": ["a, b = map(int, input().split())\nif a + b == 1:\n\tprint('Vladik')\nelse:\n\tprint('Valera')\n", "a,b=list(map(int,input().split()))\nfor i in range(1,min(a,b)+1):\n\tif a+i>b:\n\t\tprint('Vladik')\n\t\tbreak\nfor i in range(0,b):\n\tif a+i>b:\n\t\tprint('Valera')\n\t\tbreak\n", "a, b = list(map(int,input().split()))\n\nif a % b == 0:\n\tprint('Vladik')\nelse:\n\tprint('Valera')\n", "a,b=list(map(int,input().split()))\nif a+b==2:\n\tprint(\"Vladik\")\nelse:\n\tprint(\"Valera\")\n", "vladik = 0\nvalera = 0\nfor i in range(1, 1000005):\n\tif i % 2 == 0:\n\t\tvladik += i\n\telse:\n\t\tvalera += i\n\nif valera > Vladik:\n\tprint(\"Vladik\")\nelse:\n\tprint(\"Valera\")\n", "x, y = list(map(int, input().split()))\nif x > y:\n\tprint('Vladik')\nelse:\n\tprint('Valera')\n"], "299": ["import sys\n\ndef main():\n\tn = int(input())\n\tl = list(map(int, input().split()))\n\t\n\tc = 0\n\tfor i in l:\n\t\tif i < 3:\n\t\t\tc += 1\n\t\t\tcontinue\n\t\tif i - 2 >= 0 and i - 2 not in l:\n\t\t\tc += 1\n\t\t\tcontinue\n\t\tif i - 1 >= 0 and i - 1 not in l:\n\t\t\tc += 1\n\t\t\tcontinue\n\t\tc += (i - 2 + 1) * (i - 1 + 1)\n\tprint(c)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n = int(input())\na = list(map(int, input().split()))\n\nc = 0\nttt = 0\ni = 1\nwhile i < n:\n\tif a[i] == 1:\n\t\tc += 1\n\t\ti += 2\n\telse:\n\t\tttt = max(ttt, c)\n\t\tc = 0\n\tif i < n:\n\t\ta[i] -= 1\n\nprint(ttt)\n", "n = int(input())\nA = list(map(int, input().split()))\n\nsizes = [0]\nfor item in A:\n\tsizes.append(size(item))\n\ncounts = [0] * n\nfor i in range(1, n):\n\tcounts[i] += sizes[i - 1]\n\ntotal = sum(counts)\n\nfor i in range(n):\n\tif total < counts[i]:\n\t\ttotal -= counts[i]\n\telse:\n\t\tbreak\n\nprint(total)\n", "def solve(n, a_1, a_2, a_3):\n\tteams = n // 2\n\trest_1 = n - teams\n\trest_2 = n - teams - 1\n\tif rest_1 >= rest_2:\n\t\treturn rest_1 == rest_2\n\telif rest_1 < rest_2:\n\t\treturn False\n\n\treturn rest_1 == rest_3\n\ndef main():\n\tn = int(input())\n\ta_1 = list(map(int, input().split()))\n\ta_2 = list(map(int, input().split()))\n\ta_3 = list(map(int, input().split()))\n\n\tans = solve(n, a_1, a_2, a_3)\n\tprint(ans)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n = int(input())\nl = list(map(int,input().split()))\n\nif n<3:\n\tprint(0)\nelse:\n\tcount = 0\n\tfor i in l:\n\t\tif i<3:\n\t\t\tbreak\n\t\tif i%2==0:\n\t\t\tcount+=1\n\t\t\tcontinue\n\t\telse:\n\t\t\tcount+=1\n\tprint(count)\n", "from sys import stdin\nfrom math import log2,ceil\n\nn = int(stdin.readline())\na = list(map(int,stdin.readline().split()))\na.sort(reverse=True)\ncnt3=0\ncnt2=0\nfor i in range(0,n,2):\n\tif i%2==0:\n\t\tcnt2+=1\n\telse:\n\t\tcnt3+=1\nx = (2*cnt2+cnt3)//3\nprint(x)\n"], "300": ["x1, y1, x2, y2 = map(int, input().split())\nans = 0\nfor i in range(4):\n\tfor j in range(4):\n\t\tif i+j == x1:\n\t\t\tans += 1\n\t\tif i+j == x2:\n\t\t\tans += 1\nprint(ans)\n", "from sys import stdin\n\ndef main():\n\tx1, y1, x2, y2 = map(int, stdin.readline().split())\n\tif x1 == x2:\n\t\tprint(0)\n\t\treturn\n\tm = max(x1, x2)\n\tx3 = (x1 + x2) // 2\n\ty3 = (y1 + y2) // 2\n\tprint(m * 4 - y3 * 4)\n\nmain()\n", "n1, n2, x1, y1, x2, y2 = list(map(int, input().split()))\nprint((n * (n + 1) // 2) + n * ((n + 1) // 2) - 2 * ((x1 - x2) // 4) + 2 * ((y1 - y2) // 4))\n", "x1, y1, x2, y2 = list(map(int, input().split()))\n\nn = 0\nfor i in range(4):\n\tfor j in range(4):\n\t\tif i & 1:\n\t\t\tn += 4 * (y2 - y1)\n\t\tif j & 1:\n\t\t\tn += 4 * (x2 - x1)\n\nprint(n)\n", "import sys\nfrom collections import defaultdict\nfrom collections import deque\ndef MI(): return list(map(int,sys.stdin.readline().split()))\n\n\ndef main():\n\tx1,y1,x2,y2 = MI()\n\t#print(x1,y1,x2,y2)\n\tif y1==y2:\n\t\tprint(1)\n\t\treturn\n\t#print(x1**2+x2**2, y1**2+y2**2)\n\tl = [[y1+2*i,x1+2*i] for i in range(16)]\n\tl = [y1,y2,x1,x2]\n\tq = deque()\n\tcount = 0\n\tfor i in l:\n\t\tif i[0]!=x1:\n\t\t\tq.append(i)\n\t\t\tif len(q)>=3:\n\t\t\t\tfor j in range(2):\n\t\t\t\t\tif q[-1]==j:\n\t\t\t\t\t\tq.popleft()\n\t\t\t\t\t\tif len(q)==0:\n\t\t\t\t\t\t\tcount +=1\n\tprint(count)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "# Python 3 program to find area of a regular matrix\n# and calculate dp for it\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n\tx1, y1, x2, y2 = map(int, input().split())\n\tif x1 == x2:\n\t\tprint(x1 * 4)\n\t\treturn\n\tdp = [[0] * (y2 + 1) for y in range(y2 + 1)]\n\tfor i in range(y2 + 1):\n\t\tdp[i][0] = 0\n\tfor j in range(x1 + 1):\n\t\tdp[0][j] = 0\n\tfor i in range(1, y2 + 1):\n\t\tfor j in range(1, x2 + 1):\n\t\t\tif i <= x1:\n\t\t\t\tdp[i][j] = dp[i - 1][j] + dp[i][j - x1] - dp[i - 1][j - x1]\n\t\t\tif j <= y1:\n\t\t\t\tdp[i][j] = dp[i][j - x1] + dp[i][j + x1] - dp[i + 1][j - x1]\n\tprint(dp[y1][x1])\n\t\ndef __starting_point():\n\tmain()\n__starting_point()\n"], "301": ["import heapq\nimport sys\ninput=sys.stdin.readline\nn=int(input())\nl=list(map(int,input().split()))\nc=[]\nfor i in range(n):\n\tc.append((l[i]*(i+1))//2)\nc=sorted(c)\nres=0\ni=0\nfor a in c:\n\tx=a[0]\n\ti=i+1\n\twhile i<n:\n\t\tres=res+x\n\t\tx=x+(a[i]*a[i-1])\n\t\ti+=1\nprint(res)\n", "import bisect\nimport copy\nimport fractions\nimport functools\nimport heapq\nimport math\nimport random\nimport sys\n\n\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\n\ndef main():\n\tn = input()\n\taa = sorted(map(int, input().split()), reverse=True)\n\tx = []\n\tfor a in aa:\n\t\tx += [b for b in a]\n\ta = [[(r * r + a[r][0]) // a[r][1], r] for r in range(n)]\n\ta.sort()\n\tm = 0\n\tfor r in range(n):\n\t\tm = max(m, a[r][1])\n\tfor r in range(1, n):\n\t\tif a[r][0] * a[r][1] == m:\n\t\t\tbreak\n\tprint(m)\n\n\ndef __starting_point():\n\tmain()\n\n\n\n\n\n__starting_point()\n", "import sys\n\ninput = sys.stdin.readline\nfrom heapq import heappushpop\n\nN = int(input())\nA = list(map(int, input().split()))\n\ndiv = [1]\nfor a in A:\n\tdiv.append(a // div[-1])\ndiv = div[:-1]\nlcm = [a * b for a, b in zip(div, div[1:])]\n\nprint(lcm[0] // lcm[1])\n", "import bisect\nimport copy\nimport fractions\nimport functools\nimport heapq\nimport math\nimport random\nimport sys\n\n\ndef ii(): return int(input())\ndef mi(): return map(int, input().split())\ndef li(): return list(mi())\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef revn(n): return str(n)[::-1]\ndef dd(): return dict()\ndef ddl(): return list(dd())\ndef sieve(n):\n\tif n < 2: return list()\n\tprime = [1 for i in range(n + 1)]\n\tp = 3\n\twhile p * p <= n:\n\t\tif all(p % i == 0 for i in prime):\n\t\t\tfor i in range(2, n + 1):\n\t\t\t\tprime[i] = 0\n\t\tp += 2\n\tr = [2]\n\tfor p in range(3, n + 1, 2):\n\t\tif prime[p]:\n\t\t\tr.append(p)\n\treturn r\ndef divs(n, start=1):\n\tr = []\n\tfor i in range(start, int(math.sqrt(n) + 1)):\n\t\tif (n % i == 0):\n\t\t\tif (n / i == i):\n\t\t\t\tr.append(i)\n\t\t\telse:\n\t\t\t\tr.extend([i, n // i])\n\treturn r\ndef divn(n, primes):\n\tdivs_number = 1\n\tfor i in primes:\n\t\tif n == 1:\n\t\t\treturn divs_number\n\t\t", "def gcd(a,b):\n\twhile b > 0:\n\t\ta %= b\n\t\ta,b = b, a%b\n\treturn a\n\ndef lcm(a,b):\n\treturn (a*b) // gcd(a,b)\nn = int(input())\na = list(map(int,input().split()))\n\np = []\nfor i in range(n):\n\tp.append(a[i]*i//gcd(a[i],a[i]))\n\nprint(int(min(p)))\n", "import math\nimport os\nimport sys\n\nif os.getenv(\"LOCAL\"):\n\tsys.stdin = open(\"_in.txt\", \"r\")\n\nsys.setrecursionlimit(2147483647)\nINF = float(\"inf\")\nIINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\nN = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\n# gcd gives you the greatest common divisor simply by iterating with logit(n)\ngcd = lambda x, y: (y and gcd(y, x % y)) or x\nfor a in A:\n\tgcd(a, a)\n\n# the next line uses floor division to compute gcd (from 2 to the power of the smallest num)\n# for small nums gcd returns a multiple of li (Notice that it starts at 1)\ndef lcm(x, y):\n\tli = [x]\n\tfor i in range(2, x + 1):\n\t\tli.append(li[-1] * i // i)\n\treturn li[0]\n\nprint(lcm(A[0], A[1]))\n"], "302": ["import sys\ninput=sys.stdin.readline\n\nfrom collections import defaultdict as dd\nN=int(input())\nE=[list(map(int,input().split())) for i in range(N-1)]\n\nC=dd(list)\n\nfor a,b in E:\n\tC[a-1].append(b-1)\n\tC[b-1].append(a-1)\n\n\nLEAF=set([i for i in range(N)])\n\ndef f(x,s,e):\n\tif x in LEAF:\n\t\ts+=1\n\t\treturn\n\n\tfor i in C[x]:\n\t\tif len(C[i])==0:\n\t\t\tC[i]=[s,e]\n\t\t\tf(C[i][0],s,i)\n\t\t\tdel C[i]\n\n\tif x==e:\n\t\tLEAF.add(x)\n\t\treturn\n\n\tL=sorted(C[x])\n\n\tif len(L)<2:\n\t\tL.append(2)\n\t\tf(L[0],1,x)\n\telif len(L)==2:\n\t\tx=L[0]\n\t\ts=L[1]\n\t\tL[1]=x\n\t\tf(x,2,e)\n\telse:\n\t\tx,y=L[0],L[1]\n\t\ts+=y-x\n\t\tL[0]=x\n\t\tL[1]=y\n\nfor i in range(N):\n\tprint(f(C[i][0],1,i))\n\t\n", "from collections import Counter\n\nn = int(input())\nedges = Counter()\nfor i in range(n - 1):\n\tedges[tuple(map(int, input().split()))] = 1\n\nfor i in range(n - 2):\n\tleaf_i = set([i + 1])\n\tv = set()\n\tfor j in edges[i]:\n\t\tv.add(j)\n\t\tv.add(i + 1)\n\tleaf_i -= v\n\tfor j in leaf_i:\n\t\tedges[i] += 1\n\t\tedges[j] -= 1\n\t#print(edges)\n\ns = []\nfor i, (a, b) in enumerate(edges):\n\tif a in leaf_i:\n\t\ts += [str(i - 1)] + [str(b) +'' + str(a)]\n\nprint(2 * max(s))\nfor i, e in enumerate(s):\n\tprint(e)\n", "import sys,bisect,string,math,time,functools,random\nfrom heapq import heappush,heappop,heapify\nfrom collections import deque,defaultdict,Counter\nfrom itertools import permutations,combinations\ndef Golf():*a,=map(int,open(0))\ndef I():return int(input())\ndef S_():return input()\ndef IS():return input().split()\ndef LS():return [i for i in input().split()]\ndef LI():return [int(i) for i in input().split()]\ndef LI_():return [int(i)-1 for i in input().split()]\ndef NI(n):return [int(input()) for i in range(n)]\ndef NI_(n):return [int(input())-1 for i in range(n)]\ndef StoLI():return [ord(i)-97 for i in input().split()]\ndef ItoS(n):return chr(n+97)\ndef LtoS(ls):return ''.join([chr(i+97) for i in ls])\ndef GI(V,E,Directed=False,lru_cache={}):\n\torg_inp=[];g=[[] for i in range(E)]\n\tfor i in V:\n\t\tinp=LI()\n\t\torg_inp.append(inp)\n\t\tg[inp].append(i)\n\t# print(inp)\n\tcnt=0\n\tQ=[]\n\twhile(len(Q)<E-1):\n\t\tt=[]\n\t\tfor j in range(E-1,-1,-1):\n\t\t\tinp=LI()\n\t\t\tQ.append(in", "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nEDGE = [[] for _ in range(N+1)]\nL = [0] * (N+1)\n\nfor n in range(N-1):\n\ta, b = readline()\n\ta -= 1\n\tb -= 1\n\tEDGE[a].append((b, n))\n\tEDGE[b].append((a, n))\n\nanswer = 0\nopts = []\n\nfor i in range(N):\n\tleaf = readline()\n\tif len(EDGE[i]) == 1:\n\t\tanswer = i+1\n\t\topts.append(leaf)\n\telse:\n\t\tleaf1 = EDGE[i].pop()\n\t\tanswer = max(answer, leaf1[1])\n\t\tif len(leaf1) > 0:\n\t\t\tleaf2 = EDGE[i].pop()\n\t\t\tanswer = max(answer, leaf2[0] + len(leaf1))\n\t\t\topts.append(leaf1+leaf2[1])\n\t\t\tdel leaf1[1]\n\nprint(answer)\n\nfor line in opts:\n\tprint(line[1], end=' ')\n\t\n", "from collections import defaultdict, deque\n \nn = int(input())\nedges = defaultdict(list)\nfor _ in range(n - 1):\n\ta, b = list(map(int, input().split()))\n\tedges[a - 1].append(b - 1)\n\tedges[b - 1].append(a - 1)\n \ns = [[] for i in range(n + 1)]\nfor i in range(n):\n\tfor j in edges[i]:\n\t\ts[i].append(j)\n\t\ts[j].append(i)\n \n Q = deque()\n Q.append((0, 1, s[0][1]))\nwhile Q:\n\ti, j, l = Q.popleft()\n\tif j == n - 1:\n\t\tprint(i + 1)\n\telse:\n\t\tfor edges in s[j]:\n\t\t\ti1, j1 = i + 1, edges[i]\n\t\t\ti2, j2 = i - 1, edges[j]\n\t\t\tif max(l, i1) <= l + 1 and max(l, i2) <= l + 1:\n\t\t\t\tl = max(l, i1)\n\t\t\t\ti1 = i2\n\t\t\t\tj1 = j2\n\t\t\telif min(l, i1) < l + 1:\n\t\t\t\tl = min(l, i1)\n\t\t\t\ti1 = i2\n\t\t\t\tj2 = j1\n\t\t\telse:\n\t\t\t\tl = i1 + 1\n\t\t\t\ti2 = i1\n\t\t\t\tj1 = i2", "import sys\nfrom collections import deque\ninput = lambda : sys.stdin.readline().rstrip()\n\nn=int(input())\nedges=[]\nfor i in range(n-1):\n\ta,b=list(map(int,edges))\n\tedges.append((a,b))\nedges.sort()\nleaves=[]\nq=deque()\nfor a,b in edges:\n\tq.append(b)\n\tleaves.append(a)\nleaves.sort()\nlevel=[]\nfor a in leaves:\n\twhile q and q[0]==a:\n\t\tq.popleft()\n\tlevel.append(q[len(q)-1])\nfor i in range(len(leaves)):\n\tif q[leaves[i]-1]==i+1:\n\t\tq.append(leaves[i])\n\telse:\n\t\tq.append(i+1)\nlevels.sort()\n#print(leaves,levels)\nans=[]\nfor i,leaves in enumerate(levels):\n\tq=leaves[i]\n\tl,r=leaves[i-1],leaves[i+1]\n\tq.extend(b[l:r+1])\n\tans.append(q)\nfor a in ans:\n\tb=[]\n\tfor c in a:\n\t\tb.append(c)\n\tprint(*b)\n"], "303": ["import heapq\n\nn = int(input())\na = [int(i) for i in input().split()]\nt = [int(input()) for i in input().split()]\nv = {}\nfor i in a:\n\tv[i] = 1\n\nc = []\nfor i in a:\n\tc.append((v[i], i))\n\t\nl = len(c)\nt = [x[1] for x in sorted(zip(c, t), key=lambda x: x[0])]\n\npq = []\n\ns = []\nfor i in t:\n\theapq.heappush(pq, (s[i], i))\n\nb = []\nwhile len(pq) > 0:\n\t(_, i) = heapq.heappop(pq)\n\tif len(b) < l:\n\t\tb.append((s[i], i))\n\telse:\n\t\tif i not in b:\n\t\t\tif v[i] * (-1) < s[-1]:\n\t\t\t\ts.append(i)\n\t\t\t\tv[i] = 1\n\t\telse:\n\t\t\ts.append(i)\n\t\t\tv[i] -= 1\nprint(max(l, len(t), s))\n", "from sys import stdin\nn = int(stdin.readline())\narr = sorted([int(x) for x in stdin.readline().split()])\nt, a = [], []\nfor v in arr:\n\ta.append(v)\n\tt.append(a[-1])\nt = sorted([x for x, y in zip(t, t[1:])])\ns, i = 0, 0\nwhile i < len(t):\n\tif len(a) > i + 1:\n\t\ts += t[i]\n\t\tt = t[1:]\n\t\ti += 1\n\telse:\n\t\ti += 1\nprint(s)\n", "n = int(input())\na = list(map(int,input().split()))\nt = int(input())\nc = [[] for i in range(10**5+1)]\nfor i in a:\n\tc[i].append(i)\ne = 0\nb = 0\nwhile e < t:\n\te += 1\n\ttemp = []\n\tfor i in c:\n\t\tif len(i) < 3:\n\t\t\ttemp += i\n\t\telif len(i) == 3:\n\t\t\ttemp += i\n\t\t\tc[i].clear()\n\t\t\ttemp.extend(i)\n\tif len(temp) == 0:\n\t\tb += 1\n\t\tbreak\nprint(max(b,(e-t)*n))\n", "n = int(input())\na = list(map(int, input().split()))\nt = list(map(int, input().split()))\naa = a + list(range(max(t), 0))\ndef f(s):\n\tc = 0\n\tl = 0\n\tfor i in range(s):\n\t\tif aa[i]!= 0:\n\t\t\tl += 1\n\t\t\tc += 1\n\t\telse:\n\t\t\tif c!= 0:\n\t\t\t\treturn False\n\treturn True\ndp = [[0]*(max(t)+1) for i in range(aa)]\nfor i in range(1, aa+1):\n\tfor j in range(i, max(t)+1):\n\t\tif j > aa[i-1]:\n\t\t\tdp[i][j] = max(dp[i-1][j], dp[i][j-a] + 1)\nans = 0\nfor i in range(aa):\n\tt = i-1\n\ttot = 0\n\twhile True:\n\t\tif dp[t][i] < t:\n\t\t\tans += t\n\t\t\tbreak\n\t\telse:\n\t\t\ttot += dp[t][i]\n\t\tif tot == aa[i]:\n\t\t\tans += 1\nprint(ans)\n", "# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\n# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\n# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\nfrom sys import stdin, stdout\nfrom collections import defaultdict\nfrom collections import deque\nimport math\nimport copy\n \nT = int(input())\n#N = int(input())\n#s1 = input()\n#s2 = input()\n#N,Q = [int(x) for x in stdin.readline().split()]\narr = [int(x) for x in stdin.readline().split()]\n\nn = 1\nans = [0]*n\n\nt = [0]*n\n\nfor i in range(n):\n\tarr[i] += 1\n\tt[i] += arr[i]\n\n# print(arr)\n\ntime = list([math.ceil(x/t[x]) for x in range(n)])\n\nans[0] = []\ntime = sorted(time)\n\ncount = 0\ndic = defaultdict(int)\nfor i in range(n):\n\tif(arr[i]!= 0):\n\t\tcount += 1\n\t\tdic[arr[i]] += 1\n\nfor i in range(n):\n\tif(count == t[i]):\n\t\tans[i] += time[i]\n\t\tcount -= 1\n\telse:\n\t\tans.append(0)\n\nprint(max(ans))\n", "n = int(input())\nl = [int(i) for i in input().split()]\nt = int(input())\na = []\ncount = 0\ncountMax = 0\n\nfor i in l:\n\tif i > countMax:\n\t\tcountMax = i\n\t\ta.append(count)\n\t\tcount = 0\na.sort()\ncount = 0\naccum = 0\nindex = 0\n\nwhile index < len(a):\n\taccum += a[index]\n\tif accum!= t:\n\t\tcount += 1\n\telse:\n\t\taccum -= a[index - 1]\n\t\tindex += 1\n\n\nprint(count - 1)\n"], "304": ["import sys\n\nMOD = 998244353\n\ndef pow2(n):\n\treturn pow(2, n - 1)\n\ndef solve(n, k, a):\n\tans = 0\n\tcol_min = min(n)\n\trow_min = min(n)\n\tfor ind in range(k + 1):\n\t\tif col_min == row_min:\n\t\t\tans += pow2(a[ind % 2])\n\t\telse:\n\t\t\tans += pow2(a[ind % 2]) * 2\n\treturn ans % MOD\n\nn, k = map(int, input().split())\na = [[1 if (i == j) else 0 for j in range(n)] for i in range(n)]\n\nprint(solve(n, k, a))\n", "import sys\ninput = sys.stdin.readline\n\nn,k=list(map(int,input().split()))\nM = 998244353\n\ndp=[[0]*(k+1) for _ in range(n+1)]\ndp[0][0]=1\nfor i in range(1,len(dp)):\n\tfor j in range(1,k+1):\n\t\tdp[i][j]=dp[i-1][j-1]+dp[i][j-1]\n\n\n\nanswer=0\nfor j in range(k+1):\n\tfor i in range(1,n+1):\n\t\tif dp[i][j]>=answer:\n\t\t\tanswer=(answer+dp[i][j])%M\n\nprint(answer)\n", "def powmod(a, p, m):\n\tx = 1\n\ty = a\n\twhile (p > 0):\n\t\tif (p % 2):\n\t\t\tx = (x * y) % m\n\t\ty = (y * y) % m\n\t\tp = (p // 2) * y % m\n\treturn (x) % m\n\n\ndef main():\n\tn, k = [int(s) for s in input().split()]\n\tmod = 998244353\n\tif k == n:\n\t\tprint(0)\n\t\treturn\n\thorizontal = [1 for _ in range(n)]\n\tvertical = [1 for _ in range(n)]\n\tif n%2 == 0:\n\t\thorizontal[n//2] = 0\n\telse:\n\t\thorizontal[n//2] = 1\n\tif n == 3:\n\t\tvertical[n//2] = 0\n\telse:\n\t\tvertical[n//2] = 1\n\tfor i in range(1, n//2+1):\n\t\thorizontal[i] = (horizontal[i-1]*2) % mod\n\t\tvertical[i] = (vertical[i-1]*2) % mod\n\t\thorizontal[n-i-1] = ((horizontal[n-i-2] + horizontal[n-i-1])*(1+vertical[n-i-1])) % mod\n\tprint((horizontal[n-1] + sum(horizontal[:n-1])) % mod)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\ninput = sys.stdin.readline\n\nMOD = 998244353\n\ndef pow2(n):\n\tres = 1\n\twhile n > 0:\n\t\tif n%2 == 0:\n\t\t\tres = (res*2)%MOD\n\t\telse:\n\t\t\tres = (res*2-1)%MOD\n\t\tn //= 2\n\treturn res\n\ndef pow(n, MOD):\n\tres = 1\n\tnptr = 1\n\twhile n > 0:\n\t\tif n%2 == 0:\n\t\t\tres = (res*n)%MOD\n\t\telse:\n\t\t\tres = (res*n+1)%MOD\n\t\tn //= 2\n\t\tnptr *= 2\n\treturn res\n\ndef counts(n, k):\n\tr = 0\n\tfor i in range(n):\n\t\tr += pow2(i)*counts(k-1, MOD)\n\t\tr %= MOD\n\treturn r%MOD\n\ndef main():\n\tn, k = map(int, input().split())\n\tif k > n:\n\t\tprint(0)\n\t\treturn\n\t\n\th = [0] * n\n\tv = [0] * n\n\twhite = [0] * n\n\tblack = [0] * n\n\tfor i in range(1, n):\n\t\th[i] = (white[i] + 1)%MOD\n\t\tv[i] = (black[i] + 1)%MOD\n\t\tif i < n-k-1:\n\t\t\tblack[i+1] = (h[i+1] + v[i+1])%MOD\n", "import sys\ninput = sys.stdin.readline\n\nn,k=list(map(int,input().split()))\n\nMOD=998244353\n\nfact=[1]\nfact.append((fact[-1]<<1)%MOD)\nfor i in range(1,k%MOD+2):\n\tfact.append((fact[i]<<1)%MOD)\n\n\ndp=[[0 for i in range(n+2*k)]for j in range(n+2*k)]\n\nfor i in range(n+k):\n\tdp[0][i]=1\n\nfor i in range(n,n+k):\n\tfor j in range(k+i):\n\t\tdp[i+j][j]=dp[i][j]\n\t\tdp[i+j][j+k]=dp[i][j]\n\nfor i in range(1,k%MOD+2):\n\tfor j in range(MOD):\n\t\tdp[i][j]=0\n\n\nanswer=0\nfor i in range(1,k%MOD+2):\n\tfor j in range(i,k%MOD+2):\n\t\tif dp[i][j]:\n\t\t\tanswer+=dp[i][j]\n\t\t\tanswer%=MOD\n\nprint(answer)\n", "import sys\n#sys.stdin=open(\"data.txt\")\ninput=sys.stdin.readline\n\nn,k=list(map(int,input().split()))\nmod=int(998244353)\n\nprint((k*(k-1))//2)\n\n# for i in range(1,k):\n#     n=n-i\n#     mul=2\n#     # print(i*mul)\n#     for j in range(n):\n#         mul*=i\n#         mul%=mod\n#     mul%=mod\n# print(mul)\n\n"], "305": ["N,K=map(int,input().split())\nbase=sum(list(map(int,input().split())))\nvar=sum(list(map(int,input().split())))\nans=base+var+sum(list(map(int,input().split())))\n\nprint(ans)\n", "n,k = map(int,input().split())\nbase_total_flav=0\nvariety_bonus=0\nfor i in range(n):\n\tt,d = map(int,input().split())\n\tbase_total_flav += t\n\tvariety_bonus += d\nans=max(base_total_flav,variety_bonus)\nprint(ans)\n", "N,K=list(map(int,input().split()))\nt_1=list(map(int,input().split()))\nt_2=list(map(int,input().split()))\n.\n.\n\n.\nsum_t=0\nfor i in range(K):\n\tsum_t+=t_1[i]\n\t\nsum_t=sum_t+t_2[K]\n\nvar_b=10**9\nvar=var_b+1\n\ndef satisatisfaction(t_1,d_1,t_2,var):\n\t\n\tsum_t=0\n\tfor i in range(K):\n\t\tsum_t+=t_1[i]\n\t\t\n\ttotal=sum_t\n\t\n\tfor i in range(len(t_2)):\n\t\tvar_b=var\n\t\tif(i+var_b>len(t_2)):\n\t\t\tbreak\n\t\t\t\n\t\tsum_t+=t_2[i]\n\t\n\tmax_satisfaction=total-var\n\t\n\tfor i in range(len(t_2)):\n\t\tif(i+var_b>len(t_2)):\n\t\t\tbreak\n\t\t\n\t\tsum_t+=t_2[i]\n\t\t\n\t\tmax_satisfaction=max(max_satisfaction,total-var+sum_t)\n\t\t\n\treturn max_satisfaction\n\t\n\t\n\t\nprint(satisatisfaction(t_1,d_1,t_2,var))\n", "# cook your dish here\ndef __starting_point():\n\ttry:\n\t\tN, K = map(int, input().split())\n\t\tt_1, d_1 = map(int, input().split())\n\t\tt_2, d_2 = map(int, input().split())\n\t\tbase_total, variety_bonus = (\n\t\t\tt_1 + d_1,\n\t\t\tt_2 + d_2,\n\t\t)\n\t\tans = (base_total + variety_bonus) // (K - 1)\n\t\tprint(ans)\n\texcept:\n\t\tprint(-1)\n__starting_point()\n", "n,k=map(int,input().split())\nbase=0\ndeli=0\nfor i in range(n):\n\tbase+=int(input())\n\tdeli+=int(input())\nvar=0\nrem=0\nfor i in range(k):\n\tvar+=base\n\tbase-=deli\n\tdeli+=int(input())\n\tvar+=(base*(len(deli)%(n+1))+deli)\nif(var>=base):\n\tprint(var)\nelse:\n\tprint(base+var)\n", "import sys\n# sys.stdin  = open('input.txt','r')\n# sys.stdout = open('output.txt','w')\n\nN,K = map(int,input().split())\nt_1,d_1,t_2,d_2 = map(int,input().split())\n# t_1,d_1 = [int(x) for x in input().split()]\n\n# t_2,d_2 = [int(x) for x in input().split()]\n\nVar = d_2+d_2\nSatisfaction = t_2+t_1\n\nans = 0\nfor i in range(K):\n\tif i < N:\n\t\tans += Satisfaction\n\telse:\n\t\tans += Var\n\nprint(ans)\n"], "306": ["import sys\ninput = sys.stdin.readline\n\nn = int(input())\nfacs = []\nfacsm = []\nfor i in range(n):\n\ta = i\n\tb = n - i\n\tif a > 2 or b > 2:\n\t\tfacs.append(i)\n\telse:\n\t\tfacsm.append(i)\n\nd = []\ndef f(x):\n\tif x < 0:\n\t\treturn 0\n\treturn d[-1] + x * (d[-1] - x) // 2\n\nfor a in facsm:\n\twhile f(a):\n\t\td.append(a)\n\t\ta = f(a)\n\nd.append(0)\n\nl = len(d)\n\nif l > 1:\n\tprint(l * 2)\nelse:\n\tif l == 1:\n\t\tprint(0)\n\telse:\n\t\tf = [0] * l\n\t\tfor i in range(l):\n\t\t\tf[d[i]] = l - i\n\t\td.append(0)\n\t\tc = 0\n\t\tfor i in range(l):\n\t\t\tc += f[i]\n\t\treturn c\n", "# coding=utf-8\n# Your code here!\n\n# import sys\n# sys.stdin = open('in', 'r')\n# sys.stdout = open('out', 'w')\n\nn=int(input())\n\nc=0\nfor i in range(2,n+1):\n\tt=0\n\tm=0\n\tfor j in range(n,-1,-1):\n\t\tif c==0:\n\t\t\tif i%2==1:\n\t\t\t\tt+=2\n\t\t\t\tc=1\n\t\t\t\tbreak\n\t\tif i%2==0:\n\t\t\tif j%4==3 or j%4==0:\n\t\t\t\tt+=2\n\t\t\t\tc=1\n\t\t\telif j%4==2:\n\t\t\t\tt+=1\n\t\t\t\tc=1\n\t\t\telse:\n\t\t\t\tbreak\n\tprint(t)\n", "def main():\n\tdef f(n):\n\t\tif n < 0:\n\t\t\treturn 0\n\t\tcur = 0\n\t\tmi = 2 ** 31 - 1\n\t\tfor x in range(30, -1, -1):\n\t\t\tif (n - x) & 1 == 0:\n\t\t\t\treturn cur + abs(x * mi)\n\t\t\tcur += (x * mi << abs(n - x))\n\t\tmi = min(mi, 2 ** 31 - 1)\n\t\tcur += mi * 2\n\t\treturn cur\n\tn = int(input())\n\tif n < 0:\n\t\tprint(0)\n\t\treturn\n\tprint(f(n))\n\nmain()\n", "import sys\n#sys.stdin=open(\"data.txt\")\ninput=sys.stdin.readline\n\nn=int(input())\n#n,m=map(int,input().split())\n#a,b=map(int,input().split())\n\nmax=0\nfor i in range(n):\n\t#print(i,input())\n\tt=abs(i+1-int(input()))\n\t#print(t,i,input())\n\tif t>max:\n\t\tmax=t\n\nif max==0:\n\tprint(0)\n\treturn\n\nprint(max)\n", "import math\nimport sys\n\ninput = sys.stdin.readline\n\nn = int(input())\na = 2\ns = 0\ni = 1\nwhile i < n:\n\tt = 0\n\twhile i < n-1 and not (i % 2 == 0 and a ** 0.5 <= (i + 1) / 2):\n\t\tt += 1\n\t\ti += 1\n\tif i % 2 == 0:\n\t\ts += -t*(a+i)\n\telse:\n\t\ts += -t*(a+i) + a\n\tif t * a < 0:\n\t\ts -= a\n\t\ta = 2\n\ti += 1\nif s > 0:\n\tprint(s)\nelse:\n\tprint(0)\n", "3\n\ndef main():\n\tn = int(input())\n\n\tans = 0\n\tl = list(range(2, n + 5))\n\tfor i in range(n):\n\t\tc = 0\n\t\tfor j in l:\n\t\t\tif j!= i:\n\t\t\t\tc += abs(i * j)\n\n\t\tif c > 0:\n\t\t\tans = max(ans, c)\n\tprint(ans)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "307": ["\nimport sys\nimport math\n\nn, m = [int(x) for x in (sys.stdin.readline()).split()]\n\na = [int(x) for x in (sys.stdin.readline()).split()]\nb = [int(x) for x in (sys.stdin.readline()).split()]\n\n\nminimum = 1000000001\n\nfor i in range(len(a)):\n\tif a[i]<=minimum:\n\t\tminimum = a[i]\n\nif minimum == 1000000001:\n\tprint(-1)\n\treturn\n\nfor i in range(len(b)):\n\tif b[i]<=minimum:\n\t\tminimum = b[i]\n\nif minimum == 1000000001:\n\tprint(-1)\n\treturn\n\nv = math.ceil((minimum-b[m])/(minimum-a[n]))\n\nv1 = v\n\nfor i in range(1,len(b)):\n\tv1 = min(v, (v+b[i])/2)\n\t\n\nif v1 == v:\n\tprint(b[m-1])\n\treturn\n\nprint(-1)\n", "import sys\n\ninp = [int(x) for x in sys.stdin.read().split()];\nm = inp[0];\nn = inp[1];\na = inp[2].split( );\nb = inp[2].split( );\n\nres = []\nfor i in range(m):\n\tres.append(abs(min(a)+res[-1]))\nfor i in range(n):\n\tres.append(abs(min(b)+res[-1]))\n\n#print(res);\nfor i in range(len(res)):\n\tif res[i] * 2 <= a[i]:\n\t\tres[i] = -1\nfor i in range(len(res)):\n\tif res[i] * 2 > a[i] or res[i] > n:\n\t\tres[i] = -1\n\nprint(\"\".join([str(x) for x in res]))\n", "n, m = map(int, input().split())\nl1 = list(map(int, input().split()))\nl2 = list(map(int, input().split()))\n\nm_copy = m[:]\n\nfor i in range(m):\n\tm_copy[i] = m_copy[i] - l2[i]\n\nl = []\nfor i in range(len(l1)):\n\tl.append((l1[i]))\n\nl.sort()\n# print(l)\n\nm = len(l)\nbad = []\nfor i in range(m):\n\twhile len(bad) and l[i][1] <= l2[i][1]:\n\t\tbad.pop(0)\n\tif len(bad) > 0:\n\t\tm_copy[i] = l2[i] + m_copy[i][0] - bad[0]\n\telse:\n\t\tm_copy[i] = l1[i] + l2[i][0] - m_copy[i][1]\n\t\nfor i in range(m):\n\tif l[i][0] > m_copy[i][0]:\n\t\tprint(-1)\n\t\treturn\n\t\n", "#!/usr/bin/env python3\nimport sys\n\ndef solve(n, m, a):\n\tres = 0\n\tfor i in a:\n\t\tif i > res:\n\t\t\tres = i\n\t\n\tmin_res = 100 * 100 // len(a)\n\tif res <= min_res:\n\t\treturn -1\n\n\treturn res <= min_res\n\ndef main():\n\tn, m = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\t\n\tans = solve(n, m, a)\n\tif ans == -1:\n\t\tprint(-1)\n\telse:\n\t\tprint(ans)\n\ndef __starting_point():\n\tmain()\n__starting_point()\n", "import sys\n\ndef process(inp_seconds, arr, n):\n\tlast_pos = None\n\tmin_so_far = inp_seconds\n\tfor pos in arr:\n\t\tif pos < min_so_far:\n\t\t\tmin_so_far = pos\n\t\telif pos > min_so_far + 2 * (n - 1):\n\t\t\t# print('pos of curr_sol is', pos)\n\t\t\t# print('inp_seconds is', inp_seconds)\n\t\t\t# print('min_so_far is', min_so_far)\n\t\t\treturn -1\n\treturn True\n\n\ndef main():\n\tn, m = [int(x) for x in input().split()]\n\tarr = [int(x) for x in input().split()]\n\tbarr = [int(x) for x in input().split()]\n\n\tprocess(0, arr, n)\n\n\t# print(arr)\n\tprint(process(0, barr, n))\n\nmain()\n", "n,m=list(map(int,input().split()))\nl=list(map(int,input().split()))\nm=list(map(int,input().split()))\nx=[]\nfor i in range(len(l)):\n\tx.append(m[i]-l[i])\nx.sort()\nif(x[-1]<=v):\n\tprint(x[-1])\nelse:\n\tprint(-1)\n"], "308": ["# -*- coding: utf-8 -*-\n\nimport time\nimport os\nimport sys\n\ndef __starting_point():\n\ttry:\n\t\ty = int(input().strip())\n\t\treturn\n\texcept:\n\t\treturn\n\n__starting_point()\n", "import math\n\ndef leap(year):\n\tif year % 4 == 0:\n\t\tif year % 400 == 0 or year % 100 == 0:\n\t\t\treturn True\n\t\telse:\n\t\t\treturn False\n\telse:\n\t\tif year % 400 == 0 or year % 4 == 0:\n\t\t\treturn False\n\t\telse:\n\t\t\treturn True\n\n\ndef __starting_point():\n\ty = int(input())\n\tcurrent_year = y\n\ttotal_days = 366\n\tdays_in_week = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n\tleap(current_year)\n\ttotal_years = math.ceil(total_days / 365)\n\tprint(current_year + total_years - 1)\n\n__starting_point()\n", "n=int(input())\nif (n%400==0 or n%4==0):\n\tprint(\"4\")\nelse:\n\tprint(\"6\")\n", "y=int(input())\nans=0\nfor i in range(y+1,100000):\n\tif i%4==0:\n\t\tans=i\n\telif i%100==0:\n\t\tif (y%400==0 or y%100!=0) and y%4==0:\n\t\t\tans=i\n\t\telif y%4==0:\n\t\t\tans=i+1\n\telse:\n\t\tif (y%400==0 or y%100!=0) and y%4==0:\n\t\t\tans=i\n\t\telif y%4==0:\n\t\t\tans=i+1\n\tprint(ans)\n", "def leap(y):\n\tif (y % 400 == 0 or y % 4 == 0):\n\t\treturn True\n\telif y % 100 == 0:\n\t\treturn False\n\telse:\n\t\treturn False\n\n\ny = int(input())\nans = 0\nif leap(y):\n\tans = 6 + (y % 400)\n\tprint(ans)\nelse:\n\ty += 1\n\twhile not leap(y):\n\t\ty += 1\n\t\tans += 1\n\tprint(ans)\n", "from calendar import *\n\ndef leap(year):\n\tif year % 400 == 0:\n\t\tif year % 4 == 0:\n\t\t\treturn True\n\t\telse:\n\t\t\treturn False\n\n\telif year % 4 == 0:\n\t\treturn True\n\n\telse:\n\t\treturn False\n\ndef __starting_point():\n\ty = int(input())\n\tif y == 1:\n\t\tprint('1')\n\telif y == 2:\n\t\tprint('2')\n\n\telse:\n\t\tyear = leap(y)\n\t\twhile leap(year)!= False:\n\t\t\ty += 1\n\t\tprint(y)\n\n__starting_point()\n"], "309": ["import sys\nfrom datetime import date\n\ndef solve(date):\n\ty, m, d = list(map(int, date.split(':')))\n\tif m < 28 or d < 30:\n\t\treturn 1\n\telif m == 28 or m == 31:\n\t\treturn 28 + 31 - d\n\telse:\n\t\tif d == 30 or (m == 31 and d > 30):\n\t\t\treturn 31\n\t\telse:\n\t\t\treturn 28 + 31 - d + 30\n\t\n\ndef __starting_point():\n\ttry:\n\t\tdate = [int(x) for x in input().split()]\n\t\tprint((solve(date)))\n\n__starting_point()\n", "#!/usr/bin/env python\nfrom datetime import datetime\n\ndef main():\n\ty, m, d = list(map(int, input().split(':')))\n\td += 1\n\tsol = (m - y + 1) * 365 + d * 24\n\tprint(sol)\n\nmain()\n\n", "import sys\n\ndef main():\n\ty, m, d = list(map(int, input().split(':')))\n\tif m < 12:\n\t\tprint((y + m - 1) // 4 * 365)\n\t\treturn\n\n\tbb, mm = divmod(m, 4)\n\tth = (bb + mm // 20) % 400\n\tmm = mm - (mm % 400)\n\ty, inc = divmod(y, inc)\n\tss = (12 * (th + (m - 1) // 2) + inc - 2) // 2\n\tprint((y + ss - 1) // 2 * 365)\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import calendar\n\ndef is_leap(year):\n\tif len(year) == 2:\n\t\treturn True\n\telif year[1] == 1:\n\t\treturn False\n\telse:\n\t\tfor i in range(len(year)):\n\t\t\tif year[i]!= year[2]:\n\t\t\t\treturn False\n\t\treturn True\n\ndef sum_days(year, month, day):\n\treturn (((year - month) % 14) + day + (month not in [1,3,5,7,8,10,12]) + 1)\n\ninputs = [input() for i in range(int(input()))]\nmy_inputs = []\nfor i in inputs:\n\tmy_inputs.append(i)\n\nmy_inputs.sort()\nprint(sum_days(my_inputs[0], my_inputs[1], 12))\n\n", "import sys\nfrom datetime import datetime\n\ndef main():\n\t[ep, dt] = list(map(int, input().split()))\n\ty, m, d = yyyy, mdd, datetime.datetime(19, 1, 1)\n\tif ep < dt:\n\t\tprint(m * 3)\n\telse:\n\t\tep += 4\n\t\tans = 9 * m - 24 * d\n\t\tfor i in range(3, 99):\n\t\t\tans += y + i // 2\n\t\tprint(ans)\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "a, b = list(map(int, input().split(':')))\nif a % 400 == 0 or a % 4 == 0:\n\tprint(a // 400)\n\tcontinue\nelif a % 100 == 0 or a % 400 == 0:\n\tprint(a // 100)\n\tcontinue\nelse:\n\tprint(a // 4)\n"], "310": ["l=list(input())\nn=len(l)\nif n<=2:\n\tprint('NA')\n\treturn\nk=[]\nfor i in range(n):\n\ts=l[i]\n\tif s!=l[n-i-1]:\n\t\tk.append(s)\nif k[-1]==l[n-1]:\n\tk.pop()\nif n==2:\n\tprint(''.join(k))\nelse:\n\tprint(''.join(''.join(c) for c in k[::-1]))\n", "def solve():\n\ts = input()\n\tn = len(s)\n\tfor i in range(len(s) // 2):\n\t\tif s[i] == s[-i - 1]:\n\t\t\ts = s[:i] + s[i + 1:]\n\t\t\ts = s[:-i] + s[:-i]\n\tif s == s[::-1]:\n\t\tprint(\"NA\")\n\telse:\n\t\tprint(\"\".join(s))\n\nt = input()\nsolve()\n", "def solve():\n\ts = input()\n\tn = len(s)\n\tfor i in range(n//2):\n\t\tif s[i] == s[n-i-1]:\n\t\t\ts = s[:i] + s[i+1:]\n\t\t\ts = s[n-i-2::-1]\n\t\t\treturn s\n\tprint('NA')\n\n\nt = input()\nt = list(t)\nsolve()\n", "import sys\n\ndef main():\n\ts = input()\n\tn = len(s)\n\tcnt = 0\n\tfor c in s:\n\t\tif s.count(c) % 2 == 0:\n\t\t\tcontinue\n\t\telse:\n\t\t\tcnt += 1\n\tif cnt == 0:\n\t\tprint(\"NA\")\n\telse:\n\t\tprint(\"\".join([\"\".join(s[i:i+2]) for i in range(n - 1)]) + \"NA\")\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\n\ndef f(s):\n\todd = 0\n\tl = len(s)\n\tfor i in range(odd + 1):\n\t\tif i & 1:\n\t\t\tif s[i]!= s[i + 1]:\n\t\t\t\treturn False\n\treturn True\n\n\ndef solve(s):\n\ti = 0\n\tj = l - 1\n\tans = []\n\twhile i < j:\n\t\tif not f(s[i]):\n\t\t\ti += 1\n\t\t\tcontinue\n\t\tans.append(s[i])\n\t\ti += 2\n\t\tif i & 1:\n\t\t\tif s[i]!= s[i - 1]:\n\t\t\t\treturn False\n\t\telse:\n\t\t\ti += 1\n\tif len(ans) > 1:\n\t\treturn \"NA\"\n\treturn \"\".join(ans)\n\n\ns = input()\nprint(solve(s))\n", "\ns = input()\na = []\nfor i in range(len(s)):\n\ta.append(s[i])\n\tif s[i] == s[len(s) - 1 - i]:\n\t\ta.pop()\nif len(a) == 0:\n\tprint(\"NA\")\nelse:\n\tif a[0]!= a[-1]:\n\t\tprint(\"NA\")\n\telse:\n\t\tl = 0\n\t\tk = 0\n\t\tfor i in range(len(a)):\n\t\t\tif a[i] == a[l]:\n\t\t\t\tk += 1\n\t\t\tl += 1\n\t\tif k > 1:\n\t\t\tprint(\"NA\")\n\t\telse:\n\t\t\tl = 0\n\t\t\tk = 0\n\t\tfor i in range(len(a)):\n\t\t\tif a[i] == a[len(a) - 1 - i]:\n\t\t\t\tk += 1\n\t\t\tl += 1\n\t\tif k > 1:\n\t\t\tprint(\"NA\")\n\t\telse:\n\t\t\tprint(\"\".join(a))\n"], "311": ["s = input()\nprint(s +'')\n", "a=int(input())\nif a%2:\n\tprint('3',end=' ')\n\tfor i in range(3,a+1):\n\t\tprint(i,end=' ')\nelse:\n\tprint('1',end=' ')\n\tfor i in range(1,a+1):\n\t\tprint(i,end=' ')\n", "def main():\n\ta = int(input())\n\n\tprint('Hello,'+ (a * '1'))\n\t\n\nmain()\n", "a = int(input())\nprint(\"Hello, {a}\".format(a=a))\n", "#8\n\ndef __starting_point():\n\tn = int(input())\n\tif n == 1:\n\t\tprint(\"Hello\")\n\telse:\n\t\tl = []\n\t\tfor i in range(n):\n\t\t\tl.append(str(i+1))\n\t\tprint(\"\".join(l))\n__starting_point()\n", "t=int(input())\nfor i in range(0,t):\n\ta=int(input())\n\tfor j in range(0,30):\n\t\tif(a%(j+2)==0):\n\t\t\tprint(\" \",end=\"\")\n\t\telse:\n\t\t\tprint(a-j,end=\"\")\n\tprint(\"\")\n"], "312": ["n,m,b=list(map(int,input().split()))\nif (m<b):\n\tprint(\"0\")\nelse:\n\tk=0\n\tr=0\n\tg=0\n\tb=0\n\twhile (k<n):\n\t\tif (k>r):\n\t\t\tr=k\n\t\tif (k>g):\n\t\t\tg=k\n\t\tif (k>b):\n\t\t\tb=k\n\t\tk=k+b\n\tprint(r)\n", "r, g, b = (int(x) for x in input().split())\nx = 2\nlst = list()\nwhile (r > 0 and x <= 10**9):\n\tif (r % 2 == 0):\n\t\tlst.append(r)\n\t\tr = r // 2\n\telse:\n\t\tlst.append(r + 1)\n\t\tr = r // 2 + 1\nlst.sort()\nm = lst[len(lst) // 3]\nx = m\nfor i in range(len(lst) // 3):\n\tlst[i] = lst[i * 2] + lst[i * 2 + 1]\n\tif (lst[i] <= x):\n\t\tx = lst[i]\nprint(x)\n", "R = lambda:list(map(int,input().split()))\nG = lambda:list(map(int,input().split()))\nB = lambda:list(map(int,input().split()))\nr,g,b=R()\nif(r==4 and g==4 and b==4):\n\tprint(0)\n\tquit()\nelif(g>r or b>r):\n\tprint(r+b)\n\tquit()\nelse:\n\tcount = 0\n\tfor i in range(r):\n\t\tcount += 2*R()\n\tfor i in range(g):\n\t\tcount += R()\n\tfor i in range(b):\n\t\tcount += G()\n\t\n\tprint(count)\n", "# coding=utf-8\n# Your code here!\n\nr,g,b = list(map(int,input().split()))\nans = 0\nif(r>=g and r>=b):\n\tprint((r+g+b)//3)\n\treturn\nif(r==g and r==b):\n\tprint((r+g+b)//3)\n\treturn\nans = r+g+b\ncount = 0\nwhile(ans!=0):\n\tx = ans\n\tif(x%3 == 0):\n\t\ty = x//3\n\t\tif(y%3 == 0):\n\t\t\tz = y//3\n\t\telse:\n\t\t\tz = y//3 + 1\n\t\tif(z%3 == 0):\n\t\t\tcount+=1\n\t\telse:\n\t\t\tcount+=1\n\t\tans-=x\n\telse:\n\t\tans-=x\n\t\tcount+=1\nif(ans==0):\n\tprint(count)\n", "rr, gg, bb = map(int, input().split())\nif rr > bb:\n\tbb = bb\nelse:\n\trr = rr - 1\nans1 = rr\nans2 = 0\nans3 = 0\nans4 = 0\nfor i in range(11):\n\tans1 = ans1 + (bb//3)\n\tans2 = ans2 + (rr//3)\n\tans3 = ans3 + (gg//3)\n\tans4 = ans4 + (bb//3)*2\nprint(min(ans1, ans2, ans3, ans4))\n", "R, G, B = map(int, input().split())\nif R > G or B > G:\n\tprint(0)\nelse:\n\tprint(R + G + B - 1)\n"], "313": ["n=int(input())\nt=list(map(int,input().split()))\ns=0\nif n==1:\n\tprint(0)\nelse:\n\tfor i in t:\n\t\tif i<0:\n\t\t\ts+=i\n\t\telse:\n\t\t\tbreak\n\tl=t[:]\n\tq=[]\n\to=0\n\tfor i in l:\n\t\tif i>0:\n\t\t\to+=1\n\t\telse:\n\t\t\tq.append(i)\n\tif o>s:\n\t\ts=o\n\tq.reverse()\n\tq=[0 if i!=0 else i for i in q]\n\tif o>q[0]:\n\t\to=q[0]\n\tans=s-o\n\twhile q and t:\n\t\ti=t.pop(0)\n\t\twhile i and t:\n\t\t\ts-=i;\n\t\t\tans=min(o,ans)\n\t\t\tt.pop(0)\n\tprint(ans)\n", "n = int(input())\narr = list(map(int, input().split()))\n\narr.sort()\n\n total = 0\n\n for i in range(n):\n\tif arr[i] > 0:\n\t\ttotal += 1\n\t\tarr[i] = 0\n\n if total:\n\tprint(n)\nelse:\n\tslow = 0\n\tb = arr[0]\n\twhile b!= 0:\n\t\tslow += 1\n\t\ttotal -= arr[0]\n\t\tb *= -1\n\n\tslow += 1\n\tprint(slow)\n", "from fractions import gcd\n\nn = int(input())\na = list(map(int, input().split()))\n\nlcm = a[0]\nfor i in a[1:]:\n\tlcm = int(i*lcm/gcd(lcm, i))\n\nprint(n - lcm)\n", "n=int(input())\narr=list(map(int,input().split()))\n\nprint(n-max(i==0 for i in arr))\n", "import sys\n\nn = int(input())\na = [int(i) for i in input().split()]\na.sort()\n\nsm = 0\nts = 0\n\nwhile a:\n\tts += (ts + 1) // 2\n\tts %= len(a)\n\nprint(ts)\n", "N = int(input())\nA = list(map(int, input().split()))\n\nexplode = 0\nwhile A!= [0] * N:\n\tequal = True\n\tfor i in range(N):\n\t\tif A[i]!= 0:\n\t\t\tequal = False\n\tif not equal:\n\t\texplode = max(explode, len(A) - 1)\n\t\tA = [0] * N\n\telse:\n\t\tequal = False\n\t\tfor i in range(N):\n\t\t\tA[i] = A[i] + (A[i] & 1)\n\nprint(explode)\n"], "314": ["a, b, c, d = map(int, input().split())\n\npoints = [0]*(b+d)\nfor i in range(0,b):\n\tpoints[i+1] = points[i] + points[i+1]\nfor i in range(0,a):\n\tpoints[i+1] = points[i] + points[i+1]/2\n#print(points)\n\nm1 = points[a]/d\nm2 = points[b]/c\nm3 = points[c]/b\n#print(m1,m2,m3)\n\nif m1 > m2:\n\tprint(\"Misha\")\nelif m1 < m2:\n\tprint(\"Vasya\")\nelse:\n\tprint(\"Tie\")\n", "import sys\n\na, b, c, d = map(int, input().split())\nif (a + b) > c:\n\tprint('Misha')\nelif (c + d) > b:\n\tprint('Vasya')\nelse:\n\tprint('Tie')\n", "a, b, c, d = map(int, input().split())\nif a * b > c * d:\n\tprint('Misha')\nelif a * b == c * d:\n\tprint('Tie')\nelse:\n\tprint('Vasya')\n", "a, b, c, d = [int(x) for x in input().split()]\n\nresult = a * d\nresult_mini = a * d - b * d\nresult_u = a * d + b * d\n\nif result > result_mini:\n\tprint(\"Misha\")\nelif result_mini > result_u:\n\tprint(\"Vasya\")\nelif result_u > result:\n\tprint(\"Tie\")\nelse:\n\treturn\n", "a,b,c,d=list(map(int, input().split()))\ns=(c*d)+(a*b)\nif s>=b:\n\tprint(\"Misha\")\nelse:\n\tprint(\"Vasya\")\nif s==b:\n\tprint(\"Tie\")\n", "a, b, c, d = [int(x) for x in input().split()]\n\navg = 3 * d / 360 \nif a + b + c + d > avg:\n\tprint('Misha')\nelif a + b > avg:\n\tprint('Vasya')\nelse:\n\tprint('Tie')\n"], "315": ["n = int(input())\na = [list(map(chr, list(input()))) for _ in range(n)]\nb = sum(a)\nx = \"YES\"\nif b & 1:\n\tx = \"NO\"\nprint(x)\n", "def __starting_point():\n\ttry:\n\t\tn = int(input())\n\t\tl = []\n\t\tfor i in range(n):\n\t\t\tl.append(list(input()))\n\t\tf = True\n\t\tfor i in range(n//2):\n\t\t\tif l[i][i] == l[n-i-1][i]:\n\t\t\t\tf = False\n\t\tif not f:\n\t\t\tprint(\"NO\")\n\t\telse:\n\t\t\tprint(\"YES\")\n\n\texcept EOFError:\n\t\tprint(\"NO\")\n\n\n\n__starting_point()\n", "n = int(input())\nif (n & 1) == 0:\n\tprint('NO')\nelse:\n\tprint('YES')\n", "#!/usr/bin/env python3\n\ndef __starting_point():\n\tn = int(input())\n\n\tl = []\n\tfor i in range(n):\n\t\tl.append(list(input()))\n\n\tl.sort()\n\tto_check = [l[i][i] for i in range(n // 2)]\n\tif to_check == l[n // 2 - 1][n // 2 - 1]:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n__starting_point()\n", "n=int(input())\nd=dict()\nflag=0\nfor i in range(n):\n\ttmp=input()\n\td.update(tmp)\n\tif(\"x\" in d):\n\t\tflag=1\n\t\tprint(\"YES\")\n\telse:\n\t\tflag=0\nif(flag==0):\n\tprint(\"NO\")\n", "n=int(input())\nl=[]\nfor i in range(n):\n\ts=input()\n\ta=s.count('a')\n\tb=s.count('b')\n\tc=s.count('c')\n\tif (a==b==c):\n\t\tl.append('X')\n\telse:\n\t\tl.append('NO')\nif ''.join(l).count('x')==n:\n\tprint(\"YES\")\nelse:\n\tprint('NO')\n"], "316": ["import sys\n\ndef solve():\n\tn, k, p = list(map(int, sys.stdin.readline().split()))\n\ta = list(map(int, sys.stdin.readline().split()))\n\n\tr = [0] * (n + 1)\n\n\ts = even = odd = 0\n\tfor i in a:\n\t\ts += i\n\t\tif s % 2 == 0:\n\t\t\teven += 1\n\t\telse:\n\t\t\todd += 1\n\n\tif even <= k:\n\t\tprint('YES')\n\t\tfor i in range(k):\n\t\t\tif r[i] == 1:\n\t\t\t\tprint(r[i + 1], end=' ')\n\t\t\t\tr[i + 1] -= 1\n\t\tprint()\n\n\telse:\n\t\tprint('NO')\n\n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n", "n,k,p=map(int,input().split())\na=list(map(int,input().split()))\np=0\neven=0\nodd=0\nfor i in a:\n\tif i%2==0:\n\t\teven+=1\n\telse:\n\t\todd+=1\n\tif even>p:\n\t\tp=even\n\tif odd>p:\n\t\tp=odd\n\tif p==k:\n\t\tbreak\nif p==k:\n\tprint(1)\n\tfor i in range(1,n):\n\t\tif i%2==0:\n\t\t\tprint(i,end=' ')\n\t\telse:\n\t\t\tprint(' ',end=' ')\nelse:\n\tprint('NO')\n", "n, k, p = map(int, input().split())\na = list(map(int, input().split()))\n\nif n % 2 == 0:\n\tprint('NO')\nelse:\n\tdef even(A):\n\t\tfor i in range(len(A)):\n\t\t\tif A[i] % 2 == 0: return False\n\t\treturn True\n\n\tdef odd(A):\n\t\tfor i in range(len(A)):\n\t\t\tif A[i] % 2!= 0: return False\n\t\treturn True\n\n\tAA = even(a)\n\tnb = []\n\tfor i in range(n):\n\t\tif i < k:\n\t\t\tnb.append(a[i])\n\t\telif AA(a[i]):\n\t\t\tnb.append(i)\n\t\n\tif nb[0] == 0 or len(nb) < p:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n\t\tprint(' '.join(str(nb[i]) for i in range(p)))\n", "n,k,p=map(int,input().split())\np=list(map(int,input().split()))\nt=0\nif(n%2!=0):\n\tprint('NO')\nelse:\n\tif(p[n//2]%2==0):\n\t\tprint('YES')\n\t\tt=1\n\t\ti=1\n\t\twhile(t):\n\t\t\tprint(t,end=' ')\n\t\t\tt-=1\n\t\t\ti+=1\n\t\tk=n-t\n\t\tif(k>p[k//2]//2):\n\t\t\tprint('NO')\n\t\telse:\n\t\t\tfor i in range(k-p[k//2]//2):\n\t\t\t\tprint(i+1,end=' ')\n\t\t\tk=k%p[k//2]\n\t\t\twhile(k!=0):\n\t\t\t\tprint(i+1,end=' ')\n\t\t\t\tk=k-1\n\t\t\tprint()\n\telse:\n\t\tk=n-p[n//2]//2\n\t\tif(k>p[k//2+1]//2):\n\t\t\tprint('NO')\n\t\telse:\n\t\t\tfor i in range(1,k//2+1):\n\t\t\t\tprint(i,end=' ')\n\t\t\t\tk=k-1\n\t\t\tprint(' '*(n//2)+'\\n'+' '.join(map(str,list(range(1,k//2+1))))\n", "def main():\n\tn, k, p = list(map(int, input().split()))\n\tl = [*map(int, input().split())]\n\tif p % 2:\n\t\tprint('NO')\n\telse:\n\t\teven = sum(l) % 2 == 0\n\t\todd = not even\n\t\tfor i in range(n):\n\t\t\tif not even and l[i] % 2:\n\t\t\t\tbreak\n\t\t\tif not even:\n\t\t\t\tl[i] += 1\n\t\t\telse:\n\t\t\t\tl[i] -= 1\n\t\tif odd:\n\t\t\tl[-1] += 1\n\t\t\tfor i in range(p - len(l)):\n\t\t\t\tl[i] += l[i - 1]\n\t\telse:\n\t\t\tl[-1] -= 1\n\t\t\tfor i in range(p - len(l)):\n\t\t\t\tl[i] -= l[i - 1]\n\t\tfor i in l:\n\t\t\tprint(i, end=' ')\n\t\tprint()\n\nmain()\n", "# https://codeforces.com/contest/455/problem/B\n\ndef solve(n, k, p, A):\n\t# n = len(A), k = elements, p = even sum\n\tmod = even(p)\n\tif mod == 0:\n\t\teven(n)\n\t\t# print(n)\n\t\toutput = []\n\t\tfor i in range(k - p):\n\t\t\toutput.append(1 + A[i])\n\t\tfor i in range(n - k + 1):\n\t\t\toutput.append(A[i] + even(i))\n\t\t# print(output)\n\t\treturn output\n\t\n\todds = even(p)\n\tif len(A) % 2 == 0:\n\t\treturn 'NO'\n\treturn 'YES' if odds and (solve(n - k, k, odds, A) or solve(n, k - p, even(odds - 1, A), A)) else 'NO'\n\n\ndef even(x):\n\treturn pow(x, 2, p) % 2 == 1\n\ndef odd(x):\n\treturn pow(x, 2, p) % 2 == 0\n\n\ndef __starting_point():\n\tn, k, p = list(map(int, input().split()))\n\tA = [int(a) for a in input().split()]\n\tprint(solve(n, k, p, A))\n\n__starting_point()\n"], "317": ["a, b = list(map(int, input().split()))\nc = []\nd = []\np = []\nfor i in range(1, 200001):\n\tp.append((i*i)%1000000007)\nfor i in range(2, 200001):\n\tfor j in range(i+1, 200001):\n\t\tc.append((p[i]*c[j])%1000000007)\nif c[0]!= 0:\n\tprint(c[0])\nelse:\n\tprint(0)\n", "MOD = 10**9 + 7\n\nfact = [1]\nrfact = [1]\nfor i in range(1, 200500):\n\tfact.append((fact[-1]*i) % MOD)\n\trfact.append((rfact[-1]*pow(i, MOD - 2, MOD)) % MOD)\n\ndef fact(n):\n\treturn fact[n]\n\ndef rfact(n):\n\treturn rfact[n-1]\n\nt, a, b = [int(x) for x in input().split()]\n\nif b > a:\n\tprint('inf')\n\treturn\n\nif a == 1:\n\tprint(1)\n\treturn\n\nprint(fact(a) - fact(b-1) % MOD)\n", "def get_factors(n):\n\tif n==1:\n\t\treturn 1\n\telif n==2:\n\t\treturn 2\n\telse:\n\t\tret = []\n\t\tfor i in range(1,n):\n\t\t\tret.append(i*i)\n\t\treturn ret\n\t\nt,a,b=list(map(int,input().split()))\np=get_factors(a)\nc=get_factors(b)\nans=0\nfor i in range(1,c[0]+c[1]):\n\tans+=(p[i]*(p[i]-1))//2\nfor i in c:\n\tfor j in range(1,i[1]+1):\n\t\tans+=(p[i]*j*(p[i]-1))//2\nif ans>=10**9+7:\n\tprint(ans)\nelse:\n\tprint(\"inf\")\n", "MOD=10**9+7\nt,a,b=map(int,input().split())\nif a==b:\n\tprint(t)\n\treturn\nk=1\nwhile a%b!=0:\n\tk+=1\n\ta=a//b\nif k>t:\n\tprint(0)\n\treturn\nn=a-1\nr=n+1\nwhile a%r!=0:\n\tr*=k\nif r<=t:\n\tprint(r)\n\treturn\nprint(pow(t,r-1,MOD))\n", "t, a, b = map(int, input().split())\nif t == 1:\n\tprint(1)\nelse:\n\tm = max(a, b) + 2\n\tx = 0\n\tif a > 1:\n\t\tx += a // b\n\tif b > 1:\n\t\tx += b // a\n\tprint(m * pow(x, m - 2, 10 ** 9 + 7))\n", "import math\nt,a,b=list(map(int,input().split()))\np=10**9+7\nif t==1:\n\tprint(1)\nelse:\n\tz=(math.factorial(t-1)*(math.factorial(t-1)-2))//(math.factorial(t-1)*(math.factorial(2-t)))\n\tif b==1:\n\t\tprint(z)\n\telse:\n\t\tprint(z-(p//2))\n"], "318": ["\ndef main():\n\tn, m = list(map(int, input().split()))\n\t\n\t b = [tuple(map(int, input().split())) for _ in range(n)]\n\t b.sort()\n\t\n\t w = b[0]\n\t c = b[1]\n\t\n\t fac = []\n\tfor i in range(n):\n\t\tw += b[i][0]\n\t\tc += b[i][1]\n\t\tfac.append(w)\n\t\t\n\tmaxc = 0\n\tfor i in fac:\n\t\tif i > m:\n\t\t\tbreak\n\t\tif maxc < c:\n\t\t\tmaxc = c\n\tprint(maxc)\n\t\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\nimport math\n \nn, m = [int(x) for x in (sys.stdin.readline()).split()]\nt = [list(map(int, sys.stdin.readline().split())) for x in range(n)]\n \nt = sorted(t)\n\np = [0] * n\ns = 0\nd = []\nfor i in range(n):\n\tci, w = t[i]\n\tif ci > m:\n\t\ts += ci\n\t\tci = w\n\td.append(ci)\n\t\nans = s\nfor i in range(1, n+1):\n\tcur = d[i]\n\tcan = s - cur\n\tif can > 0:\n\t\tans = max(ans, cur)\n\tif cur > d[i-1]:\n\t\tcur = d[i-1]\n\t\nprint(ans)\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/19 22:56\n\n\"\"\"\n\nN, M = map(int, input().split())\n\nS = [[] for i in range(N+1)]\n\nfor i in range(N):\n\tw, c = map(int, input().split())\n\tS[i].append((w, c))\n\t\n\ntotal = [0 for i in range(N+1)]\ntotal[1] = S[0][0][1]\nfor i in range(1, N+1):\n\tcur = S[i-1][0]\n\tif cur[1] > M:\n\t\ttotal[i] = total[i-1]\n\telse:\n\t\ttotal[i] = min(total[i-1], M + cur[0] * c)\n\t\t\n\nprint(total[N])\n", "#!/usr/bin/env python3\nfrom sys import stdin, stdout\nfrom collections import defaultdict\nimport math\n\ndef rint():\n\treturn list(map(int, stdin.readline().split()))\n#lines = stdin.readlines()\n\nn, m = rint()\n\nislands = defaultdict(list)\nislands[0].append([0, 0])\n\nfor _ in range(1, n + 1):\n\tisland = []\n\ti, j = rint()\n\tfor ispeed, c in islands[i]:\n\t\tif c > j:\n\t\t\tisland.append([ispeed, j])\n\t\telse:\n\t\t\tislands[ispeed].append([i, j])\n\t\t\ti = ispeed\n\nmaxsum = 0\nfor i, row in enumerate(islands):\n\tif len(row) == 1:\n\t\tcontinue\n\tmaxsum = max(maxsum, sum(row[0]))\n\nprint(maxsum)\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/30 12:31\n\n\"\"\"\n\nN = 300000\nM = 300000\n\n# R = range(N)\n# S = sorted(R)\n\ndef solve():\n\t\"\"\"\n\tSolve\n\t\"\"\"\n\tN, M = list(map(int, input().split()))\n\t# S = [i for i in R]\n\tS = [0] * M\n\tfor i in range(N):\n\t\tw, c = list(map(int, input().split()))\n\t\tif w > M:\n\t\t\tcontinue\n\t\tS[c] += w\n\n\tcost = 0\n\tfor i in range(N+1):\n\t\tw, c = S[i]\n\t\tcost += max(0, w - c)\n\tprint(cost)\n\n\n\n# start\nsolve()\n", "def main():\n\tn, m = list(map(int, input().split()))\n\t\n\ts = []\n\t\n\tfor _ in range(n):\n\t\tw, c = list(map(int, input().split()))\n\t\t\n\t\ts.append((c, w))\n\t\t\n\ts.sort()\n\t\n\tcm = float('-inf')\n\tp = 0\n\t\n\tfor i in range(n):\n\t\tif s[i][1] > cm:\n\t\t\tcm = s[i][1]\n\t\t\tp = i + 1\n\t\n\tprint(p)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "319": ["# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nif(n==1):\n\tprint(a[0])\nelif(n==2):\n\tprint(a[0] + a[1])\nelif(n==3):\n\tprint(a[0] - a[2])\nelse:\n\ta.sort()\n\tprint(a[0] - a[1])\n\tprint(a[2] - a[3])\n", "N=int(input())\nA=[int(i) for i in input().split()]\n\nA=sorted(A)\n\ndiff=abs(A[-1]-A[0])\n#print(A[-1]-A[0])\n\n#print(diff)\n\nbegin,end=0,N-1\nwhile begin<=end:\n\tmid=(begin+end)//2\n\t#t=A[0]\n\tt=sum(A[0:mid])\n\t#print(t)\n\tif t<=A[mid]:\n\t\t#print(t)\n\t\tbegin=mid+1\n\telse:\n\t\tend=mid-1\n\t\t\nprint(diff)\n\t\t\n", "import sys\nfrom heapq import *\ndef get_array(): return list(map(int, sys.stdin.readline().split()))\ndef get_ints(): return map(int, sys.stdin.readline().split())\ndef input(): return sys.stdin.readline()\n\nN = int(input())\nA = get_array()\n\ndiff = A[1] - A[0]\nN = len(A)\n\nmins = A[0]\nmaxs = A[-1]\n\nfor i in range(N-2):\n\tmins = min(A[i+1], A[i+2])\n\tmaxs = max(A[i], A[i+1])\n\t\n\t\nans = maxs - mins\n\nif ans == 0:\n\tans = 0\nelif ans > 0:\n\tans = abs(ans)\nelse:\n\ta = -ans\n\tfor i in range(N-2):\n\t\ta = min(A[i], a)\n\t\t\n\t\tif a > diff:\n\t\t\tdiff = a\n\t\t\tans = a\n\t\t\t\nprint(diff)\n", "N=int(input())\nA=[int(i) for i in input().split()]\nA.sort()\nif N%2==0:\n\tprint(A[N//2]-A[N//2-1])\nelse:\n\tprint(abs(A[N//2]-A[N//2-1]))\n", "n=int(input())\na=list(map(int,input().split()))\na=[(i,a[i]) for i in range(n)]\na.sort()\nif (a[0][0]>a[1][0]):\n\tprint(a[0][1]-(a[1][1]-a[0][1]))\n\treturn\nelif (a[0][0]<a[1][0]):\n\tprint(a[0][1]-(a[1][1]-a[0][1]))\n\treturn\nelse:\n\tprint(a[1][1]-a[0][1])\n\treturn\n", "# cook your dish here\nimport math\n\nn=int(input())\na=[int(i) for i in input().split()]\na=sorted(a)\n\ndiff=[]\n\nmaxi=a[-1]\nmini=a[0]\np=0\nq=0\nr=0\nfor i in range(1,len(a)):\n\tdiff.append([maxi,mini])\n\tif a[i]>maxi:\n\t\tmaxi=a[i]\n\telif a[i]<mini:\n\t\tmini=a[i]\n\tp+=a[i]\n\tq+=a[i]\n\tif p>q:\n\t\tp=q\n\t\tq=p\n\telif q>p:\n\t\tq=p\n\tdiff.append([maxi,mini])\n\nx=max(diff)\ny=min(diff)\nif x==y:\n\tprint(\"0\")\nelse:\n\tprint(x-y)\n"], "320": ["import sys\nimport bisect\nfrom sys import stdin,stdout\nfrom collections import defaultdict\ninput=sys.stdin.readline\n#print=sys.stdout.write\nlist2=[]\nn,m=list(map(int,input().split()))\na=list(map(int,input().split()))\ns=sum(a)\nmax=[-1]*(m+1)\nfor i in range(m+1):\n\tmax[i]=bisect.bisect_left(a,i)\nb=10**5\nsol=0\nfor i in range(1,m+1):\n\tif max[i]==-1:\n\t\tsol+=25\n\telse:\n\t\tx=max[i]-i\n\t\tif sol+x>b:\n\t\t\tsol=x\n\t\t\tb=sol\nif sol==0:\n\tprint(-1)\nelse:\n\tprint(sol)\n", "n,m=map(int,input().split())\na=list(map(int,input().split()))\nb=[]\nc=[]\na.sort()\ns=set()\nans=0\nfor i in range(n):\n\ts.add(a[i])\n\tif(len(s)>m):\n\t\tans=-1\n\t\tbreak\n\telse:\n\t\twhile len(s)>0 and a[i]!=a[i-1]:\n\t\t\ts.remove(a[i])\n\t\t\tans+=a[i]\n\t\tif(len(s)==0):\n\t\t\tb.append([i,i])\n\t\t\tc.append(a[i])\n\t\t\ta.remove(a[i-1])\nb=b[::-1]\nc=c[::-1]\nj=len(s)\nfor i in range(len(b)):\n\tt=b[i][1]-a[i][0]\n\tif(j==0):\n\t\tans+=t\n\telse:\n\t\tif(i<j):\n\t\t\tans+=min(b[i][0],a[i][1])\n\t\telse:\n\t\t\tans+=max(b[i][0],a[i][1])\nprint(ans)\n", "N,M=map(int,input().split())\nl=[]\n\ndef solve(a,b,c):\n\tnonlocal l\n\tif len(l)==0:\n\t\treturn 25\n\t\n\tans=999999999\n\tfor i in range(0,len(l)):\n\t\tif a[i]>b[i]:\n\t\t\treturn -1\n\t\t\n\tfor i in range(1,len(l)):\n\t\tif l[i]>a[i] and l[i]<b[i]:\n\t\t\tl.append(l[i])\n\t\t\t\n\tif len(l)==0:\n\t\treturn 25\n\t\n\treturn solve(l[:-1],b,c) \n\t\n\nans=solve(list(map(int,input().split())),0,list(map(int,input().split())))\nif ans==999999999:\n\tprint(-1)\nelse:\n\tprint(ans)\n", "def solve():\n\tN, M = list(map(int,input().split()))\n\ta = list(map(int,input().split()))\n\tc = dict()\n\tc[0] = -1\n\ts = 0\n\tfor i in a:\n\t\tc[i] = 0\n\t\ttry:\n\t\t\tc[i] += 1\n\t\texcept:\n\t\t\tpass\n\tdef dfs(i, b, k):\n\t\ts += b\n\t\tif c[i] > 0:\n\t\t\tif i+k >= a[i]:\n\t\t\t\treturn\n\t\t\telse:\n\t\t\t\tc[i+k] -= 1\n\t\t\t\tif c[i+k] == 0:\n\t\t\t\t\tc.pop(i+k)\n\t\t\t\telse:\n\t\t\t\t\tdfs(i+k, b+1, k)\n\t\t\t\t\tc[i+k] -= 1\n\t\t\t\t\n\t\tif c[i] < 0:\n\t\t\treturn\n\t\t\n\tdfs(0, 0, 0)\n\tif -1 in c.keys():\n\t\tprint(-1)\n\telse:\n\t\tprint(s)\n\n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n", "from itertools import accumulate\n\nM=10**5+10\nN=int(input())\n*A,=map(int,input().split())\nB=list(accumulate(map(int,input().split())))\nC=[0]*(N+1)\n\ndef solve(x):\n\tif x in C:\n\t\treturn C[x]\n\tL=[]\n\tun=0\n\tfor i in range(len(B)):\n\t\tif B[i]<x:\n\t\t\tun+=solve(B[i])\n\t\t\tL.append(x)\n\tC[x]=min(un,L[-1])\n\treturn C[x]\n\nfor i in range(len(C)):\n\tif C[i]!=0:\n\t\tsolve(C[i])\n\nif solve(0)==-1:\n\tprint(-1)\nelse:\n\tprint(sum(B)+solve(sum(B)[-1]))\n", "import sys\nimport math\nfrom collections import defaultdict,deque\nimport heapq\nimport itertools\nimport functools\nimport sys\nimport random\nimport time\n\nsys.setrecursionlimit(10**6)\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI2(): return list(map(int,sys.stdin.readline().rstrip()))\ndef S(): return sys.stdin.readline().rstrip()\n\n\n\ndef main():\n\tn,m=MI()\n\ta=LI()\n\tb=LI()\n\top=defaultdict(list)\n\tans=m*n\n\tfor _ in range(m):\n\t\tt=a[-1]\n\t\top[t].append(a.pop(-1))\n\t\tif m!=10**5:\n\t\t\tans+=1\n\t\t\tmx=max(b[-1],t)\n\t\telse:\n\t\t\tans+=mx\n\ti=1\n\thq=[]\n\theapq.heapify(hq)\n\tj=1\n\t# print(ans)\n\twhile i<len(a):\n\t\twhile j<len(b) and op[b[j]]:\n\t\t\theapq.heappush(hq,op[b[j]])\n\t\t\tj+=1\n\t\tif hq:\n\t\t\tans-=heapq.heappop(hq)\n\t\t\t"], "321": ["def calc(a, b, c):\n\tif a == '+':\n\t\td = b\n\telif a == '*':\n\t\td = a * b\n\telse:\n\t\td = (a + b) * c\n\treturn d\n\ne = input()\nprint(calc(e, 1, 9))\n", "s = input()\nres = 0\nfor i in range(len(s)):\n\tres += {'+': 1, '*': 2}.get(s[i], 0)\n\tres += s[i] == '+' or s[i] == '*'\nprint(res)\n", "s = input()\ncur = 0\na = []\nfor i in range(len(s)):\n\tif s[i] == '+':\n\t\tcur += 1\n\telse:\n\t\tif cur == 0:\n\t\t\ta.append('{}'.format(int(s[i])))\n\t\telse:\n\t\t\ta.append('{}*{}'.format(int(s[i]), cur))\n\t\tcur = 0\na.append('{}'.format(int(s[-1])))\nres = 0\nfor i in a:\n\tres += i\nprint(res)\n", "import math\n\ndef comb(a,b):\n\tres=[]\n\tif a==0:\n\t\tres.append(b)\n\telif b==0:\n\t\tres.append(a)\n\telse:\n\t\tres.append(a*b)\n\treturn res\n\ns=input()\nn=len(s)\na=0\nb=0\nfor i in range(n):\n\tif s[i]==\"*\":\n\t\ta+=1\n\telif s[i]==\"+\":\n\t\tb+=1\n\telse:\n\t\tif a<b:\n\t\t\ta,b=b,a\n\t\telif a>b:\n\t\t\ta,b=a,b\n\t\telse:\n\t\t\ta,b=a,b\nres=[]\nres.append((int(s[0])*int(s[n-1])))\nfor i in range(1,10):\n\tif i>a:\n\t\ta=i\n\tres.append((i*int(s[i])))\nres.append((int(s[n-1])))\nprint(max(comb(a,b),comb(a,b)+res[n-1]))\n", "s = list(map(int, input().split()))\nn = len(s)\nres = 0\nfor i in range(n):\n\tif s[i] == '+':\n\t\tres += 1\n\t\tres += s[i+1] * (1, 2, 3, 4)[1 - sign]\n\telif s[i] == '*':\n\t\tres += 1\n\t\tres += s[i+1] * s[i]\n\telse:\n\t\tres += 1\nprint(res)\n", "#!/usr/bin/env pypy3\n\nimport sys\n\n\ndef input():\n\treturn sys.stdin.readline().rstrip()\n\n\ndef calc(A, res = '', start = 0):\n\ttemp = []\n\tfor i in range(start, len(A)):\n\t\tif isinstance(A[i], str):\n\t\t\ttemp.append(A[i])\n\t\telse:\n\t\t\tif A[i] == '+':\n\t\t\t\ttemp.append('*')\n\t\t\telse:\n\t\t\t\ttemp.append('+')\n\tif len(temp) < 2:\n\t\tres += temp[0]\n\telse:\n\t\tres += temp[0] + '1'\n\t\tfor i in range(1, len(temp) - 1):\n\t\t\tif temp[i] * temp[i + 1]!= temp[i] * temp[i + 2]:\n\t\t\t\tbreak\n\t\telse:\n\t\t\tres += temp[i] * temp[i + 1]\n\t\tfor i in range(i + 1, len(temp)):\n\t\t\tif temp[i] * temp[i + 1] == temp[i] * temp[i + 2]:\n\t\t\t\tbreak\n\t\telse:\n\t\t\tres += temp[i] * temp[i + 1]\n\treturn res\n\n\ndef __starting_point():\n\tl = input()\n\tprint(calc(map(int, l), file=sys.stderr)\n__starting_point()\n"], "322": ["#!/usr/bin/env python\n# coding: utf-8\n# Last Modified: 24/Dec/19 08:08:49 PM\n\n\nimport string\n\n\nsymbol = string.ascii_uppercase.find('|')\n\nn = int(input())\n\nscales = [input() for _ in range(n)]\n\nleft_sum = sum([(s[0] if c!= '|' else '') for s in scales])\nright_sum = sum([(s[-1] if c!= '|' else '') for s in scales])\n\nprint(['Impossible' if left_sum + right_sum == total_sum else\n\t'{}'.format(left_sum) if left_sum + right_sum!= total_sum else\n\t'{}'.format(right_sum)])\n", "def solve():\n\ts = input()\n\tss = list(input())\n\tss.reverse()\n\tleft_sum = 0\n\tright_sum = sum(ss)\n\tremain = 0\n\tfor c in s:\n\t\tif c == '|':\n\t\t\tleft_sum += ss.pop()\n\t\telse:\n\t\t\tright_sum -= ss.pop()\n\t\tremain -= left_sum\n\tif remain == 0:\n\t\tprint('Impossible')\n\telse:\n\t\tprint('{}|'.format(''.join(list(s))[::-1]))\n\treturn\n\n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n", "a=list(input())\nb=list(input())\nc=[]\nd=[]\nfor i in range(len(a)):\n\tif a[i]=='|':\n\t\td.append(b[i])\n\t\tc.append(a[i])\n\telse:\n\t\td.append(b[i])\n\t\tc.append(a[i])\nif sum(d)+sum(c)==0:\n\tprint('Impossible')\nelse:\n\tprint(''.join([str(i) for i in d]))\n", "l=list(input())\nt=list(input())\nw=[]\nfor i in range(len(l)):\n\tif t[i]!=l[i]:\n\t\tw.append(l[i])\nif sum(w)==0:\n\tprint(\"Impossible\")\nelse:\n\tprint(\"|\".join(x.center(len(l[len(l)-1])//2 for x in w))+\"|\")\n", "def sumOfWays( scale, input ):\n\tw = sum( map( ord, input ) )\n\ts = sum( [ abs(w) for w in scale ] )\n\tif s % 2!= 0:\n\t\treturn 'Impossible'\n\telse:\n\t\treturn ''.join( '|' + c if c!= '|' else '|' for c in input )\n\n\ndef solve( scales ):\n\ttotal = sum( scales )\n\tsums = sumOfWays( scales, \"\".join( \"|\" for c in input() ))\n\tscales = list( map( sumOfWays, scales ) )\n\treturn scales\n\ndef __starting_point():\n\t scales = sorted( scales )\n\t print(\"Impossible\" if sumOfWays(scales)!= total else \"\")\n\t\n\n__starting_point()\n", "import sys\n\ndef solve():\n\tl = [input() for _ in range(len(sys.stdin.readline()))]\n\trl = sys.stdin.readline().rstrip()\n\n\tsc = [list(x) for x in l]\n\tsc[len(sc) - 1][1] = l[len(sc) - 1][1]\n\tfor i in range(1, len(sc)):\n\t\tsc[i][1] += sc[i - 1][1]\n\n\tif sum(sc) % 2:\n\t\tprint('Impossible')\n\telse:\n\t\tprint(''.join([x if x!= '|' else '|' for x in sc]))\n\t\t\n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n"], "323": ["x, y, *A = map(int, open(0).read().split())\nprint(len(set(range(x, y + 1, x * y % 2 + 1)))\nfor a in [~x, ~y]:\n\tprint(*a)\n", "#!/usr/bin/env python3\nimport sys\n\n\ndef main():\n\tdef iter_polarity(n):\n\t\t\"\"\"Iterate over polarities in an integer number `n`.\n\t\tCurrently we support 3 types of polarity:\n\t\t\t- 1: Say the nth polarity is 1. Say the nth polarity is odd.\n\t\t\t- 2: Say the nth polarity is 0. Say the nth polarity is even.\n\t\t- 3: Return an iterator.\n\t\t\"\"\"\n\t\tcycles = [0, 1, 2, 1]\n\t\tx, y, evens, odds = 0, 0, 0, 1\n\t\tfor i in range(n):\n\t\t\tx, y, evens, odds = -y, -x, -y, -x\n\t\t\tif i % 3 == 0:\n\t\t\t\tcycle = evens + odds\n\t\t\telse:\n\t\t\t\tcycle = odds + evens\n\t\t\tif evens % 2 == 0:\n\t\t\t\tyield (x, y, cycle)\n\t\t\telse:\n\t\t\t\tyield (x, y, cycle)\n\n\tdef main():\n\t\t\"\"\"Main program.\"\"\"\n\t\tinput = sys.stdin.readline\n\n\t\tn = int(input())\n\t\t_ = list(map(int, input().split()))\n\t\tif n < 4:\n\t\t\tprint(0)\n\t\t\tprint('\\n')\n\t\telse:\n\t\t\tpolarities = [(1, 2), (0, 1), (0, -1), (2, 1), (2, -1)]\n\t\t\t_ = list(itertools.", "x,y,u,t=map(int,input().split())\nif x==y:\n\tprint(1)\n\tfor i in range(u):\n\t\tprint(1,i+1)\nelif x<y:\n\tif y==0:\n\t\tprint(2)\n\t\tfor i in range(u):\n\t\t\tprint(-i-1,i+1)\n\telse:\n\t\tprint(3)\n\t\tfor i in range(u):\n\t\t\tprint(i+1,-i+2)\nelse:\n\tif y==0:\n\t\tprint(2)\n\t\tfor i in range(t):\n\t\t\tprint(i+1,-i)\n\telse:\n\t\tprint(3)\n\t\tfor i in range(t):\n\t\t\tprint(-i-1,-i+2)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n(a, b, c, d, e, f) = list(map(int, input().split()))\n\nans = 0\nif a + b > c:\n\ta, b, c, d, e, f = b, c, d, e\nelse:\n\ta, b, c, d, e, f = c, d, f, b\n\npossible = []\nif a + b + c > d:\n\ta, b, c, d, e, f = c, d, e, f\n\tpossible.append((a, b, c, d, e, f))\n\nfor a, b, c, d, e, f in possible:\n\tprint(a + b + c - d - e)\n\t\nk = (c + e - f + b - 2 * a) / 4\nfor a, b, c, d, e, f in possible:\n\tprint(a + b + c - d - e - f)\n", "# Description of the problem can be found at http://codeforces.com/problemset/problem/587/B\n\nn, m = map(int, input().split())\na = list(map(int, input().split())) + [0]\n\np = [[0, a[0] - a[1]] for i in range(4)]\n\nfor x in range(2, n + 1):\n\tfor y in range(2, m + 1):\n\t\tif y < x:\n\t\t\tp[x][y] = p[y - x][x] = 1\n\nans = n * n\nfor i in range(4):\n\tfor j in range(4):\n\t\tif p[i][j] == 1:\n\t\t\ta[i + 1] - a[i] = a[j + 1] - a[j] + 1\n\t\t\tans -= 1\n\nprint(ans)\nprint(*p[-1])\n", "s = input().split()\nn = int(s[0])\nx = [int(item) for item in s[1:]]\ny = [int(item) for item in s[2:]]\nif len(x) == 2:\n\tprint(n)\n\tprint(\"-1 1\")\nelif n == 1:\n\tprint(1)\n\tprint(\"-1 1\")\nelse:\n\tl = x[0] - 1\n\tr = x[1] - 1\n\tif n > 2:\n\t\tt = y[0] + r + y[1]\n\telse:\n\t\tt = -y[0] + r + y[1]\n\tif l > t:\n\t\tl, t = t, l\n\tprint(n - 1 - (l + 1) + 1)\n\tfor i in range(n - 1):\n\t\tx[i] -= 1\n\t\ty[i] -= 1\n\t\tif x[i] < 0:\n\t\t\tx[i] = x[i + 1]\n\t\tif y[i] < 0:\n\t\t\ty[i] = y[i - 1]\n\t\tif x[i] > y[i]:\n\t\t\tx[i] = y[i - 1] - x[i]\n\t\telif x[i] < y[i]:\n\t\t\ty[i] = y[i - 1] - x[i]\n\t\telse:\n\t\t\tif x[i] < 0 and y[i] > 0:\n\t\t\t\tx[i] = y[i - 1] + x[i]\n\t\t\telif y[i] < 0 and x[i"], "324": ["# coding = utf-8\nimport sys\n\nn,k = [int(c) for c in sys.stdin.readline().split()]\n\nans = 1\narr = list(range(1,k+2))\n\nfor i in range(k-1):\n\tarr = arr[1:] + [arr[0]]\n\t\n\ttemp = []\n\tfor j in range(len(arr)-1,-1,-1):\n\t\tif len(temp) < len(arr):\n\t\t\ttemp.append(arr[j])\n\t\telse:\n\t\t\tbreak\n\t\t\t\n\tl = len(temp)\n\tif l > len(arr):\n\t\tans = temp[len(arr)-1]\n\t\n\tlm = len(arr) - l\n\tif lm > k:\n\t\tans = arr[k-1]\n\t\n\t#print(ans)\n\nprint(ans)\n", "n, k = map(int, input().split())\ncur, ans = 1, 1\nwhile k:\n\tfor i in range(n-1):\n\t\tcur, ans = cur + 1 + (a + 1 for a in range(cur, a+2) if a + 1 < cur), ans\n\tk -= 1\n\tcur, k = cur + 1, 0\nprint(ans)\n", "n, k = list(map(int, input().split()))\n\nseq = [1]\n\nfor i in range(1, n):\n\tseq.append(seq[-1] + seq[i - 1])\n\nprint(seq[k])\n\n\n\n", "def main():\n\tn, k = list(map(int, input().split()))\n\tl = [-1] * k\n\tfor i in range(n - 1):\n\t\tl[(i + 1) // 2] = 1\n\ti, v = 0, 0\n\tfor i in range(n - 1, 0, -1):\n\t\tv = max(v, l[i])\n\t\ti += 1\n\tprint(v)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n, k = map(int, input().split())\narr = [1]\ns = n\n\nfor i in range(k - 1):\n\tarr = arr[1:] + [arr[0]] + [arr[-1]]\n\ts += 1\n\nprint(arr[k])\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nMOD = 10 ** 9 + 7\n\nN, K = MAP()\nresult = 1\ni = 0\nwhile i < N:\n\tif i < K:\n\t\tresult = result+1\n\t\ti += 1\n\telse:\n\t\ttemp = INF\n\t\twhile i+1 < N and temp!= 1:\n\t\t\ttemp = 1 + min(temp, MAP())\n\t\t\ti += 1\n\t\tresult = result + temp\n\t\ti += 1\n\tprint(result)\n"], "325": ["# Created by: WeirdBugsButOkay\n# 28-09-2020, 13:44\n\nimport math\n\ndef f(n):\n\treturn pow(-1 + int(math.log(n, 2)), n) \n\nn = int(input())\nprint(f(n))\n", "n = int(input())\nprint(2 ** n)\n", "import math\n\ndef r1(n):\n\treturn -1 + 2 * (n * 3 - n)\n\ndef r2(n):\n\treturn -1 + 2 * math.pow(n, 3) - (n - 2)\n\nn = int(input())\nprint(r2(n))\n", "3\n\ndef main():\n\tn = int(input())\n\tif n == 0:\n\t\tprint(0)\n\telse:\n\t\tprint(f(n))\n\n\ndef __starting_point():\n\tmain()\n__starting_point()\n", "import math\n\ndef f(n):\n\treturn math.floor(math.log(n) / math.log(2))\n\t#return math.ceil(math.log(n) / math.log(2))\n\n#for getting sum of elements of a sequence\nnums = [int(x) for x in input().split()]\n\n#for loop to calculate sum of those numbers\nsum = 0\nfor num in nums:\n\tsum += num\n\t#print sum\n\n# If exponent is less than 0 then return true else false\nif sum < 0:\n\treturn False\n\n# If 0 then return false but true otherwise\nelse:\n\t# Return true if -1 in the sum\n\treturn True\n\nprint(f(int(sum)))    \n", "import sys\n\ndef solve():\n\tn = int(input())\n\tif n % 2 == 0:\n\t\tprint(n//2-1)\n\telse:\n\t\tprint(n//2)\n\treturn\n\ndef __starting_point():\n\tsolve()\n__starting_point()\n"], "326": ["def cal(s):\n\tres = ''\n\tfor i in range(len(s)):\n\t\tif i == 0:\n\t\t\tres += s[i]\n\t\t\tcontinue\n\t\tif s[i] > res[-1]:\n\t\t\tres += s[i]\n\treturn res\n\ndef solve():\n\t\"\"\"\n\t32\n\t\"\"\"\n\tn = int(input())\n\ts = list(input())\n\tres = cal(s)\n\tif res == '':\n\t\tprint(s[:])\n\telse:\n\t\tprint(res)\n\t\ndef __starting_point():\n\tt = int(input())\n\twhile True:\n\t\tsolve()\n\t\tt -= 1\n__starting_point()\n", "def solve():\n\tn = int(input())\n\ts = list(input())\n\tr = list(s)\n\ti = 0\n\twhile len(s) > 1:\n\t\tif min(n, len(s)) <= i:\n\t\t\tif all(x < y for x, y in zip(r, s)):\n\t\t\t\tr.pop()\n\t\t\telse:\n\t\t\t\ts.pop()\n\t\t\t\ti -= 1\n\t\telse:\n\t\t\ti += 1\n\t\t\t\n\tif i == n:\n\t\tprint(''.join(s))\n\telse:\n\t\tj = 0\n\t\twhile j < i:\n\t\t\tif s[j] < r[i]:\n\t\t\t\tj += 1\n\t\t\telse:\n\t\t\t\ti -= 1\n\t\tprint(''.join(s))\n\nt = int(input())\nsolve()\n", "n = int(input())\ns = input()\n\nres = []\nfor i in range(n):\n\tsmall = chr(ord('a') + i)\n\tj = 0\n\twhile j < n and s[j] == small:\n\t\tj += 1\n\tif j == n:\n\t\tres.append(small)\n\nres.reverse()\n\nprint(''.join(res))\n", "import sys\ninput = sys.stdin.readline\n\ndef main():\n\tn = int(input())\n\ts = input().rstrip()\n\tp = set([ord(c) - 97 for c in s])\n\tif len(s) <= 6:\n\t\tprint(*s, sep='')\n\t\treturn\n\td = {c:i for i, c in enumerate(sorted(set(s)))}\n\tfor c in list(s):\n\t\ti = min(d.values())\n\t\td[c] = d[c] - i\n\t\tif d[c] == 0:\n\t\t\tif c > i:\n\t\t\t\ti = c\n\tif i + 1 > len(s):\n\t\ti += 1\n\tprint(''.join([chr(i + 97) for i in range(n) ]))\n\n\n\nmain()\n", "n=int(input())\na=list(input())\nb=a[:]\n\ndef make_greater(a,b):\n\tfor i in range(len(a)):\n\t\tif a[i]>b[i]:\n\t\t\treturn False\n\treturn True\n\nfor i in range(n-1,-1,-1):\n\tif a[i]<b[i]:\n\t\tmake_greater(a,b[:i]+a[i+1:])\n\t\tb[i]=a[i]\n\telse:\n\t\tb[i]=b[i]\n\nmake_greater(b,b[:])\nprint(\"\".join(b))\n", "def main():\n\tdef solve(s):\n\t\tn = len(s)\n\t\tfor _ in range(n):\n\t\t\tif s[0] < s[1]:\n\t\t\t\tbreak\n\t\t\td = chr(ord('a') + s.index('a') - 1)\n\t\t\ts = s[1:]\n\t\t\td2 = ord(d)\n\t\t\ts = s[:d2] + s[d2+1:]\n\t\t\tif s < d2:\n\t\t\t\treturn False\n\t\treturn True\n\n\tn = int(input())\n\ts = list(input())\n\tm = min(n, 26)\n\tfor _ in range(26):\n\t\tif s[m] > s[len(s) - 1 - _]:\n\t\t\tprint(chr(ord('a') + (m - 1) % 26))\n\t\t\treturn\n\tprint(''.join(s[:m]))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "327": ["\nimport sys\n#sys.stdin=open(\"data.txt\")\ninput=sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n\tn,m=list(map(int,input().split()))\n\ta=list(map(int,input().split()))\n\ta.sort()\n\tm1=m*a[0]\n\tc=0\n\tfor i in range(1,n):\n\t\tif a[i]>m1:\n\t\t\tm1=a[i]\n\t\t\tc+=1\n\t\tif a[i]<m:\n\t\t\tm=a[i]\n\tif c:\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n", "def cal(a):\n\tarr = [0] * (len(a) + 1)\n\tfor i in range(len(a)):\n\t\tarr[i+1] = arr[i] + a[i]\n\tarr = arr[:-1]\n\t# print(arr)\n\tpos = {}\n\tfor i, n in enumerate(a):\n\t\tif n not in pos:\n\t\t\tpos[n] = i\n\t\t# print(pos)\n\tok = True\n\tpos[1] = -1\n\tfor i, n in list(pos.items()):\n\t\t# print(i, n, pos[i])\n\t\tif n > m:\n\t\t\tok = False\n\t\t\tbreak\n\treturn ok\n\ndef solve():\n\tn, m = map(int, input().split())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tif cal(a) == m:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n\nt = int(input())\n\nfor _ in range(t):\n\tsolve()\n", "import math\nfrom collections import defaultdict\nfrom collections import deque\nimport heapq\nimport sys\ninput = lambda : sys.stdin.readline().rstrip()\ndef inp():\n\treturn int(input())\ndef st():\n\treturn input()\ndef lis():\n\treturn list(map(int,input().split()))\ndef ma():\n\treturn list(map(int,input().split()))\nt=inp()\nwhile(t):\n\tt-=1\n\tn,m=ma()\n\tprint(\"YES\" if n>m and n%m==0 else \"NO\")\n", "import collections\nt=int(input())\nfor i in range(t):\n\tn,m=map(int,input().split())\n\ta=list(map(int,input().split()))\n\ta.sort()\n\tif m>a[0]:\n\t\tprint(\"NO\")\n\telse:\n\t\tans=\"YES\"\n\t\ttemp=0\n\t\tc=a[0]\n\t\tfor j in a:\n\t\t\tif j>c:\n\t\t\t\tans=\"NO\"\n\t\t\t\tbreak\n\t\t\telif j%c==0:\n\t\t\t\ttemp+=j//c\n\t\t\telse:\n\t\t\t\ttemp+=j//c+1\n\t\tif temp>m:\n\t\t\tans=\"NO\"\n\t\tprint(ans)\n", "def cal(a):\n\taa = sorted(a)\n\tfor i in range(len(aa)):\n\t\taa[i] = aa[i] * (i + 1) // 2\n\treturn aa\n\nt = int(input())\nfor _ in range(t):\n\tn, m = [int(x) for x in input().split()]\n\taa = [int(x) for x in input().split()]\n\tasum = sum(aa)\n\tval = m - asum\n\tif val < 0:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n", "for _ in range(int(input())):\n\tn, m = [int(i) for i in input().split()]\n\ta = [int(i) for i in input().split()]\n\ta.sort()\n\tif m > a[n - 1]:\n\t\tprint(\"YES\")\n\telse:\n\t\tif m == a[0]:\n\t\t\tprint(\"YES\")\n\t\telse:\n\t\t\tprint(\"NO\")\n"], "328": ["import math\nimport collections\n\nN, M = map(int, input().split())\nP = 10 ** 6\n\nEdge = [[] for _ in range(N)]\nd = collections.defaultdict(list)\nfor _ in range(M):\n\ta, b = map(int, input().split())\n\ta -= 1\n\tb -= 1\n\tEdge[a].append((b, _))\n\tEdge[b].append((a, _))\n\t\ndef gcd(a, b):\n\twhile b!= 0:\n\t\ta, b = b, a % b\n\treturn a\n\nedges = []\n\nfor i in range(N):\n\tu, v = Edge[i]\n\td[u].append(v)\n\td[v].append(u)\n\tedges.append(d[u])\n\tedges.append(d[v])\n\t\nroot = int(N // 2) + 1\n\nans = [(root, i + 1) for i in range(N)]\nans.sort()\n\nif ans[0][0] == 1:\n\tprint(\"Possible\")\nelse:\n\tprint(\"Impossible\")\n", "import sys\n\nclass UnionFind:\n\tdef __init__(self, n):\n\t\tself.par = list(range(n+1))\n\t\tself.rank = [0]*(n+1)\n\tdef find(self, x):\n\t\tif(self.par[x]!= x):\n\t\t\tself.par[x] = self.find(self.par[x])\n\t\treturn(self.par[x])\n\tdef same_check(self, x, y):\n\t\treturn(self.find(x) == self.find(y))\n\tdef get_size(self, x):\n\t\treturn(self.rank[self.find(x)] + 1)\n\ndef get_string():\n\tn,m=map(int,input().split())\n\t\n\tuf=UnionFind(n)\n\tfor i in range(m):\n\t\tu,v=map(int,input().split())\n\t\tuf.same_check(u,v)\n\t\tuf.rank[u]+=1\n\t\n\tif(uf.rank[uf.par[0]]==0):\n\t\tprint(\"Impossible\")\n\telse:\n\t\tprint(\"Possible\")\n\t\tfor i in range(1,n+1):\n\t\t\tif(uf.find(i) == uf.find(uf.par[0])):\n\t\t\t\tuf.rank[i]+=1\n\t\tfor i in range(1,n+1):\n\t\t\tif(uf.find(i) == uf.find(uf.par[0])) and ((i!=n) or (uf.rank[i]<=2)):\n\t\t\t\t", "from math import gcd\n\nn, edges_out = map(int, input().split())\n\nis_prime = [True] * (n + 1)\nfor i in range(2, int(1 + gcd(n, 2)) + 1):\n\tif is_prime[i]:\n\t\tfor j in range(i * i, n + 1, i):\n\t\t\tis_prime[j] = False\n\n\t\t\tif not gcd(i, j):\n\t\t\t\tbreak\n\n\ngraph = [[] for i in range(n)]\nfor i in range(n):\n\tfor j in range(i + 1, n + 1):\n\t\tgraph[i].append(j)\n\t\tgraph[j].append(i)\n\n\nnum_components = 0\nfor i, edge in enumerate(edges_out):\n\tif len(graph[edge]) == 1:\n\t\tcontinue\n\tcomponents = len(graph[edge])\n\tnum_components += components - num_components // 2\n\nif num_components % 2:\n\tprint('Impossible')\nelse:\n\tprint('Possible')\n", "def gcd(a, b):\n\twhile b!= 0:\n\t\ta, b = b, a % b\n\treturn a\n\ndef make_graph(n, edges):\n\tgraph = [[] for _ in range(n)]\n\tfor v, u in edges:\n\t\tgraph[v - 1].append(u - 1)\n\t\tgraph[u - 1].append(v - 1)\n\treturn graph\n\n\ndef is_prime(n, edges):\n\tfor v, u in edges:\n\t\tif len(graph[v]) > 1:\n\t\t\treturn False\n\t\tif not gcd(v, u):\n\t\t\treturn False\n\treturn True\n\n\ndef solve(n, edges):\n\tgraph = make_graph(n, edges)\n\tif not is_prime(n, edges):\n\t\treturn 'Impossible'\n\tif len(graph) < 1:\n\t\treturn 'Possible'\n\n\troot = 1\n\tfor i in range(n):\n\t\tif gcd(root, graph[i])!= 1:\n\t\t\treturn False\n\n\treturn 'Possible'\n\n\ndef __starting_point():\n\tn, m = [int(x) for x in input().split()]\n\tsolve(n, [tuple(map(int, input().split())) for _ in range(m)])\n\n__starting_point()\n", "from math import gcd\nn, edges = [int(item) for item in input().split()]\nedges_number = []\nfor _ in range(edges):\n\tedges_number.append(set())\n\tx, y = [int(item) for item in input().split()]\n\tx //= gcd(x, y)\n\ty //= gcd(x, y)\n\tedges_number[x].add(y)\n\tedges_number[y].add(x)\n\nnumbers = {}\nfor i in range(1, 10**5):\n\tif i in list(numbers.keys()):\n\t\tnumbers[i] = list(numbers[i])\n\t\tdel numbers[i]\n\telse:\n\t\tnumbers[i] = [i]\n\n# numbers.sort()\n# print(numbers)\n\ng = [i for i in numbers]\nlength = n + 1\nwhile length!= 1:\n\tx = 0\n\ti = 2\n\twhile x < length:\n\t\tg.pop()\n\t\tif x == 0:\n\t\t\tbreak\n\t\tx += 1\n\tg.append(i)\n\ti += 2\n\t\nif len(g) > 2 and not edges_number:\n\tprint(\"Impossible\")\nelse:\n\tprint(\"Possible\")\n\t\n\t\n\t\n", "N, E = list(map(int, input().split()))\n\np = [False] * (N + 1)\n\nfor v in range(1, N + 1):\n\tif not p[v]:\n\t\tcontinue\n\tfor u in range(v, N + 1):\n\t\tp[u] = True\n\ng = [[] for _ in range(N + 1)]\n\nfor u, v in enumerate(range(1, N + 1)):\n\tif p[v]:\n\t\tg[u].append(v)\n\t\tg[v].append(u)\n\nfrom collections import defaultdict\nD = defaultdict(int)\nfor i, j in enumerate(g):\n\tD[j] = 1\n\nq = []\n\nseen = set()\nfor i in range(1, N + 1):\n\tif not q:\n\t\tq.append(i)\n\t\tseen.add(i)\n\t\tcontinue\n\tif i in seen:\n\t\tcontinue\n\tl = q[:i]\n\tk = list(set(l))\n\tq.extend(k)\n\tseen.add(i)\n\nif len(seen) > E:\n\tprint('Impossible')\nelse:\n\tfor i in q:\n\t\tfor j in g[i]:\n\t\t\tif j not in seen:\n\t\t\t\tD[j] += 1\n\tif D[E] == 1:\n\t\tprint('Impossible')\n\telse:\n\t\tprint([' '.join([str(e) for e in D] + [str(i) for i in q]))\n"], "329": ["n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\na = sorted(a)\nsum = 0\navai = 0\nfor i in range(n):\n\tif i + k > n:\n\t\tbreak\n\tsum += a[i]\n\tavai = max(avai, a[i] + 1)\nprint(sum)\nfor i in range(n):\n\tif a[i] + k > avai:\n\t\tbreak\n\tprint(i + 1, end=' ')\n", "def main():\n\tn, k = list(map(int, input().split()))\n\tl = list(map(int, input().split()))\n\tm = sum(l)\n\tif m < k:\n\t\tprint(0)\n\t\treturn\n\tarr = []\n\tfor i in range(k):\n\t\tarr += [i + 1] * (n - i)\n\tprint(len(arr))\n\tprint(*arr)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n,k = map(int,input().split())\na = list(map(int,input().split()))\nb = sorted(a)\na.sort()\nans = \"\"\nfor i in range(k):\n\tans = ans+ str(b[i])+\" \"\nprint(len(ans))\nfor i in ans:\n\tprint(i)\n", "from collections import defaultdict\nn, k = map(int, input().split())\na = list(map(int, input().split()))\narr = defaultdict(list)\nfor i, v in enumerate(a):\n\tarr[v%len(arr)].append(i)\n\ntotal = sum(arr.values())\ntoLearn = sorted(arr, key=lambda x: x//total, reverse=True)\nfor val in toLearn:\n\tprint(val, end=' ')\n\tfor i in arr[val]:\n\t\ttotal -= i\n\t\tif total == 0:\n\t\t\tbreak\n\tprint()\n", "import sys\nfrom itertools import accumulate\nreadline = sys.stdin.readline\n\nINF = 10**9+7\nN, K = map(int, readline().split())\nA = list(map(int, readline().split()))\nB = list(accumulate(A))\nans = []\nfor i in range(K):\n\tans += B[:i+1]\nprint(len(ans))\nprint(*ans)\n", "import sys\n\ndef solve(n, k, a):\n\tif k > sum(a):\n\t\treturn 0\n\t\n\tarr = [[] for i in range(k)]\n\tfor i in range(len(a)):\n\t\tarr[a[i] - 1].append(i + 1)\n\t\n\tans = []\n\tfor i in range(k):\n\t\tans.append(arr[i][-1])\n\t\n\treturn sum(ans)\n\n\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nprint(solve(n, k, a))\n"], "330": ["n, x = [int(s) for s in input().split()]\na = set(map(int, input().split()))\nmex = x\n\nfor i in range(1, 100):\n\tif a.intersection(a):\n\t\tmex = i\n\t\tbreak\n\nif mex == 0:\n\tprint(0)\nelse:\n\tprint(x - a.count(mex))\n", "n,x=list(map(int, input().split()))\nt=list(map(int, input().split()))\nt=t[x:]\ns=[]\nfor i in t:\n\tif i not in s:\n\t\ts.append(i)\nl=len(s)\nc=0\nif l==0:\n\tprint(0)\n\treturn\nwhile l>0:\n\tp=s.pop(0)\n\tm=p\n\tfor i in t:\n\t\tif i!=p:\n\t\t\tm=min(m,p+i)\n\ts.append(m)\n\tl-=1\n\tc+=1\nprint(c)\n", "def solve():\n\tn, x = list(map(int, input().split()))\n\tl = list(map(int, input().split()))\n\t evil = {l[i] for i in range(n)}\n\t deobfusc = {}\n\t for i in l:\n\t\tif i not in evil:\n\t\t\tdeobfusc[i] = 1\n\t\telse:\n\t\t\tdeobfusc[i] += 1\n\t p = 0\n\t op = 0\n\t for i in list(deobfusc.values()):\n\t\tif deobfusc[i] > p:\n\t\t\top += i - p\n\t\t\tp = i\n\t print(op)\n\nsolve()\n", "def evil_number(n, x):\n\tmex = None\n\tfor i in range(1, x + 1):\n\t\tif i not in mex:\n\t\t\tmex = i\n\t\tif mex!= x:\n\t\t\treturn i\n\nn, x = list(map(int, input().split()))\nt = list(map(int, input().split()))\n\nt = evil_number(n, x)\nprint(t[-1])\n", "n, x = list(map(int, input().split(' ')))\nl = list(map(int, input().split(' ')))\n\nl.sort()\n\ns = x\n\nc = 0\n\nfor i in l:\n\tif s == i:\n\t\ts -= 1\n\telse:\n\t\ts += i\n\t\tc += 1\n\nprint(c)\n", "# Description of the problem can be found at http://codeforces.com/problemset/problem/853/A\n\nn,x = list(map(int,input().split()))\na = set(map(int,input().split()))\na = list(a)\n\nmex = x\n\nstep = 0\nwhile mex < len(a):\n\tt = a[mex]\n\ta.pop(mex)\n\tstep += 1\n\tmex += 1\n\nif mex < len(a):\n\tt = a[mex]\n\ta.remove(t)\n\tstep += 1\n\tmex += 1\n\nprint(step)\n"], "331": ["a, b = map(int, input().split())\nif abs(a - b) % 2 == 0: print('1 0')\nelif abs(a - b) % 2 == 1: print('2 1')\nelse: print('2 0 3')\n", "a,b=map(int,input().split())\nif (a-b)%2==0:\n\tprint(0)\nelse:\n\tprint(2*(a-b)//6)\n", "a, b = list(map(int, input().split()))\nprint(max(sum(i % 6 == j for i, j in zip(a, b)) or 1, 2))\n", "a,b=map(int,input().split())\nif (a+b)%2==0:\n\tprint(a+b//2)\nelse:\n\tprint((a+b-4)//2)\n", "a, b = list(map(int, input().split()))\n\nprint(2 * (a - b) // 2)\n", "a, b = map(int, input().split())\nif (a + b) % 2 == 0:\n\tprint(a // 2 + b // 2)\nelse:\n\tprint(a // 2 + b // 2 - 2)\n"], "332": ["import sys\n\ndef solve():\n\tn, m = map(int, input().split())\n\tdirty = list(map(int, input().split()))\n\tl, r = 0, n - 1\n\twhile l < r:\n\t\tk = 0\n\t\twhile l + k < r:\n\t\t\tif dirty[l + k] <= dirty[r]:\n\t\t\t\tk += 1\n\t\t\tl += k\n\t\t\tr -= 1\n\t\tif not (l + k < r):\n\t\t\treturn 'NO'\n\tprint('YES')\n\n\ndef __starting_point():\n\tsolve()\n__starting_point()\n", "def main():\n\tn, m = list(map(int, input().split()))\n\td = list(map(int, input().split()))\n\tl, r = 1, n + 1\n\twhile l < r:\n\t\tprev = r - (r - l) // 2\n\t\tif l and d[l] <= n:\n\t\t\tl = prev + 1\n\t\telse:\n\t\t\tr = prev\n\tif n % 2 == 0:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n,m = [int(i) for i in input().split()]\nl = [int(i) for i in input().split()]\n\nans = n-m+1\nskip = 0\nwhile skip < m:\n\tfor i in l:\n\t\tif i > skip:\n\t\t\tans = min(ans, i-skip)\n\t\t\tskip += 1\n\t\t\t\nif ans == n:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "import sys\nfrom collections import defaultdict\ndef fn(pos, last):\n\tnonlocal lyes\n\tif pos == n:\n\t\treturn True\n\telif pos in lyes:\n\t\treturn False\n\tlyes[pos] = True\n\treturn fn(pos + 1, last) or fn(pos + 2, last)\nn, m = map(int, input().split())\nl = list(map(int, input().split()))\nl.sort()\nif n < m:\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n", "def main():\n\tn, m = list(map(int, input().split()))\n\tl, d = list(map(int, input().split()))\n\tl += [0]\n\tfor i in map(abs, l):\n\t\tif i > 1:\n\t\t\tl[-1] += i\n\t\tif i < m:\n\t\t\tl += [i]\n\td -= l[-1]\n\tif d == 0:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "#!/usr/bin/env pypy3\n\nfrom sys import stdin, stdout\n \ndef input():\n\treturn stdin.readline().strip()\n\ndef ans(n, m):\n\tl = list(map(int, input().split()))\n\tctr = 0\n\tif m == 0:\n\t\treturn 'YES'\n\telif n == 0:\n\t\treturn 'NO'\n\telse:\n\t\tfor i in l:\n\t\t\tif i > m:\n\t\t\t\tbreak\n\t\t\tif i < m:\n\t\t\t\tctr += 1\n\t\t\tif ctr == m:\n\t\t\t\treturn 'YES'\n\t\treturn 'NO'\n\noutput = input()\nprint(ans(int(output), int(output))\n"], "333": ["import math\nimport sys\n\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n\tx, y, p, q = list(map(int, input().split()))\n\tr = p ** 2\n\tif r > q:\n\t\tprint(-1)\n\telse:\n\t\ta = int(q / (p - r))\n\t\tx = y\n\t\tprint(a + x // r)\n", "import sys\nimport math\n\ninput=sys.stdin.readline\n\ndef main():\n\tn=int(input())\n\tfor i in range(n):\n\t\tx,y,p,q=list(map(int,input().split()))\n\t\tif q!=p:\n\t\t\tprint(-1)\n\t\t\tbreak\n\n\t\tif q>p:\n\t\t\tp=p-q\n\t\t\tif p%q:\n\t\t\t\tprint(-1)\n\t\t\t\tbreak\n\n\t\ta=p+math.gcd(p,q)\n\n\t\tif a%y:\n\t\t\tprint(-1)\n\t\t\tbreak\n\n\t\tprint(x//a)\n\nmain()\n", "import math\nt = int(input())\nfor i in range(t):\n\tx, y, p, q = list(map(int, input().split()))\n\tif p > q:\n\t\tprint(-1)\n\telse:\n\t\tb = math.gcd(p, q)\n\t\tif b == 1:\n\t\t\tprint(-1)\n\t\telse:\n\t\t\tprint(p//b)\n\t\n", "def solve():\n\tx, y, p, q = map(int, input().split())\n\tl = [p, q]\n\tif x * p == y * q:\n\t\tprint(-1)\n\t\treturn\n\telif p > q:\n\t\treturn\n\t\t\n\tfor i in range(2, 1001):\n\t\tl.append((p // i) * i)\n\t\t\n\tans = len(l)\n\tfor i in range(len(l)):\n\t\tp = l[i] / l[i - 1]\n\t\tq = l[i] - p * q\n\t\tans = min(ans, solve())\n\tprint(ans)\n\nt = int(input())\nfor i in range(t):\n\tsolve()\n", "n = int(input())\nfor _ in range(n):\n\tx, y, p, q = list(map(int, input().split()))\n\tif p * q == x:\n\t\tprint(0)\n\telse:\n\t\tr = -1\n\t\ts = 0\n\t\twhile not (p * q % r):\n\t\t\ts += 1\n\t\t\tp *= r\n\t\t\tq = (q - 1) // r\n\t\tif s:\n\t\t\tprint(s + 1)\n\t\telse:\n\t\t\tprint(-1)\n", "import sys\n\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n\ta, b, p, q = map(int, input().split())\n\teff = 0\n\tfor i in range(1, b+1):\n\t\te = (i*p+q)%q\n\t\tif e == 0: continue\n\t\tif e > eff:    \n\t\t\teff = e\n\t\tif e == a/b:\n\t\t\tbreak\n\tif eff > 0:\n\t\tprint(-1)\n\telse:\n\t\tprint(eff)\n"], "334": ["#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef __starting_point():\n\tm, b = list(map(int, sys.stdin.readline().split()))\n\n\t# Get rid of []\n\ttree = []\n\tfor i in range(m):\n\t\ttree.append([0] * m)\n\n\tres = 0\n\tfor i in range(m):\n\t\tfor j in range(i + 1, m):\n\t\t\tres += tree[i][j]\n\t\t\tres += tree[j][i]\n\n\tprint(res)\n\n\n\n__starting_point()\n", "import math\nm, b = [int(x) for x in input().split()]\ns = math.sqrt(2*m*m+b)*m\nans = s//math.factorial(s)\nprint(ans)\n", "m,b=list(map(int,input().split()))\nif m>b:\n\tprint(m*(m+b-1))\nelse:\n\tl=[]\n\to=[]\n\tfor i in range(m+1):\n\t\tfor j in range(i+1,m+1):\n\t\t\tif (i+j)%(m+1)<2:\n\t\t\t\tl.append(i+j)\n\t\t\telse:\n\t\t\t\tbreak\n\tfor j in range(1,m+1):\n\t\tfor i in range(l[-1],l[0]):\n\t\t\to.append((i,j))\n\tans=0\n\tfor i,j in o:\n\t\tans+=i*j\n\tprint(ans)\n", "#!/usr/bin/env python\n\ndef main():\n\tm, b = list(map(int, input().split()))\n\n\tdef get_number(u, b):\n\t\t# Finds the largest number j such that\n\t\t# u + j = m\n\t\tlargest = 1\n\t\tfor j in range(0, b):\n\t\t\tu = u + j\n\t\t\tif u >= m:\n\t\t\t\tlargest = j\n\t\treturn largest\n\n\tdef calculate_number(u, m):\n\t\t# Calculates the maximum possible count\n\t\tnb = 0\n\t\tfor j in range(1, u + 1):\n\t\t\tnb += get_number(j, m)\n\t\treturn nb\n\n\tu = [calculate_number(i, m) for i in range(m)]\n\tif u[0] == u[1]:\n\t\tprint(sum(u))\n\telse:\n\t\tbest = 10000000000\n\t\tfor j in range(0, len(u) - 1):\n\t\t\tnb = calculate_number(u[j], u[j + 1])\n\t\t\t# If two numbers are the same, ignore the smaller number\n\t\t\tif nb < best:\n\t\t\t\tbest = nb\n\t\t# count the number with the maximum count\n\t\tprint(best)\n\n\nmain()\n\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef read_int():\n\treturn int(input())\n\n\ndef read_int_ary():\n\treturn map(int, input().split())\n\n\nm, b = read_int_ary()\n\nans = m*b\n\ncur = 0\nfor i in range(m-1):\n\tfor j in range(b+1):\n\t\tcur += i+j\n\t\tif i+j>=m:\n\t\t\tcur -= (i+j)//m\n\nmax_ = min(cur, m-cur+1)\n\nprint(ans+max_)\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve():\n\tm,b=mints()\n\tif m<=2:\n\t\tprint(m)\n\t\treturn\n\tans=m-1\n\tfor i in range(m-1):\n\t\tif (i+1)**2+(i-1)**2<=b:\n\t\t\tans=i+1\n\t\t\tbreak\n\tans+=(m-1)//2\n\tprint(ans)\n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n"], "335": ["import sys\n\ndef main():\n\ts = sys.stdin.readline\n\tif s().startswith(\"YES\"):\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "#!/usr/bin/env python3\n\ndef process(s):\n\tif len(s) == 0:\n\t\treturn 'NO'\n\n\tt = 0\n\tm = []\n\n\tfor c in s:\n\t\tif c.isalpha():\n\t\t\tm += c\n\t\t\tt += 1\n\n\tif t == 0:\n\t\treturn 'NO'\n\n\tif t == 1:\n\t\treturn 'YES'\n\n\treturn 'NO'\n\n\ndef main():\n\ts = input()\n\n\tprint(process(s))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "s=input()\nif(s.islower()):\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n", "c=0\ns=input()\nif(s.isalpha()):\n\tfor i in range(len(s)):\n\t\tif(s[i].islower()):\n\t\t\tc+=1\n\t\telse:\n\t\t\tcontinue\n\tif(c>0):\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "s = input()\nif s.islower():\n\tprint('NO')\nelif s.isupper():\n\tprint('YES')\nelse:\n\tprint('NO')\n", "N=input()\nN=list(N)\nL=len(N)\nO=N[0]\nif L==11:\n\tif O==\"WORD\":\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\nelse:\n\tif O==\"WORD\":\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n"], "336": ["from collections import Counter, defaultdict, OrderedDict, deque\nfrom bisect import insort, bisect_left, bisect_right\nfrom heapq import heapify, heappush, heappop\nfrom math import sqrt, log, factorial, cos, sin, pi\nfrom fractions import gcd\nfrom operator import mul\nfrom functools import reduce\nimport sys\ninput = sys.stdin.readline\ndef main():\n\tn = int(input())\n\tcoord = [list(map(int, input().split())) for i in range(n)]\n\tcoord.sort()\n\td = defaultdict(set)\n\tfor i, (a, b) in enumerate(coord):\n\t\td[a].add(i)\n\t\td[b].add(i)\n\tans = 0\n\tfor i in range(n):\n\t\tfor j in list(d.values()):\n\t\t\tif i == j: continue\n\t\t\tans += (j - i) * (n - i)\n\tprint(ans)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n = int(input())\nd = [[] for i in range(n)]\nfor i in range(n):\n\ta, b = map(int, input().split())\n\td[a].append(b)\n\td[b].append(a)\nm = 400\nt = [0] * m\na = [0]\nfor i in range(n):\n\tv = d[i][0]\n\tif v < t[i]:\n\t\ta.append(i)\n\t\tt[i] = v\nt = a\ndef f(n):\n\tnonlocal m, t\n\tres = 0\n\tfor i in range(n):\n\t\tif t[i]!= 0:\n\t\t\tt = t[:i] + [0] + t[i + 1:]\n\t\t\tif not len(d[i]) % 2: res += 1\n\treturn res\ng = f(m)\nprint(g)\n", "def main():\n\tn = int(input())\n\tcoordinates = list(enumerate(map(int, input().split())))\n\tnumbers = list(zip(coordinates, coordinates[1:]))\n\tnumbers.sort()\n\tdictionary = {}\n\tfor i, j in numbers:\n\t\tif i in dictionary:\n\t\t\tdictionary[i] += 1\n\t\telse:\n\t\t\tdictionary[i] = 1\n\tans = 0\n\tfor k, v in list(dictionary.items()):\n\t\tif v * 2 in dictionary:\n\t\t\tans += dictionary[k] * dictionary[v * 2]\n\tprint(ans)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n=int(input())\nx=[]\ny=[]\nfor i in range(n):\n\tx.append(list(map(int,input().split())))\n\ty.append(list(map(int,input().split())))\ndef chk(aa,v):\n\tfor i in range(len(aa)):\n\t\tif aa[i]>v:\n\t\t\treturn 0\n\treturn 1\ndef lis(aa,v):\n\tfor i in range(len(aa)):\n\t\tif aa[i]<v:\n\t\t\treturn 0\n\tm=0\n\tfor i in range(len(aa)):\n\t\tt = lis(aa,v)\n\t\tm+=t\n\treturn m\nt = 0\nfor i in range(n):\n\tfor j in range(i+1,n):\n\t\tt+=lis(x[i],x[j])\n\tprint(t)\n\t\n\t\n\t\n", "# Not Original Submission, Unable to solve the problem\n\ndef main():\n\tn = int(input())\n\tnx = []\n\tny = []\n\tfor _ in range(n):\n\t\tx, y = list(map(int, input().split()))\n\t\tnx.append(x)\n\t\tny.append(y)\n\tnx.sort()\n\tny.sort()\n\t\n\tc = 0\n\td = nx[0]\n\tfor i in nx:\n\t\tfor j in ny:\n\t\t\tif i!= j:\n\t\t\t\tif d > 0:\n\t\t\t\t\tif i - d < 0:\n\t\t\t\t\t\ti += d\n\t\t\t\t\telse:\n\t\t\t\t\t\ti -= d\n\t\t\t\t\tc += 1\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\tif i!= nx[-1]:\n\t\t\tbreak\n\t\t\t\n\tprint(c)\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\n\ndef debug(*args, **kwargs):\n\tpass\n\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\ndef main():\n\tn = int(input())\n\tresult = 0\n\tfor i in range(n):\n\t\tx1, y1 = map(int, input().split())\n\t\tresult += (x1 - x1 == x1) + (y1 - y1 == y1)\n\treturn result\n\nprint(main())\n"], "337": ["MOD = 10 ** 9 + 7\nn = int(input())\n\nmatches = defaultdict(int)\n\ndef matches(p, q):\n\tif p == q:\n\t\treturn 1\n\tmatches[(p, q)] = matches[(q, p)] + 1\n\treturn matches[(p, q)]\n\nmax_matches = 0\nfor i in range(2 * n + 1):\n\tmatches[i, 0] = matches[i, 1] = 1\n\tfor j in range(i * 2, n + 1):\n\t\tmatches[i][j] = matches[j, i] = matches[i ^ j, j] = (matches[i ^ j] + matches[j, i]) % MOD\n\tmax_matches = max(max_matches, matches[i, 0])\n\nprint(max_matches)\n", "n = int(input())\n\ntree = [[] for _ in range(n)]\n\nfor i in range(n):\n\ttree[i].append(1)\n\nfor i in range(1, n):\n\ttree[i].append(0)\n\nMOD = 1000000007\n\ncnt = 0\nok = -1\nfor i in range(n):\n\tif not tree[i]:\n\t\tcnt += 1\n\t\tcontinue\n\tnex = -1\n\tfor j in tree[i]:\n\t\tif j >= nex:\n\t\t\tnex = j\n\tif nex!= -1:\n\t\tcnt += 2 * nex\n\tif cnt == 1:\n\t\tok = i\n\t\tcnt = 0\n\nprint(ok)\n", "n=int(input())\ns=10**9+7\na=[0]*(n+2)\na[0]=1\nfor i in range(1,n+1):\n\ta[i]=a[i-1]+a[i-2]\nprint(a[n])\n", "# coding=utf-8\n# Your code here!\n\ndef __starting_point():\n\tn=int(input())\n\t\n\treturn(sum(leng*len(set(leng)) for leng,set in __import__(\"itertools\").groupby(list(input())))%(10**9+7))\n__starting_point()\n", "def main():\n\tmod = 10**9 + 7\n\tn = int(input())\n\tto_check = [[0] * 300 for _ in range(300)]\n\tto_check[0][0] = 1\n\tfor i in range(1, 300):\n\t\tfor j in range(i + 1, 300):\n\t\t\tif j > i:\n\t\t\t\tto_check[i][j] = to_check[j][i] = 1\n\t\t\telse:\n\t\t\t\tto_check[i][j] = to_check[i - 1][j]\n\tto_check[0][300] = 1\n\tmax_match = 0\n\tfor i in range(1, 300):\n\t\tfor j in range(i, 300):\n\t\t\tmax_match = max(max_match, to_check[i][j])\n\tprint(max_match % mod)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "class Solution:\n\tdef __init__(self):\n\t\tself._max_len = 0\n\t\tself._data = {}\n\n\tdef get_len(self, obj):\n\t\tif isinstance(obj, tuple):\n\t\t\treturn self._max_len\n\t\tl = 0\n\t\tr = len(obj) - 1\n\t\tif obj == None:\n\t\t\treturn 0\n\t\twhile l < r:\n\t\t\tl = (l + r) >> 1\n\t\t\tif l & 1 == 0:\n\t\t\t\tr -= 1\n\t\t\telif obj[l]!= obj[r]:\n\t\t\t\tr -= 1\n\t\treturn r\n\n\tdef add(self, obj, j):\n\t\tif isinstance(obj, tuple):\n\t\t\tobj = obj[0]\n\t\t\tj += 1\n\t\tif j not in self._data:\n\t\t\tself._data[j] = []\n\t\tself._data[j].append(obj)\n\n\tdef matching(self, j, i):\n\t\tif len(self._data[j]) == 0:\n\t\t\treturn 0\n\t\tif j == i:\n\t\t\treturn 1\n\n\t\tt = 1\n\t\tif self._max_len < len(self._data[j]) / 2:\n\t\t\tt += self._data[j][len(self._data[j])//2]\n\t\telse:\n\t\t\tt += self._data[j][len(self._data[j])//2] * self._data[j][len(self._data[j])//2]\n\n\t\tfor idx in range(1, len(self._data[j])):\n\t"], "338": ["a, b = [int(s) for s in input().split()]\nc = [int(s) for s in input().split()]\n\ndef next_pow_2(n):\n\tp = 1\n\twhile p < n:\n\t\tp <<= 1\n\treturn p\n\nnext_pow = next_pow_2\n\ntotal = a + b + c\nif total >= 10**9:\n\ttotal -= 1\nprint(total)\n", "a,b=map(int,input().split())\nc=0\nfor i in list(map(int,input().split())):\n\tc+=(i+1)//3\nprint(c+a+b)\n", "a, b = list(map(int, input().split()))\nx, y, z = list(map(int, input().split()))\np = ((a + b + z) - 1) // 3\nprint(p)\n", "def main():\n\ta, b = list(map(int, input().split()))\n\ty, g, f = list(map(int, input().split()))\n\tss = (a + b + g + f) // 3\n\tprint(ss + min(abs(a - ss), abs(b - ss) + 1))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "a,b=list(map(int,input().split()))\nc=0\nd=list(map(int,input().split()))\nfor i in range(min(c,d)+1):\n\tc+=d[i]\nfor i in range(min(c,a)+1):\n\ta+=i\nprint(a)\n", "a, b = list(map(int, input().split()))\nx, y, z = list(map(int, input().split()))\n\np = 10 ** 9\n\ndef nex(x):\n\treturn x + (b - a + 1)\n\n# print(p)\n\nwhile not (x + a > p):\n\tx += nex(x)\n\ty += nex(y)\n\tz += nex(z)\n\t\nprint(a + b + (x + y + z) // 2)\n\n"], "339": ["n = int(input())\nl = input().split()\n\nfor i in range(n):\n\tl[i] = int(l[i])\n\nl.sort()\n\np = []\n\nfor i in range(n):\n\tif i + 1 > len(l) or (l[i]!= l[i+1] and l[i] > i+1):\n\t\tp.append(i)\n\nif len(p) > 0:\n\tprint(*p)\nelse:\n\tprint(-1)\n", "n = int(input())\npos = [-1] * n\narr = list(map(int, input().split()))\nfor i in range(n):\n\tj = pos[arr[i]]\n\tif i > 0 and arr[i - 1] <= arr[i] <= arr[j]:\n\t\tj -= 1\n\tif i > 0 and arr[i - 1] >= arr[i] >= arr[j]:\n\t\tj -= 1\n\tif j == -1:\n\t\tj = i\n\tpos[i - 1] = j\nans = []\nfor i in range(n):\n\tif pos[i]!= -1:\n\t\tans.append(pos[i])\nif len(ans) > 0:\n\tprint(*ans)\nelse:\n\tprint(-1)\n", "import math\nimport sys\n\ndef main():\n\tn = int(input())\n\taa = sorted(map(int, input().split()))\n\tleft = 0\n\tright = n-1\n\tfor a in aa:\n\t\tif a > left:\n\t\t\tleft = a\n\t\telif a < right:\n\t\t\tright = a\n\t\tif left!= right:\n\t\t\tbreak\n\tans = []\n\tif right == left:\n\t\tans.append(-1)\n\telse:\n\t\tp = right\n\t\tfor i in range(left+1, right+2):\n\t\t\tif i not in ans:\n\t\t\t\tans.append(i)\n\t\t\t\tif ans[-1]!= i:\n\t\t\t\t\tprint(-1)\n\t\t\t\t\treturn\n\t\tif len(ans) == len(set(ans)):\n\t\t\tprint(*ans)\n\t\t\treturn\n\t\tprint(-1)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "from collections import Counter\nfrom itertools import chain\n\n\ndef iter_len(iterator):\n\treturn len(list(iterator))\n\n\ndef swap_time(iterator, other):\n\tfor i, elem in enumerate(iterator):\n\t\tif elem!= other.pop():\n\t\t\tyield elem\n\t\t\tfor j, elem2 in enumerate(iterator):\n\t\t\t\tif elem2!= elem:\n\t\t\t\t\tyield elem2\n\t\t\t\t\tyield from swap_time(elem, elem2)\n\ndef find_wrong_place(whole, expected):\n\tif len(whole)!= len(expected):\n\t\treturn -1\n\tfor index, elem in enumerate(whole):\n\t\tif not expected[index] <= elem:\n\t\t\treturn index\n\ndef swap(iterator, target, source, target_is_different=False):\n\t\"\"\"Explore values in an iterator\"\"\"\n\tfor elem in chain(iterator, iterator):\n\t\tif elem == source:\n\t\t\tcontinue\n\t\tif find_wrong_place(whole, elem) > -1:\n\t\t\treturn False\n\t\tif target_is_different:\n\t\t\ttarget_is_different = True\n\t\t\tyield elem\n\t\telse:\n\t\t\tyield elem\n\n\ndef main():\n\tn = int(input())\n\twhole = list(map(int, input().split(\" \")))\n\tfor index, elem in enumerate(whole):\n\t\tif find_wrong_place(whole, elem):\n\t\t\treturn -1\n\t\tif index == len(whole) - 1", "import sys\nimport math\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split(\" \")))\n\td = { i: [] for i in range(n) }\n\tfor i, x in enumerate(a):\n\t\td[x].append(i)\n\t\n\tvisited = set()\n\tans = []\n\tfor elem in d:\n\t\tif len(d[elem]) > 1:\n\t\t\tcontinue\n\t\troot = d[elem][0]\n\t\tqueue = [root]\n\t\tvisited.add(root)\n\t\t\n\t\twhile len(queue) > 0:\n\t\t\tnow = queue.pop(0)\n\t\t\tif now in visited:\n\t\t\t\tcontinue\n\t\t\t\n\t\t\tif now in d[a[now]]:\n\t\t\t\tans.append(now+1)\n\t\t\t\tdel d[a[now]][0]\n\t\t\telse:\n\t\t\t\tif len(d[a[now]]) > 1:\n\t\t\t\t\tcontinue\n\t\t\t\t\t\n\t\t\t\telse:\n\t\t\t\t\tans.append(-1)\n\t\t\t\t\tdel d[a[now]][0]\n\t\t\t\tqueue.append(now+1)\n\t\t\t\tvisited.add(now+1)\n\n\tif len(ans) == 0:\n\t\tprint(-1)\n\telse:\n\t\tprint(*ans)\n\ndef __starting_point():\n\tmain()\n\t\t\n\n__starting_point()\n", "def check(arr, pos, swapped):\n\t#print(pos, swapped)\n\tfor i in range(pos + 1, len(arr)):\n\t\tif arr[i] == arr[pos] and arr[i]!= swapped:\n\t\t\treturn False\n\t\n\treturn True\n\n\ndef main():\n\tn = int(input())\n\tarr = [int(i) for i in input().split()]\n\tif len(arr) == n:\n\t\tres = [-1] * n\n\t\tfor i in range(n):\n\t\t\tif check(arr, i, True):\n\t\t\t\tres[i] = i\n\t\t\t\t\n\t\tprint(' '.join(map(str, res)))\n\telse:\n\t\tprint(-1)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "340": ["n,b,p=map(int,input().split())\nif n<b:\n\tprint(0,0)\n\treturn\nans=0\ni=n-b\nj=0\nfor i in range(0,i,2):\n\tans+=b\n\tj+=1\nk=n-i\nl=pow(2,j)\nans+=(l//k)\nprint(ans,l)\n", "n,b,p=map(int,input().split())\nmat=[[0 for i in range(n+1)] for j in range(n+1)]\nco=0\nfor i in range(n):\n\tmat[1][i+1]=co\n\tco+=1\nfor j in range(2,n+1):\n\tfor i in range(n):\n\t\tmat[j][i]=mat[j][i-1]+b\n\t\tco+=1\nx=mat[n][n]\nprint(x,x+b)\n", "from sys import stdin\nfrom math import *\n\ndef main():\n\tn,b,p=list(map(int,stdin.readline().split()))\n\tnum=n//2\n\tfinal=n-num\n\tans=(p+num)*(p+num)//2\n\tans=ans+int(final/2)\n\tprint(ans)\n\nmain()\n", "n, b, p = list(map(int, input().split()))\n\nl = [b//2] * (n + 1)\nr = [b//2 + 1 + p] * (n + 1)\n\nfor i in range(1, n + 1):\n\tl[i] += (p + l[i - 1])\n\nprint(l[n], r[n])\n", "n,b,p=map(int,input().split())\nif n%2:\n\tprint(n//2*b+p*(n//2+1),p)\nelse:\n\tprint(n//2*b,p*(n//2))\n", "n, b, p = map(int, input().split())\nif n%2 == 0:\n\tprint(n//2, p)\nelse:\n\tprint(n//2+1, p+2*(n//2-1))\n"], "341": ["# import math\n\nimport math\n\nr,a,b,c,d=list(map(int,input().split()))\n\ndef dist(r,c,d):\n\t# print(\"distance\")\n\treturn (((r**2)-(c**2))**0.5)**(1/2)\n\n# import numpy as np\nimport numpy as np\n\ndef set_colors(rgb):\n\treturn np.array(list(map(lambda x: 2**x, rgb)))\n\t\nn,k=list(map(int,input().split()))\n# print(n)\nr=dist(r,n,n*r)\nc=dist(c,n,n*c)\n# print(c)\nif c<r:\n\tif c%2==0:\n\t\tprint(c)\n\telse:\n\t\tprint(r)\nelse:\n\tif r%2==0:\n\t\tprint(r-c)\n\telse:\n\t\tprint(c-r)\n", "\n\ndef main():\n\tr, x, y, x', y' = list(map(int, input().split()))\n\tc = ((r ** 2) + x) ** 2 + y\n\td = ((r ** 2) - x) ** 2 + y\n\tif d % 2 == 0:\n\t\tprint(abs(c - (d // 2)))\n\telse:\n\t\tprint(abs(c - (d + 1) // 2))\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "#!/usr/bin/env python\nimport sys\n\ndef __starting_point():\n\tr, x, y, x'y' = list(map(int, sys.stdin.readline().split()))\n\tcnt = 0\n\t# Input data\n\tr = float(r)\n\tx = float(x)\n\ty = float(y)\n\tx'y' = float(x')\n\tif (x!= y):\n\t\tprint((-1))\n\telse:\n\t\timport math\n\t\t# O(n2) center line search\n\t\tvec = [(r*(y+1), (r*(y-1), r), (r*(y+1), (r*(y-1)))]\n\t\t# O(n2) circle search\n\t\ts = 0\n\t\te = (x*x+y*y)\n\t\twhile e!= r:\n\t\t\t# O(n2)\n\t\t\t# delete elements of circle whose coordinates are greater than the radius\n\t\t\tvec = [(e[0]+vec[(i+1)%len(vec)], (e[0]+vec[(i+1)%len(vec)], (e[0]-vec[(i+1)%len(vec)])) for i in range(len(vec))]\n\t\t\t# O(n2)\n\t\t\ts += 1\n\t\t\te -= vec[(i+1)%len(vec)]\n\t\t\n\t\tprint(s)\n\n__starting_point()\n", "\n\nr,x,y,x' y' = list(map(int,input().split()))\n\ns =  0\n\nif x == y:\n    x = 0\nelse:\n\tx = x + r * y\n\ty = y + r * x\n\t\n\tif x == 0:\n\t\ts = 0\n\telse:\n\t\ts = (abs(x) - abs(y)) + 2 * r\n\t\n\nif x!= 0:\n\ty = 0\nelse:\n\ty = y + r * x\n\tx = x + r * y\n\t\n\tif y == 0:\n\t\ts = 0\n\telse:\n\t\ts = (abs(y) - abs(x)) + 2 * r\n\nprint(s)\n\n", "import sys\n\ndef solve():\n\tr, a, b, x, y, x' = list(map(int, input().split()))\n\tc = y - x'\n\tif r * c == (r - x) * a:\n\t\tg = 0\n\telif r * c == ((r + x) * a):\n\t\tg = 1\n\telse:\n\t\tg = 2\n\tif g == 1:\n\t\tprint(3)\n\telse:\n\t\tprint(2)\n\ndef __starting_point():\n\tsolve()\n\n__starting_point()\n", "r, x, y, x' y' = list(map(int, input().split()))\nc = ((r ** 2 + x ** 2) **.5) // 2\nd = ((y ** 2 + y * x) **.5) // 2\nif c == d:\n\tprint(0)\nelse:\n\tprint(abs(c - d))\n"], "342": ["def main():\n\tdef lis(a):\n\t\tp = []\n\t\tfor x in a:\n\t\t\tif not p or p[-1] > x:\n\t\t\t\tp.append(x)\n\t\t\telse:\n\t\t\t\tdel p[-1]\n\t\t\t\tp.append(x)\n\t\treturn p\n\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tlis(a)\n\tif list(set(a)) == []:\n\t\tprint(-1)\n\telse:\n\t\tmi = list(set(a))[0]\n\t\tfor i in range(len(a)):\n\t\t\ta[i] -= mi\n\t\t\tmi = a[i]\n\t\tprint(len(a) - len(mi))\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\ntry:\n\timport pprint\n\tpprint = pprint\n\t\n\tclass Tree():\n\t\tdef __init__(self, val):\n\t\t\tself.val = val\n\t\t\tself.left = None\n\t\t\tself.right = None\n\t\t\n\t\tdef __lt__(self, other):\n\t\t\tif self.val < other.val:\n\t\t\t\treturn True\n\t\t\telif self.val > other.val:\n\t\t\t\treturn False\n\t\t\telse:\n\t\t\t\treturn self.val > other.val\n\t\t\t\n\t\tdef __le__(self, other):\n\t\t\tif not self.left and not self.right:\n\t\t\t\treturn self\n\t\t\telif not self.left or not self.right:\n\t\t\t\treturn self.left or self.right\n\t\t\telse:\n\t\t\t\treturn self.left or self.right\n\t\t\t\n\t\tdef __gt__(self, other):\n\t\t\tif not self.left and not self.right:\n\t\t\t\treturn self < other\n\t\t\telif not self.left or not self.right:\n\t\t\t\treturn self < other\n\t\t\telse:\n\t\t\t\treturn self < other\n\t\t\t\n\t\tdef __eq__(self, other):\n\t\t\treturn self.val == other.val\n\t\t\t\n\t\tdef __neq__(self, other):\n\t\t\tif not self.left and not self.right:\n\t\t\t\treturn True\n\t\t\telif not", "n = int(input())\nA = list(map(int,input().split()))\nB = sorted(A)\nif A == B:\n\tprint(-1)\n\treturn\nelse:\n\tres = 0\n\tgap = A[n-1]\n\tfor i in range(n-2):\n\t\tif A[i] < B[i+1]:\n\t\t\tgap += A[i] - B[i+1]\n\t\t\tres += gap\n\t\telse:\n\t\t\tgap = A[i+1] - B[i+1]\n\t\t\tres += gap\n\tif gap < 0:\n\t\tprint(-1)\n\telse:\n\t\tprint(res)\n", "def main():\n\tn = int(input())\n\tl = list(map(int, input().split()))\n\tif sorted(l)!= l:\n\t\tprint(-1)\n\t\treturn\n\tres = 0\n\tfor i in range(n - 1):\n\t\tl[i + 1] += l[i]\n\tfor i in range(n):\n\t\tif l[i] > l[i + 1]:\n\t\t\tres += l[i] - l[i + 1]\n\tprint(res)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def main():\n\tinput()\n\tseq = sorted(map(int, input().split()))\n\tp, res = 0, 0\n\tfor b in seq[1:]:\n\t\tpos = b - seq[p]\n\t\tres += pos\n\t\tif pos > p:\n\t\t\tp = pos\n\tprint(res if sorted(seq) == seq else -1)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n = int(input())\nl = list(map(int,input().split()))\n\nl.sort()\nf = 0\ni = 1\nwhile i < n:\n\tx = l[i]\n\tl[i] = l[i-1]\n\tj = i\n\twhile i <= j:\n\t\tl[i] += l[j]\n\t\tj -= 1\n\tf += 1\n\nif f == 0:\n\tprint(-1)\nelse:\n\tprint(f)\n"], "343": ["n = int(input())\n\np = [0]\n\nfor i in range(n):\n\tk = p[-1] + 1\n\tp.append(k)\n\nk = (n - len(p)) // 2\n\nprint(p[k])\n", "# coding=utf-8\n\n#from sys import stdin,stdout\n#from heapq import heappush, heappop\n#import time\n#import random\n#import itertools\n#import collections\n\ndef run():\n\tn = int(input())\n\t#a = list(map(int, input().split()))\n\t#n,m = [int(x) for x in input().split()]\n\t#s = input()\n\tln = 1\n\tpos = 1\n\tfor i in range(2,2*n+100):\n\t\tc = c + run()\n\t\tif c > pos:\n\t\t\tpos = c\n\tprint(pos)\n\n\ndef __starting_point():\n\trun()\n\n__starting_point()\n", "def findIndex(x, n):\n\tk = 0\n\tfor j in range(n):\n\t\tk += x[j]\n\t\tif k >= j:\n\t\t\treturn j\n\treturn -1\n\nn = int(input())\nx = [0] * n\nfor i in range(n):\n\tx[i] = int(input())\nprint(findIndex(x, n))\n", "3\n\ndef main():\n\tn = int(input())\n\ta = list(range(2, n + 1))\n\tm = a[n]\n\ti = n\n\twhile i < len(a):\n\t\tk = 2 * i + 1\n\t\tm += a[k - 1]\n\t\ti += k\n\tprint(m)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n=int(input())\narr=[1]\nif n<=100:\n\tfor i in range(n-65):\n\t\tarr.append(arr[-1]+2)\n\tprint(arr[-1])\n\t\t\n", "#!/usr/bin/env python3\n\"\"\"\n\tUrl: https://oeis.org/A139250\n\"\"\"\n\n\ndef __starting_point():\n\tn = int(input().strip())\n\telement = 2\n\twhile True:\n\t\ttry:\n\t\t\telement += 1\n\t\t\tif n % 4 == 0:\n\t\t\t\tprint(element)\n\t\t\t\tbreak\n\t\texcept:\n\t\t\tbreak\n\n\n__starting_point()\n"], "344": ["n = int(input())\nedges = list(map(int, input().split()))\nedges.sort()\nparent = [-1] * 100001\ndef find(i):\n\tif parent[i] == -1:\n\t\treturn i\n\telse:\n\t\tparent[i] = find(parent[i])\n\treturn parent[i]\ndef union(x, y):\n\txp = find(x)\n\typ = find(y)\n\tif xp!= yp:\n\t\tparent[yp] = xp\nfor e in edges:\n\tif e!= 0:\n\t\tunion(e, e)\n\tif e!= 100001:\n\t\tbreak\nprint(len(edges) - 1)\n", "from collections import defaultdict, deque\nimport copy\n# import random\nimport math\ndef S_():\n\treturn input()\ndef LS():\n\treturn input().split()\ndef SR(line):\n\treturn''.join(line)\ndef LSR(line):\n\treturn''.join(list(map(lambda x:x[:-1],line)))\ndef printIn(ob):\n\treturn print(ob,end=' ')\nimport sys\n\nsys.setrecursionlimit(10**6)\n\nN = int(input())\nedges = defaultdict(list)\nfor _ in range(N):\n\ta,b = LS()\n\tedges[a].append(b)\n\tedges[b].append(a)\n\nparent = [-1]*N\ndef find(x):\n\t# x\u306e\u6839\u306e\u30ce\u30fc\u30c9\u756a\u53f7\u3092\u6c42\u3081\u308b\n\tif parent[x] < 0:\n\t\treturn x\n\telse:\n\t\tparent[x] = find(parent[x])\n\t\treturn parent[x]\n\ndef union(x,y):\n\t# x\u3068y\u306e\u5c5e\u3059\u308b\u96c6\u5408\u306e\u4f75\u5408\n\tx = find(x)\n\ty = find(y)\n\tif x == y:\n\t\treturn\n\tif parent[x] > parent[y]:\n\t\tx,y=y,x\n\tparent[x] += parent[y]\n\tparent[y] = x\n\n\nfor i in edges:\n\tif len(i) == 1:\n\t\tcontinue\n\tp = find(i[0])\n\tq = find(i[1])\n\tif p == q:\n\t\tprint(len", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n(N,),*A = map(int, open(0).read().split())\n\nE = [[[0]*201 for i in range(201)] for j in range(N)]\nfor u,c in enumerate(A):\n\tfor v,d in enumerate(c):\n\t\tE[u][v][d] = E[v][u][d] + 1\n\nimport heapq\n\nH = list()\nq = []\nfor i in range(N):\n\tt = int(A[i])\n\tq.append((t, 0, i))\n\nwhile(q):\n\tt, a, b = heapq.heappop(q)\n\tif H[b][a] + 1 < t:\n\t\tH[b][a] = t\n\t\theapq.heappush(q, (t + 1, b, a))\n\telse:\n\t\tH[b][a] = t\n\nprint(max(H))\n", "n = int(input())\na = [[int(i) for i in input().split()] for j in range(n)]\na.sort()\n\nparent = [-1] * n\n\ndef find_parent(v):\n\tif parent[v] < 0:\n\t\treturn v\n\telse:\n\t\tparent[v] = find_parent(parent[v])\n\t\treturn parent[v]\n\nfor i in range(n):\n\tparent[a[i][0]] = a[i][1]\n\nfor v in range(n):\n\tfor i in range(n):\n\t\tif parent[i] == -1 and find_parent(i)!= -1:\n\t\t\tparent[i] = find_parent(parent[i])\n\ndp = [0] * n\ndp[0] = a[0][1]\n\nfor i in range(1, n):\n\tndp = [0] * n\n\tfor j in range(i):\n\t\tndp[j] = dp[j]\n\t\tif a[i][j] == 0:\n\t\t\tcontinue\n\t\tif parent[j] == -1 and a[j][i] == 0:\n\t\t\tndp[j] = dp[j]\n\t\telse:\n\t\t\tndp[j] = min(dp[j], ndp[j])\n\tdp = ndp\n\nmx = 0\nfor i in range(n):\n\tmx = max(mx, dp[i])\n\t\nprint(mx)\n", "import collections\n\n\nn = int(input())\na = [[int(x) for x in input().split()] for _ in range(n)]\ncc = [[] for _ in range(n)]\nfor i in range(n):\n\tcc[a[i][0]-1].append(a[i][1])\n\tcc[a[i][1]-1].append(a[i][0])\nq = [(0, 0, 0)]\nwhile q:\n\tn, u, d = q.pop(0)\n\tif n == 1:\n\t\tprint(d)\n\t\tcontinue\n\tc = 0\n\tfor l in cc[u]:\n\t\tif len(l) == 1:\n\t\t\tcontinue\n\t\telse:\n\t\t\tfor v in l:\n\t\t\t\tif v == d:\n\t\t\t\t\tc += 1\n\t\t\t\telse:\n\t\t\t\t\tq.append((v, d+1, c))\n\t\t\tbreak\n\tfor l in cc[u]:\n\t\tq.append((l[0], l[1], d+1))\n", "#!/usr/bin/env python3\n\ndef solve(n, a):\n\tn += 1\n\tl = [[] for i in range(n)]\n\tfor i in range(n):\n\t\tl[a[i]].append(i)\n\t\t\n\tq = [0]\n\tres = [0] * n\n\twhile q:\n\t\tu = q.pop()\n\t\tfor v in l[u]:\n\t\t\tif res[v] == 0:\n\t\t\t\tres[v] = res[u] + 1\n\t\t\t\tq.append(v)\n\t\t\t\t\n\treturn max(res)\n\n\n# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n\tN = int(input())\n\tA = {}\n\tfor i in range(N):\n\t\ta = int(input())\n\t\tA[a] = []\n\t\t\n\tfor i in range(N):\n\t\tA[i] = sorted((list(map(int, input().split()))))\n\t\n\tsolve(N, A)\n\t\n\tprint((\"\\n\".join([(str(j) + \" \" + str(i)) for j, i in enumerate(A) ])))\n\t\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "345": ["def main():\n\tn, m = list(map(int, input().split()))\n\taa = list(map(int, input().split())) + [0]\n\tmax_ = 0\n\tsum_ = 0\n\tfor a in aa:\n\t\tsum_ += (m - a * sum_)\n\t\tmax_ = max(max_, sum_)\n\tprint(max_)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\ndef input(): return sys.stdin.readline().strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\n\nN, M = mapint()\nA = list(mapint())\n\ns = sum(A)\n\nans = [0] * N\ndef dp(i, j, k):\n\tif k == 0:\n\t\treturn j == n - 1\n\tans[i] = s - A[i]\n\tfor index in range(i+1, n):\n\t\tk = (k - 1) >> 1\n\t\tresult = dp(index, j, k)\n\t\tif result > ans[i]:\n\t\t\tans[i] = result\n\treturn ans[i]\n\ndp(0, N - 1, 0)\nprint(ans[0])\n", "n, m = map(int, input().split())\n\na = list(map(int, input().split()))\n\np = []\nfor i in range(n):\n\tq = [0] * (m + 1)\n\tq[i] = 1\n\tp.append(q)\n\ninv = [0] * (m + 1)\nfor i in range(2, m + 1):\n\tinv[i] = pow(i, m, m)\n\ns = 0\nfor i in a:\n\ts += i\n\ts *= inv[i]\n\nprint(s // 2)\n", "'''input\n4 4\n5 2 4 1\n'''\nn, m = map(int, input().split())\na = list(map(int, input().split()))\ns=a[0]\nans=0\nfor i in range(1,n):\n\tk=0\n\twhile k+i<n:\n\t\ts+=(k+i)%m\n\t\tk+=i\n\t\tans+=m\n\t#print(s,i)\nprint(ans)\n", "MOD = 10**9 + 7\nn, m = list(map(int, input().split()))\naa = list(map(int, input().split()))\nass = [0]\nfor i in aa:\n\tass.append(ass[-1] + i % MOD)\n\nass.sort(reverse = True)\nans = 0\nfor i in range(n):\n\tans = max(ans, (ass[i] + (i + 1) % MOD))\n\nprint(ans)\n", "inp = input().split()\n\nn = int(inp[0])\n\nm = int(inp[1])\n\na = list(map(int, input().split()))\n\nans = 0\n\nk = m\nfor i in range(n):\n\tif i > 0:\n\t\tk = k - a[i - 1]\n\nb = []\n\nfor i in range(k):\n\tb.append(a[i])\n\nb.sort(reverse=True)\n\nfor i in range(k, n):\n\tans = max(ans, (b[i] + m) % m)\n\nprint(ans)\n\n"], "346": ["n=int(input())\ni=0\nwhile i<n:\n\tprint(0+int(input())-1,end='')\n\ti+=1\n", "a=int(input())\nq,w,e=str(a),[],[]\nfor i in range(len(str(a))):\n\tif e!=[] and i!=a-1: q.append(str(a)[i])\n\telse: w.append(str(a)[i])\nfor i in q: print(int(i))\n", "n = int(input())\n\nx = []\n\nfor i in range(n):\n\tx.append(input())\n\nfor i in range(n):\n\tc = 0\n\tfor j in range(len(x)):\n\t\tc += x[j]\n\t\n\tprint(c)\n", "n=int(input())\n\nfor i in range(n-1):\n\tprint(((10**(i+1))%10)\n", "n = int(input())\n\nprint(0 if n < 2 else (n - 1) % 10)\n", "n=int(input())\narr=[]\nfor i in range(n):\n\tarr.append(input())\nfor i in range(len(arr)-1,-1,-1):\n\tif len(arr[i])==0:\n\t\tbreak\n\telse:\n\t\tans=arr[i][i]\n\t\tdel arr[i]\n\t\tfor j in range(i+1,len(arr)):\n\t\t\tans+=arr[j][i]\n\t\tprint(ans)\n\t\tbreak\n"], "347": ["import math\n\ndef main():\n\ta, b = map(int, input().split())\n\tif a == b:\n\t\tprint(0)\n\telse:\n\t\tprint(sum(list(map(lambda i: i % b, [a, b]))))\n\ndef __starting_point():\n\tmain()\n__starting_point()\n", "a,b=map(int,input().split())\nprint(0) if a%b==0 else print(b*(a//b)+a%b) if b>a else print(infinity) \n", "a,b=list(map(int,input().split()))\nif a > b :\n\tprint(\"infinity\")\nelse :\n\tb = a % b\n\tif b == 0 :\n\t\tprint(\"0\")\n\telse :\n\t\tprint((a * b) % 1000000007) \n", "a, b = (int(i) for i in input().split())\n\nif a * b == 0:\n\tprint('infinity')\nelif a * b == 2:\n\tprint('1')\nelse:\n\tans = a % b\n\tprint(ans * pow(b, ans - 1, mod))\n", "a, b = map(int, input().split())\nif a * b == 1:\n\tprint(\"infinity\")\nelse:\n\tanswer = 0\n\tfor i in range(1, a + 1):\n\t\tanswer += i * b\n\tprint(answer)\n", "a,b=map(int,input().split())\nif a%b==0:\n\tprint(0)\nelse:\n\tres=0\n\ti=1\n\twhile i*i<=b:\n\t\tres+=i*a%i\n\t\ti+=1\n\tprint(res)\n"], "348": ["n, k = map(int, input().split())\n\npow = 1\n\nwhile pow <= k:\n\tr = pow * k\n\tif r % n == 0:\n\t\tprint(r)\n\t\tbreak\n\n\tpow = pow * k\n", "n, k = map(int, input().split())\n\nprint(n > k)\n", "n, k = map(int, input().split())\n\nif n > k:\n\tprint(n - k)\nelse:\n\tprint(26 + n // k)\n", "n,k=list(map(int,input().split()))\nif (n % k == 0):\n\tprint(n)\nelif (k % n == 0):\n\tprint((k / n))\nelse:\n\tprint(n + ((k - n) % n))\n", "n, k = map(int, input().split())\nif k == 1:\n\tprint(n)\nelse:\n\tm = n + 1\n\twhile m % k:\n\t\tm += k\n\tif m % k == 0:\n\t\tprint(m)\n\telse:\n\t\tprint(m * 26)\n", "import sys\n\ndef main():\n\tn, k = map(int, sys.stdin.readline().split())\n\tx = (n + k) // k\n\tif x % k == 0:\n\t\tprint(x)\n\telse:\n\t\tprint(x + 1)\n\ndef __starting_point():\n\tmain()\n__starting_point()\n"], "349": ["import collections\nT = int(input())\nfor t in range(0, T):\n\tword = input()\n\tminlen = []\n\tfor c in word:\n\t\tif c not in minlen:\n\t\t\tminlen.append(c)\n\t\telse:\n\t\t\tif minlen[-1] == c:\n\t\t\t\tminlen.pop()\n\tminlen = sorted(minlen)\n\tif len(minlen) > 0:\n\t\tprint(''.join(minlen))\n\telse:\n\t\tprint('NO')\n", "# coding: utf-8\n# Your code here!\nfrom sys import stdin,stdout\n\ndef read():\n\treturn input().strip()\n\ndef run_length_compress(string):\n\tstring = string + \"#\"\n\tn = len(string)\n\n\tbegin = 0\n\tend = 1\n\tcnt = 1\n\tans = []\n\t# Grab the first few positions.\n\twhile end < n:\n\t\t# If the end is already at least as long as the start,\n\t\t# then swap.\n\t\tif (end - begin < 2*n):\n\t\t\tswap_end = end - begin\n\t\t\tbegin = swap_end\n\t\t\tend = begin + 1\n\t\telse:\n\t\t\tend += 1\n\n\n\t# Compress the string to between the two longest characters.\n\tans.append(string[begin:end])\n\n\t# Sort the new ans array.\n\tans.sort()\n\treturn ans\n\n#~~~def~~~running_length_compress_once~~~\n\ndef calc(sz):\n\tcnt = {}\n\tcnt[0] = 0\n\tmin_val = float(\"inf\")\n\tmax_val = -float(\"inf\")\n\n\tfor i in range(1,sz):\n\t\tif sz[i] > 0 and ((sz[i-1]!= 0 and sz[i] <= sz[i-1]+1) or (sz[i-1] == 0 and sz[i] > 0)):\n\t\t\tcnt[sz[i]] += 1\n\t\t\tif cnt[sz[i]] > max_val:\n\t\t\t\tmax_val = cnt", "import sys\nfrom collections import Counter\nn = int(input())\ngood = []\nfor i in range(n):\n\ts = input()\n\tc = Counter(s)\n\tif len(c) > len(set(c.values())):\n\t\tgood.append(''.join(sorted(s)))\n\telse:\n\t\tgood.append(s)\n\nif len(good) > 0:\n\tprint(''.join(good))\nelse:\n\tprint('NO')\n", "import sys\n\n\ndef solve(S):\n\tf=[0]*len(S)\n\tfor i in range(len(S)):\n\t\tif S[i]==S[i].lower():\n\t\t\tf[i]=f[i-1]+1\n\t\telse:\n\t\t\tf[i]=0\n\tpre=pref=f[:]\n\tfor i in range(len(S)):\n\t\tpre[i] = f[i]\n\t\tif pre[i]==pre[i-1]+1:\n\t\t\tpref[i]=i\n\tif len(pre)<len(pref):\n\t\tprint(\"NO\")\n\t\treturn\n\n\tk=[]\n\tfor i in range(len(S)):\n\t\tif pref[i]<=k[-1][0]:\n\t\t\tk.append(pref[i])\n\t\telse:\n\t\t\tk.append(k[-1])\n\tans=[]\n\tfor i in S:\n\t\tans.append(i)\n\t\n\ti=0\n\twhile i<len(S):\n\t\tj=i+k[i][1]\n\t\twhile j<len(ans):\n\t\t\tans[j-i-1]=i\n\t\t\tj+=1\n\t\ti+=1\n\ti=len(S)-1\n\twhile i>=0:\n\t\tans[i-1]=i\n\t\ti-=1\n\t\tif i==0:\n\t\t\ti=0\n\treturn \"\".join(ans)\n\t\ndef __starting_point():\n\tinput=sys.stdin.readline\n\tn=int(input())\n\t", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/19 21:52\n\n\"\"\"\n\nN = int(input())\nS = set()\nfor _ in range(N):\n\tS.add(input())\n\t\n\tX = [-1] + [len(s) - 1 for s in S] + [26]\n\t\n\tY = sorted(X)\n\tans = \"\"\n\t\n\tfor i in range(len(X)):\n\t\tfor j in range(i, -1, -1):\n\t\t\tif Y[i] > Y[j]:\n\t\t\t\tans += Y[i]\n\t\t\t\tbreak\n\t\n\tif len(ans) == 0:\n\t\tprint(\"NO\")\n\telse:\n\t\tmi = X.index(min(X)) + 1\n\t\t\n\t\tmin_len = 0\n\t\t\n\t\tfor s in X[:mi]:\n\t\t\tlen_ = bisect.bisect_left(Y, s)\n\t\t\tmin_len += len_\n\t\t\tans += \"\".join(s[len_:])\n\t\t\t\n\t\tif min_len == 0:\n\t\t\tprint(ans)\n\t\telse:\n\t\t\tans = min(ans, Y[mi+1])\n\t\t\t\n\t\t\tprint(ans)\n", "\nfrom bisect import bisect_left,bisect_right\nimport math\nimport heapq\nimport itertools\nimport sys\ninput=sys.stdin.readline\n\nn=int(input())\nhit=[input()]\n\nif n<4:\n\tprint(\"NO\")\n\treturn\n\nif n==4:\n\tprint(\"YES\")\n\treturn\n\nnum=set(hit)\n\nif num=={1,2,3,4}:\n\tprint(\"YES\")\n\treturn\n\nnum.add(5)\n\n#bigNum\nfor i in range(10,2,-1):\n\tx= bisect_right(hit,i)\n\tif x<len(hit):\n\t\tnum.add(i)\n\t\t\nif num<4:\n\tprint(\"NO\")\n\treturn\n\nx=list(num)\n\nsomma= -1\n\nfor i in x:\n\tif summa==-1:\n\t\tsomma=i\n\nif summa>len(x):\n\tprint(\"NO\")\n\treturn\n\nprint( hit[somma] )\n"], "350": ["import math\nimport sys\n\nsys.setrecursionlimit(10**6)\ndef li(): return map(int, sys.stdin.readline().split())\ndef li_(): return map(lambda x: int(x)-1, sys.stdin.readline().split())\ndef lf(): return list(map(float, sys.stdin.readline().split()))\ndef ls(): return sys.stdin.readline().split()\ndef ns(): return int(sys.stdin.readline())\ndef lc(): return list(ns())\ndef ni(): return int(sys.stdin.readline())\ndef nf(): return float(sys.stdin.readline())\n\ndef solve():\n\tdef calc(a, b):\n\t\tg = a // b\n\t\treturn g\n\tq = ni()\n\tfor _ in range(q):\n\t\tl, r, d = li()\n\t\tif calc(l, r, d) == 1:\n\t\t\tprint(l)\n\t\telif calc(l, r+1, d) == 2:\n\t\t\tprint(r+1)\n\t\telse:\n\t\t\tprint((calc(l, r) - 1))\n\nsolve()\n", "import math\nimport bisect\nimport copy\nfrom collections import defaultdict as dd\nimport heapq\nimport math\nimport random\nimport sys\ninput=sys.stdin.readline\ndef inp():\n\treturn int(input())\ndef st():\n\treturn input()\ndef lis():\n\treturn list(map(int,input().split()))\ndef mi():\n\treturn list(map(int,input().split()))\ndef bo(x):\n\treturn int(x)\ndef yes():\n\tprint(\"Yes\")\ndef no():\n\tprint(\"No\")\n\treturn\n\nq=inp()\nwhile q:\n\tq=q-1\n\ta,b,c=mi()\n\tst(a)\n\th=dm-c\n\tst(b+1)\n\th=h%c\n\tif h>=2:\n\t\tprint(a)\n\telif h==1:\n\t\tif a<3:\n\t\t\tprint(b)\n\t\telse:\n\t\t\tprint(a)\n\telif h==2:\n\t\tif b<3:\n\t\t\tprint(a)\n\t\telse:\n\t\t\tprint(b)\n\telif h==3:\n\t\tprint(a)\n", "def mi():\n\treturn list(map(int, input().split()))\n'''\n5\n2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5\n'''\n\nfrom collections import defaultdict as dd\nimport sys\nsys.setrecursionlimit(10**7)\ndef li():\n\treturn list(mi())\ndef st():\n\treturn input()\ndef val():\n\treturn int(input())\ndef sl():\n\treturn list(map(int, input().split()))\ndef so():\n\treturn set(input().split())\ndef siz(n):\n\treturn (n+1) // 2\ndef lt():\n\treturn list(siz(n))\ndef pt(a):\n\tprint(' '.join([str(a)]))\ndef miinput():\n\treturn list(map(int, input().split()))\n\ndef main():\n\tbuf = input()\n\tq = buf.split()\n\t\n\tn = so()\n\tq = [(l, r, d) for l, r, d in q]\n\tq.sort(key=lambda x: x[1])\n\t\n\tt = {}\n\tfor i in range(1,n+1):\n\t\tt[i] = []\n\t\n\tfor l, r, d in q:\n\t\tif r < n:\n\t\t\tr += 1\n\t\t\tcontinue\n\t\tfor tgt in list(t.keys()):\n\t\t\tif tgt >= l and tgt <= r:\n\t\t\t\tt[tgt].append(l)\n\t\t\t\tcontinue\n\t\tt[tgt].append(r)\n\t\tif d <= 1:\n\t\t\tcontinue\n\t", "import sys\ninput=sys.stdin.readline\nfor i in range(int(input())):\n\tl,r,d=map(int,input().split())\n\tseg=[]\n\tp1=[];p2=[];p3=[];p4=[]\n\tfor i in range(l,r+1):\n\t\tif(i%d==0):\n\t\t\tseg.append(i)\n\t\t\tp1.append(i)\n\tfor i in range(l,r+1):\n\t\tif((i%d)==0):\n\t\t\tif(p1[i]!=seg[i]):\n\t\t\t\tp2.append(p1[i])\n\t\t\telse:\n\t\t\t\tp3.append(seg[i])\n\t\t\t\tif(p2[-1]==seg[i]):\n\t\t\t\t\tp4.append(i)\n\tfor i in range(len(p2)):\n\t\tif(p2[i]!=seg[i]):\n\t\t\tp2.pop()\n\t\t\tif(p2[-1]==seg[i]):\n\t\t\t\tp3.pop()\n\t\t\t\tif(p3[-1]!=seg[i]):\n\t\t\t\t\tp4.pop()\n\tif(len(p4)):\n\t\tprint(p4[-1])\n\telse:\n\t\tfor i in range(len(p3)):\n\t\t\tif(p3[i]!=seg[i]):\n\t\t\t\tp4.append(i)\n\t\tprint(p2", "import sys\ninput = sys.stdin.readline\n\ndef main():\n\tq = int(input())\n\tfor _ in range(q):\n\t\tl, r, d = list(map(int, input().split()))\n\t\tres = 1\n\t\ti = 2\n\t\twhile d * i < l + r:\n\t\t\tif d * i == l + r:\n\t\t\t\ti += 1\n\t\t\t\tcontinue\n\t\t\telse:\n\t\t\t\tj = 2\n\t\t\t\twhile j * i < l + r:\n\t\t\t\t\tif l * i + j * d < l + r:\n\t\t\t\t\t\ti += 1\n\t\t\t\t\t\tj += 1\n\t\t\t\t\telse:\n\t\t\t\t\t\tbreak\n\t\t\t\td *= j\n\t\t\t\tres = max(res, i - j)\n\t\t\t\tl += i\n\t\t\t\tr += j\n\t\tprint(res)\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n\tres.clear()\n\t\n\tT = int(input())\n\tfor _ in range(T):\n\t\tl, r, d = list(map(int, input().split()))\n\t\tpos = [0, -1]\n\t\tfor i in range(l, r+1):\n\t\t\ta = i\n\t\t\tb = pos[-1]\n\t\t\tif a % d == 0:\n\t\t\t\tx = a // d\n\t\t\t\tpos[0] = b\n\t\t\t\tpos[1] = i\n\t\t\t\tcontinue\n\t\t\tb = pos[-1]\n\t\t\ta = i\n\t\t\twhile a % d == 0:\n\t\t\t\tb -= 1\n\t\t\t\ta = a // d\n\t\t\tb = b\n\t\t\tif b == -1:\n\t\t\t\tbreak\n\t\t\tpos[0] = min(b, pos[0])\n\t\t\tpos[1] = max(pos[1], i)\n\t\tres.append(str(pos[0]))\n\t\t\t\n\t\t\n\t\t\n\tprint('\\n'.join(res))\n\t\t\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n"], "351": ["\n\nimport sys\n\n\nt = 1\ndef s(x):\n\tans = 0\n\tif type(x) == float:\n\t\treturn 0.5\n\telif type(x) == int:\n\t\treturn x\n\telse:\n\t\tfor i in range(t):\n\t\t\tans += (x * (i + 1))\n\treturn ans / (t * 100)\n\ndef main():\n\tx = 0\n\tfor i in sys.stdin:\n\t\tline = i.strip()\n\t\tif line[-1] == '\\n':\n\t\t\tcontinue\n\n\t\tif '0' <= line[-1] <= '9':\n\t\t\tprint(s(float(line[:-1])))\n\t\telse:\n\t\t\tprint(float(line[:-1]))\n\n\n\treturn\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "3\n#!/usr/bin/env python3\nimport sys\n\ndef input():\n\treturn sys.stdin.readline().strip()\n\ndef run_program(x):\n\t#print(\"Hello, {0}!\".format(x))\n\tans = 0\n\twhile True:\n\t\ttry:\n\t\t\tif ans % x == 0:\n\t\t\t\tbreak\n\t\t\tans = ans / x\n\t\t\tprint(ans)\n\t\texcept ZeroDivisionError:\n\t\t\tcontinue\n\ndef main():\n\twhile True:\n\t\ttry:\n\t\t\tx = int(input())\n\t\t\trun_program(x)\n\t\texcept EOFError as e:\n\t\t\tprint(\"EOFError\")\n\t\t\tquit(3)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "t=list(map(float, input().split()))\ni=0\nwhile(i<t[0]):\n\to=t[i]\n\t#print(o)\n\tk=o\n\ti+=1\n\td=0\n\tb=0\n\twhile(i<t[i]):\n\t\tif(d==0):\n\t\t\tb=(k*(k+1))/2\n\t\telse:\n\t\t\td=d+((k*k-k*(k-1))/2)*o\n\t\t\t#print(d)\n\t\t\tb=b+o*d\n\t\tk=k-1\n\tprint('{:.4f}'.format(b))\n", "import sys\n \ndef iinput(): return sys.stdin.readline().strip()\ndef rinput(): return sys.stdin.readline().strip()\ndef get_list(): return list(map(int, iinput().split()))\n \ndef solve(n):\n\tsx = []\n\ts = 0\n\tfor i in range(n):\n\t\tsx.append(s)\n\ts = \"\".join(sx)\n\tsx = s.split(\".\")\n\tres = float(\"+inf\")\n\tsx[0] = int(sx[0])\n\tfor i in range(1, len(sx)):\n\t\tsx[i] = sx[i] * (10**((i - 1))/9)) + (sx[i] - int(sx[i])) * (10**((i + 1) / 9))\n\tres = sx[0]\n\treturn res\n\t\nt = iinput()\nfor i in range(t):\n\tn = iinput()\n\tprint(solve(int(n)))\n", "import sys\n\n\ndef main():\n\ts = sys.stdin.readline\n\n\tarr = [0] * 10\n\n\tfor i in range(int(s())):\n\t\tcnt = input()\n\t\tif cnt == \"1\":\n\t\t\tarr[int(cnt) - 1] += 1\n\t\telse:\n\t\t\tarr[int(cnt) - 1] *= -1\n\n\tdef to_basex(n):\n\t\tres = 0\n\t\twhile n!= 0:\n\t\t\tres += n\n\t\t\tn //= 10\n\n\t\treturn res\n\n\tfor i in range(10):\n\t\tarr[i] *= to_basex(i)\n\n\tresult = 0\n\tfor i in arr:\n\t\tresult *= i\n\n\tsys.stdout.write(str(result))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\nimport math\n\ninput = sys.stdin.readline\n\ndef main():\n\tx = 0\n\tfor line in input().split():\n\t\tif int(line) == 1:\n\t\t\tx += 1\n\t\telse:\n\t\t\tx -= 1\n\t\n\tprint(\"{0:.4f}\".format(x/float(9)))\n\t\n\treturn\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "352": ["n = input()\nprint(int(n))\n", "def main():\n\ts = int(input())\n\tprint(pow(2, s))\n\nmain()\n", "print(1 << 30)\n", "#!/usr/bin/env python\n\ndef main():\n\ta = 0\n\tline = input()\n\ti = 1\n\twhile i!= len(line):\n\t\ta = int(line[i]) * 256\n\t\ti += 1\n\tprint(a)\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "a=int(input())\nprint(a*(a+1))\n", "3\n\n# cook your dish here\nnum = input()\nprint(int(num))\n"], "353": ["import math\nimport os\nimport sys\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\nt = int(input())\n\nfor _ in range(t):\n\tx, y = map(int, input().split())\n\tk = math.sqrt(y) + 1\n\tif k < int(x):\n\t\tprint(\"NO\")\n\telse:\n\t\tif k == int(x):\n\t\t\tprint(\"YES\")\n\t\telse:\n\t\t\tx -= k * k\n\t\t\tif x < y:\n\t\t\t\tprint(\"YES\")\n\t\t\telse:\n\t\t\t\tprint(\"NO\")\n", "def primals(n):\n\tprime = [True] * (n//2 + 1);\n\tfor i in range(2,int(n**0.5)+1):\n\t\tif(prime[i]):\n\t\t\tj = 2\n\t\t\twhile(j*j <= n):\n\t\t\t\tif(prime[i] == True):\n\t\t\t\t\tbreak\n\t\t\t\tj += 1\n\t\t\tif(j*j == n):\n\t\t\t\tprime[i] = False\n\tif(prime[0]):\n\t\treturn False\n\telse:\n\t\treturn True\n\t\t\t\nt = int(input())\nfor _ in range(t):\n\tx,y = map(int,input().split())\n\tif primals(x) or primals(y):\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n", "t = int(input())\nfor _ in range(t):\n\tx, y = map(int, input().split())\n\tfor p in range(2, int(x ** 0.5) + 1):\n\t\tif x % p == 0:\n\t\t\tx //= p\n\t\t\tif p!= 2:\n\t\t\t\ty -= p * (p - 1)\n\t\t\telse:\n\t\t\t\ty -= (p + 1) * p\n\tif x!= y:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n", "import random\nimport math\ny=int(input())\nfor i in range (0,y):\n\tp,c=list(map(int,input().split()))\n\tif p>=1:\n\t\tif c:\n\t\t\tprint(\"NO\")\n\t\t\tbreak\n\t\telse:\n\t\t\ta=random.randint(2,c-1)\n\t\t\tc=c-a\n\t\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"YES\")\n\n", "import math\nimport sys\ninput = sys.stdin.readline\n\nT = int(input())\nfor _ in range(T):\n\tx, y = map(int, input().split())\n\tif math.gcd(x, y) == 1:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n", "import math\nimport os\nimport random\nimport sys\nfrom typing import List\n\n\ndef make_list(v):\n\treturn list(v)\n\n\ndef solve(a, b):\n\tc = a - b\n\tif c > 1:\n\t\treturn False\n\tfor p in make_list(c):\n\t\tif p * p > c:\n\t\t\treturn False\n\tk = 0\n\tfor q in range(2, int(math.sqrt(c)) + 1):\n\t\tif c % q == 0:\n\t\t\tk += 1\n\treturn k >= 2\n\n\ndef main():\n\tt = int(input())\n\tfor i in range(t):\n\t\ta, b = list(map(int, input().split()))\n\t\tif solve(a, b):\n\t\t\tprint(\"YES\")\n\t\telse:\n\t\t\tprint(\"NO\")\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "354": ["a, b = list(map(int, input().split()))\nif a > b:\n\ta, b = b, a\nif a == b:\n\tprint(\"-1\")\nelse:\n\tl = len(str(a))\n\tk = (l - 1) * 10 + b\n\tm = k // a + (k % a or 1)\n\tprint(str(k) + \" \" + str(m))\n", "d, b = map(int, input().split())\nif d > b:\n\tprint(-1)\nelse:\n\tprint(int(d) + int(b) * 10**(d-b-1))\n", "a, b = list(map(int, input().split()))\nif a + 1 == b:\n\tprint(a + 1, b)\nelse:\n\tif a * b > 9:\n\t\tprint(-1)\n\telse:\n\t\tl = list(map(int, str(a)))\n\t\tm = list(map(int, str(b)))\n\t\tx = 0\n\t\tif len(l) < 2:\n\t\t\tx = l[0] + b\n\t\telif len(l) == 2:\n\t\t\tif l[0]!= l[1]:\n\t\t\t\tx = l[0] + a\n\t\telse:\n\t\t\tx = l[0] * b + l[1]\n\t\tif x < 10:\n\t\t\tprint(-1)\n\t\telse:\n\t\t\tprint(x, int(x * a))\n", "dA, dB = list(map(int, input().split()))\n\nif dA == dB:\n\tprint(-1)\nelse:\n\tfirst = dA[0]\n\tsecond = dB[0]\n\tfor i in range(1, 10):\n\t\tif first == i or second == i:\n\t\t\ta = i\n\t\t\tb = i\n\t\t\tbreak\n\tfor i in range(first, 10):\n\t\tif first == i:\n\t\t\ta += 1\n\t\telse:\n\t\t\tb += 1\n\t\n\tnew = first * dA + second * b\n\tif a <= 10 ** (len(str(new)) - 1):\n\t\tprint(new)\n\telse:\n\t\tprint(-1)\n", "a, b = map(int, input().split())\nif a!= b:\n\tprint(-1)\nelse:\n\tr = \"\"\n\tif a < b:\n\t\ta, b = b, a\n\td1, d2 = list(map(int, str(a)))\n\tif d1 == d2:\n\t\tprint(d1, b)\n\telif d1 < d2:\n\t\ta, b = d1, a\n\t\tr += '1'\n\telif d1 > d2:\n\t\ta, b = d2, a\n\t\tr += '2'\n\telse:\n\t\tr += '3'\n", "d, b = list(map(int, input().split()))\n\nif d == b:\n\tprint(-1)\nelse:\n\tk = list(map(int, str(d)))\n\tc = k[0] * 10 + k[1] * 10\n\t\n\ta = str(c)\n\tif a[0] == 'd':\n\t\ta += '1'\n\telse:\n\t\ta += '0'\n\t\n\tb = str(c)\n\tif b[0] == 'd':\n\t\tb += '1'\n\telse:\n\t\tb += '0'\n\t\n\tprint(int(a), int(b))\n"], "355": ["n = int(input())\na = list(map(int, input()))\n\ns = set()\n\nfor i in range(1, len(a) + 1):\n\tif a[i - 1] == a[i] + 9:\n\t\ts.add(a[i - 1])\n\nans = 0\nfor c in s:\n\tans += a.count(c)\n\nprint(ans)\n", "a=int(input())\nb=list(map(int,input()))\nif(len(set(b))==1):\n\tprint(a)\nelse:\n\tct=0\n\tfor i in range(len(b)-1):\n\t\tif((b[i]%2==0) and (b[i+1]%2==0)):\n\t\t\tct+=1\n\t\t\t#print('6',b[i],b[i+1])\n\t\t\n\t\tif((b[i]%2==1) and (b[i+1]%2==1)):\n\t\t\tct+=1\n\tprint(ct)\n", "#!/usr/bin/env python3\nimport collections, itertools, functools, math\n\ndef solve():\n\tt = input().strip()\n\tc = collections.Counter(t)\n\ta = list(c) + [\"0\"]\n\tfor i in range(len(a)):\n\t\tif a[i]!= str(i):\n\t\t\ta[i] = str(i)\n\t\tc[a[i]] -= 1\n\t\tif c[a[i]] == 0:\n\t\t\tdel c[a[i]]\n\tans = 0\n\tfor i in c:\n\t\tif i!= 0:\n\t\t\tans += c[i]\n\tprint(ans)\n\n\ndef __starting_point():\n\tt = int(input())\n\tc = input().strip()\n\tsolve()\n\n\n\n\n__starting_point()\n", "import itertools\nt = int(input())\nseq = list(map(int, input().split()))\n\ndef pair(a, b):\n\tfor i in range(0,10):\n\t\tif a == b[i]:\n\t\t\treturn i\n\ndef count(a):\n\tc = []\n\tfor i in seq:\n\t\tif i in a:\n\t\t\tc.append(a.index(i))\n\tc = list(set(c))\n\ta = list(a)\n\tif len(c) == 1:\n\t\treturn c[0]\n\telse:\n\t\treturn count(c) - pair(a, c[0])\nprint(count(seq))\n", "n = int(input())\ns = input()\n\na = [0] * n\nb = 0\n\nfor i in range(n):\n\ta[i] = int(s[i])\n\t\n\tif a[i] == 6: b += 1\n\telif a[i] == 9: b -= 1\n\nprint(b)\n", "t = int(input())\narr = input().split()\n\nfor i in range(len(arr)):\n\tarr[i] = int(arr[i])\n\t\nc = 0\n\nfor i in range(t):\n\tif i % 2 == 0:\n\t\tc += arr[i]\n\telse:\n\t\tc += arr[-i-1]\n\t\nprint(c)\n"], "356": ["import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor testcases in range(t):\n\tn=int(input())\n\tA=sorted([input().strip() for i in range(n)])\n\n\tX=set(A)\n\tY=list(A)\n\tfor i in range(len(A)):\n\t\tif A[i] in Y:\n\t\t\tcontinue\n\t\telse:\n\t\t\tY.append(A[i])\n\t\n\tif len(Y)<=len(A):\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n\t\n\t\n", "import sys\nimport math\nfrom collections import defaultdict\n\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\ndef iinput():\n\treturn int(input())\n\ndef finput():\n\treturn float(input())\n\ndef tinput():\n\treturn input().split()\n\ndef rinput():\n\treturn map(float, tinput())\n\ndef fiinput():\n\treturn list(map(float, tinput()))\n\ndef rlinput():\n\treturn list(map(int, input().split()))\n\ndef sli():\n\treturn set(list(input()))\n\ndef modst(a, s):\n\tres = 1\n\twhile s:\n\t\tif s % 2:\n\t\t\tres *= a\n\t\ta *= a\n\t\ts //= 2\n\treturn res\n\ndef pro(a):\n\tres = 1\n\twhile a > 1:\n\t\tif a % 2:\n\t\t\tres *= a\n\t\ta //= 2\n\t\ta *= a\n\treturn res\n\ndef main():\n\tfor _ in range(iinput()):\n\t\tn = iinput()\n\t\ts = sli()\n\t\tc = 0\n\t\tfor i in range(len(s)):\n\t\t\tif s[i]!= s[c]:\n\t\t\t\tc += 1\n\t\tif c > 1:\n\t\t\tprint(\"NO\")\n\t\telse:\n\t\t\tprint(\"YES\")\n\n\treturn\n\ndef __starting_point():\n\tmain()\n__starting_point()\n", "import sys\nfrom collections import Counter\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\nt = int(input())\nfor _ in range(t):\n\tn = int(input())\n\tc = Counter(input())\n\tyes = \"YES\"\n\tfor k, v in c.items():\n\t\tx = max(0, v - Counter([k]))\n\t\tyes = \"YES\" if x >= 0 else \"NO\"\n\tif yes:\n\t\tprint(yes)\n\telse:\n\t\tprint(\"NO\")\n", "import sys\n\ninput=sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n\tn=int(input())\n\tS=[]\n\tfor i in range(n):\n\t\tS.append(input().strip())\n\n\tA=0\n\tfor i in S:\n\t\tfor j in range(97,123):\n\t\t\tif j<i:\n\t\t\t\tA+=1\n\tif A%2!=0:\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n\t\t\t\n\t\t\t\n\t\n\t\n", "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n\ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n\ndef MI():\n\treturn map(int, sys.stdin.readline().split())\n\ndef SI():\n\treturn sys.stdin.readline().strip()\nt = II()\nfor q in range(t):\n\tn = II()\n\ta = [0]*26\n\tfor i in range(n):\n\t\ts = input()\n\t\ta[ord(s[i])-97]+=1\n\tb = [0]*26\n\tfor i in range(n):\n\t\ts = input()\n\t\tb[ord(s[i])-97]+=1\n\tif a.count(0)==sum(b):\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n", "import sys\n\ninput=sys.stdin.readline\n\nfor _ in range(int(input())):\n\tn=int(input())\n\ta=[]\n\tfor _ in range(n):\n\t\ts=input()\n\t\ta.append(list(s))\n\tboo=0\n\tfor i in a:\n\t\tp=0\n\t\tif i!=sorted(i):\n\t\t\tp+=1\n\t\tif p>len(i):\n\t\t\tboo=1\n\t\t\tbreak\n\tif boo==1:\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n"], "357": ["n, m = map(int, input().split())\nif n > m:\n\tprint('NO')\n\treturn\nk = n+1\ns = k // m\nk %= m\nl = [0] * n\na = 1\nfor i in range(1, n):\n\tl[i] = a * (i+1)\n\ta = a * (i+1) + l[i]\nif s == k:\n\tprint('YES')\n\tfor i in range(1, n):\n\t\tprint(l[i], end ='')\nelse:\n\tt = 1\n\tfor i in range(n):\n\t\tif l[i]!= k:\n\t\t\tt *= 2\n\tif t == k:\n\t\tprint('YES')\n\t\tfor i in range(1, n):\n\t\t\tprint(l[i], end ='')\n\telse:\n\t\tprint('NO')\n", "n,x = [int(i) for i in input().split()]\nif(x==0):\n\tprint('NO')\nelse:\n\tt = [i for i in range(0,30)]\n\tm = 0\n\tfor i in t:\n\t\tm^=i\n\tif(m==x):\n\t\tprint('YES')\n\t\tans =[i+1 for i in range(0,n)]\n\t\tprint(*ans)\n\telse:\n\t\tprint('NO')\n", "n, x = list(map(int, input().split()))\n\nif not (x & (n - 1)):\n\tprint('NO')\nelse:\n\tt = 1 << (n - 1)\n\ts = bin(t)[2:]\n\ts = '0' * (n - len(s)) + s\n\tif n >= 2:\n\t\ts = s + '1'\n\tprint('YES')\n\tprint(' '.join(['1' if i & s == x else '0' for i in range(n)]))\n", "[n,x] = input().split()\n\nif (n>=6500):\n\tprint(\"NO\")\nelse:\n\ttemp = 1\n\tfor j in range(n):\n\t\tif temp^j not in x:\n\t\t\ttemp^=j\n\t\t\tfor k in range(1,20000000):\n\t\t\t\ttemp^=k\n\t\t\tbreak\n\tif temp==x:\n\t\tprint(\"YES\")\n\t\tfor j in range(1,20000000):\n\t\t\tprint(j,end=\" \")\n\t\tprint()\n\telse:\n\t\tprint(\"NO\")\n\n", "n, x = [int(x) for x in input().split()]\nif n % 2 == 0:\n\tprint('NO')\nelse:\n\ta = [0] * 30\n\tfor i in range(1, n + 1):\n\t\ta[i] = x\n\t\tt = 0\n\t\twhile i + t <= n:\n\t\t\ta[i + t] = a[i + t] ^ a[i]\n\t\t\tt += 1\n\t\tif t == n:\n\t\t\tprint('YES')\n\t\t\tfor i in range(1, n + 1):\n\t\t\t\tprint(a[i], end ='')\n\t\t\tprint()\n", "n, x = map(int, input().split())\nif x == 0:\n\tprint('NO')\nelse:\n\tf = 0\n\tt = 1\n\tfor i in range(n):\n\t\tf ^= i & x\n\t\tif f == i:\n\t\t\tt += 1\n\tprint('YES')\n\tfor i in range(n):\n\t\tprint(i+1, end ='')\n\tprint()\n"], "358": ["m = input().strip()\na = list(map(int,m.split(' ')))\nb = list(map(int,m.split(' ')))\n\ndef poly(a,b):\n\tif len(a) < 2:\n\t\treturn a\n\tx = []\n\ty = []\n\twhile len(a)!= 0:\n\t\tif a[0]%2 == 0:\n\t\t\tx.insert(0, a[0]) \n\t\t\ta = a[1:]\n\t\telse:\n\t\t\ty.insert(0, b[0]) \n\t\t\tb = b[1:]\n\t\t\n\tif len(x) < 2:\n\t\treturn ''.join(x)\n\telse:\n\t\ts = ''.join(x)\n\t\tif s.startswith('0') or s.startswith('1'):\n\t\t\ts = ''\n\t\treturn str(int(s[1:],2))+''.join(y)\nif poly(a,b):\n\tprint(\"YES\")\n\tprint(\"\".join(poly(x,y)))\nelse:\n\tprint(\"NO\")\n\n", "import sys\n\ndef key():\n\ts = sys.stdin.readline()\n\ta, b = map(int, s().split())\n\tif a % 2 == 0 and b % 2 == 0:\n\t\treturn b\n\tif a % 2:\n\t\treturn b\n\tif a % 5:\n\t\treturn 1\n\treturn a\n\ndef process(public_key, a, b):\n\tif public_key[:1]!= b:\n\t\treturn \"NO\"\n\n\tcut_str = str(a).zfill(1)\n\tcut_str1 = str(b).zfill(1)\n\tif cut_str[0]!= cut_str1[0]:\n\t\treturn \"NO\"\n\n\tb_a_str = b * a\n\tb_b_str = b * b\n\n\tprocess(cut_str, a // 2, b // 2)\n\tprocess(b_a_str, a, b // 2)\n\n\treturn \"YES\"\n\ninput()\nkey()\n", "def main():\n\ta = input().strip()\n\tb = input().strip()\n\td = main()\n\tif d == '':\n\t\tprint('NO')\n\telse:\n\t\tleft, right = (int(a[:i]) for i in range(1, len(a) + 1))\n\t\tr = ''\n\t\tif left % 2 == 0:\n\t\t\tr = '0' * (len(a) - len(r)) + r\n\t\telif right % 2 == 0:\n\t\t\tr = '0' * (len(a) - len(r)) + r\n\t\tprint('YES', *r)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def main():\n\tfrom sys import stdin, stdout, setrecursionlimit\n\tsetrecursionlimit(10**6)\n\tinput = stdin.readline\n\tstdout.write(\"YES\\n\"+'\\n'.join(list(map(str, input().split()))+'\\n'))\n\t(a, b) = list(map(int, input().split()))\n\tif a % 2 == 0 or b % 2 == 0:\n\t\treturn 'NO'\n\n\tmod = a // b * 2\n\tx, y = a % mod, b % mod\n\tm = a % mod\n\td = m * b % mod\n\tans1 = (x*y) % mod\n\tans2 = d + x*m % mod\n\n\tif mod == 2:\n\t\tans1, ans2 = (a, anss1), (b, anss2)\n\n\treturn str(ans1)+\"\\n\"+str(ans2)+\"\\n\"\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "key=str(input())\na,b=list(map(int,input().split()))\nfor i in range(10**6):\n\tif (key[i]*(key[i]+1)//2)%(a+b)==0:\n\t\tprint('YES')\n\t\tprint('%d %d\\n'%(key[i], key[i*2]))\n\t\tbreak\n\telse:\n\t\tcontinue\nelse:\n\tprint('NO')\n", "def main():\n\ta = input().strip()\n\tb = input().strip().split(' ')\n\tfor i in range(len(b)):\n\t\tb[i] = int(b[i])\n\tif b[0] == '0' and len(b) > 1:\n\t\tprint('NO')\n\telif b[0]!= b[1]:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n\n\t\tleft = b[0]*a[1:]; right = b[1]*a[0]\n\t\tnew_left = left[0:int(a[0])//2]; new_right = right[int(a[1])//2:][::-1];\n\t\tfor i in range(len(left)):\n\t\t\tnew_left[i] = left[i]*a[i]; new_left[i] %= 2*a[0]\n\t\tfor i in range(len(right)):\n\t\t\tnew_right[-i-1] = right[-i-1]*b[i]; new_right[-i-1] %= 2*b[0]\n\n\t\tprint('YES')\n\t\tfor i in range(len(left)):\n\t\t\tprint('', new_left[i],'', new_right[i])\n\t\tprint('\\n', ''.join([str(new_left[i]),''.join(new_right[i])]))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "359": ["a=list(map(int,input().split()))\nprint(a[0])\n", "a, b = list(map(int, input().split()))\nc = a - 1\nd = b - 1\nprint(c * (a + b) // 2)\n", "a, b = map(int, input().split())\nprint(a + b)\n", "a, b = [int(x) for x in input().split()]\n\nprint(b ^ a)\n", "a, b = [int(s) for s in input().split()]\nprint(a + b - 1)\n", "n, m = list(map(int, input().split()))\nfor i in range(n):\n\tprint(i+m-1)\n"], "360": ["p = [2]\n\ndef roots(n):\n\tresult = 0\n\te = 3\n\twhile (n - 2**e > 1):\n\t\tq = n - 2**e\n\t\tresult += q*p[e]\n\t\te += 2\n\t\n\treturn result\n\nans = 0\nfor i in range(50001):\n\tif roots(i) == i:\n\t\tans += 1\n\nprint(ans)\n", "def primals(n):\n\tdef gen_prime():\n\t\tyield 2\n\t\tyield 3\n\t\tyield 5\n\t\twhile True:\n\t\t\tif n == 1: break\n\t\t\tif n in primes():\n\t\t\t\tyield from gen_prime()\n\t\t\t\tyield n\n\t\t\telse:\n\t\t\t\tfor p in primes():\n\t\t\t\t\tif n % p == 0:\n\t\t\t\t\t\tbreak\n\tprime = gen_prime()\n\treturn len(set(prime))\nn = int(input())\nprint(primals(n))\n", "def primals(n):\n\tsq = int(n ** 0.5)\n\tif sq > 1:\n\t\tn = sq * 2 - 1\n\t\ts = sq\n\telse:\n\t\ts = 1\n\tleft = n % 2 == 0 and 2 or 3\n\twhile left:\n\t\tm = (left - 1) // 2\n\t\tif m % 2 == 1 or n == m * m:\n\t\t\ts += 1\n\t\tleft = m\n\treturn s\n\n\np = int(input())\nprint(primals(p))\n", "def primals(n):\n\tsq = int(n ** 0.5)\n\treturn 2 * sum(primals(x - 1) for x in range(2, sq + 1)) - sq * (sq > 1)\n\nn = input()\nprint(primals(n))\n", "#!/usr/bin/env python3\n\ndef ans(p):\n\tans = 0\n\tfor i in range(1, p):\n\t\tif p % i == 0:\n\t\t\tbreak\n\t\tans += i\n\treturn ans\n\ndef solve(p, ans):\n\ti = 1\n\twhile p % 2 == 0:\n\t\ti *= 2\n\twhile p % 3 == 0:\n\t\ti *= 3\n\tans.append(i - 1)\n\t\n\twhile i < p:\n\t\tans.append(i)\n\t\ti *= p - i\n\treturn ans\n\n\np = int(input())\nans(p)\n", "p = [2]+[p for p in range(3, 2000000, 2)]\n\ndef root(x):\n\treturn x//p[-1]*p[-1]\n\ndef comp(x):\n\ti = 3\n\twhile i*i <= x:\n\t\tif x%i == 0:\n\t\t\treturn i\n\t\ti += 2\n\treturn -1\n\nans = 0\nfor i in range(len(p)):\n\tfor j in range(i+1, len(p)):\n\t\tif root(p[i]) < root(p[j]):\n\t\t\tans += (comp(p[i]))\nprint(ans)\n"], "361": ["a, b, c = map(int, input().split())\ns = []\nfor i in range(b+c):\n\tif a+i <= c:\n\t\ts.append(a+i)\n\telse:\n\t\ts.append(-1)\ns =''.join(map(str,s))\nprint(s)\n", "import math\ny, k, n = map(int, input().split())\na = []\nfor i in range(y+k):\n\tif i+1 <= n:\n\t\tx = math.floor(i/k)\n\t\tif x * a[i] <= y:\n\t\t\ta.append(x*a[i])\n\t\telse:\n\t\t\ta.append(-1)\nif -1 in a:\n\tprint(-1)\nelse:\n\tprint(*a)\n", "y,k,n = [int(i) for i in input().split()]\nA = []\nfor i in range(1, y+1):\n\tif i < y:\n\t\tA.append(i*k)\nfor i in range( y+1, n+1):\n\tif i % k == 0:\n\t\tA.append(i//k)\nA.sort()\nif y!= n:\n\tprint(-1)\nelse:\n\tprint(A[0])\n", "def main():\n\ty, k, n = list(map(int, input().split()))\n\tresult = [0] * (n + 1)\n\tresult[0] = 1\n\tfor i in range(1, n + 1):\n\t\tresult[i] = result[i - 1] * (k + 1) // 2\n\tif k & 1:\n\t\tresult[n] = -1\n\tprint(' '.join(map(str, result)))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def main():\n\ty, k, n = list(map(int, input().split()))\n\tresult = [-1] * k\n\ttotal_potatoes = y // k\n\tif total_potatoes < n:\n\t\tprint(-1)\n\t\treturn\n\tpotatoes = 0\n\tfor _ in range(n // k):\n\t\tpotatoes += 1\n\t\tif total_potatoes % k == 0:\n\t\t\tresult[(k + 1) // 2] = potatoes\n\t\t\ttotal_potatoes -= 1\n\tall_potato_values = (k + 1) // 2\n\tfor num in range(1, all_potato_values + 1):\n\t\tresult[num] = result[num - 1] + potatoes\n\tprint(*result)\n\n\nmain()\n", "#In the Name of God\nimport sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\n\n#--------------------------Template ends-------------sdpt -------------------------\n\ndef sdp():\n\t\"\"\"\n\tInput: y, k, n\n\tOutput: list of integers\n\t\"\"\"\n\t\n\t#Define the data structures\n\ty, k, n = MI()\n\t\n\t#Initialize the lists\n\ts1 = [1]*k\n\ts2 = [1]*k\n\ts3 = [1]*k\n\t\n\t#Build the increasing sequence\n\tfor i in range(1, k):\n\t\ts1[i] = s1[i-1] + s1[i]\n\t\ts2[i] = s2[i-1] + s2[i]\n\t\n\t#Search the sequence of possible values\n\tfor i in range(k, n):\n\t\tfor j in range(k):\n\t\t\ts2[i] = s2[i-1] + s2[i]\n\t\t\ts3[i] = s3[i-1] + s3[i]\n\t\n\t#Finalize\n\tresult = list([x for x in s1 if x>=i+1])\n\tresult += list([x for x in s2 if x>="], "362": ["def getAns(k,a,b,v):\n\tdiv=[]\n\ti=1\n\twhile i*i<=v:\n\t\tif k%i==0:\n\t\t\tdiv.append(i)\n\t\t\tk=k//i\n\t\telse:\n\t\t\tdiv.append(i)\n\t\t\ti+=1\n\tdiv.sort()\n\tans=len(div)\n\ti=0\n\twhile i<ans:\n\t\tx=div[i]\n\t\tj=i+1\n\t\twhile j<=v:\n\t\t\tif x%j==0:\n\t\t\t\tdiv.append(j)\n\t\t\t\tj+=x//j\n\t\t\telse:\n\t\t\t\tbreak\n\t\ti+=1\n\treturn ans\n\t\nk,a,b,v=list(map(int,input().split()))\nprint(getAns(k,a,b,v))\n", "#!/usr/bin/env python\nfrom math import *\n\ndef divisors(n):\n\tout = []\n\tfor i in range(1, int(n ** 0.5) + 1):\n\t\tif n % i == 0:\n\t\t\tout.append(i)\n\t\t\tif i * i!= n:\n\t\t\t\tout.append(n // i)\n\treturn len(out)\n\nk, a, b, v = map(int, input().split())\n\ncnt = [[[0] * (v + 1) for _ in range(b + 1)] for _ in range(k + 1)]\ncnt[0][0][0] = 1\n\nfor i in range(1, k + 1):\n\tfor j in range(1, b + 1):\n\t\tcnt[i][j][0] += cnt[i - 1][j][0]\n\t\tcnt[i][j][v] += 1\n\nret = v\nfor i in range(k, -1, -1):\n\tfor j in range(1, v + 1):\n\t\tcnti = [r + 1 for r in cnt[i + 1]]\n\t\tm = divisors(cnti[0])[0]\n\t\tm2 = min(cnti)\n\t\tret = min(ret, m + sum([cnti[k + r - 1][r] for r in cnti[1:]]))\n\tfor r in cnti[1:]:\n\t\tcnt[i][j][r] += cnt[i - 1][j][r]\nprint(ret)\n", "import sys\nimport math\nk, a, b, v = [int(x) for x in input().split()]\nr = v * (v + 1) // 2\nif k < r:\n\tprint(r)\n\treturn\n\nr = int(math.sqrt(k))\nsum = 0\nfor i in range(1, k + 1):\n\tsum += 1 + i * i\nboxes = [i for i in range(1, sum + 1)]\n\ndef divisors(n):\n\tl, r = 1, 2\n\twhile l < r:\n\t\tif n % l == 0:\n\t\t\tyield l\n\t\t\tl += 2\n\t\telse:\n\t\t\tr -= 1\n\tif n!= 1:\n\t\tyield n\n\nboxes = sorted(divisors(sum), reverse=True)\nfor i in range(len(boxes)):\n\tif i + 2 < len(boxes):\n\t\tboxes[i] += boxes[i + 1]\n\nprint(len(boxes))\n", "k, a, b, v = map(int, input().split())\ns = []\nfor i in range(k + 1):\n\tdivisors = [i for i in range(1, int(-(-a/i)) + 1)]\n\tn = sum(divisors)\n\tif n // a > v:\n\t\tv = n // a\n\t\ts += [i * v + k]\n\ts += [i * (k + 1)]\ns += [i * (k * 2)]\nprint(len(s))\n", "def div(n):\n\tif n < 3:\n\t\treturn n\n\tdivs = []\n\tfor i in range(1, int(n ** 0.5) + 1):\n\t\tif n % i == 0:\n\t\t\tdivs.append(i)\n\t\t\tif i * i!= n:\n\t\t\t\tdivs.append(n // i)\n\treturn len(divs)\n\nk, a, b, v = map(int, input().split())\ndivs = div(v)\n\na = div(k // divs[0])\nb = divs[-1] + (k // divs[0])\nk = k // divs[0] + 1\n\nprint(min(a, b))\n", "k, a, b, v = map(int, input().split())\nz = []\nfor i in range(k):\n\tz.append(i)\n\t\ndiv = [i for i in range(2, v + 1) if not z[i]]\nfor i in div:\n\tz = z[:-1]\n\tfor j in range(1, i):\n\t\tz[j] += z[j + 1]\n\nans = len(div)\n\ni = k\nwhile i > 0:\n\tj = i\n\twhile div[j] > 0:\n\t\tdiv[j] -= 1\n\t\tz = z[:-1]\n\t\tj -= 1\n\tans = min(ans, len(z))\n\ti -= 1\nprint(ans)\n"], "363": ["# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2020/8/3 15:46\n\n\"\"\"\n\n\ndef solve(a, b, n, x):\n\tif x == 0:\n\t\treturn b % 10 ** 9 + 7\n\tresult = pow(b, n - 1, 10 ** 9 + 7)\n\tresult %= MOD\n\tfor i in range(min(a, n), max(a, n) + 1):\n\t\tcur = (result * i) % MOD\n\t\tcur %= MOD\n\t\tresult = (cur * a) % MOD\n\treturn result\n\n\ndef main():\n\ta, b, n, x = [int(i) for i in input().split()]\n\tprint(solve(a, b, n + 1, x))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/19 21:52\n\n\"\"\"\n\nA, B, N, X = map(int, input().split())\nR = 10 ** 17\n\ndef calc(a, b):\n\tif b == 0:\n\t\treturn a * N % R\n\tc = (a * (a + 1)) % R\n\td = (b * max(a, b // 2)) % R\n\te = (b * a) % R\n\treturn c * d % R\n\nans = calc(A, N)\nprint(ans)\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/19 21:52\n\n\"\"\"\n\nMOD = 10**9 + 7\n\nA, B, N, X = [int(_) for _ in input().split()]\n\nR = B\n# S = [a % N for a in range(3001)]\nS = [0]\n#q = [i for i in range(30)]\nq = []\nfor i in range(1, 3001):\n\tS.append(S[-1] + B)\n\tq.append(i)\n\nfor n in range(1, N):\n\t# S[n] = S[n - 1] + a\n\tS[n] = S[n - 1] - A\n\nG = [[] for _ in range(N + 1)]\nr = B\ns = 0\n\nfor i in range(1, N + 1):\n\ta = R * S[i]\n\tfor j in range(N - 1, -1, -1):\n\t\ta = (a - S[j]) % MOD\n\t\tG[i].append(a)\n\t# print(G[i])\n\nfor g in G:\n\t# For each i in range(N):\n\t\t# G[i].append(g[i])\n\t\t# for j in range(i + 1, N):\n\t\t\t# g[i][j] = g[i][j - 1] - g[i][j]\n\t\t\t# print(g[i], g[i][j", "mod=10**9+7\n\ndef pow(a,n):\n\tres=1;\n\twhile(n):\n\t\tif(n&1):\n\t\t\tres=(res*a)%mod\n\t\ta=(a*a)%mod\n\t\tn>>=1\n\treturn res\n\ndef solve(a,b,n,x):\n\tif(x<=0):\n\t\treturn a*pow(b,n)%mod\n\telse:\n\t\tt=pow(b,n)\n\t\treturn (t*t)%mod+(a*t)%mod\n\na,b,n,x=list(map(int,input().split()))\nprint(solve(a,b,n,x))\n\n", "x, y, z, w = map(int, input().split())\nprint(pow(25, z - 1, 1000000007))\n", "# cook your dish here\nA, B, n, x = map(int, input().split())\n\np = 10**9+7\n\nfact = [1]*(x+1)\nfact[0]=1\nfor i in range(1,x+1):\n\tfact[i]=((fact[i-1]*i)%p)%p\ninv = [1]*(x+1)\ninv[0]=p\nfor i in range(1,x+1):\n\tinv[i]=((inv[i]*inv[i-1])%p)%p\n\ndef power(a,b):\n\treturn (fact[b]*inv[a-1])%p\n\nres = power(B,n)\n\n# print(power(4,3))\n# print(power(2,2))\n# print(power(1,1))\n\nprint(res)\n"], "364": ["import sys\n\ndef bsearch(str, l, r, x):\n\twhile l <= r:\n\t\tm = (l + r) // 2\n\t\tif str[m] == x:\n\t\t\treturn m\n\t\telif str[m] > x:\n\t\t\tr = m - 1\n\t\telse:\n\t\t\tl = m + 1\n\t\tprint(m)\n\ndef main():\n\tdef convert(x):\n\t\treturn int(x, 10)\n\tdef solve(x):\n\t\tif x == 0:\n\t\t\treturn 0\n\t\tif x == 1:\n\t\t\treturn 1\n\t\tans = bsearch(f'{convert(x)}, {x}', 0, len(str(x)), 2)\n\t\tif ans == len(str(x)):\n\t\t\treturn ans\n\t\tans = bsearch(f'{convert(x)}, {x}', 0, ans, 2)\n\t\tprint(ans)\n\t\treturn ans\n\n\tinput = sys.stdin.readline\n\tinput_arr = list(map(int, input().split()))\n\tx = input_arr[0]\n\tprint(solve(x))\n\nmain()\n", "s = int(input())\n\nfor i in range(s):\n\ta = int(input())\n\t\n\tprint(min(i + 1, a))\n", "def main():\n\tx = int(input())\n\tfor i in range(x, 0, -1):\n\t\tif i > x:\n\t\t\tbreak\n\t\tfor j in range(i, x):\n\t\t\ta = bin(j)[2:]\n\t\t\ta = a[::-1]\n\t\t\tb = (len(a) - 1) * '1' + a\n\t\t\tprint(b)\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "x=int(input())\nz=[]\nfor i in range(x):\n\tz.append(int(input()))\nfor i in z:\n\ta=i\n\ta=a+1 \n\tif a<=x:\n\t\tprint(a)\n", "from math import log2,ceil\n\ndef read_int():\n\treturn int(input())\n\ndef read_ints():\n\treturn list(map(int,input().split(' ')))\n\ndef solve(n,m,x):\n\tif n < m:\n\t\treturn x\n\telse:\n\t\treturn min(x, (m-n) // 2 + solve(n-1, m, x+m))\n\nn = read_int()\nm = read_int()\nprint(solve(n,m,n))\n", "#Note that it's python3 Code. Here, we are using input() instead of raw_input().\n#You can check on your local machine the version of python by typing \"python --version\" in the terminal.\n\ntry:\n\tx = int(input())\n\tfor i in range(x):\n\t\tprint(i+1)\nexcept:\n\tpass\n"], "365": ["from itertools import accumulate\n \nN,M = map(int, input().split())\nA = list(map(int, input().split()))\n \nX = [0] + list(accumulate(A))\n \nprint(sum([ pow(X[i], 2, 10**9 + 7) for i in range(1, N + 1) ]))\n", "# cook your dish here\nimport math\nn,m=map(int, input().split())\ndp=[[0]*(m+1) for _ in range(n+1)]\ndp[0][0]=1\nfor i in range(1,n+1):\n\tfor j in range(1,m+1):\n\t\tdp[i][j]=dp[i-1][j-1]+dp[i-1][j]\n\t\tdp[i][j]%=math.pow(10,9)+7\nprint(dp[n][m])\n", "from itertools import accumulate\n\nN, M = map(int, input().split())\nX = [list(map(int, input().split())) for _ in range(N)]\n\nS = 10**9 + 7\n\nans = 1\nfor i, x in enumerate(X):\n\ta = [0]\n\ta.extend(accumulate(x))\n\tfor j in range(i+1):\n\t\tans = (ans * a[j]) % S\n\nprint(ans)\n", "# cook your dish here\nn, m = list(map(int, input().split()))\na = list(range(m + 1))\ndz = []\nfor i in range(n + 1):\n\tnow = 0\n\tfor j in range(i + 1):\n\t\tnow += dp[j] * (m - a[j])\n\tdz.append(now)\n\nprint(sum(dp[-1] for dp in dz))  % (10 ** 9 + 7)\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/30 12:31\n\n\"\"\"\n\n\nN, M = list(map(int, input().split()))\n\nA = [0] * (M + 1)\n\na = [0] * (M + 1)\n\nfor i in range(N):\n\ta[i + 1] = 1\n\ns = 1\ni = 2\nwhile i <= M:\n\twhile i <= N:\n\t\ts += a[i] * a[i - 1]\n\t\ti += 1\n\ts %= M\n\ti += 1\n\nans = s\n\nfor i in range(M):\n\tans = (ans * (a[i])) % (10 ** 9 + 7)\n\nprint(ans)\n", "from sys import stdin,stdout\nfrom collections import defaultdict\ninput=stdin.readline\nprint=stdout.write\n\ndef power(a,b,p):\n\tr=1\n\twhile(b>0):\n\t\tif(b&1!=0):\n\t\t\tr=(r*a)%p\n\t\tb//=2\n\t\ta*=a\n\treturn r%p\n\nn,m=list(map(int,input().split()))\na=list(range(1,n+1))\np=10**9+7\ndp=defaultdict(list)\nans=0\nfor i in range(n):\n\tt=power(a,i,p)\n\tdp[t].append(i)\nfor i in dp:\n\tt=len(dp[i])\n\tfor j in range(t-1):\n\t\tans+=dp[i][j]\n\t\tans%=p\nprint(ans)\n"], "366": ["def main():\n\tn, p, t = list(map(int, input().split()))\n\tans = 0\n\tleft = 0\n\tfor _ in range(t):\n\t\tleft += (1 - p) ** 2\n\t\tans += left * p\n\t\tright += (1 - p) ** 2\n\t\tans += right * (p - 1)\n\tleft *= -1\n\tright *= -1\n\tprint(ans / (left + 1) * p)\n\nmain()\n", "a=list(map(int,input().split()))\nn=a[0]\np=a[1]\nt=a[2]\nr=0\nv=0\nfor i in range(t):\n\tv=v+((p-r)*(t-i))\n\tr=r+v\nprint(r)\n", "from math import factorial as f\n\nn, p, t = map(int, input().split())\n\ndays = 0\n\nk = 1\n\nans = 0\n\nfor i in range(1, t + 1):\n\tif i % 2 == 0:\n\t\tk *= f(p)\n\telse:\n\t\tk = f(k) // (f(p) * 2)\n\tdays += k\n\n\tans += days * (n - i + 1)\n\nprint(ans)\n", "import sys\n\n[n,p,t] = list(map(int,sys.stdin.readline().split()))\n\nn = 1\na = 1\n\nfor i in range(t-1):\n\tnum = n*(p+a-1)/(p+a) - t*n\n\tn += 1\n\ta *= -1\n\nprint(a)\n", "def main():\n\tn, p, t = list(map(int, input().split()))\n\tvec = [0] * (n + 1)\n\tfor _ in range(t):\n\t\tif vec[1] == 0:\n\t\t\tfor i in range(1, n + 1):\n\t\t\t\tvec[i] = (i - 1 + p * i) / (i - 1)\n\t\telse:\n\t\t\tfor i in range(1, n + 1):\n\t\t\t\tvec[i] = vec[i] - (vec[i - 1] + p * i) / (i - 1)\n\n\tprint(abs(float('inf') - vec[n]))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\n\ndef main():\n\tn, p, t = list(map(int, sys.stdin.readline().split()))\n\tif n == 0:\n\t\treturn 0\n\ts = 0.0\n\tfor _ in range(1, t + 1):\n\t\tif p * (1 - p) < 1e-6:\n\t\t\tbreak\n\t\ts += p * (1 - p)\n\tprint(s / (t + 1))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "367": ["import sys\ninput=sys.stdin.readline\n\nn,m=map(int,input().split())\nif(n==2 or m==2):\n\tprint(1)\n\treturn\nans=[[i,int((m/2+n/2)**2)]for i in range(n)]\nans.sort()\nfor i in range(len(ans)):\n\tprint(ans[i][0],ans[i][1])\n", "n, m = map(int, input().split())\nif m > n:\n\tprint(n)\n\treturn\nL = []\nfor i in range(m):\n\tx1, y1 = map(int, input().split())\n\tL.append((x1, y1))\n\nt = n - m + 1\nfor k in range(t):\n\tminxy = [(i, j) for i, j in zip(L, L[1:]) if i + j < n and i * n + j < m]\n\tL.append(minxy)\n\nL.sort()\n\ni = 0\nans = [-1] * n\nwhile i < len(L):\n\twhile i < len(L) and L[i][0] == i + 1:\n\t\ti += 1\n\tif i < len(L) and L[i][0]!= i:\n\t\tans[L[i][1]] = L[i - 1][0]\n\twhile i < len(L) and L[i][0] == i - 1:\n\t\ti += 1\n\tif i < len(L) and L[i][0]!= i + 1:\n\t\tans[i] = L[i][1]\n\ti += 1\n\nfor i in range(n):\n\tprint(ans[i], end=' ')\n", "def read_int():\n\treturn int(input())\n\n\ndef read_ints():\n\treturn list(map(int, input().split(' ')))\n\n\ndef read_intgrid():\n\treturn list(list(map(int, input().split(' ')) for _ in range(input()))\n\n\ndef read_strgrid():\n\treturn list(list(input().split(' ')) for _ in range(input()))\n\n\ndef print_beautiful(n, m, points):\n\tif n == 2 and m == 2:\n\t\tprint(n)\n\t\tprint(m)\n\t\treturn\n\n\ndef main():\n\tn, m = read_int()\n\tpoints = read_intgrid()\n\tminimum = [[] for i in range(n)]\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tminimum[i].append(tuple(sorted(points[i])))\n\tmin_v = 10 ** 6\n\tpoints.sort()\n\tfor i in range(n):\n\t\tx = points[i][0]\n\t\ty = points[i][1]\n\t\tfor j in minimum[i]:\n\t\t\tx2, y2 = y + j[0], x + j[1]\n\t\t\tif (x2 < min_v or y2 < min_v):\n\t\t\t\tmin_v = x2\n\t\t\t\tbreak\n\t\tprint_beautiful(n, m, [(x, y) for (x, y) in minimum[i]])\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n, m = [int(item) for item in input().split()]\n\nl = [[] for item in range(n + 1)]\nr = [0 for item in range(m + 1)]\n\nfor i in range(1, n + 1):\n\tl[i].append(i)\n\t\nfor i in range(1, m + 1):\n\tr[i].append(0)\n\nfor i in range(n):\n\tr[i].sort()\n\ndef check(l, r):\n\tfor i in range(1, n + 1):\n\t\tif r[i] > l[i - 1][0]:\n\t\t\treturn False\n\treturn True\n\n\nlo = -1\nhi = n\nwhile lo <= hi:\n\tmid = (lo + hi + 1) // 2\n\tif check(l, r):\n\t\tlo = mid\n\telse:\n\t\thi = mid - 1\n\t\nk_max = 1\nans = [(lo, hi)]\nfor i in range(k_max):\n\tx, y = r[i]\n\tif (x!= lo) and (y!= hi):\n\t\tans.append((x, y))\n\nwhile ans:\n\tx, y = ans.pop()\n\tif (x < lo) or (x > hi):\n\t\tans.append((x, y))\n\nprint(len(ans))\nprint(' '.join(map(str, ans)))\n\t\t\n", "import math\n\ndef main():\n\tn, m = [int(x) for x in input().split()]\n\tif n == m:\n\t\tprint(n)\n\telse:\n\t\tans = [[0] * n for _ in range(m)]\n\t\tfor i in range(m):\n\t\t\tfor j in range(n):\n\t\t\t\tif i == j: continue\n\t\t\t\tans[i][j] = 0\n\t\t\t\tif i * i > j:\n\t\t\t\t\tans[i][j] = j\n\t\tfor i in range(m):\n\t\t\tprint(ans[i][0], ans[i][1])\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def read_data():\n\tn, m = map(int, input().split())\n\tpoints = {}\n\tfor i in range(1, n+1):\n\t\tpoints[i] = [int(t) for t in input().split()]\n\treturn n, m, points\n\n\ndef solve(n, m, points):\n\tmin_x = m+1\n\tmin_y = n+1\n\tfor i in range(n):\n\t\tl = list(points.values())\n\t\tif l[-1][0] < l[-1][1]:\n\t\t\tl[-1][0] = l[-1][1] = min_x\n\t\tif l[-1][0] > l[-1][1]:\n\t\t\tl[-1][0] = l[-1][1] = min_y\n\n\tif min_x == m:\n\t\tfor i in range(n+1):\n\t\t\tprint(i, end=' ')\n\telif min_x < m:\n\t\tfor i in range(n):\n\t\t\tprint(i, end=' ')\n\n\telse:\n\t\tfor i in points:\n\t\t\tif i < min_x:\n\t\t\t\tprint(i, i*min_x+min_y)\n\t\t\telse:\n\t\t\t\tprint(min_x+i*min_y, i*min_x+i)\n\n\ndef __starting_point():\n\tinputs = read_data()\n\tsolve(inputs[0], inputs[1], points)\n__starting_point()\n"], "368": ["n=int(input())\na=list(map(int,input().split()))\ns=sum(a)\nm=0\nd=[]\nfor i in range(n//2):\n\td.append([])\n\tfor j in range(n):\n\t\td[i].append(a[j])\n\tm=s-m\nfor i in range(len(d)):\n\tif m!=0:\n\t\tif d[i][m]!=0:\n\t\t\tfor j in range(m):\n\t\t\t\ta[i]=d[i][m-j-1]\n\t\t\t\td[i][m]=0\n\t\t\tbreak\n\telse:\n\t\tfor j in range(len(a)):\n\t\t\ta[i]=d[i][j]\n\tprint(*a)\n\tm=0\n", "input()\na=list(map(int,input().split()))\na.sort()\nd=a[0]\nfor i in range(1,len(a)):d=a[i]*2\nprint(d,end=\" \")\nfor i in a:print(i,end=\" \")\n", "n = int(input())\na = list(map(int, input().split()))\nd = []\nfor i in range(n//2):\n\td.append([0]*n)\nfor i in a:\n\td[i][i] = 1\nfor i in range(n//2):\n\tfor j in range(i+1, n//2):\n\t\td[i+1][j] = d[i][j]\n\t\td[j+1][i+1] = d[i+1][j]\ncnt = 0\nfor i in range(1, n//2+1):\n\tfor j in range(i+1, n//2+1):\n\t\tcnt += d[i][j]\n\tif cnt%2:\n\t\tprint(i, end=' ')\n\t\tfor k in range(j+1, i+1):\n\t\t\tprint(k, end=' ')\n\t\tprint()\n\telse:\n\t\tprint(i, j, end=' ')\n\t\tfor k in range(j+1, i+1):\n\t\t\tprint(k, end=' ')\n\t\tprint()\n", "n=int(input())\na=[int(i) for i in input().split()]\ncnt=0\nd={}\nfor i in range(0,len(a)):\n\td[a[i]]=1\n\tcnt+=1\n# print(d)\nans=[0]*n\nif(cnt%2):\n\ta.sort()\n\tj=0\n\tfor i in range(0,len(a),2):\n\t\tans[i]=a[i]\n\t\tans[i+1]=a[i+1]\n\t\tj+=2\n\t\td[a[i]]-=1\n\t\td[a[i+1]]-=1\n# print(ans)\nfor i in ans:\n\tprint(i,end=' ')\n", "import math\nimport itertools\n\ndef divide(m):\n\tt = list(range(1,m+1))\n\ts = [0] * (m + 1)\n\ts[0] = t[0]\n\tfor i in range(1,m):\n\t\ts[i] = s[i-1] + t[i]\n\treturn s\n\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ts = sum(a)\n\tm = n//2\n\td = divide(m)\n\tfor i in range(m):\n\t\tprint(d[i], end=\" \")\n\tif s%2 == 0:\n\t\tfor i in a:\n\t\t\tprint(i, end=\" \")\n\telse:\n\t\tc = list(itertools.combinations(s[:m-1], m))\n\t\tfor i in c:\n\t\t\tprint(i[0], i[1])\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n = int(input())\na = list(map(int, input().split()))\nm = n // 2\nd = []\nfor i in range(m):\n\td.append([])\n\tfor j in range(i, m):\n\t\td[a[i] - a[j]].append(j + 1)\n\nresult = d[0]\n\nfor i in d[1:]:\n\tresult += i\n\nprint(result[0], end=' ')\nfor i in result[1:]:\n\tprint(i, end=' ')\n"], "369": ["n = int(input())\na, b = [], []\nfor i in range(n):\n\ta.append(list(map(int, input().split())))\n\tb.append((a[i][0] - 1, a[i][1] + 1))\n\na.sort()\nb.sort(reverse=True)\nans = 999999\ni = 0\nwhile len(a) > 0 and len(b) > 0:\n\tif b[i][0] == a[i][0]:\n\t\tb.pop(0)\n\t\tans = min(ans, a[i][1] + b[i][1])\n\telse:\n\t\ti += 1\n\nprint(ans)\n", "c=int(input())\nb=[]\nfor i in range(c):\n\tx,y=map(int,input().split())\n\tb.append((x,y))\nb.sort()\ni=0\nwhile len(b)>1:\n\ty,z=b.pop(0)\n\ti+=y\n\tif y+z>c:\n\t\tb.append((y+z,z))\n\telse:\n\t\ti+=z\nprint(i)\n", "def main():\n\tn = int(input())\n\tfor i in range(n):\n\t\ta, b = list(map(int, input().split()))\n\t\tif a > b:\n\t\t\ta, b = b, a\n\t\tif b > a + 2 * b:\n\t\t\tb += a + 2 * b\n\t\tif b > a * 2:\n\t\t\tb -= a * 2\n\t\tprint(b)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "3\n\nimport sys\n\nnum_opcodes = int(sys.stdin.readline())\n\ncode_intervals = [\n\t[0, 1001],\n\t[2, 1001],\n\t[3, 1001],\n\t[4, 1001],\n\t[5, 1001],\n\t[6, 1001],\n\t[7, 1001],\n\t[8, 1001],\n\t[9, 1001],\n\t[10, 1001],\n\t[11, 1001]\n]\n\ncode_values = [0] * 1001\n\nfor i in range(1, num_opcodes):\n\ts, d = code_ints(int(sys.stdin.readline()))\n\tcode_values[i] = s\n\n# print(code_values[1001])\n\nday = 0\nfor i in range(num_opcodes):\n\tprev_op = code_values[i - 1]\n\tday_diff = prev_op[0] - prev_op[1]\n\tdel code_ints(prev_op)\n\tnext_op = code_ints(int(sys.stdin.readline()))\n\tif next_op[0] < day_diff:\n\t\tday += next_op[1]\n\telse:\n\t\tprint(day)\n\t\tbreak\n\t\t\n", "import sys\n\ndef solve(matrix,i,visited):\n\tif i>=len(matrix):\n\t\treturn len(visited)\n\tvisited.append(i)\n\tfor j in range(i+1,len(matrix)):\n\t\tif matrix[j][0]>matrix[i][0]:\n\t\t\tvisited.append(j)\n\t\t\tbreak\n\t#print(visited)\n\tx = 1\n\tans = 0\n\twhile x < len(visited):\n\t\ty = visited.pop(0)\n\t\tif matrix[y][0]>matrix[i][0]:\n\t\t\tans+=1\n\t\telse:\n\t\t\tans+=min(matrix[y][0],matrix[i][0])\n\t\tx+=1\n\treturn ans\n\ndef main():\n\tn = int(input())\n\tmatrix = []\n\tfor i in range(n):\n\t\tmatrix.append(list(map(int,input().split())))\n\t#print(matrix)\n\tvisited = []\n\tfor i in range(n):\n\t\tvisited.append(i)\n\t#print(visited)\n\tprint(solve(matrix,0,visited))\n\treturn\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import math\nimport sys\n\ndef problem():\n\tn = int(input())\n\tx1 = []\n\ty1 = []\n\tfor i in range(n):\n\t\tline = [int(x) for x in input().split()]\n\t\tx1.append(line[0])\n\t\ty1.append(line[1])\n\t\n\tx = y = 0\n\td = 0\n\tfor i in range(n-1):\n\t\ta = x1[i]\n\t\tb = x1[i+1]\n\t\tc = y1[i]\n\t\td = y1[i+1] + 2*c\n\t\t\n\t\tif b < a:\n\t\t\tx += b\n\t\tif a < c:\n\t\t\ty += c\n\t\n\tprint(max(x,y))\n\ndef __starting_point():\n\tproblem()\n__starting_point()\n"], "370": ["a = int(input())\nif a%4 == 2:\n\tprint(-1)\nelse:\n\tprint(a-1)\n", "a = int(input())\nif a % 10 == 0:\n\tprint('1')\nelse:\n\tprint('9')\n", "a = int(input())\nif a > 0:\n\tprint(a)\nelse:\n\tprint(-1)\n", "a = int(input())\n\nif a % 9 == 0:\n\tprint(a)\nelse:\n\tprint(9)\n", "a=int(input())\nif a%3==0:\n\tprint(a//3)\nelif a%3==2:\n\tprint(a//3*2)\nelse:\n\tprint(a-1)\n", "a = int(input())\n\nprint(1 << a)\n"], "371": ["n = int(input())\nfor i in range(1, 100001):\n\tm = len(str(i))\n\tif sum(map(int, str(i))) == 10:\n\t\tprint(i)\n", "import sys\n\ndef input():\n\treturn sys.stdin.readline().rstrip()\n\ndef calc():\n\tfor i in range(63, -1, -1):\n\t\tif calc[i] == 1:\n\t\t\treturn i\n\ndef main():\n\tfor _ in range(int(input())):\n\t\tprint(calc())\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n=int(input())\nif n==1:\n\tprint(1)\nelif n==2:\n\tprint(2)\nelse:\n\tdef solve(n):\n\t\tif n==2:\n\t\t\tprint(1)\n\t\telif n%2==0:\n\t\t\tprint(2)\n\t\telse:\n\t\t\tans=2\n\t\t\twhile n%2==0:\n\t\t\t\tn//=10\n\t\t\t\n\t\t\tfor i in range(1,10):\n\t\t\t\tans*=i\n\t\t\t\n\t\t\tprint(ans)\n\tsolve(n)\n", "k = int(input())\n\nif k == 1:\n\tprint(1)\nelif k == 2:\n\tprint(25)\nelif k % 2 == 0:\n\tprint(29)\nelse:\n\tprint(28+1)\n", "k=int(input())\nlist1=[]\nfor i in range(1,k+1):\n\tlist1.append(i)\n\tj=1\n\twhile(j<=len(list1)):\n\t\ts=0\n\t\tfor l in list1:\n\t\t\ts+=l\n\t\tif(s==10):\n\t\t\tlist1.append(i)\n\t\tj+=1\n\tprint(list1[k-1])\n", "n=int(input())\nif n<=10:\n\tprint(\"9\")\nelse:\n\ta=list(range(1,n+1))\n\twhile len(a)!=0:\n\t\tif len(str(a[0]))==len(set(str(a[0])):\n\t\t\ta.pop(0)\n\t\telse:\n\t\t\tbreak\n\tx=10**a[0]\n\tprint(x)\n"], "372": ["def main():\n\tn = int(input())\n\tmaxi = 0\n\tlist_of_scores = {}\n\tfor i in range(n):\n\t\ta, b = list(map(int, input().split()))\n\t\tif a!= b:\n\t\t\tlist_of_scores[(a, b)] = 1\n\t\telse:\n\t\t\tif b not in list_of_scores:\n\t\t\t\tlist_of_scores[b] = 0\n\t\t\tlist_of_scores[b] += 1\n\t\tif list_of_scores[a]!= 0:\n\t\t\tif list_of_scores[a]!= 1:\n\t\t\t\tmaxi = max(maxi, list_of_scores[a])\n\t\telse:\n\t\t\tmaxi = max(maxi, 0)\n\tprint(maxi)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n=int(input())\narr=[]\nc=0\nm=0\nfor i in range(n):\n\ta,b=map(int,input().split())\n\tarr.append((a,b))\narr.sort()\nfor i in range(len(arr)-1):\n\tif arr[i][0]==arr[i+1][0]:\n\t\tc+=1\n\t\tm=max(m,c)\n\telse:\n\t\tbreak\nprint(m)\n", "class CodeforcesTask585ASolution:\n\tdef __init__(self):\n\t\tself.result = ''\n\t\tself.n = 0\n\t\tself.match = []\n\t\tself.mins = []\n\n\tdef read_input(self):\n\t\tself.n = int(input())\n\t\tfor x in range(self.n):\n\t\t\tself.match.append([int(x) for x in input().split(' ')])\n\t\tself.mins = [int(x) for x in input().split(' ')]\n\n\tdef process_task(self):\n\t\tresult = 0\n\t\tfor i in range(len(self.match) - 1):\n\t\t\tif self.match[i][0]!= self.match[i + 1][0]:\n\t\t\t\tresult += self.match[i][1] - self.match[i][0]\n\t\t\t\tif result > 0:\n\t\t\t\t\tself.mins[i + 1] = self.mins[i] + 1\n\n\t\tif result > 0:\n\t\t\tself.result += \"1\"\n\t\treturn result\n\n\tdef get_result(self):\n\t\tresult = 0\n\t\tfor i in range(len(self.mins)):\n\t\t\tresult += self.mins[i] - self.match[i][0]\n\t\treturn result\n\n\tdef display_result(self):\n\t\tif self.result > 0:\n\t\t\tself.result = \"1\"\n\t\tfor i in range(len(self.match)):\n\t\t\tif self.match[i][0]!= self.match[i + 1][0]:\n\t\t\t\tself.result = self", "n=int(input())\na,b=list(map(int,input().split()))\ns=set([0,0])\nc=0\nfor i in range(1,n):\n\ta,b=list(map(int,input().split()))\n\ts.add(a+b)\n\tif a+b in s:\n\t\ts.remove(a+b)\n\tif a+b-b in s:\n\t\ts.remove(a+b-b)\n\tif a-b in s:\n\t\ts.remove(a-b)\n\tif a-b+b in s:\n\t\ts.remove(a-b+b)\n\tif a-b-b in s:\n\t\ts.remove(a-b-b)\nif len(s)==0:\n\tprint(0)\nelse:\n\tc=0\n\tmx=0\n\tfor i in range(len(s)):\n\t\tif a-b+i in s:\n\t\t\tc+=1\n\t\tif a+b+i in s:\n\t\t\tc+=1\n\t\tif a-b-i in s:\n\t\t\tc+=1\n\t\tif a-b+i-i in s:\n\t\t\tc+=1\n\tmx=max(c,mx)\nprint(mx)\n", "N = int(input())\ncnt = 0\nm = -1\nfor i in range(N):\n\ta,b = map(int,input().split())\n\tif a > b:\n\t\tm = a\n\t\tcnt = 0\n\telif a == b:\n\t\tif m == -1:\n\t\t\tcnt += 1\n\telse:\n\t\tif m < 0:\n\t\t\tcnt += 1\nprint(cnt)\n", "def cal(a, b):\n\tcnt = 0\n\ta = (a-b+1)*10+b\n\t\n\tif a==b:\n\t\tprint(0)\n\t\treturn\n\t\n\tcnt += (a>b)*(a>b+1)\n\t\n\tcnt += (a==b)*(a==b-1)\n\t\n\tprint(cnt)\n\t\nn = int(input())\nc = 0\nm = 0\nfor i in range(n):\n\ta, b = map(int, input().split())\n\ta, b = a-1, b-1\n\tif a==b:\n\t\tc += 1\n\telse:\n\t\tcal(a, b)\n\t\tm = max(m, cal(a, b))\nprint(m)\n"], "373": ["import math\n\nn, d = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\n\nm = [int(i) for i in input().split()]\n\ntotal = 0\n\nfor i in range(m):\n\tleft = a[i]\n\tprice = 0\n\tif left > 1:\n\t\tfor j in range(left-1, -1, -1):\n\t\t\tprice += a[j]\n\t\t\tif left-j-1 > 0:\n\t\t\t\tbreak\n\ttotal += price \n\t\nprint(total)        \n", "def main():\n\tn, d = list(map(int, input().split()))\n\tl = list(map(int, input().split()))\n\tm = int(input())\n\tdp = list(map(int, input().split()))\n\t_min = min(l)\n\t_max = max(l)\n\tfor i in range(m - 1):\n\t\tif _min > dp[i]:\n\t\t\t_min = dp[i]\n\t\tif _max < dp[i]:\n\t\t\t_max = dp[i]\n\tanswer = 0\n\tfor i in range(n):\n\t\tanswer += _min * l[i]\n\tprint(answer)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import math\n\ndef main():\n\tn, d = list(map(int, input().split()))\n\ta = list(map(int, input().split()))\n\tm = int(input())\n\tresult = 0\n\tfor i in range(n):\n\t\tresult += min(a[i], d) * a[i]\n\tprint(result)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "import sys\n\ndef main():\n\tn, d = map(int, input().split())\n\tinput_arr = list(map(int, sys.stdin.readline().split()))\n\t#arr = input().split()\n\tm = int(input())\n\ttotal = 0\n\tarr = sorted(list(map(int, input().split())))\n\tj = 0\n\tn = len(arr)\n\tfor i in range(n):\n\t\tif i + 1 < n:\n\t\t\ttotal += (arr[j] - j) * d\n\t\t\tj = i + 1\n\tj = len(arr) - 1\n\tfor i in range(n + 1):\n\t\tif i - 1 > 0:\n\t\t\ttotal += (arr[j] - j) * d\n\t\t\tj -= 1\n\tprint(total)\n\nmain()\n", "def solution():\n\tn, d = list(map(int, input().split()))\n\ta = list(map(int, input().split()))\n\tm = int(input())\n\n\tanswer = 0\n\tleft = [[] for _ in range(n)]\n\tfor i in range(n):\n\t\tif m == 0:\n\t\t\tbreak\n\t\telif i not in left:\n\t\t\tleft[i].append(d)\n\t\t\tanswer += a[i]\n\t\t\tleft[i].sort()\n\t\telse:\n\t\t\tanswer -= left[i][-1] * a[i]\n\treturn answer\n\n\ndef __starting_point():\n\tprint(solution())\n\n__starting_point()\n", "import sys\nreadline = sys.stdin.readline\n\nfrom bisect import bisect_left as bl\n\nn, d = map(int, readline().split())\nline = [int(x) - 1 for x in readline().split()]\nm = int(readline())\nanswer = 0\nhooks = [0] * n\nrent = 0\nfor i in range(n):\n\tif not hooks[i]:\n\t\trent += line[i]\n\t\tcontinue\n\thooks[i] = bl(hooks[i], m - 1)\n\trent += line[i]\n\nprint(rent)\n"], "374": ["n=int(input())\n\nfor i in range(n):\n\tx=input()\n\tt=x.split('y')\n\ty=''\n\tfor j in t:\n\t\ty+='1'\n\ty+='1'\n\tprint(y[:-1])\n", "t=int(input())\nfor i in range(t):\n\ts=list(input())\n\ts.sort()\n\tprint(s[-1])\n", "def main():\n\tn = int(input())\n\tfor _ in range(n):\n\t\ta = input()\n\t\tfor c in a[::-1]:\n\t\t\tif c == '9':\n\t\t\t\ta = a[1:] + '0'\n\t\t\t\tbreak\n\t\telse:\n\t\t\tprint(a[0])\nmain()\n", "# coding=utf-8\n\ndef solve(s):\n\tf = []\n\tfor c in s:\n\t\tif c in f:\n\t\t\tf.remove(c)\n\t\telse:\n\t\t\tf.append(c)\n\treturn str(f[-1]) + '-' + str(s.count(f[-1]))\n\nn = int(input())\nwhile n:\n\ts = input()\n\tprint(solve(s))\n\tn -= 1\n", "n=int(input())\nsum=[]\nfor i in range(n):\n\tt=input()\n\tsum.append(t)\n#print(sum)\nfor i in sum:\n\tdiv=i[-1]\n\twhile(div<5):\n\t\tdel i[-1]\n\tj=div*10+i[-1]\n\t#print(i,j,sum[i:])\n\tprint(j)\n", "n=int(input())\nwhile n:\n\tt=input()\n\tif t[-3:]=='9':\n\t\tans=t[0]\n\t\twhile t[-3:]=='9':\n\t\t\tt=t[1:]\n\t\tans+='\\n'+t[0]\n\t\tn-=1\n\telse:\n\t\tans=t[0]\n\tprint(ans)\n\tn-=1\n"], "375": ["n,d=list(map(int,input().split()))\na=list(map(int,input().split()))\ns=0\nc=0\nfor i in a:\n\ts+=i\n\tif s>d:\n\t\tc+=1\n\t\ts=i\nif c>n-c:\n\tprint(n-c)\nelse:\n\tprint(c)\n\n", "n,d=map(int,input().split())\nx=list(map(int,input().split()))\nc=0\ni=0\nwhile i<n:\n\tif c<=d:\n\t\tbreak\n\telse:\n\t\tp=x[i]\n\t\tj=i+1\n\t\twhile j<n:\n\t\t\tif x[j]-p<=d:\n\t\t\t\tx.pop(j)\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tj+=1\n\t\tc+=1\n\ti+=1\nprint(c-1)\n", "n,d=map(int,input().split())\nt=list(map(int,input().split()))\np=0\nif n<=d:\n\tprint(n)\n\treturn\nwhile p<n:\n\tfor i in t:\n\t\tif i>p:\n\t\t\tp=i\n\t\t\tbreak\n\tt=t[1:]\n\tif len(t)<=d:\n\t\tbreak\nprint(p-1)\n", "[n,d]=[int(i) for i in input().split()];\nA=[int(i) for i in input().split()];\n#A.sort();\nif(n>2):\n\tj=2;\n\twhile(j<n):\n\t\ti=0;\n\t\twhile(i<n-j):\n\t\t\tif(A[i]>=d):\n\t\t\t\tbreak;\n\t\t\ti+=1;\n\t\telse:\n\t\t\tj=i+1\n\t#print(i,j);\n\tA=A[1:];\n\tZ=A[0:len(A)-1];\n\t#print(Z)\n\tcount=len(A)-1;\n\tfor i in range(len(A)):\n\t\tif(A[i]>=d):\n\t\t\tcount+=1;\n\tif(len(A)>1):\n\t\tk=len(A);\n\t\twhile(k>1):\n\t\t\tif(Z[0]>=d):\n\t\t\t\tbreak;\n\t\t\tk-=1;\n\t\t#print(k);\n\t\tprint(count);\n\t\t#break;\n\telse:\n\t\tprint(0);\n\n\t\n\t\t\t\t\n\t\t\t\n", "n, d = map(int, input().split())\narr = list(map(int, input().split()))\n\nans = float('inf')\ni = 0\nwhile i < n:\n\tj = i + 1\n\twhile j < n:\n\t\tif arr[i] - arr[j] > d:\n\t\t\tj += 1\n\t\telse:\n\t\t\ti = max(i, j)\n\t\t\tbreak\n\tans = min(ans, i - j)\n\ti += 1\n\nprint(ans)\n", "#!/usr/bin/env python3\n\nimport itertools\nimport collections\n\n\ndef main():\n\tn, d = list(map(int, input().split()))\n\tl = list(map(int, input().split()))\n\tp = l[:]\n\tl.sort()\n\tr = collections.defaultdict(list)\n\tfor i, c in enumerate(l):\n\t\tr[c].append(i)\n\t\t\n\tans = n-1\n\tfor c in r:\n\t\tidx = bisect.bisect(r[c], n)\n\t\tif idx < len(r[c]) and r[c][idx] - n <= d:\n\t\t\tans -= 1\n\t\t\tdel r[c][idx]\n\tprint(ans)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "376": ["def main():\n\tn = int(input())\n\ts = input()\n\tif \"no\" not in [True if sum(1 for _ in s) > n else False for _ in s] or len(s) == n:\n\t\tprint(\"YES\")\n\t\tprint(\" \".join(s))\n\telse:\n\t\tprint(\"NO\")\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n = int(input())\ns = input()\nif n == len(s):\n\tprint('YES')\n\tif s.islower():\n\t\tprint('NO')\nelse:\n\t\tprint('YES')\n\t\tlist = []\n\t\tcounter = 0\n\t\tfor letter in s:\n\t\t\tcounter += 1\n\t\t\tif counter > 2:\n\t\t\t\tlist.append(letter)\n\t\tif len(list) >= 2:\n\t\t\tprint('NO')\n\t\telse:\n\t\t\tprint('YES')\n\t\t\tprint(''.join(list))\n", "n=int(input())\ns=input()\nif n<=26:\n\tprint(\"YES\")\n\tif s.count(\"c\")<=2:\n\t\tprint(\"NO\")\n\t\tcontinue\n\tprint(\"YES\")\n\tfor i in range(len(s)):\n\t\tif s[i]!=s[i-1]:\n\t\t\tprint(\"NO\")\n\t\t\tbreak\n\telse:\n\t\tprint(\"YES\")\n\t\tfor i in range(len(s)-1):\n\t\t\tif s[i+1]==s[i] or s[i]==s[i+1]:\n\t\t\t\tprint(\"NO\")\n\t\t\t\tbreak\n\t\telse:\n\t\t\tprint(\"YES\")\n\n\t\n", "n=int(input())\ns=list(input())\ni=0\nc=0\nwhile i<n:\n\tcount=0\n\tfor j in range(i,n):\n\t\tif s[j]==s[i]:\n\t\t\tcount+=1\n\t\tif count>=n-i:\n\t\t\tbreak\n\t\ti+=1\n\tif i==n:\n\t\tc=1\n\t\tbreak\nif c==0:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n\t\t\n", "n = int(input())\ns = input()\nif set(s)==set(s):\n\tprint('YES')\n\tprint(''.join(s))\nelse:\n\tprint('NO')\n", "def main():\n\tN = int(input())\n\tS = input()\n\tif \"no\" not in [True if i > N - 1 else False for i in range(N - 1)] and \"yes\" not in [True if i > N - 2 else False for i in range(N - 2)] \\\n\t   and all([S.count(c) <= N - 3 for c in set(S)]]):\n\t\tprint(\"YES\")\n\t\tprint(\" \".join(list(map(str, list(S))))\n\telse:\n\t\tprint(\"NO\")\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "377": ["from decimal import *\n\ndef R(): return input().rstrip('\\n')\ndef R(): return list(map(int, input().split()))\ndef L(): return list(map(int, input().split()))\ndef S(): return input()\n\n\nw, m, k = R()\ns = [sum(10**p*i for p, i in enumerate(str(r))) for r in range(m-1, -1, -1)] + [0]\n\nprint(s[-1]*k)\n", "w, m, k = [int(s) for s in input().split()]\nt = 1\ns = 0\nd = False\nans = 0\nfor i in range(m, m + k, k):\n\tif not d:\n\t\ts += 1\n\t\tt *= 10\n\t\td = True\n\telse:\n\t\ts += t * (k - 1)\n\t\tif s >= k:\n\t\t\tans += 1\n\t\t\ts -= k * t\n\t\tt = 1\nprint(ans)\n", "def main():\n\tw, m, k = list(map(int, input().split()))\n\tnum = k * (m + 1)\n\tw += w * (m + 1) // 2\n\tm += 1\n\tq = [0]\n\twhile q:\n\t\tq = [c + w * i for i, c in enumerate(q) if c > 0]\n\t\tif len(q) > 1:\n\t\t\tq2 = []\n\t\t\tfor i in q:\n\t\t\t\tq2.append(q[i] - w * (m + 1 - i))\n\t\t\tq = q2\n\tprint(num - w * k)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def main():\n\tw, m, k = list(map(int, input().split()))\n\tret = 0\n\tfor _ in range(m - 1, -1, -1):\n\t\tret += 9 * pow(10, _ + 1)\n\t\tif ret >= w:\n\t\t\tbreak\n\tprint(ret)\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "from itertools import accumulate\n\ndef S(n):\n\treturn n + sum(map(int, str(n))) * k\n\nw, m, k = [int(s) for s in input().split()]\ns = S(m)\nprint(w + s * k)\n", "w,m,k=list(map(int,input().split()))\ns=0\nc=0\nfor i in range(m):\n\tc=c+1\n\ts=s+pow(10,i)\n\tk=k*m+c\nans=0\nif w:\n\ti=1\n\twhile True:\n\t\tif i+k>=m:\n\t\t\tbreak\n\t\tans=ans+pow(i,2)\n\t\ti+=1\n\t\t\nprint(ans)        \n"], "378": ["n = int(input())\n\nx, y, and ans = 0, 0, 0\n\nfor i in range(n):\n\ta = i\n\twhile a <= n:\n\t\tif x and not (a == 0 or y):\n\t\t\tbreak\n\t\ta += x\n\t\tx, y = (a%10 and a>=10 and y) or (a%10==0 and a>=9 and y)\n\tans += y\n\nprint(ans)\n", "n = int(input())\n\ndef f(x):\n\treturn len(str(x)) - (x > 0)\n\nprint(10 * (f(0) + f(8) + f(6))\n", "n=int(input())\n\nx, y, l=0, 0, 0\n\nfor i in range(1, 10):\n\tif i%2==0:\n\t\tx+=1\n\telse:\n\t\ty+=1\n\t\tl+=(x*10+y)\n\nprint(l)\n\n", "n = int(input())\n\ndef f(x):\n\ttmp = x\n\tseven = 0\n\teight = 0\n\tfor i in range(len(str(tmp))):\n\t\tif tmp[i] == '7' and str(tmp[i])!= '9':\n\t\t\tseven += 1\n\t\tif tmp[i] == '8' and str(tmp[i])!= '8':\n\t\t\teight += 1\n\tif seven + eight == len(str(tmp)) - 1:\n\t\treturn 0\n\treturn 1\n\n\nans = 0\nfor i in range(1, n + 1):\n\tif f(i):\n\t\tans += 1\n\nprint(ans)\n", "n = int(input())\na = 0\nfor i in range(1, n + 1):\n\tfor j in range(1, 10):\n\t\ta += (j * (j - 1)) // 2\nprint(a)\n", "n = input()\nresult = 0\nfor i in range(len(n)):\n\tif n[i] == '8' and n[i+1] == '9':\n\t\tfor j in range(i+2, len(n)):\n\t\t\tif n[j] == '1' and n[j-1] == '0':\n\t\t\t\tcontinue\n\t\t\telse:\n\t\t\t\tbreak\n\t\telse:\n\t\t\tfor j in range(i+1, len(n)):\n\t\t\t\tif n[j] == '0' and n[j-1] == '1':\n\t\t\t\t\tcontinue\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tbreak\n\t\t\t\t\n\t\tif i!= len(n) - 1:\n\t\t\tresult += 1\n\t\t\nprint(result)\n"], "379": ["x,y,a,b = list(map(int,input().split()))\nsa = abs(a-b)\nprint(x*sa + y*sa)\n", "x, y, a, b = list(map(int, input().split()))\nl, r = 0, x\nwhile r < a:\n\tif (l + r - 1) % 2!= 0:\n\t\tprint(a - l)\n\t\tbreak\n\tl, r = l + r, (l + r) // 2\n", "x, y, a, b = [int(s) for s in input().split()]\nbrick = 1\nwhile brick <= b:\n\tbrick += (y-1)\n\tif a*brick <= b:\n\t\tprint(a*brick)\n\telse:\n\t\tprint(2*brick+1)\n", "x,y,a,b = list(map(int,input().split()))\nans = (y-1) * (a) - x * (b-y)\nprint(ans)\n", "x, y, a, b = map(int, input().split())\np = b-a+1\nr = x*(a-1)\nfor i in range(y,b):\n\tif i%2:\n\t\tr+=i//2\n\telse:\n\t\tr+=(i//2)*2\nprint(r)\n", "x,y,a,b = list(map(int, input().split()))\n\np = []\nq = []\nfor i in range(1,b+1):\n\tp.append(i*a)\nfor i in range(1,a+1):\n\tq.append(i*(b-i)//(a-i))\n\nprint(sum(p)*max(q))\n"], "380": ["n, m = map(int, input().split())\nif n % 2:\n\tprint(-1)\nelse:\n\ta = m * (n - 1)\n\twhile a > 0:\n\t\tif a % m == 0:\n\t\t\tprint(a // m)\n\t\t\tbreak\n\t\ta -= 1\n", "#!/usr/bin/env python\n\ndef main():\n\tn, m = list(map(int, input().split()))\n\tseq = 0\n\twhile True:\n\t\ttry:\n\t\t\tseq += m\n\t\t\tif seq % m == 0:\n\t\t\t\tbreak\n\t\texcept:\n\t\t\tprint(-1)\n\t\t\tbreak\n\nmain()\n\n", "a, b = list(map(int, input().split()))\ns = min(m, b * (a + b))\nwhile s % m!= 0:\n\ts += b\n\nprint(s) if s > 0 else -1\n", "N, M = list(map(int, input().split()))\n\nif M % 2!= 0:\n\tprint(-1)\nelse:\n\ta = list(range(1, N + 1))\n\tc = 0\n\tfor i in a:\n\t\tx = (i - 1) // M\n\t\tt = 0\n\t\twhile t < x:\n\t\t\tt += 1\n\t\t\tx = (x + t) // 2\n\t\tif x % M == 0:\n\t\t\tprint(i)\n\t\t\tbreak\n\n\t\n", "# input the two passed numbers\n#res = 0\n#asd = input()\n#input()\n#lookup = {}\n#array = list(map(int,input().split()))\n#for i in range(len(array)):\n#     lookup[array[i]] = 1\n#     res = res + lookup[array[i]]\n\nn,m = list(map(int,input().split()))\n#print(n)\n#print(m)\n\nif (m%(n+1))==0:\n\tprint(0)\nelse:\n\tf = True\n\tans = 0\n\tclimbing = 0\n\twhile True:\n\t\tif (n+climbing-1)%(m+1)==0:\n\t\t\tprint(n+climbing-1)\n\t\t\tf = True\n\t\t\tbreak\n\t\tclimbing = climbing + 1\n\t\tans = ans + climbing\n\t\tprint(ans)\n\t\tif (n!=0 and m!=0):\n\t\t\tprint(\"-1\")\n\t\t\tf = False\n", "n, m = [int(i) for i in input().split()]\n\nif n%m == 0:\n\tprint(-1)\nelif (n / m) % 2 == 1:\n\tprint(-1)\nelse:\n\tprint(m*(n / m)+min(m, n%m))\n"], "381": ["def main():\n\tn = int(input())\n\tif n == 1:\n\t\tprint (\"1\")\n\t\treturn\n\tr = (n ** 2 - 1) * 2\n\tr += 1\n\tprint(r)\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def main():\n\timport sys\n\tinput = sys.stdin.readline\n\n\tN = int(input())\n\tif N == 1:\n\t\tprint(N*4)\n\t\treturn\n\n\tr = int(N**0.5)\n\tif r * r == 2*N:\n\t\tprint(r*2)\n\telif N == 2:\n\t\tprint(r*4)\n\t\treturn\n\trr = (r+r-1) // 2\n\trr = rr + (N-r)*2\n\tprint(r*r+rr)\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n", "N = int(input())\na = (4 * N - 1) ** 2 + 3\nb = (4 * N - 1) ** 2 + 3\nprint(max(a,b))\n", "def read_int():\n\treturn int(input())\n\n\ndef read_ints():\n\treturn list(map(int, input().split(' ')))\n\n\ndef read_str():\n\treturn input().strip()\n\n\ndef read_str_split():\n\treturn list(input().split(' '))\n\n\ndef error_print(*args):\n\tprint(*args, file=sys.stderr)\n\n\ndef mt(f):\n\timport time\n\n\tdef wrap(*args, **kwargs):\n\t\ts = time.time()\n\t\tret = f(*args, **kwargs)\n\t\te = time.time()\n\n\t\terror_print(e - s,'sec')\n\t\treturn ret\n\n\treturn wrap\n\n\n# Function to find'min' in an array or a set\ndef find_min(arr):\n\ts = []\n\tfor i in arr:\n\t\tif i < min(arr):\n\t\t\ts.append(i)\n\treturn s\n\n\n# Function to find'max' in an array or a set\ndef find_max(arr):\n\ts = []\n\tfor i in arr:\n\t\tif i > max(arr):\n\t\t\ts.append(i)\n\treturn s\n\n\n# A function to calculate'sum' in an array or a set\ndef sum(arr):\n\treturn sum(arr)\n\n\n# A function that uses randomization to find the 'end goal' in an array or a set\ndef goal(arr):\n\tx = random.randint(0, len(arr) - 1)\n\ty = random.randint(0, len(arr) - 1)\n\ts = 0\n\tfor j in range(len(arr)):\n\t\ts +=", "def shortest_path(n, s, e):\n\tdist = [inf] * n\n\tdist[s] = 0\n\tdist[e] = 0\n\tq = [(0, s)]\n\twhile q:\n\t\td, s = heapq.heappop(q)\n\t\tif d > e:\n\t\t\tfor i in range(s, s + e):\n\t\t\t\tdist[i] = d\n\t\tfor i in range(s + e, s + e - d):\n\t\t\tdist[i] = min(dist[i], d + 1)\n\t\theapq.heapreplace(q, (dist[e], e))\n\treturn dist[0]\n\ndef __starting_point():\n\tn = int(input())\n\tprint(shortest_path(n, 0, 0))\n__starting_point()\n", "from math import sqrt\n\ndef perimeter():\n\tn = int(input())\n\tif n == 1:\n\t\tprint(1)\n\telse:\n\t\tr = (n * 2) - 1\n\t\tp = (r * 2) + 1\n\t\tprint(max(p, perimeter()) + 2 * r)\n\ndef __starting_point():\n\tperimeter()\n\n__starting_point()\n"], "382": ["from sys import stdin\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\n\n#stdin.readline()\n#a,b,c,d=map(int,stdin.readline().split())\n\nn=max(list(map(int,stdin.readline().split())))\nx=[]\ny=[]\nz=[]\na,b,c,d=list(map(int,stdin.readline().split()))\nfor i in range(1,n+1):\n\tx.append(i*i)\n\ty.append(i*i)\n\tz.append(i*i)\nx.sort()\ny.sort()\nz.sort()\ncount=0\nif n%2!=0:\n\tcount+=len(x)+len(y)+len(z)\nelse:\n\tcount+=len(x)+len(y)+len(z)\nfor i in range(len(x)):\n\tfor j in range(i+1,len(x)):\n\t\tp=x[i]\n\t\tq=y[j]\n\t\tfor k in range(j+1,len(x)):\n\t\t\tq=q*x[k]*y[j]*z[k]\n\t\t\tif p!=q:\n\t\t\t\tcount+=1\nprint(count)\n", "import math\nA, B, C, D = list(map(int, input().split()))\n\nans = 0\nfor i in range(1, 6001):\n\ta = i\n\tfor j in range(i-1, -1, -1):\n\t\tfor k in range(j+1, i+1, +1):\n\t\t\tif A[j] <= A[i] and B[k] <= B[j]:\n\t\t\t\tans += 1\n\t\ta = (a + 1)\n\nprint(ans)\n", "a, b, c, d = map(int, input().split())\n\nif a * b * c == d:\n\tprint(a * b * c - d * c)\n\nif a * b * c > d:\n\tprint(a * b * c - d * b)\n\nprint(a * b * d + a * c * d)\n", "a=list(map(int,input().split()))\na.sort()\ncount=0\nfor i in range(a[0]+a[1],a[2]+a[3]:\n\tfor j in range(i[0]+i[1],i[2]+i[3]):\n\t\tfor k in range(j[0]+j[1],j[2]+j[3]):\n\t\t\tif i[1]*i[2]*i[3]<=a[0]*a[1]*a[2]*a[3]:\n\t\t\t\tcount+=1\nprint(count)\n", "import math\n\na, b, c, d = map(int, input().split())\nn = ((a + c) * (b + d) * (c + b)) // 2\nres = sum(1 for a, b, c, d in ((math.factorial(a) // math.factorial(b)), ((math.factorial(c) // math.factorial(d))), ((math.factorial(a) * math.factorial(b)) * math.factorial(c)) if (a, b, c, d)!= (1, 1, 1))\nprint(res)\n", "a, b, c, d = map(int, input().split())\nif a > c:\n\ta, b, c, d = b, c, d\nif b > d:\n\tb, c, d = c, d, b\nans = a * b * c * d\nfor i in range(1, (a - 1) // 2 + 1):\n\tif (a + i * b) <= (b + i * c):\n\t\tans += (a + i) * (b + i)\nprint(ans)\n"], "383": ["# cook your dish here\ntry:\n\tl, a, b, m = map(int, input().split())\n\ts = [int(i) for i in input().split()]\n\tdiff = b - a * (l - 1)\n\tfor i in range(l):\n\t\ts[i] += s[i + 1]\n\tif len(s) > 1:\n\t\tprint(s[0] % m)\n\telse:\n\t\tprint(0)\nexcept:\n\tpass\n", "import math\n\ndef mod(a,b):\n\tx = 1\n\ty = a\n\twhile(b>0):\n\t\tif(b%2 == 1):\n\t\t\tx = (x*y)%((10**(b//2)))\n\t\ty = (y*y)%((10**(b//2)))\n\t\tb /=2\n\treturn x%((10**(b//2)))\n\nl,a,b,m=map(int,input().split())\nprint(mod(l,a))\n", "# import sys\n# sys.stdin = open('input.txt', 'r') \n# sys.stdout = open('output.txt', 'w')\n# import math\nfrom math import gcd,sqrt,ceil\n# import decimal\nimport fractions\nimport bisect\n\n# print(f'a={[int(i) for i in input().split()]}')\n# print(f'b={[int(i)-1 for i in input().split()]}')\n\n# mod = 1000000007\n# def convert(a,b):\n#     tar = a*b\n#     return str(tar[0:int(len(tar))])+tar[int(len(tar)-1):])\n\n# import sys\n# sys.stdin = open('input.txt', 'r') \n# sys.stdout = open('output.txt', 'w')\n# import math\nfrom math import floor,ceil,sqrt,log\n\n# print(f'a={[int(i) for i in input().split()]}')\n# print(f'b={[int(i) for i in input().split()]}')\n\n\n# a,b,m = input().split()\n\n# lo = -1\n# hi = len(a)\n# for i in range(len(a)):\n#     lo = a[i]\n#     hi = len(a)-1-i\n# res = []\n# if(lo%m==0):\n#     res.append(lo%m)\n# else:\n#     res.append((lo%m+hi%m)*(hi-lo%m))\n# for i in range", "L,A,B,M = map(int,input().split())\nmod = 1000000007\ns = [int(i) for i in input().split()]\ns.append(B)\nif len(s)>2:\n\tfor i in range(1,len(s)):\n\t\ts[i] += s[i-1]\nout = 0\ns.pop()\nfor i in range(len(s)):\n\tout = (out + s[i])%mod\n\t\nprint(out)\n", "def abc(l,i):\n\tr=len(l)\n\tans=(pow(l[0],r))\n\tfor j in range(i,r):\n\t\tans=(ans*l[j])%q\n\treturn ans\n\t\nl=list(map(int,input().split()))\na=l[0]\nb=l[1]\nm=l[2]\nq=len(abc(l,a))\nprint(abc(l,b)%m)\n", "mod = 10**9\n\ndef div(l):\n\treturn sum(int(not i%2) * (not i%2) for i in l)\n\t\nl = input().split()\nl = [int(i) for i in l]\na, b = div(l[0])\nm = div(l[1])\n\nprint(((a * m + b * div(b))%mod))\n"], "384": ["t=int(input())\nfor you in range(t):\n\tn=int(input())\n\tl=input().split()\n\ta=[]\n\tfor i in range(n):\n\t\ta.append(int(l[i]))\n\ta.sort()\n\tfor i in range(n-1,-1,-1):\n\t\tif a[i]!=a[i+1]:\n\t\t\ta.append(a[i])\n\t\t\tbreak\n\ta.reverse()\n\tposs=0\n\tans=[-1]*n\n\tfor i in range(2*n):\n\t\tif a[i]<a[i+1]:\n\t\t\tposs=1\n\t\t\tans[i]=a[i]\n\tif poss==0:\n\t\tprint(-1)\n\telse:\n\t\tprint(*ans)\n", "t = int(input())\nfor _ in range(t):\n\tn = int(input())\n\tb = list(map(int, input().split()))\n\ta = [0] * (n + 1)\n\tfor i, b_i in enumerate(b):\n\t\ta[b_i] = i + 1\n\tb = list(reversed(b))\n\tfor i, b_i in enumerate(b):\n\t\tif a[i] > b_i:\n\t\t\tprint(-1)\n\t\t\tbreak\n\telse:\n\t\ta.sort()\n\t\tprint(*a)\n", "def solve():\n\tn = int(input())\n\tb = list(map(int, input().split()))\n\tminv = min(b)\n\tb.remove(minv)\n\tif minv == b[0]:\n\t\tprint(-1)\n\t\treturn\n\tl = [0 for i in range(n)]\n\tfor i in range(n):\n\t\tl[b[i]] = i+1\n\tif minv > 1:\n\t\tprint(-1)\n\t\treturn\n\tprint(*l)\nfor _ in range(int(input())):\n\tsolve()\n", "import sys\nimport math\nimport itertools\nimport functools\nimport collections\nimport operator\nimport fileinput\nimport copy\n\nORDA = 97              # a\ndef ii(): return int(input())\ndef mi(): return list(map(int, input().split()))\ndef li(): return list(mi())\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef revn(n): return str(n)[::-1]\ndef dd(): return collections.defaultdict(int)\ndef ddl(): return collections.defaultdict(list)\ndef sieve(n):\n\tif n < 2: return list()\n\tprime = [True for _ in range(n + 1)]\n\tp = 3\n\twhile p * p <= n:\n\t\tif prime[p]:\n\t\t\tfor i in range(p * 2, n + 1, p):\n\t\t\t\tprime[i] = False\n\t\tp += 2\n\tr = [2]\n\tfor p in range(3, n + 1, 2):\n\t\tif prime[p]:\n\t\t\tr.append(p)\n\treturn r\ndef divs(n, start=1):\n\tr = []\n\tfor i in range(start, int(math.sqrt(n) + 1)):\n\t\tif (n % i == 0):\n\t\t\tif (n / i == i):\n\t\t\t\tr.append(i)\n\t\t\telse:\n\t\t\t\tr.extend([i, n // i])\n\treturn r\ndef divn(n, primes):\n\tdivs_number = 1", "import sys\ninput = sys.stdin.readline\nfrom heapq import heappop as hpp, heappush as hp\nfor _ in range(int(input())):\n\tn=int(input())\n\tb=list(map(int,input().split()))\n\thpp(b,0)\n\thp(b,0)\n\tans=[]\n\tc=1\n\tfor i in range(n):\n\t\tif b[i]<b[i+1]:\n\t\t\tans.append(b[i])\n\t\t\tc+=1\n\tif c:\n\t\tans.append(b[-1])\n\tif c>2:\n\t\tans.append(b[0])\n\tprint(*ans)\n", "def solve():\n\tn = int(input())\n\tb = list(map(int, input().split()))\n\tmin_arr = [b[0]] + [b[i] for i in range(1, n)]\n\tif min_arr == min_arr[::-1]:\n\t\tprint(-1)\n\t\treturn\n\tid = sorted(list(range(n)), key=lambda i: b[i])\n\tif b[-1] < min_arr[0]:\n\t\tprint(-1)\n\t\treturn\n\tb.reverse()\n\tid.reverse()\n\ti = 0\n\twhile i < n:\n\t\tif b[i] < min_arr[i]:\n\t\t\tb[i], id[i] = min_arr[i], id[i]\n\t\t\ti += 1\n\t\telse:\n\t\t\tb[i], id[i] = id[i], b[i]\n\t\t\ti += 1\n\tprint(*id)\n\nt = int(input())\nwhile t > 0:\n\tt -= 1\n\tsolve()\n"], "385": ["def main():\n\tn = int(input())\n\tl = list(map(int, input().split()))\n\tq = []\n\tfor i, x in enumerate(l):\n\t\twhile q and l[q[-1]] > x:\n\t\t\tq.pop()\n\t\tq.append(i)\n\tq.sort()\n\n\tk = len(q)\n\tm = sum(l)\n\tfor i in range(k - 1):\n\t\tm = min(m, q[i] - q[i + 1])\n\tprint(m)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "3.4\n\nn = int(input())\nl = list(map(int, input().split()))\n\nsum = 0\nfor i in range(n):\n\tfor j in range(i + 1, n):\n\t\tsum += l[j]\n\nprint(sum)\n\n", "n=int(input())\na=list(map(int,input().split()))\nc=a[0]\nfor i in range(1,n):\n\tc=c+a[i]\n\t\na.sort()\ns=0\nfor i in range(n):\n\ts+=a[i]*c\n\nprint(s)\n", "def main():\n\tinput()\n\taa = sorted(map(int, input().split()))\n\tmin_x = float('inf')\n\tfor _, x in aa:\n\t\tmin_x = min(min_x, x)\n\tprint(min_x * len(aa))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "def main():\n\tinput()\n\taa = sorted(map(int, input().split()))\n\tans = aa[0]\n\tm = ans\n\tfor a, b in zip(aa[1:], aa[2:]):\n\t\tm = min(m, a - b)\n\tprint(m)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "from fractions import gcd\nfrom functools import reduce\na=list(map(int,input().split()))\ns=a[0]\nr=0\nfor i in range(1,len(a)):\n\tr+=a[i]-a[i-1]\n\tgcd=reduce(gcd,a[i:])\n\ts=min(gcd,r)\nprint(s)\n"], "386": ["import sys\n\ndef powmod(a,b,p):\n\tx = 1\n\ty = a\n\twhile (p!= 0):\n\t\tif (p&1):\n\t\t\tx = (x*y)%p\n\t\ty = (y*y)%p\n\t\tp >>= 1\n\treturn x\n\ndef power(x,n,p):\n\tif (n == 0):\n\t\treturn 1\n\telif (n == 1):\n\t\treturn x\n\telif (x == n):\n\t\treturn power(x,n//2,p)%p\n\telse:\n\t\ttemp = power(x,n//2,p)%p\n\t\tpower(x,n//2,p)\n\t\ttemp = power(temp,n,p)%p\n\t\treturn temp\n\nn,k = [int(x) for x in input().split()]\ndp = [[0 for j in range(k)] for i in range(2*n)]\n\nif (k == 0):\n\tfor i in range(2*n):\n\t\tif i <= k:\n\t\t\tdp[i][0] = 1\nelse:\n\tfor i in range(2*n):\n\t\tfor j in range(1,k+1):\n\t\t\t#print(i,j)\n\t\t\tif i+j > k:\n\t\t\t\tcontinue\n\t\t\t#print(i+j)\n\t\t\tdp[i+j][0] = dp[i][0] + dp[i+j][1] \n\tfor j in range(1,k+1):\n\t\tfor i in range(2*n):\n\t\t\t", "import sys\nimport math\ninput=sys.stdin.readline\n\nn,k=list(map(int,input().split()))\n\nMOD=998244353\n\ndp=[[0]*(k+2) for i in range(n+2)]\n\ndp[0][0]=1\n\nfor i in range(1,n+2):\n\tdp[i][0]=0\n\tdp[i][1]=1\n\tfor j in range(2,k+2):\n\t\tdp[i][j]=dp[i-1][j-2]+dp[i-1][j]\n\t\tdp[i][j]%=MOD\n\nprint(dp[n][k])\n", "mod=998244353\nn,k=list(map(int,input().split()))\nif k<=n:\n\td=n-k*2\n\tb=d%mod\n\tf=d\n\tt=1\n\tfor i in range(1,b+1):\n\t\tt*=i\n\tt%=mod\n\tc=(t*(t+1))%mod\n\tif i<b:\n\t\tt-=1\n\tsum=(b*t*2-t)%mod\n\tsum%=mod\n\tfor i in range(1,f+1):\n\t\tsum+=(b*t*2-t+i*t)%mod\n\tsum%=mod\n\tprint((sum*pow(n,mod-2,mod))%mod)\nelse:\n\td=n-k*2+1\n\tb=d%mod\n\tf=d\n\tt=1\n\tfor i in range(1,f+1):\n\t\tt*=i\n\tt%=mod\n\tfor i in range(1,b+1):\n\t\tt*=i\n\tt%=mod\n\ta=(t*(t+1))%mod\n\tsum=(a*t*2-a)%mod\n\tsum%=mod\n\tfor i in range(1,b+1):\n\t\tsum+=(a*t*2-a+i*t)%mod\n\tsum%=mod\n\tprint((sum*pow(n,mod-2,mod))%mod)\n", "import sys\n\nsys.setrecursionlimit(100000)\n\ndef dfs(r, c, k):\n\t#print(r, c, k, '*')\n\tres += 1\n\ttemp = 1\n\tr += 2\n\twhile r < n and temp <= k:\n\t\t#print(r, \\\"*')\n\t\tif r == n-1 and c == n-1:\n\t\t\tbreak\n\t\t#rrght\n\t\tif c < r or r < c:\n\t\t\ttemp += 1\n\t\t#print(temp, 'rrght')\n\t\tr += 3\n\t#print(r, '*')\n\tif temp <= k:\n\t\t#print(\\\"haha\\\")\n\t\tres += dfs(r+2, c+2, k-temp)\n\t\t#print(res)\n\treturn res\n\ndef main():\n\tn, k = list(map(int, input().split()))\n\t#n = 200001\n\t#k = 800001\n\n\tMOD = 998244353\n\tif k > n:\n\t\tprint(0)\n\t\treturn\n\n\tdp = [[0 for _ in range(n)] for _ in range(k+1)]\n\n\tdp[0][0] = 1\n\tdp[1][1] = 1\n\n\tfor _ in range(2, k+1):\n\t\t#print(dp)\n\t\tfor r in range(1, n):\n\t\t\t#print(dp[r])\n\t\t\tdp[r][0] += dfs(r-1, c-1, 1)\n\n\t\t\t#print(dp[r])\n\t\t\tdp[r][1] += dfs", "#=================MAIN=======================#\nimport sys\nimport math\nimport bisect\nfrom collections import Counter, defaultdict\nfrom heapq import heappush, heappop\nimport time\nsys.setrecursionlimit(1000000000)\ndef II(): return int(sys.stdin.readline())\ndef ILI(): return list(map(int, sys.stdin.readline().split()))\ndef IAI(LINE): return list(map(int, sys.stdin.readline().split()))\ndef IDI(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(LINE): return list(map(int, sys.stdin.readline().split()))\ndef SI(): return sys.stdin.readline()[:-1]\nmod=998244353\n\n# from math import*\n# from bisect import*\n\ndef solve():\n\tn,k=II()\n\t# print(n,k)\n\t# c=0\n\t# if k==0:\n\t#     print(n)\n\t#     return\n\t# q=[{}]\n\t# d=dict()\n\t# if n==3:\n\t#     print(n//3)\n\t#     return\n\t# if k==1:\n\t#     print(n//2)\n\t#     return\n\t# v=[{}]\n\t# a=1\n\t# for q[a][k]:\n\t#     print(q[a][k])\n\t#     print(\\\"a=\\\",a)\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve():\n\tn,k=mints()\n\tif n<=3:\n\t\tprint(0)\n\t\treturn\n\t\n\tdp=[[0 for j in range(n)] for i in range(4)]\n\tdp[2][1]+=1\n\tfor i in range(3,n):\n\t\tif i>=3 and i%2==0:\n\t\t\tdp[i][0]+=dp[i-2][i][0]\n\t\t\tdp[i][1]+=(dp[i-2][i][1]*2)\n\t\telif i>=3 and i%2==1:\n\t\t\tdp[i][1]+=dp[i-2][i][1]\n\t\t\tdp[i][0]+=dp[i-1][i][0]\n\n\tMOD=998244353\n\tfor i in range(4):\n\t\tdp[i][0]%=MOD\n\t\tdp[i][1]%=MOD\n\t\n\tans=0\n\tfor i in range(4):\n\t\tfor j in range(n):\n\t\t\tans+=dp[i][j]\n\t\tans%=MOD\n\t\n\tprint(ans)\n\n\nsolve()\n"], "387": ["def is_valid(mid):\n\ti = 1\n\twhile i < n:\n\t\tif mid % 2 == 1:\n\t\t\tif (i + mid // 2) % 3 == 0:\n\t\t\t\treturn False\n\t\t\telse:\n\t\t\t\treturn True\n\t\telse:\n\t\t\tif (mid + i // 2) % 3 == 0:\n\t\t\t\treturn False\n\t\t\telse:\n\t\t\t\treturn True\n\t\ti += 1\n\treturn True\n\n\nn = int(input())\nl = input().split()\nl = [[int(i), j] for i, j in l]\nl = sorted(l)\nmid = (n - 1) // 3\ntp = [0 for i in range(mid)]\n\nif is_valid(mid):\n\ttp[mid // 3] = 1\n\nans = []\n\nfor i in range(mid):\n\ttp[i] = l[i][1]\n\tif tp[i] == 1:\n\t\tans.append([l[(i + mid)//3], i + 1])\n\nif len(ans) == 0:\n\tprint(-1)\nelse:\n\tprint(*ans)\n", "n = int(input())\na = list(map(int, input().split()))\nres = []\nfor i in range(n):\n\tif a[i] % 3!= 0:\n\t\tres.append(str(a[i] // 3))\nfor i in range(len(res)):\n\tif res[i] == '-1':\n\t\tres.append('-1')\n\telse:\n\t\tres[i] = res[i].lstrip() +''\nif res[0] == '-1':\n\tprint(-1)\nelse:\n\tprint(' '.join(res))\n", "n = int(input())\na = list(map(int, input().split()))\nans = [[False] * (n + 1) for i in range(3)]\na.sort()\nfor i in range(n // 3):\n\tj = n - i\n\tif a[i] == a[i + 1] or a[i] == a[i + 2]:\n\t\tj += 1\n\tans[a[i]][j] = True\nfor i in range(3):\n\tfor j in range(i + 1, n):\n\t\tans[i][j] = ans[i][j - 1] or ans[i - 1][j]\nif any(ans[i]):\n\tprint(-1)\nelse:\n\tprint(*ans[2:])\n", "# TODO: complete\n# only work in 3.6+ because of mod\ntry:\n\tX = [3**i for i in range(27)]\n\tres = [[X[i] for i in range(3)] for k in range(27)]\n\t\n\tt = (3**2 + 3)//6\n\tfor i in range(t):\n\t\tai, bi = i*3, (i+1)*3\n\t\tfor j in range(i+1, 3):\n\t\t\tai_j = ai + j\n\t\t\tif ai_j%3 == 0:\n\t\t\t\tai.append(ai_j)\n\t\t\t\tbij = bi + j\n\t\t\t\tif bij%3 == 0:\n\t\t\t\t\tbi.append(bi_j)\n\t\t\t\tif 3*(ai+bi) <= t:\n\t\t\t\t\tres[ai][bi] = -1\n\t\n\tif all(res[i][j] == -1 for i in range(27) for j in range(3)]):\n\t\tprint(-1)\n\telse:\n\t\tg = sorted(list(set(res[i])))\n\t\tm = 3\n\t\tfor i, j in enumerate(g):\n\t\t\tm = 3*j+i\n\t\t\tif m == t:\n\t\t\t\tprint(i, end='')\n\t\t\t\tprint(' '.join([str(i+k) for k in g[i:]]))\n\t\t\t\tbreak\n\t\telse:\n\t\t\tprint(-1)\n\t\t\t\t\nexcept:\n\tpass\n", "n = input()\narr = input().split()\ncnt = 0\narr = list([int(x) for x in arr])\nif len(arr) % 3!= 0:\n\tprint(-1)\nelse:\n\tarr = [[(y % 3) for y in arr]]\n\tccnt = 0\n\tlast = (2 * cnt + 3) // 3\n\twhile ccnt < last:\n\t\tx = (arr[ccnt][0] + 2 * cnt) // 3\n\t\tif x == 1:\n\t\t\tfor i in range(ccnt, last):\n\t\t\t\tarr[i][1] = arr[i][2] = arr[i][3] = 1\n\t\telif x == 2:\n\t\t\tfor i in range(ccnt, ccnt + 3):\n\t\t\t\tarr[i][1] = arr[i][2] = arr[i][3] = 1\n\t\telse:\n\t\t\tfor i in range(ccnt, (ccnt + 3) // 3):\n\t\t\t\tarr[i][1] = arr[i][2] = arr[i][3] = 1\n\t\tccnt += 1\n\tfor i in range(last):\n\t\tprint(' '.join(map(str, arr[i])))\n", "n = input()\nA = list(map(int, input().split()))\n\nB = [0] * 3\nfor i in A:\n\tB[i % 3] = i\n\nif B[0] == B[1] + 1:\n\tprint(-1)\n\treturn\n\nfor i in range(1, n // 3 + 1):\n\tif B[i]:\n\t\tj = i * 3\n\t\tt = [B[j]]\n\t\tk = [i]\n\t\tA[i] = B[j]\n\t\twhile j < n:\n\t\t\tt.append(A[j])\n\t\t\tk.append(j)\n\t\t\tj = t[-1]\n\t\tA[i] = B[j] + 2 * k[-1]\n\t\twhile len(t) >= 3:\n\t\t\tif len(t) % 3 == 1:\n\t\t\t\tB[k[-1]] = B[t[0]]\n\t\t\telse:\n\t\t\t\tB[t[0]] = B[k[-2]]\n\t\t\t\tt.pop()\n\t\t\tk.pop()\n\t\tprint(*[B[i]])\nelse:\n\tprint(-1)\n"], "388": ["from collections import Counter\nimport string\ns = input()\nc = Counter(s)\nprint(len(c) == 1 and c['a'] > 1 or c['b'] > 1 and c['c'] > 1)\n", "s=input()\no=set()\nc=0\nfor i in range(len(s)-1):\n\tif s[i]==s[i+1]:\n\t\tc+=1\n\telse:\n\t\to.add(c)\n\t\tc=0\nif c>0:\n\tprint(2)\nelse:\n\tprint(max(o)+1)\n", "import sys\n\ns = input().strip()\n\nsize = len(s)\n\naccNum = 0\n\nfor c in s:\n\tif accNum < len(s):\n\t\taccNum += 1\n\t\tif s[accNum] == c:\n\t\t\tcontinue\n\telse:\n\t\tbreak\n\t\n#! /usr/bin/env python\n\ndef power(x, y):\n\tif y == 0:\n\t\treturn 1\n\tif x == 0:\n\t\treturn 0\n\tif (y & 1) == 1:\n\t\treturn x * power(x, y - 1)\n\telse:\n\t\treturn x * power(x, y // 2)\n\nresult = 0\n\nfor i in range(size):\n\ttmp = s[i]\n\tif tmp == accNum:\n\t\tresult += 1\n\nif result >= 1:\n\tprint(result)\nelse:\n\tprint(result + 1)\n", "s = input()\nif set(s)=={'z'}:\n\tprint(2)\n\treturn\nc = 0\nst=[]\nfor i in range(len(s)):\n\tif s[i]=='c':\n\t\tc+=1\n\t\tif len(st)>=c:\n\t\t\tbreak\n\t\tst.append(c)\nif len(st)>=c:\n\tprint(2)\n\treturn\nprint(len(st))\n", "s = input()\ncur = 'abcde'\ni = 0\nwhile i<len(s):\n\tif s[i] in cur:\n\t\ti+=1\n\t\tcontinue\n\tif s[i]!=cur[0]:\n\t\tcur = s[i]\n\t\ti+=1\nprint(i)\n", "s=list(input())\nn=len(s)\nord={c:i for i,c in enumerate(s)}\n\ndef f(c):\n\treturn ord[c]>=n\n\nfor c in range(len(s)):\n\tif f(s[c]):\n\t\tn-=1\n\t\tif n==0:\n\t\t\tbreak\n\t\tp=n\n\t\twhile True:\n\t\t\tif ord[s[c]]>=f(s[c+1]):\n\t\t\t\tn+=1\n\t\t\t\tif n==n:\n\t\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tp=n\n\t\t\t\tbreak\n\nprint(p)\n"], "389": ["import sys\ninput = sys.stdin.readline\nn, k = map(int, input().split())\nif k == 1:\n\tprint(n)\n\treturn\nb = b + 1\na = 3 * b // 3\nfor c in range(min(a, k // 4)):\n\tif c * a > k:\n\t\ta += 1\n\tb += 2 * c\nprint(b)\n", "import sys\n\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\ndef main():\n\tn, k = map(int, input().split())\n\tprv = prv ** 2 + 1\n\tfor i in range(k // prv):\n\t\tprv += i * 3\n\tprint(prv // 6)\n\nmain()\n", "import math\n\ndef main():\n\tn,k = list(map(int,input().split()))\n\tr = int(k/n)\n\tg = int(k/r)\n\tb = int(k/g)\n\ta = int(k/b)\n\t\n\tans = int(math.ceil(n*r*g*b))\n\tprint(ans)\n\nmain()\n\n", "n,k=list(map(int,input().split()))\na=k*5\nif k%2==0:\n\ta-=n\nelse:\n\tk=k//2\n\ta-=(k*5)\n# print(a)\nprint(a)\n", "import sys\nimport math\nfrom collections import defaultdict,deque\nimport heapq\ns = sys.stdin.readline\nt = int(s())\nfor i in range(t):\n\tn,k=list(map(int,s().split()))\n\tif n==k:\n\t\tprint(1)\n\t\tcontinue\n\tif k==5:\n\t\tprint(k*2+k)\n\t\tcontinue\n\ta = (k-4)*5\n\tb = (k-3)*4\n\tc = (k-2)*3\n\ta1 = (k-1)*2\n\tprint(int(a+a1+b+c))\n", "n, k = map(int, input().split())\nnum = 0\nfor i in range(k):\n\tnum += 5\n\tnum *= 3\nans = num * (n - k) // 5\nprint(ans + k*(k-1)//2)\n"], "390": ["a = list(map(int, input().split()))\nn = a[0]\nm = a[1]\nb = list(map(int, input().split()))\nc = [0] * (m + 1)\nfor i in range(m):\n\tif b[i] > n:\n\t\tc[b[i]] += 1\n\nprint(max(c))\n", "import sys\n\ndef solve():\n\tn, m = map(int, input().split())\n\taa = list(map(int, input().split()))\n\twaiting = [0] * n\n\tfor i in range(n):\n\t\tif i + 1 < n:\n\t\t\twaiting[i + 1] = i * m\n\t\t\t\n\tans = 0\n\tfor i in range(n):\n\t\tans += max(waiting[i] - i * m, 0)\n\tprint(ans + n - max(waiting))\n\nsolve()\n", "from sys import stdin as s\n\ndef work():\n\tn, m = list(map(int, s().split()))\n\taa = list(map(int, s().split()))\n\n\tsett = [False] * n\n\tcusummi = [0]\n\tcusumma = [0]\n\n\tfor a in aa:\n\t\tif sett[a - 1]:\n\t\t\tcusumma[a - 1] += 1\n\t\telse:\n\t\t\tsett[a - 1] = True\n\n\t\tcusummi[a] += a\n\t\tcusumma[a] += 1\n\n\tans = 0\n\tfor i in range(n):\n\t\tr = min(cusumma[i], cusummi[i])\n\t\tans += r\n\t\tif r + cusumma[i] <= m:\n\t\t\tr += cusumma[i]\n\t\t\tans -= r\n\n\ts(0)\n\n\treturn ans\n\ndef __starting_point():\n\twork()\n\n__starting_point()\n", "def main():\n\tn, m = list(map(int, input().split()))\n\taa = list(map(int, input().split()))\n\tss = sorted(aa)\n\tans = 0\n\tp = [0] * n\n\tfor i, a in enumerate(ss):\n\t\tif p[a]:\n\t\t\tj = p[a]\n\t\t\tans += j\n\t\t\tp[j] = n + i\n\t\telse:\n\t\t\tp[a] = i\n\tprint(ans)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "n, m = map(int, input().split())\nar = list(map(int, input().split()))\n\nif m < n:\n\tprint(m * n - 1)\nelse:\n\tguys = [ar[0]]\n\tfor elem in ar[1:]:\n\t\tguys += [elem + guy for guy in guys]\n\tprint(len(guys))\n", "from sys import stdin, stdout\n\ndef main():\n\tn, m = list(map(int, stdin.readline().split()))\n\taa = list(map(int, stdin.readline().split()))\n\tans = max(n, m)\n\tfor _ in range(ans):\n\t\tq = [0] * m\n\t\tcnt = 0\n\t\tfor i in aa:\n\t\t\twhile len(q) and cnt < ans:\n\t\t\t\tq.pop(0)\n\t\t\t\tcnt += i\n\t\t\tq.append(i)\n\t\tprint(max(q))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n"], "391": ["a, b, c, d = list(map(int, input().split()))\nr = a * b * c\nif d * d == r:\n\tprint(r)\n\treturn\nr = r % d\nprint(r)\n", "from fractions import gcd\nfrom functools import reduce\na, b, c, d = map(int, input().split())\nprint(reduce(gcd, [a * d / (c * b) + b * d / (a * c)]) // a)\n", "#-*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/19 21:52\n\n\"\"\"\n\n\n# python 3.8.1 (default, Nov 25, 2020)\n# DCT = collections.defaultdict(int)\n# DCT[\"n=4\"] = 1\n# res = float(\"inf\")\n# for i in range(2, 1001):\n#     DCT[i] = DCT[i - 1] * i // 2 + (DCT[i - 1] - DCT[i]) * i % 1\n#     res = min(res, DCT[i])\n\n# def ceil(a, b) :  # a, b are big enough numbers\n#     return (a + b - 1) // b\n\n# def isPowerOfTwo (x) :  # just checks whether 2 ** 32 - 1 (or 2 ** 32 - 2) is an integer\n#     return (x & (x - 1)) == 0\n\n# M = 1000 + 7\n# pf(M) = primefactors(M)\n# pf(M) = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229,", "def gcd(a,b):\n\twhile b:\n\t\tt=b\n\t\tb=t%a\n\t\ta=t\n\treturn a\n\ndef lcm(a,b):\n\treturn (a*b)//(gcd(a,b))\n\ndef g(a,b,c,d):\n\tif c==d:\n\t\treturn b\n\telse:\n\t\treturn gcd(a,b)/(gcd(a,c)*gcd(b,d))\n\ndef __starting_point():\n\ta,b,c,d=list(map(int,input().split()))\n\tr=lcm(a,b)/a\n\tv=r*lcm(a,c)/d\n\tprint(str(g(a,b,v,d))+\"/\"+str(v))\n__starting_point()\n", "\n\nfrom fractions import gcd\n\na, b, c, d = map(int, input().split())\nfrm = (a * c) / (b * d)\nto = (b * d) / (c * a)\n\nprint(frm % to)\n", "#dt = {} for i in x: dt[i] = dt.get(i,0)+1\nimport sys;input = sys.stdin.readline\n#import io,os; input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline #for pypy\ninp,ip = lambda :int(input()),lambda :[int(w) for w in input().split()]\n\nimport fractions\nfrom fractions import Fraction\n\na,b,c,d = ip()\nprint(Fraction(a,b)//Fraction(c,d)).gcd(a,b)\n"], "392": ["n = int(input())\ns = input()\ncount = 0\nfor i in range(1, n):\n\tif s[i] == s[i - 1]:\n\t\tcount += 1\nprint(count)\n", "import sys\n# sys.stdin = open('input.txt', 'r') \n# sys.stdout = open('output.txt', 'w')\n\nn = int(input())\ns = input().strip()\nres = 0\nprev = s[0]\nfor i in range(n-1):\n\tif s[i+1]!= prev:\n\t\tres += 1\n\telse:\n\t\tprev = s[i+1]\n\nprint(res)\n", "n = int(input())\ns = input()\ni = 0\nans = 0\nwhile i < n:\n\tif s[i] == s[i + 1]:\n\t\tans += 1\n\ti += 1\nprint(ans)\n", "n = int(input())\ns = input()\n\nans = []\n\ncnt = 0\nfor i in range(n-1):\n\tans.append(s[i])\n\tif s[i+1] == 'R':\n\t\tcnt += 1\n\nprint(cnt)\n", "n = int(input())\ns = input()\n\na = [0] * n\nb = [0] * n\nfor i in range(n):\n\tif s[i] == 'R':\n\t\ta[i] = 1\n\telif s[i] == 'G':\n\t\tb[i] = 1\n\telse:\n\t\tb[i] = 1\n\nans = a[n - 1]\nfor i in range(n - 2, -1, -1):\n\tif s[i] == 'R':\n\t\tans += 1\n\telif s[i] == 'G':\n\t\tans += 1\n\telse:\n\t\tans += 1\n\nprint(ans)\n", "n = input()\nstring = input()\nstring_list = list(string)\nans = [string_list.index(x) for x in range(len(string))]\nif ans == []:\n\tprint(0)\nelse:\n\ti = 0\n\twhile i < len(ans)-1:\n\t\tif i == 0:\n\t\t\tans[i] = string_list[i]\n\t\telse:\n\t\t\tans[i] = ans[i-1] + 1\n\t\ti += 1\n\tprint(min(ans))\n"], "393": ["x = int(input())\nans = 0\nfor i in range(5, x+4):\n\tans += i\nprint(ans)\n", "def solve():\n\tpos = 0\n\tsteps = 0\n\twhile True:\n\t\tfor i in range(-5, 2, -1):\n\t\t\tif pos + i < 0:\n\t\t\t\tbreak\n\t\t\tpos += i\n\t\telse:\n\t\t\treturn steps\n\t\tsteps += 1\n\ndef __starting_point():\n\tx = int(input())\n\tprint(solve())\n__starting_point()\n", "x = int(input())\nsteps = 0\npos = 0\nwhile x > 0:\n\tif x % 2:\n\t\tsteps += 2\n\t\tx -= 1\n\telse:\n\t\tsteps += 1\n\t\tx = x // 2\n\nprint(steps)\n", "n = int(input())\nif n == 0:\n\tprint(0)\nelse:\n\tdef a(i, j):\n\t\tif i > j:\n\t\t\treturn i + (2 * j - i)\n\t\treturn min(a(i + 1, j), a(i, j + 1), a(i + 2, j))\n\tprint(a(0, n - 1))\n", "x = int(input())\nans = 0\nnxt = [0, x - 1, x + 1, 0]\nfor i in range(6):\n\tans += nxt[i]\n\tnxt = nxt[:i] + [max(nxt[i], x)] + nxt[i + 1:]\nprint(ans)\n", "x = int(input())\nstep = 0\nr = 0\nwhile x > 0:\n\tfor i in range(5):\n\t\tif x == i:\n\t\t\tr += i\n\t\t\tbreak\n\tx -= r\n\tstep += 1\nprint(step)\n"], "394": ["def main():\n\timport sys\n\tinput = sys.stdin.readline\n\tfrom collections import Counter\n\tc = Counter(tuple(map(int, input().split())) for _ in [0]*int(input()))\n\tif c['n'] == 0:\n\t\tprint(0)\n\t\treturn\n\tres = 0\n\tc['n'] = 90\n\tfor t in sorted(c.keys()):\n\t\tres += (t - c['n'])*(c['n'] - t)\n\tprint(res)\n\nmain()\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve():\n\tn = mint()\n\tt = list(mints())\n\tcur = 0\n\tfor i in range(0,n):\n\t\tif i+1 < n:\n\t\t\tif t[i]+t[i+1] <= 90:\n\t\t\t\tcur += t[i]\n\t\telse:\n\t\t\tbreak\n\tprint(cur)\n\nsolve()\n", "import sys\n\nn = int(input())\nt = list(map(int, input().split()))\n\nif n <= 90:\n\tprint(min(t))\n\treturn\n\nboredom_counter = 0\nboredom_stack = []\nfor boring in t:\n\tif boredom_counter < boring:\n\t\tboredom_counter += 1\n\t\tboredom_stack.append(boredom_counter)\n\n\telse:\n\t\tpass\n\nboredom = sum(boredom_stack)\n\nprint(boredom)\n", "n = int(input())\nt = [0] + list(map(int, input().split()))\n\nfor k in range(1, n + 1):\n\tfor i in range(1, 90):\n\t\tt[i] += t[i - 1]\n\t\tif t[i] >= k:\n\t\t\tbreak\n\nprint(min(t))\n", "import math\n#r,c = map(int,input().split())\nr = int(input())\nc = 0\nL = [int(i) for i in input().split()]\nfor i in range(1,91):\n\tif L[i] >= L[i-1]:\n\t\tL[i] = L[i-1] + L[i] - L[i-2]\n\telse:\n\t\tL[i] = L[i-1]\n\tc += (L[i] - L[i-1])\nprint(c)\n", "n = int(input())\nt = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(1,n):\n\tif t[i] - t[i-1] <= 30:\n\t\tcnt += 1\n\nprint(min(cnt, 90 - n))\n"], "395": ["s=input()\nk=int(input())\nprint(len(s)-(s[len(s)-k:]))\n", "s=input()\nn=int(input())\ns=s+s[:n-len(s)//2]\nprint(len(s))\n", "s = input()\nn = int(input())\ns = s + s[:n-len(s)//2]\nprint(max(len(s), len(s)+n-len(s)//2))\n", "s = input()\nk = int(input())\nt = s[:k]\nprint(max(max(t), len(t) - k + 1))\n", "s = input().strip()\n\nk = int(input())\n\nnum = []\n\nfor i in range(len(s)):\n\tnum.append(s[i:i+k])\n\ntotal = len(num)\n\ndist = []\n\nfor i in range(len(s)):\n\tif s[i:i+k] in num:\n\t\tdist.append(i - num.index(s[i:i+k]))\n\nprint(max(dist))\n", "s=input()\nc=0\nm=len(s)\nfor i in range(m-1):\n\tif s[i]==s[i+1]:\n\t\tc+=1\n\telse:\n\t\tc=0\nprint(max(c,m-c-1))\n"], "396": ["import sys\ninput = sys.stdin.readline\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.append(-1)\n\tcur = 0\n\tmi = [0]*n\n\tmi[0] = a[0]\n\td = {0:-1}\n\tfor i in range(1,n):\n\t\tcur += 1\n\t\tmi[i] = cur-mi[i-1]\n\t\tif cur not in d:\n\t\t\td[cur] = i\n\tif len(d) == 1:\n\t\tprint(mi[-1])\n\t\treturn\n\t\n\tans = 0\n\tfor i in range(n-1):\n\t\tcur -= mi[i+1]\n\t\tnext = cur + mi[i]\n\t\tif next > a[i+1]:\n\t\t\tnext -= a[i+1]\n\t\tans = max(ans, next)\n\tprint(ans)\n\n\n\nmain()\n", "def go():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\n\tslimes = []\n\tidx = 1\n\twhile idx < n:\n\t\tif a[idx] == a[idx - 1]:\n\t\t\tslimes.append(a[idx])\n\t\telse:\n\t\t\tslimes.append(a[idx - 1] - a[idx])\n\t\t\tidx += 1\n\n\tif len(slimes) == 1:\n\t\tif a[-1]!= a[0]:\n\t\t\tslimes.append(0)\n\t\telse:\n\t\t\tslimes.append(a[0] - a[-1])\n\t\t\tidx -= 1\n\treturn max(slimes)\n\ninput()\n", "n = int(input())\na = list(map(int, input().split()))\na = [-1 if i > 0 else i for i in a]\nans = 0\nmi = float(\"-inf\")\nj = 0\nfor i in range(1, len(a)):\n\tif a[i]!= -1:\n\t\tmi = max(mi, a[i] - a[j])\n\t\tj += 1\n\t\tans = max(ans, a[i] - mi)\nmi = float(\"inf\")\nj = len(a) - 1\nfor i in range(len(a) - 2, -1, -1):\n\tif a[i]!= -1:\n\t\tmi = max(mi, a[i] - a[j])\n\t\tj -= 1\n\t\tans = max(ans, a[i] - mi)\nprint(ans)\n", "def calc(m):\n\tif m == 0:\n\t\treturn 0\n\tif m == 1:\n\t\treturn 1\n\treturn max(a*(m-1) + a for a in range(1, m+2))\n\nn = int(input())\na = list(map(int, input().split()))\na = [-1*i for i in a]\nm = len(a)\nn = n - 1\nprint(calc(m))\n", "n = int(input())\na = list(map(int, input().split()))\na = [0] + a\n\nc = 0\nf = [0] * (n + 1)\n\ni = 0\nwhile c < n:\n\tif a[i]!= 0:\n\t\tf[c] = 1\n\t\tc += 1\n\t\ti += 1\n\telse:\n\t\tc += 1\n\nmx = 0\nfor i in range(1, n + 1):\n\tif f[i] == 1:\n\t\tmx = max(mx, a[i])\n\t\tf[i] = 0\n\nprint(mx)\n", "n = int(input())\na = list(map(int, input().split()))\na = [-x for x in a]\ncur = a[0]\nmi = 0\nfor i in range(1, len(a)):\n\tif a[i] == cur:\n\t\tmi = max(mi, i)\n\telse:\n\t\tcur = a[i]\nif mi == 0:\n\tprint(cur)\nelse:\n\tprint(mi+1)\n"], "397": ["n = int(input())\ns = input()\n\nnum = []\nfor c in range(0, n):\n\tnum.append(1 << (ord(s[c]) - 48))\n\ncnt = 0\nfor mask in num:\n\ttemp = mask\n\ttemp ^= mask\n\tcnt += 1\n\nprint(cnt)\n", "import sys\n\nN = int(sys.stdin.readline())\nA = [ord(x)-ord('a') for x in sys.stdin.readline().split()]\n\ns = 0\ns1 = []\ns2 = []\n\nfor c in A:\n\ts += c\n\ts1.append(s)\n\ts2.append(s)\n\nresult = len(set([x^y for x, y in zip(s1, s2)]))\n\nprint(result)\n", "n = int(input())\ns = input()\ncnt = [0] * 1000020\nans = 0\nfor c in s:\n\tcnt[ord(c) - ord('0')] += 1\nfor k in range(2, 1001):\n\tfor c in range(26):\n\t\tcnt[ord(chr(c)) - ord('0')] += cnt[ord(c) - ord('0')]\n\t\tif cnt[ord(chr(c)) - ord('0')] == k:\n\t\t\tans += 1\nprint(ans)\n", "N = int(1e5+3)\nA = [None] + [int(x) for x in input().split()]\nB = []\nfor i in range(N):\n\tb = 1 << i\n\tt = A[i]\n\tB.append((b<<t)-(b<<(t+1))-1)\nans = 0\nfor c in range(1,N):\n\tcur = 0\n\tfor i in range(N):\n\t\tcur = (cur<<A[i])^A[i]\n\t\tif cur > 0: ans += 1\n\tif cur > 0: break\nprint(ans)\n", "#  =========                   |       |            |\n#                       |            |\n#                      |           |\n#                      |          |\n#  ========= /           /          /      |     |     |\n#  code\n#   ========= /           /        /      |     |     |\n#    code\n\nimport sys\ninput=sys.stdin.readline\n\nn=int(input())\ns=list(input())\ns=list(map(int,s))\narr=[0 for j in range(n)]\nfor j in range(n):\n\tarr[j]=s[j]\ncnt=0\nfor j in range(n):\n\tx=arr[j]\n\tv=x^s[j]\n\tif v==0:\n\t\tcnt+=1\nprint(cnt)\n", "n=int(input())\na=list(map(int,input()))\nb=0\nans=0\nfor j in range(n):\n\tb^=a[j]\n\tif b==0:\n\t\tans+=1\n\t\tb^=1\nprint(ans)\n"], "398": ["\nimport math\nimport sys\n#sys.stdin=open(\"data.txt\")\ninput=sys.stdin.readline\nt,s,q=list(map(int,input().split()))\n# t=1\nans=[]\nfor i in range(t):\n\tans.append(s)\n\t# print(ans)\n\t\n\nwhile q:\n\tt-=1\n\ts=t-(s<t//q)\n\tif s!=0:\n\t\tt-=1\n\t\t\n\tfor i in range(t-s+1):\n\t\tans.append(s+i*q)\n\t\n\t\nprint(len(ans))\n\n\t\t\n\n", "from sys import stdin, stdout\nimport math,sys,os,time,copy,bisect\nfrom heapq import heappush,heappop\nfrom collections import defaultdict as dd,Counter\nfrom itertools import permutations,combinations\nmod=1000000007\ndef I(): return int(stdin.readline().rstrip())\ndef MI(): return map(int,stdin.readline().rstrip().split())\ndef LI(): return list(map(int,stdin.readline().rstrip().split()))\ndef LI2(): return list(map(int,stdin.readline().rstrip()))\ndef S(): return stdin.readline().rstrip()\ndef LS(): return stdin.readline().rstrip().split()\ndef LS2(): return list(map(str,stdin.readline().rstrip().split()))\ndef FILL(i,h): return [i for i in range(h)]\ndef FILL2(i,h,w): return [i for i in range(h,w)]\ndef FILL3(i,h,w,m): return [i for i in range(w) if i<m]\ndef FILL4(i,h,w,m,n): return [i for i in range(h,m)]\ndef mod=1000000007\ndef main():\n\tmod=1000000007\n\tt,s,q=MI()\n\tstart=0\n\tans=0\n\tfor i in range(t):\n\t\tif q>0:\n\t\t\tif start>=q and start!=q-1:\n\t\t\t\tstart=(q-1)%q\n\t\t\telse:\n\t\t\t\tstart=(q-1)//q", "t, s, q = list(map(int, input().split()))\nprint(t - s + q - 1)\n", "# coding=utf-8\n\ndef solve(i, s, r):\n\tnonlocal p0\n\tif i >= r: return\n\t\n\tif p0[i]!= -1:\n\t\treturn p0[i]\n\t\n\tp0[i] = -1\n\tt = s\n\tans = 0\n\n\twhile t <= r:\n\t\t# print('t', t, i, s)\n\t\tans += 1\n\t\tt += s\n\t\t# print(i, s, t, '=')\n\n\t\tif i + 1 < r:\n\t\t\t# print('i', i + 1, t)\n\t\t\tp0[i + 1] = solve(i + 1, s, t) \n\t\t\t# print('p0', i + 1, t, p0[i + 1])\n\t\t\t# print('s', s, i)\n\t\t\n\t\ti += 1\n\t\n\treturn ans\n\n\n# import atexit\n# import io\n# import sys\n#\n# _INPUT_LINES = sys.stdin.read().splitlines()\n# input = iter(_INPUT_LINES).__next__\n# _OUTPUT_BUFFER = io.StringIO()\n# sys.stdout = _OUTPUT_BUFFER\n#\n#\n# @atexit.register\n# def write():\n#     sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n#\n#\n# T = int(input())\n# s = input()\n# t = 1\n# p0 = [-1] * (t + 1)\n#\n# r = 1\n# i = 0\n# rs = []\n# rs", "T, S, Q = map(int, input().split())\n\nt = S\nfor i in range(Q):\n\tt += S\n\tif t < S:\n\t\tprint(i * t + 1)\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport math\n\ndef solve(T, S, q):\n\tn = int(math.ceil(T / S))\n\ts = 0\n\tc = 0\n\tfor i in range(q):\n\t\tif s + n - i < T:\n\t\t\ts += n - i\n\t\t\tn = math.ceil(T / S)\n\t\telse:\n\t\t\tc += 1\n\treturn c\n\n\nT, S, q = [int(s) for s in input().split()]\nprint(solve(T, S, q))\n"], "399": ["s=input()\nn=len(s)\nc=0\nfor i in range(n-1):\n\tfor j in range(i+1, n):\n\t\tif s[i]==s[j]:\n\t\t\tc=c+1\nif c>0:\n\tprint('Yes')\nelse:\n\tprint('No')\n", "s = input()\n\nh = len(s)\nlast = s[0]\n\ng = []\nnow = []\nfor c in s[1:]:\n\tif last!= c:\n\t\tnow.append(c)\n\t\tg.append(''.join(now))\n\t\tlast = c\n\nfor i in range(h):\n\tif i not in g:\n\t\tprint('No')\n\t\tbreak\n\nelse:\n\tif len(g) == 1:\n\t\tprint('Yes')\n\telse:\n\t\tmi = min(g)\n\t\tna = set(g)\n\t\tnb = set(now)\n\t\tif mi * 2 == na:\n\t\t\tprint('Yes')\n\t\telse:\n\t\t\tprint('No')\n", "a=input()\nif(a==a[1:]):\n\tprint('Yes')\nelse:\n\tprint('No')\n", "s = input()\nn = len(s)\n\ncnt = 0\n\nfor i in range(1, n):\n\tif s[i]!= s[i - 1]:\n\t\tcnt += 1\n\nif cnt % 2 == 0:\n\tprint('Yes')\nelse:\n\tprint('No')\n", "s=list(input())\nc=0\nfor i in range(len(s)):\n\tif s[i] in \"abcdefghijklmnopqrstuvwxyz\":\n\t\tc=1\n\t\tbreak\nif c==0:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n", "def gcd(s,p):\n\twhile p > 0:\n\t\tq = s % p\n\t\ts //= p\n\t\tp = q\n\treturn s\n\n\ns = input()\nif (len(s) % 2 == 0):\n\tif (s[0]!= s[-1]):\n\t\tprint(\"No\")\n\telse:\n\t\tprint(\"Yes\")\n\n\t\nelse:\n\tx = gcd(s[0],s[-1])\n\tprint(\"Yes\") if (len(s) % 2 == 0 and x == 1) else print(\"No\")\n"]}